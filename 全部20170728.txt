oracle
jquery
Hibernate
easyUI
Redis学习
window下用命令启动项目
关于word
java
黑窗口ftp
was系统
activeMQ
辛宝磊
WebLogic
db2
mysql
红领巾
idea使用
数码视讯
任务
系统账户
重要配置
系统功能开发
升级MQ配置
重要功能说明
停止进程
抓包工具
大额交易
重要sql
对账系统
poi
gemFire
glassfish
oracle11g
上线修改
jsonFormat
调度系统
徽商系统
修改文件组权限
代码审查
服务器分布
生成对账单优化
ftp防火墙
考勤打卡
敏感数据梳理
敏感数据上线
密码控件实现方案
ivy中日志相关版本号
工作交接
银行对账优化
版本管理
Note1
梁波工作交接
Note2
redis学习

------------

instr函数
nvl
case--when
查询死锁
查看数据库进程数
索引
死锁
数据库导入导出
oracle函数
创建分区
删除分区
查看表空间
导入脚本
删除jobs
AIX创建表空间，用户，权限
更改数据库编码格式
生成唯一标示
查看用户权限
查看日志组大小
查看用户的权限信息
查看sid
导出dmp文件
数据优化
查看session
增加分区和删除分区
存储过程
数据汇总
function
job固定节点
导出awr报告
分析函数进行分组
韩视频
事务级临时表
查看表空间大小
创建表数据
时间差计算
查看用户表空间信息
查询出当天的最后一条时间记录
脱机drop掉tablespace
V$session中参数含义
更改数据库连接数
数据恢复
sleep
查看oracle运行状态
优化全表扫描
数据库不可用
oracle
命令启动oracle
创建表空间
表大小查询
测试ogg是否在同步数据
压力测试
修改sga共享池

------------

INSTR方法的格式为 INSTR(源字符串, 目标字符串, 起始位置, 匹配序号) 例如：INSTR('CORPORATE FLOOR','OR', 3, 2)中，源字符串为'CORPORATE FLOOR', 目标字符串为'OR'，起始位置为3，取第2个匹配项的位置。 默认查找顺序为从左到右。当起始位置为负数的时候，从右边开始查找。
INSTR('CORPORATE FLOOR','OR', 3, 2)的结果就是14  

------------

Nvl(FieldName,2)意思是如果FieldName为Null，那么返回2，否则返回FieldName的值。

------------

case WHEN CHALLENGE_AUTH_METHOD is null then '合计' else CHALLENGE_AUTH_METHOD end as CHALLENGE_AUTH_METHOD ,
sum(case CHALLENGE_SUCCESSFUL when 'Y' then trans_num else 0 end) as authenSuccessNumber ,
SUM(CASE WHEN T1.ACSPNAME = ''QUESTION'' AND T1.STATUS = ''ACTIVE'' THEN 1 ELSE 0 END);


------------

select * from v$locked_object;
查看所有被鎖表的信息
先查看哪些表被锁住了
select b.owner,b.object_name,a.session_id,a.locked_mode  from v$locked_object a,dba_objects b  where b.object_id = a.object_id;

eg：
		OWNER                          OBJECT_NAME                                 SESSION_ID LOCKED_MODE
		------------------------------ --------------------------------------      -------
		WSSB                           SBDA_PSHPFTDT                               22           3
		WSSB_RTREPOS                   WB_RT_SERVICE_QUEUE_TAB                     24           2
		WSSB_RTREPOS                   WB_RT_NOTIFY_QUEUE_TAB                      29           2
		WSSB_RTREPOS                   WB_RT_NOTIFY_QUEUE_TAB                      39           2
		WSSB                           SBDA_PSDBDT                                 47           3
		WSSB_RTREPOS                   WB_RT_AUDIT_DETAIL                          47           3

接下來查看
select b.username,b.sid,b.serial#,logon_time  from v$locked_object a,v$session b  where a.session_id = b.sid order by b.logon_time;
eg：
		USERNAME                              SID    SERIAL# LOGON_TIME
		------------------------------ ---------- ---------- -----------
		WSSB_RTACCESS                          39       1178 2006-5-22 1
		WSSB_RTACCESS                          29       5497 2006-5-22 1

之后：
杀会话：alter system kill session 'sid,serial#';
e.g 
                alter system kill session '29,5497';
如果有ora-00031错误，则在后面加immediate;
 
alter system kill session '29,5497' immediate;



１.查哪个过程被锁
查V$DB_OBJECT_CACHE视图:
SELECT * FROM V$DB_OBJECT_CACHE WHERE OWNER='过程的所属用户' AND CLOCKS!='0';
 
2. 查是哪一个SID,通过SID可知道是哪个SESSION.
查V$ACCESS视图:
SELECT * FROM V$ACCESS WHERE OWNER='过程的所属用户' AND NAME='刚才查到的过程名';
 
3. 查出SID和SERIAL#
查V$SESSION视图:
SELECT SID,SERIAL#,PADDR FROM V$SESSION WHERE SID='刚才查到的SID'
查V$PROCESS视图:
SELECT SPID FROM V$PROCESS WHERE ADDR='刚才查到的PADDR';
 
4. 杀进程
(1).先杀ORACLE进程:
ALTER SYSTEM KILL SESSION '查出的SID,查出的SERIAL#';
(2).再杀操作系统进程:
KILL -9 刚才查出的SPID
或
ORAKILL 刚才查出的SID 刚才查出的SPID
 

------------------
oracle的死锁
查询数据库死锁
select t2.username||'   '||t2.sid||'   '||t2.serial#||'   '||t2.logon_time||'   '||t3.sql_text
      from v$locked_object t1,v$session t2,v$sqltext t3
      where t1.session_id=t2.sid 
      and t2.sql_address=t3.address
      order by t2.logon_time;
 
查询出来的结果就是有死锁的session了，
下面就是杀掉
拿到上面查询出来的SID和SERIAL#，填入到下面的语句中
 
alter system kill session 'sid,serial#';
 
一般情况可以解决数据库存在的死锁了，
 
或通过session id 查到对应的操作系统进程，在unix中杀掉操作系统的进程。
SELECT a.username,c.spid AS os_process_id,c.pid AS oracle_process_id FROM v$session a,v$process c 
          WHERE  c.addr=a.paddr and a.sid=  and a.serial#=  ;
然后采用kill （unix） 或 orakill（windows ）
 
在unix中
ps -ef|grep os_process_id
kill -9 os_process_id
ps -ef|grep os_process_id
 
----
 
经常在oracle的使用过程中碰到这个问题，所以也总结了一点解决方法：）
1）查找死锁的进程：
sqlplus "/as sysdba"   (sys/change_on_install)
SELECT s.username,l.OBJECT_ID,l.SESSION_ID,s.SERIAL#,l.ORACLE_USERNAME,l.OS_USER_NAME,l.PROCESS 
FROM V$LOCKED_OBJECT l,V$SESSION S WHERE l.SESSION_ID=S.SID; 
2）kill掉这个死锁的进程：
alter system kill session ‘sid,serial#’;  （其中sid=l.session_id）
3）如果还不能解决，
select pro.spid from v$session ses,v$process pro where ses.sid=XX and ses.paddr=pro.addr;  
 其中sid用死锁的sid替换。
exit
ps -ef|grep spid
其中spid是这个进程的进程号，kill掉这个Oracle进程。 

经过以下处理，对于释放服务器资源，效果非常明显
--查询死锁的进程
select   'ALTER  SYSTEM  KILL  SESSION  '''||b.sid||',  '||b.serial#||''';' 
from v$access a,v$session b
where a.SID=b.SID
and b.program like 'dis%'
group by b.sid,b.serial#
 
--查询SID对应的操作系统进程
 
select spid, osuser, s.program from v$session s,v$process p where 
s.paddr=p.addr and s.sid in (54,82,500,195,303,492,496)
 
--查看操作系统进程
 
 ps -ef | more
 
--从操作系统杀掉会话不能杀的进程
 
kill -9 操作系统进程号

                
                



------------


查看ORACLE最大进程数：

SQL> select count(*) from v$session  #连接数
SQL> Select count(*) from v$session where status='ACTIVE'　#并发连接数
SQL> show parameter processes  #最大连接
SQL> alter system set processes = value scope = spfile;重启数据库  #修改连接

unix 1个用户session 对应一个操作系统 process 
而 windows体现在线程

------------------------------------------------------------------------------
修改ORACLE最大进程数：
使用sys，以sysdba权限登录：

SQL> show parameter processes;

NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
aq_tm_processes                      integer     1
db_writer_processes                  integer     1
job_queue_processes                  integer     10
log_archive_max_processes            integer     1
processes                            integer     150

SQL> alter system set processes=300 scope = spfile;

系统已更改。

SQL> show parameter processes;

NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
aq_tm_processes                      integer     1
db_writer_processes                  integer     1
job_queue_processes                  integer     10
log_archive_max_processes            integer     1
processes                            integer     150

SQL> create pfile from spfile;

文件已创建。
 

重启数据库，
 
SQL> show parameter processes;

NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
aq_tm_processes                      integer     1
db_writer_processes                  integer     1
job_queue_processes                  integer     10
log_archive_max_processes            integer     1
processes                            integer     300


------------

创建索引
查看索引区别
查看索引

------------

全局索引
============
CREATE INDEX month_ix ON sales(sales_month)

本地索引
============
CREATE INDEX loc_dept_ix ON dept(deptno) LOCAL;

全局分区索引
============
CREATE INDEX month_ix ON sales(sales_month)
   GLOBAL PARTITION BY RANGE(sales_month)
      (PARTITION pm1_ix VALUES LESS THAN (2)
       PARTITION pm2_ix VALUES LESS THAN (3)
       PARTITION pm3_ix VALUES LESS THAN (4)
       PARTITION pm4_ix VALUES LESS THAN (5)
       PARTITION pm5_ix VALUES LESS THAN (6)
       PARTITION pm6_ix VALUES LESS THAN (7)
       PARTITION pm7_ix VALUES LESS THAN (8)
       PARTITION pm8_ix VALUES LESS THAN (9)
       PARTITION pm9_ix VALUES LESS THAN (10)
       PARTITION pm10_ix VALUES LESS THAN (11)
       PARTITION pm11_ix VALUES LESS THAN (12)
       PARTITION pm12_ix VALUES LESS THAN (MAXVALUE));
分区表和一般表一样可以建立索引，分区表可以创建局部索引和全局索引。当分区中出现许多事务并且要保证所有分区中的数据记录的唯一性时采用全局索引。
3.1     局部索引分区的建立：
SQL> create index dinya_idx_t on dinya_test(item_id)
  2  local
  3  (
  4     partition idx_1 tablespace dinya_space01,
  5     partition idx_2 tablespace dinya_space02,
  6     partition idx_3 tablespace dinya_space03
  7  );

Index created.

SQL> 


看查询的执行计划，从下面的执行计划可以看出，系统已经使用了索引：
SQL> select * from dinya_test partition(part_01) t where t.item_id=12;

Execution Plan
----------------------------------------------------------
   0      SELECT STATEMENT Optimizer=CHOOSE (Cost=2 Card=1 Bytes=187)
   1    0   TABLE ACCESS (BY LOCAL INDEX ROWID) OF 'DINYA_TEST' (Cost=
          2 Card=1 Bytes=187)
   2    1     INDEX (RANGE SCAN) OF 'DINYA_IDX_T' (NON-UNIQUE) (Cost=1
           Card=1)
Statistics
----------------------------------------------------------
          0  recursive calls
          0  db block gets
          4  consistent gets
          0  physical reads
          0  redo size
        334  bytes sent via SQL*Net to client
        309  bytes received via SQL*Net from client
          2  SQL*Net roundtrips to/from client
          1  sorts (memory)
          0  sorts (disk)
          2  rows processed

SQL>

3.2     全局索引分区的建立。
全局索引建立时global 子句允许指定索引的范围值，这个范围值为索引字段的范围值：
SQL> create index dinya_idx_t on dinya_test(item_id)
  2  global partition by range(item_id)
  3  (
  4     partition idx_1 values less than (1000) tablespace dinya_space01,
  5     partition idx_2 values less than (10000) tablespace dinya_space02,
  6     partition idx_3 values less than (maxvalue) tablespace dinya_space03
  7  );

Index created.

SQL> 


        本例中对表的item_id字段建立索引分区，当然也可以不指定索引分区名直接对整个表建立索引，如：
SQL> create index dinya_idx_t on dinya_test(item_id);

Index created.

SQL> 


        同样的，对全局索引根据执行计划可以看出索引已经可以使用：
SQL> select * from dinya_test t where t.item_id=12;

Execution Plan
----------------------------------------------------------
   0      SELECT STATEMENT Optimizer=CHOOSE (Cost=2 Card=3 Bytes=561)
   1    0   TABLE ACCESS (BY GLOBAL INDEX ROWID) OF 'DINYA_TEST' (Cost
          =2 Card=3 Bytes=561)

   2    1     INDEX (RANGE SCAN) OF 'DINYA_IDX_T' (NON-UNIQUE) (Cost=1
           Card=3)
Statistics
----------------------------------------------------------
          5  recursive calls
          0  db block gets
         10  consistent gets
          0  physical reads
          0  redo size
        420  bytes sent via SQL*Net to client
        309  bytes received via SQL*Net from client
          2  SQL*Net roundtrips to/from client
          3  sorts (memory)
          0  sorts (disk)
          5  rows processed


------------

unique index and constraint 
博客分类： oracle 
 

1. 测试unique index 和 unique constraint
SYS@anqing2(rac2)> create table ut(idnumber,phone varchar2(15),name varchar2(15));

Table created. 

SYS@anqing2(rac2)> insert into utvalues(1,'13888888888','dave');

1 row created.

SYS@anqing2(rac2)> insert into utvalues(1,'13888888888','dave');

1 row created.

SYS@anqing2(rac2)> insert into utvalues(2,'13899999999','dba');

1 row created.

SYS@anqing2(rac2)> commit;

Commit complete.

 

--在phone 字段上，我们创建uniqueconstraint

SYS@anqing2(rac2)> alter table ut addconstraint uc_phone unique(phone);

alter table ut add constraint uc_phoneunique(phone)

                              *

ERROR at line 1:

ORA-02299: cannot validate (SYS.UC_PHONE) -duplicate keys found

--这里报错，因为我们在插入数据的时候，有重复值，先删除掉重复值

 

SYS@anqing2(rac2)> select * from ut;

 

       ID PHONE           NAME

---------- --------------- ---------------

        1 13888888888     dave

        2 13899999999     dba

        1 13888888888     dave

 

SYS@anqing2(rac2)> delete from ut whererownum=1;

1 row deleted.

 

SYS@anqing2(rac2)> commit;

Commit complete.

 

SYS@anqing2(rac2)> select * from ut;

       ID PHONE           NAME

---------- --------------- ---------------

        2 13899999999     dba

        1 13888888888     dave

 

--唯一性约束创建成功

SYS@anqing2(rac2)> alter table ut addconstraint uc_phone unique(phone);

Table altered.

 

--查看约束

SYS@anqing2(rac2)> selectconstraint_name,constraint_type,table_name,index_owner,index_name fromuser_constraints where table_name = 'UT';

 

CONSTRAINT_NAME C TABLE_NAME  INDEX_OWNER  INDEX_NAME

--------------- - -------------------------- -------------

UC_PHONE        U UT            SYS           UC_PHONE

--Oracle 自动创建了索引并关联到约束, 索引名和约束名是相同的。

 

--验证下索引

SYS@anqing2(rac2)> selectindex_name,index_type,uniqueness,generated from user_indexes wheretable_name='UT';

 

INDEX_NAME    INDEX_TYPE    UNIQUENES GENERATED

------------- ------------- -------------------

UC_PHONE      NORMAL        UNIQUE    N

--我们并没有创建索引，而是在创建unique constraint时，oracle 强制创建了uniqueindex。

 

--现在我们drop index 看看

SYS@anqing2(rac2)> drop index uc_phone;

drop index uc_phone

          *

ERROR at line 1:

ORA-02429: cannot drop index used forenforcement of unique/primary key

--这里报错，不能删除unique/primary key 上的索引。在这种情况下，我们只有先删除约束。

 

SYS@anqing2(rac2)> alter table ut dropconstraint uc_phone;

Table altered.

 

SYS@anqing2(rac2)> drop index uc_phone;

drop index uc_phone

          *

ERROR at line 1:

ORA-01418: specified index does not exist

--再次drop 索引时，提示索引已经不存在，说明已经在删除约束的同时，把索引删掉了。

 

SYS@anqing2(rac2)> selectconstraint_name,constraint_type,table_name,index_owner,index_name fromuser_constraints where table_name = 'UT';

no rows selected

 

SYS@anqing2(rac2)> selectindex_name,index_type,uniqueness,generated from user_indexes wheretable_name='UT';

no rows selected

 

结论：
       当约束列上没有索引时，在创建unique constraint 时，oracle 会自动创建unique index，并且该索引不能删除，当删除unique constraint 时，unique index 会自动删除。

 

 

2. 测试unique constraint 和non-unique index
 

--现在字段phone上创建B-Tree索引

SYS@anqing2(rac2)> create indexidx_ut_phone on ut(phone);

Index created.

 

--查看索引

SYS@anqing2(rac2)> selectindex_name,index_type,uniqueness,generated from user_indexes wheretable_name='UT';

INDEX_NAME    INDEX_TYPE    UNIQUENES GENERATED

------------- ------------- -------------------

IDX_UT_PHONE  NORMAL       NONUNIQUE N

 

--创建unique constraint

SYS@anqing2(rac2)>  alter table ut add constraint uc_phoneunique(phone);

Table altered.

 

--查看约束和索引信息

SYS@anqing2(rac2)> selectconstraint_name,constraint_type,table_name,index_owner,index_name fromuser_constraints where table_name = 'UT';

 

CONSTRAINT_NAME C TABLE_NAME   INDEX_OWNER  INDEX_NAME

--------------- - -------------------------- -------------

UC_PHONE        U UT            SYS           IDX_UT_PHONE

--这里重用了已经存在的索引

 

SYS@anqing2(rac2)> selectindex_name,index_type,uniqueness,generated from user_indexes wheretable_name='UT';

INDEX_NAME    INDEX_TYPE    UNIQUENES GENERATED

------------- ------------- -------------------

IDX_UT_PHONE  NORMAL       NONUNIQUE N

 

--删除索引

SYS@anqing2(rac2)> drop index IDX_UT_PHONE;

drop index IDX_UT_PHONE

          *
ERROR at line 1:
ORA-02429: cannot drop index used forenforcement of unique/primary key
--这个提示和之前的一样，我们先删除约束，在来查看
SYS@anqing2(rac2)> alter table ut dropconstraint uc_phone;
Table altered.
SYS@anqing2(rac2)> select constraint_name,constraint_type,table_name,index_owner,index_namefrom user_constraints where table_name = 'UT';
no rows selected
--这里约束已经删除掉了。
SYS@anqing2(rac2)> selectindex_name,index_type,uniqueness,generated from user_indexes wheretable_name='UT';
INDEX_NAME    INDEX_TYPE    UNIQUENES GENERATED
------------- ------------- -------------------
IDX_UT_PHONE  NORMAL       NONUNIQUE N
--但是我们的索引并在删除约束时删除掉
--在手工删除索引，成功
SYS@anqing2(rac2)> drop indexIDX_UT_PHONE;
Index dropped.
SYS@anqing2(rac2)> selectindex_name,index_type,uniqueness,generated from user_indexes wheretable_name='UT';
no rows selected
--重新把约束和索引加上，然后一次删除
SYS@anqing2(rac2)> create indexidx_ut_phone on ut(phone);
Index created.
SYS@anqing2(rac2)> alter table ut addconstraint uc_phone unique(phone);
Table altered.
SYS@anqing2(rac2)> selectconstraint_name,constraint_type,table_name,index_owner,index_name fromuser_constraints where table_name = 'UT';
CONSTRAINT_NAME C TABLE_NAME    INDEX_OWNER   INDEX_NAME
--------------- - -------------------------- -------------
UC_PHONE        U UT            SYS           IDX_UT_PHONE
SYS@anqing2(rac2)> selectindex_name,index_type,uniqueness,generated from user_indexes wheretable_name='UT';
INDEX_NAME    INDEX_TYPE    UNIQUENES GENERATED
------------- ------------- -------------------
IDX_UT_PHONE  NORMAL       NONUNIQUE N
SYS@anqing2(rac2)> alter table ut drop constraint uc_phone drop index;
Table altered.
SYS@anqing2(rac2)> selectconstraint_name,constraint_type,table_name,index_owner,index_name fromuser_constraints where table_name = 'UT';
no rows selected
SYS@anqing2(rac2)> selectindex_name,index_type,uniqueness,generated from user_indexes wheretable_name='UT';
no rows selected
--索引和约束一次删除
小结：
       当我们的列上有索引时，在创建unique constraint时，Oracle 会重用之前的索引，并且不会改变索引的类型，在第一个测试里，Oracle 自动创建的索引是unique index。

       当我们删除约束时，关联的索引不会自动删除。 这个问题的MOS 上有说明。 参考MOS [ID309821.1]。

       我们可以分两步，先删除约束，在删除索引。 MOS 提供了方法，就是在删除约束时，加上drop index，这样就能一次搞定。

       SQL>altertable ut drop constraint uc_phone drop index;


------------

 ALTER TABLE event_log_realtime ADD PARTITION P20300101 VALUES LESS THAN(TO_DATE('2030/01/01', 'YYYY-MM-DD'));增加分区
 alter table USER_TEST.DAM_DISPATCH_FILES_INFORMATION drop constraint DAM_DISPATCH_FILES_INFORMAT_PK; 删除主索引
select * from  user_indexes where status <> 'VALID' ;查出失效的索引
  SELECT * FROM  USER_INDEXES T WHERE STATUS <> 'VALID' AND  STATUS <> 'N/A' AND T.TABLE_OWNER='TMRPT';
  alter index   index_name rebuild';  重建索引

------------

oracle死锁时杀进程的方法
 
第一步：尝试在sqlplus中通过sql命令进行删除，如果能够删除成功，则万事大吉！但通常情况下，出现死锁时，想通过命令行或者通过oracle的管理工具删除有死锁的session，oracle只会将该session标记为killed，但无法清除掉，往往需要通过第二步在操作系统层级进行删除！
 
Connected to Oracle9i Enterprise Edition Release 9.2.0.1.0 
Connected as quik
  www.2cto.com  
SQL>
 	select xidusn, object_id, session_id, locked_mode from v$locked_object;
	 --查死锁的对象，获取其SESSION_ID
 
    XIDUSN OBJECT_ID SESSION_ID LOCKED_MODE
---------- ---------- ---------- -----------
        10      30724         29           3
        10      30649         29           3
 
SQL> 
	select username,sid,serial# from v$session where sid=29; 
	--根据上步获取到的sid查看其serial#号
 
USERNAME                              SID    SERIAL#
------------------------------ ---------- -------- --
QUIK                                   29      57107
 
SQL>
	 alter system kill session '29,57107';-------------
	 EXEC sys.kill_session('11','1337');------------------
 	 --删除进程，如已经删除过，则会报ora-00031的错误；否则oracle会将该session标记为killed状态，等待一段时间看能否会自动消失，如长时间消失不掉，则需要做后续步骤
 
一些ORACLE中的进程被杀掉后，状态被置为"killed"，但是锁定的资源很长时间不释放，有时实在没办法，只好重启数据库。现在提供一种方法解决这种问题，那就是在ORACLE中杀不掉的，在OS一级再杀。 
  www.2cto.com  
1.下面的语句用来查询哪些对象被锁： 
 
select object_name,machine,s.sid,s.serial# 
from v$locked_object l,dba_objects o ,v$session s 
where l.object_id　=　o.object_id and l.session_id=s.sid; 
 
2.下面的语句用来杀死一个进程： 
alter system kill session '24,111'; (其中24,111分别是上面查询出的sid,serial#) 
 
【注】以上两步，可以通过Oracle的管理控制台来执行。 
 
3.如果利用上面的命令杀死一个进程后，进程状态被置为"killed"，但是锁定的资源很长时间没有被释放，那么可以在os一级再杀死相应的进程（线程），首先执行下面的语句获得进程（线程）号： 
select spid, osuser, s.program 
from v$session s,v$process p 
where s.paddr=p.addr and s.sid=24 （24是上面的sid） 
  www.2cto.com  
4.在OS上杀死这个进程（线程）： 
1)在unix上，用root身份执行命令: 
#kill -9 12345（即第3步查询出的spid） 
2)在windows（unix也适用）用orakill杀死线程，orakill是oracle提供的一个可执行命令，语法为： 
orakill sid thread 
 
其中： 
sid：表示要杀死的进程属于的实例名 
thread：是要杀掉的线程号，即第3步查询出的spid。 

------------

oracle数据库导入导出命令！


Oracle数据导入导出imp/exp 
功能：Oracle数据导入导出imp/exp就相当与oracle数据还原与备份。
  
 大多情况都可以用Oracle数据导入导出完成数据的备份和还原（不会造成数据的丢失）。
  Oracle有个好处，虽然你的电脑不是服务器，但是你装了oracle客户端，并建立了连接
  （通过Net Configuration Assistant添加正确的服务命名，其实你可以想成是客户端与服务器端 修了条路，然后数据就可以被拉过来了）
  这样你可以把数据导出到本地，虽然可能服务器离你很远。
  你同样可以把dmp文件从本地导入到远处的数据库服务器中。
  利用这个功能你可以构建俩个相同的数据库，一个用来测试，一个用来正式使用。
  
 执行环境：可以在SQLPLUS.EXE或者DOS（命令行）中执行，
  DOS中可以执行时由于 在oracle 8i 中  安装目录\$ora10g\BIN被设置为全局路径，
  该目录下有EXP.EXE与IMP.EXE文件被用来执行导入导出。
  oracle用java编写，我想SQLPLUS.EXE、EXP.EXE、IMP.EXE这俩个文件是被包装后的类文件。
  SQLPLUS.EXE调用EXP.EXE、IMP.EXE他们所包裹的类，完成导入导出功能。
  
 下面介绍的是导入导出的实例，向导入导出看实例基本上就可以完成，因为导入导出很简单。
 数据导出：
  1 将数据库TEST完全导出,用户名system 密码manager 导出到D:\daochu.dmp中
    exp system/manager@TEST file=d:\daochu.dmp full=y
  2 将数据库中system用户与sys用户的表导出
    exp system/manager@TEST file=d:\daochu.dmp owner=(system,sys)
  3 将数据库中的表table1 、table2导出
    exp system/manager@TEST file=d:\daochu.dmp tables=(table1,table2) 
 4 将数据库中的表table1中的字段filed1以"00"打头的数据导出
    exp system/manager@TEST file=d:\daochu.dmp tables=(table1) query=\" where filed1 like  '00%'\"
   
     上面是常用的导出，对于压缩我不太在意，用winzip把dmp文件可以很好的压缩。
                      不过在上面命令后面 加上 compress=y  就可以了
 
数据的导入
  1 将D:\daochu.dmp 中的数据导入 TEST数据库中。
    imp system/manager@TEST  file=d:\daochu.dmp
    上面可能有点问题，因为有的表已经存在，然后它就报错，对该表就不进行导入。
    在后面加上 ignore=y 就可以了。
  2 将d:\daochu.dmp中的表table1 导入
  imp system/manager@TEST  file=d:\daochu.dmp  tables=(table1) 
 
  基本上上面的导入导出够用了。不少情况我是将表彻底删除，然后导入。
  
 注意：
  你要有足够的权限，权限不够它会提示你。
  数据库时可以连上的。可以用tnsping TEST 来获得数据库TEST能否连上。
 
 
 
数据导出：
 exp hkb/hkb@boss_14 full=y file=c:\orabackup\hkbfull.dmp log=c:\orabackup\hkbfull.log;
 
导出注意事项：导出的是当前用户的的数据，当前用户如果有DBA的权限，则导出所有数据！
 
同名用户之间的数据导入：
 imp hkb/hkb@xe  file=c:\orabackup\hkbfull.dmp log=c:\orabackup\hkbimp.log full=y
 
不同名之间的数据导入：
 imp system/test@xe fromuser=hkb touser=hkb_new file=c:\orabackup\hkbfull.dmp 

log=c:\orabackup\hkbimp.log;


------------

SQL中的单记录函数
1.ASCII
返回与指定的字符对应的十进制数;
SQL> select ascii('A') A,ascii('a') a,ascii('0') zero,ascii(' ') space from dual;

        A         A      ZERO     SPACE
--------- --------- --------- ---------
       65        97        48        32


2.CHR
给出整数,返回对应的字符;
SQL> select chr(54740) zhao,chr(65) chr65 from dual;

ZH C
-- -
赵 A

3.CONCAT
连接两个字符串;
SQL> select concat('010-','88888888')||'转23'  高乾竞电话 from dual;

高乾竞电话
----------------
010-88888888转23

4.INITCAP
返回字符串并将字符串的第一个字母变为大写;
SQL> select initcap('smith') upp from dual;

UPP
-----
Smith


5.INSTR(C1,C2,I,J)
在一个字符串中搜索指定的字符,返回发现指定的字符的位置;
C1    被搜索的字符串
C2    希望搜索的字符串
I     搜索的开始位置,默认为1
J     出现的位置,默认为1
SQL> select instr('oracle traning','ra',1,2) instring from dual;

 INSTRING
---------
        9


6.LENGTH
返回字符串的长度;
SQL> select name,length(name),addr,length(addr),sal,length(to_char(sal)) from gao.nchar_tst;

NAME   LENGTH(NAME) ADDR             LENGTH(ADDR)       SAL LENGTH(TO_CHAR(SAL))
------ ------------ ---------------- ------------ --------- --------------------
高乾竞            3 北京市海锭区                6   9999.99                    7

 

7.LOWER
返回字符串,并将所有的字符小写
SQL> select lower('AaBbCcDd')AaBbCcDd from dual;

AABBCCDD
--------
aabbccdd


8.UPPER
返回字符串,并将所有的字符大写
SQL> select upper('AaBbCcDd') upper from dual;

UPPER
--------
AABBCCDD

 

9.RPAD和LPAD(粘贴字符)
RPAD  在列的右边粘贴字符
LPAD  在列的左边粘贴字符
SQL> select lpad(rpad('gao',10,'*'),17,'*')from dual;

LPAD(RPAD('GAO',1
-----------------
*******gao*******
不够字符则用*来填满


10.LTRIM和RTRIM
LTRIM  删除左边出现的字符串
RTRIM  删除右边出现的字符串
SQL> select ltrim(rtrim('   gao qian jing   ',' '),' ') from dual;

LTRIM(RTRIM('
-------------
gao qian jing


11.SUBSTR(string,start,count)
取子字符串,从start开始,取count个
SQL> select substr('13088888888',3,8) from dual;

SUBSTR('
--------
08888888


12.REPLACE('string','s1','s2')
string   希望被替换的字符或变量 
s1       被替换的字符串
s2       要替换的字符串
SQL> select replace('he love you','he','i') from dual;

REPLACE('H
----------
i love you


13.SOUNDEX
返回一个与给定的字符串读音相同的字符串
SQL> create table table1(xm varchar(8));
SQL> insert into table1 values('weather');
SQL> insert into table1 values('wether');
SQL> insert into table1 values('gao');

SQL> select xm from table1 where soundex(xm)=soundex('weather');

XM
--------
weather
wether


14.TRIM('s' from 'string')
LEADING   剪掉前面的字符
TRAILING  剪掉后面的字符
如果不指定,默认为空格符 

15.ABS
返回指定值的绝对值
SQL> select abs(100),abs(-100) from dual;

 ABS(100) ABS(-100)
--------- ---------
      100       100


16.ACOS
给出反余弦的值
SQL> select acos(-1) from dual;

 ACOS(-1)
---------
3.1415927


17.ASIN
给出反正弦的值
SQL> select asin(0.5) from dual;

ASIN(0.5)
---------
.52359878


18.ATAN
返回一个数字的反正切值
SQL> select atan(1) from dual;

  ATAN(1)
---------
.78539816


19.CEIL
返回大于或等于给出数字的最小整数
SQL> select ceil(3.1415927) from dual;

CEIL(3.1415927)
---------------
              4


20.COS
返回一个给定数字的余弦
SQL> select cos(-3.1415927) from dual;

COS(-3.1415927)
---------------
             -1


21.COSH
返回一个数字反余弦值
SQL> select cosh(20) from dual;

 COSH(20)
---------
242582598


22.EXP
返回一个数字e的n次方根
SQL> select exp(2),exp(1) from dual;

   EXP(2)    EXP(1)
--------- ---------
7.3890561 2.7182818


23.FLOOR
对给定的数字取整数
SQL> select floor(2345.67) from dual;

FLOOR(2345.67)
--------------
          2345


24.LN
返回一个数字的对数值
SQL> select ln(1),ln(2),ln(2.7182818) from dual;

    LN(1)     LN(2) LN(2.7182818)
--------- --------- -------------
        0 .69314718     .99999999


25.LOG(n1,n2)
返回一个以n1为底n2的对数 
SQL> select log(2,1),log(2,4) from dual;

 LOG(2,1)  LOG(2,4)
--------- ---------
        0         2


26.MOD(n1,n2)
返回一个n1除以n2的余数
SQL> select mod(10,3),mod(3,3),mod(2,3) from dual;

MOD(10,3)  MOD(3,3)  MOD(2,3)
--------- --------- ---------
        1         0         2


27.POWER
返回n1的n2次方根
SQL> select power(2,10),power(3,3) from dual;

POWER(2,10) POWER(3,3)
----------- ----------
       1024         27


28.ROUND和TRUNC
按照指定的精度进行舍入
SQL> select round(55.5),round(-55.4),trunc(55.5),trunc(-55.5) from dual;

ROUND(55.5) ROUND(-55.4) TRUNC(55.5) TRUNC(-55.5)
----------- ------------ ----------- ------------
         56          -55          55          -55


29.SIGN
取数字n的符号,大于0返回1,小于0返回-1,等于0返回0
SQL> select sign(123),sign(-100),sign(0) from dual;

SIGN(123) SIGN(-100)   SIGN(0)
--------- ---------- ---------
        1         -1         0


30.SIN
返回一个数字的正弦值
SQL> select sin(1.57079) from dual;

SIN(1.57079)
------------
           1


31.SIGH
返回双曲正弦的值
SQL> select sin(20),sinh(20) from dual;

  SIN(20)  SINH(20)
--------- ---------
.91294525 242582598


32.SQRT
返回数字n的根
SQL> select sqrt(64),sqrt(10) from dual;

 SQRT(64)  SQRT(10)
--------- ---------
        8 3.1622777


33.TAN
返回数字的正切值
SQL> select tan(20),tan(10) from dual;

  TAN(20)   TAN(10)
--------- ---------
2.2371609 .64836083


34.TANH
返回数字n的双曲正切值
SQL> select tanh(20),tan(20) from dual;

 TANH(20)   TAN(20)
--------- ---------
        1 2.2371609

 

35.TRUNC
按照指定的精度截取一个数
SQL> select trunc(124.1666,-2) trunc1,trunc(124.16666,2) from dual;

   TRUNC1 TRUNC(124.16666,2)
--------- ------------------
      100             124.16

 

36.ADD_MONTHS
增加或减去月份
SQL> select to_char(add_months(to_date('199912','yyyymm'),2),'yyyymm') from dual;

TO_CHA
------
200002
SQL> select to_char(add_months(to_date('199912','yyyymm'),-2),'yyyymm') from dual;

TO_CHA
------
199910


37.LAST_DAY
返回日期的最后一天
SQL> select to_char(sysdate,'yyyy.mm.dd'),to_char((sysdate)+1,'yyyy.mm.dd') from dual;

TO_CHAR(SY TO_CHAR((S
---------- ----------
2004.05.09 2004.05.10
SQL> select last_day(sysdate) from dual;

LAST_DAY(S
----------
31-5月 -04


38.MONTHS_BETWEEN(date2,date1)
给出date2-date1的月份
SQL> select months_between('19-12月-1999','19-3月-1999') mon_between from dual;

MON_BETWEEN
-----------
          9
SQL>selectmonths_between(to_date('2000.05.20','yyyy.mm.dd'),to_date('2005.05.20','yyyy.mm.dd')) mon_betw from dual;

 MON_BETW
---------
      -60


39.NEW_TIME(date,'this','that')
给出在this时区=other时区的日期和时间
SQL> select to_char(sysdate,'yyyy.mm.dd hh24:mi:ss') bj_time,to_char(new_time
  2  (sysdate,'PDT','GMT'),'yyyy.mm.dd hh24:mi:ss') los_angles from dual;

BJ_TIME             LOS_ANGLES
------------------- -------------------
2004.05.09 11:05:32 2004.05.09 18:05:32


40.NEXT_DAY(date,'day')
给出日期date和星期x之后计算下一个星期的日期
SQL> select next_day('18-5月-2001','星期五') next_day from dual;

NEXT_DAY
----------
25-5月 -01

 

41.SYSDATE
用来得到系统的当前日期
SQL> select to_char(sysdate,'dd-mm-yyyy day') from dual;

TO_CHAR(SYSDATE,'
-----------------
09-05-2004 星期日
trunc(date,fmt)按照给出的要求将日期截断,如果fmt='mi'表示保留分,截断秒
SQL> select to_char(trunc(sysdate,'hh'),'yyyy.mm.dd hh24:mi:ss') hh,
  2  to_char(trunc(sysdate,'mi'),'yyyy.mm.dd hh24:mi:ss') hhmm from dual;

HH                  HHMM
------------------- -------------------
2004.05.09 11:00:00 2004.05.09 11:17:00

 

42.CHARTOROWID
将字符数据类型转换为ROWID类型
SQL> select rowid,rowidtochar(rowid),ename from scott.emp;

ROWID              ROWIDTOCHAR(ROWID) ENAME
------------------ ------------------ ----------
AAAAfKAACAAAAEqAAA AAAAfKAACAAAAEqAAA SMITH
AAAAfKAACAAAAEqAAB AAAAfKAACAAAAEqAAB ALLEN
AAAAfKAACAAAAEqAAC AAAAfKAACAAAAEqAAC WARD
AAAAfKAACAAAAEqAAD AAAAfKAACAAAAEqAAD JONES


43.CONVERT(c,dset,sset)
将源字符串 sset从一个语言字符集转换到另一个目的dset字符集
SQL> select convert('strutz','we8hp','f7dec') "conversion" from dual;

conver
------
strutz


44.HEXTORAW
将一个十六进制构成的字符串转换为二进制


45.RAWTOHEXT
将一个二进制构成的字符串转换为十六进制

 

46.ROWIDTOCHAR
将ROWID数据类型转换为字符类型

 

47.TO_CHAR(date,'format')
SQL> select to_char(sysdate,'yyyy/mm/dd hh24:mi:ss') from dual;

TO_CHAR(SYSDATE,'YY
-------------------
2004/05/09 21:14:41

 

48.TO_DATE(string,'format')
将字符串转化为ORACLE中的一个日期


49.TO_MULTI_BYTE
将字符串中的单字节字符转化为多字节字符
SQL>  select to_multi_byte('高') from dual;

TO
--
高


50.TO_NUMBER
将给出的字符转换为数字
SQL> select to_number('1999') year from dual;

     YEAR
---------
     1999


51.BFILENAME(dir,file)
指定一个外部二进制文件
SQL>insert into file_tb1 values(bfilename('lob_dir1','image1.gif'));


52.CONVERT('x','desc','source')
将x字段或变量的源source转换为desc
SQL> select sid,serial#,username,decode(command,
  2  0,'none',
  3  2,'insert',
  4  3,
  5  'select',
  6  6,'update',
  7  7,'delete',
  8  8,'drop',
  9  'other') cmd  from v$session where type!='background';

      SID   SERIAL# USERNAME                       CMD
--------- --------- ------------------------------ ------
        1         1                                none
        2         1                                none
        3         1                                none
        4         1                                none
        5         1                                none
        6         1                                none
        7      1275                                none
        8      1275                                none
        9        20 GAO                            select
       10        40 GAO                            none


53.DUMP(s,fmt,start,length)
DUMP函数以fmt指定的内部数字格式返回一个VARCHAR2类型的值
SQL> col global_name for a30
SQL> col dump_string for a50
SQL> set lin 200
SQL> select global_name,dump(global_name,1017,8,5) dump_string from global_name;

GLOBAL_NAME                    DUMP_STRING
------------------------------ --------------------------------------------------
ORACLE.WORLD                   Typ=1 Len=12 CharacterSet=ZHS16GBK: W,O,R,L,D


54.EMPTY_BLOB()和EMPTY_CLOB()
这两个函数都是用来对大数据类型字段进行初始化操作的函数


55.GREATEST
返回一组表达式中的最大值,即比较字符的编码大小.
SQL> select greatest('AA','AB','AC') from dual;

GR
--
AC
SQL> select greatest('啊','安','天') from dual;

GR
--
天


56.LEAST
返回一组表达式中的最小值 
SQL> select least('啊','安','天') from dual;

LE
--
啊


57.UID
返回标识当前用户的唯一整数
SQL> show user
USER 为"GAO"
SQL> select username,user_id from dba_users where user_id=uid;

USERNAME                         USER_ID
------------------------------ ---------
GAO                                   25

 

58.USER
返回当前用户的名字
SQL> select user from  dual;

USER
------------------------------
GAO


59.USEREVN
返回当前用户环境的信息,opt可以是:
ENTRYID,SESSIONID,TERMINAL,ISDBA,LABLE,LANGUAGE,CLIENT_INFO,LANG,VSIZE
ISDBA  查看当前用户是否是DBA如果是则返回true
SQL> select userenv('isdba') from dual;

USEREN
------
FALSE
SQL> select userenv('isdba') from dual;

USEREN
------
TRUE
SESSION
返回会话标志
SQL> select userenv('sessionid') from dual;

USERENV('SESSIONID')
--------------------
                 152
ENTRYID
返回会话人口标志
SQL> select userenv('entryid') from dual;

USERENV('ENTRYID')
------------------
                 0
INSTANCE
返回当前INSTANCE的标志
SQL> select userenv('instance') from dual;

USERENV('INSTANCE')
-------------------
                  1
LANGUAGE
返回当前环境变量
SQL> select userenv('language') from dual;

USERENV('LANGUAGE')
----------------------------------------------------
SIMPLIFIED CHINESE_CHINA.ZHS16GBK
LANG
返回当前环境的语言的缩写
SQL> select userenv('lang') from dual;

USERENV('LANG')
----------------------------------------------------
ZHS
TERMINAL
返回用户的终端或机器的标志
SQL> select userenv('terminal') from dual;

USERENV('TERMINA
----------------
GAO
VSIZE(X)
返回X的大小(字节)数
SQL> select vsize(user),user from dual;

VSIZE(USER) USER
----------- ------------------------------
          6 SYSTEM

 

60.AVG(DISTINCT|ALL)
all表示对所有的值求平均值,distinct只对不同的值求平均值
SQLWKS> create table table3(xm varchar(8),sal number(7,2));
语句已处理。
SQLWKS>  insert into table3 values('gao',1111.11);
SQLWKS>  insert into table3 values('gao',1111.11);
SQLWKS>  insert into table3 values('zhu',5555.55);
SQLWKS> commit;

SQL> select avg(distinct sal) from gao.table3;

AVG(DISTINCTSAL)
----------------
         3333.33

SQL> select avg(all sal) from gao.table3;

AVG(ALLSAL)
-----------
    2592.59


61.MAX(DISTINCT|ALL)
求最大值,ALL表示对所有的值求最大值,DISTINCT表示对不同的值求最大值,相同的只取一次
SQL> select max(distinct sal) from scott.emp;

MAX(DISTINCTSAL)
----------------
            5000


62.MIN(DISTINCT|ALL)
求最小值,ALL表示对所有的值求最小值,DISTINCT表示对不同的值求最小值,相同的只取一次
SQL> select min(all sal) from gao.table3;

MIN(ALLSAL)
-----------
    1111.11


63.STDDEV(distinct|all)
求标准差,ALL表示对所有的值求标准差,DISTINCT表示只对不同的值求标准差
SQL> select stddev(sal) from scott.emp;

STDDEV(SAL)
-----------
  1182.5032

SQL> select stddev(distinct sal) from scott.emp;

STDDEV(DISTINCTSAL)
-------------------
           1229.951

 

64.VARIANCE(DISTINCT|ALL)
求协方差 

SQL> select variance(sal) from scott.emp;

VARIANCE(SAL)
-------------
    1398313.9


65.GROUP BY
主要用来对一组数进行统计
SQL> select deptno,count(*),sum(sal) from scott.emp group by deptno;

   DEPTNO  COUNT(*)  SUM(SAL)
--------- --------- ---------
       10         3      8750
       20         5     10875
       30         6      9400

 

66.HAVING
对分组统计再加限制条件
SQL> select deptno,count(*),sum(sal) from scott.emp group by deptno having count(*)>=5;

   DEPTNO  COUNT(*)  SUM(SAL)
--------- --------- ---------
       20         5     10875
       30         6      9400
SQL> select deptno,count(*),sum(sal) from scott.emp having count(*)>=5 group by deptno ;

   DEPTNO  COUNT(*)  SUM(SAL)
--------- --------- ---------
       20         5     10875
       30         6      9400


67.ORDER BY
用于对查询到的结果进行排序输出
SQL> select deptno,ename,sal from scott.emp order by deptno,sal desc;

   DEPTNO ENAME            SAL
--------- ---------- ---------
       10 KING            5000
       10 CLARK           2450
       10 MILLER          1300
       20 SCOTT           3000
       20 FORD            3000
       20 JONES           2975
       20 ADAMS           1100
       20 SMITH            800
       30 BLAKE           2850
       30 ALLEN           1600
       30 TURNER          1500
       30 WARD            1250
       30 MARTIN          1250
       30 JAMES            950



------------

在ORACLE里如果遇到特别大的表，可以使用分区的表来改变其应用程序的性能。 
以system身份登陆数据库，查看 v$option视图，如果其中Partition为TRUE，则支持分区功能；否则不支持。Partition有基于范围、哈希、综和三种类型。我们用的比较多的是按范围分区的表。 


我们以一个2001年开始使用的留言版做例子讲述分区表的创建和使用： 
1 、以system 身份创建独立的表空间(大小可以根据数据量的多少而定) create tablespace g_2000q4 datafile 
'/home/oradata/oradata/test/g_2000q4.dbf' size 50M default storage (initial 100k next 100k minextents 1 maxextents unlimited pctincrease 1); create tablespace g_2001q1 datafile 
'/home/oradata/oradata/test/g_2001q1.dbf' size 50M default storage (initial 100k next 100k minextents 1 maxextents unlimited pctincrease 1); create tablespace g_2001q2 datafile 
'/home/oradata/oradata/test/g_2001q2.dbf' size 50M default storage (initial 100k next 100k minextents 1 maxextents unlimited pctincrease 1); 2 、用EXPORT工具把旧数据备份在guestbook.dmp中 把原来的guestbook表改名 

alter table guestbook rename to guestbookold; 以guestbook 身份创建分区的表 
create table guestbook(  id  number(16) primary key,  username  varchar2(64),  sex  varchar2(2),  email  varchar2(256),  expression varchar2(128),  content  varchar2(4000),  time  date,  ip  varchar2(64) )  
  partition by range (time) 
  (partition g_2000q4 values less than (to_date('2001-01-01','yyyy-mm-dd'))     tablespace g_2000q4 

      storage(initial 100k next 100k minextents 1 maxextents unlimited pctincrease 0),  
   partition g_2001q1 values less than (to_date('2001-04-01','yyyy-mm-dd'))     tablespace g_2001q1 
      storage(initial 100k next 100k minextents 1 maxextents unlimited pctincrease 0), 
   partition g_2001q2 values less than (to_date('2001-07-01','yyyy-mm-dd'))     tablespace g_2001q2 
      storage(initial 100k next 100k minextents 1 maxextents unlimited pctincrease 0)    ); 
(说明：分区的名称可以和表空间的名称不一致。这里是每个季度做一个分区，当然也可以每个月做一个分区) 3、IMPORT导入数据，参数ignore=y 4、分区表的扩容： 
到了2001 年下半年，建立新的表空间： 
create tablespace g_2001q3 datafile 
'/home/oradata/oradata/test/g_2001q3.dbf' size 50m default storage (initial 100k next 100k minextents 1 maxextents unlimited pctincrease 1); 为表添加新分区和表空间： 
alter table guestbook add partition g_2001q3 
values less than (to_date('2001-10-01','yyyy-mm-dd') tablespace g_2001q3  
storage(initial 100k next 100k minextents 1 maxextents unlimited pctincrease 0); 
5、删除不必要的分区 
将2000年的数据备份（备份方法见 6、EXPORT 分区），将2000年的分区删除。 
alter table guestbook drop partion g_2000q4; 删除物理文件 
%rm /home/oradata/oradata/test/g_2000q4.dbf 6、EXPORT 分区： 
% exp guestbook/guestbook_password tables=guestbook:g_2000q4 rows=Y file=g_2000q4.dmp 7、IMPORT分区： 
例如在2001 年，用户要查看2000 年的数据，先创建表空间 


create tablespace g_2000q4 datafile 
'/home/oradata/oradata/test/g_2000q4.dbf' size 50m default storage (initial 100k next 100k minextents 1 maxextents unlimited pctincrease 1); 为表添加新分区和表空间： 
alter table guestbook add partition g_2000q4 
values less than (to_date('2001-01-01','yyyy-mm-dd') tablespace g_2001q3  
storage(initial 100k next 100k minextents 1 maxextents unlimited pctincrease 0); 导入数据 
%imp guestbook/guestbook_password file=g_2000q4.dmp tables=(guestbook:g_2000q4) ignore=y 
(说明：如果不指明导入的分区，imp会自动按分区定义的范围装载数据

------------

清空分区的数据：
alter table RP_TRANS_LOG_MINUTE truncate partition P2013102900；
删除分区
alter table RP_TRANS_LOG_MINUTE drop partition P2013102900 UPDATE GLOBAL INDEXES

增加分区：
ALTER TABLE event_log ADD PARTITION "P2013103000" VALUES LESS THAN(TO_DATE('2013-10-30 01', 'YYYY-MM-DD HH24'))


查看是不是分区表


select * from user_tables  t  where t.PARTITIONED='YES'；

SELECT count(1) FROM USER_TAB_PARTITIONS WHERE TABLE_NAME = 'VPDM_FD_INTERBANK_DUE';

SELECT * FROM USER_TAB_PARTITIONS ;

select * from dba_part_tables where owner ='scheme名称' ;

select * from dba_part_col_statistics 

------------

ORACLE查看表空间路径、当前用户的表空间等时间:2011-11-12 13:38来源:未知 作者:admin 点击:1850次
查看当前用户每个表占用空间的大小：
 Select Segment_Name,Sum(bytes)/1024/1024 From User_Extents Group By Segment_Name 
 查看每个表空间占用空间的大小： 
 Select Tablespace_Name,Sum(bytes)/1024/1024 From Dba_Segments Group By Tablespace_Name 查看O
查看当前用户每个表占用空间的大小：
Select Segment_Name,Sum(bytes)/1024/1024 From User_Extents Group By Segment_Name 
查看每个表空间占用空间的大小：
Select Tablespace_Name,Sum(bytes)/1024/1024 From Dba_Segments Group By Tablespace_Name

查看Oracle当前用户下的信息（用户，表视图，索引，表空间，同义词，存储过程函数，约束条件）

0、表空间

　　SQL>select username,default_tablespace from user_users;

　　查看当前用户的角色

　　SQL>select * from user_role_privs;

　　查看当前用户的系统权限和表级权限

　　SQL>select * from user_sys_privs;

　　SQL>select * from user_tab_privs;

　　查看用户下所有的表

　　SQL>select * from user_tables;

　　1、用户

　　查看当前用户的缺省表空间

　　SQL>select username,default_tablespace from user_users;

　　查看当前用户的角色

　　SQL>select * from user_role_privs;

　　查看当前用户的系统权限和表级权限

　　SQL>select * from user_sys_privs;

　　SQL>select * from user_tab_privs;

　　显示当前会话所具有的权限

　　SQL>select * from session_privs;

　　显示指定用户所具有的系统权限

　　SQL>select * from dba_sys_privs where grantee='GAME';

　　2、表

　　查看用户下所有的表

　　SQL>select * from user_tables;

SELECT * FROM ALL_TABLES;

　　查看名称包含log字符的表

　　SQL>select object_name,object_id from user_objects

　　where instr(object_name,'LOG')>0;

　　查看某表的创建时间

　　SQL>select object_name,created from user_objects where object_name=upper('&table_name');

　　查看某表的大小

　　SQL>select sum(bytes)/(1024*1024) as "size(M)" from user_segments

　　where segment_name=upper('&table_name');

　　查看放在ORACLE的内存区里的表

　　SQL>select table_name,cache from user_tables where instr(cache,'Y')>0;

　　3、索引

　　查看索引个数和类别

　　SQL>select index_name,index_type,table_name from user_indexes order by table_name;

　　查看索引被索引的字段

　　SQL>select * from user_ind_columns where index_name=upper('&index_name');

　　查看索引的大小

　　SQL>select sum(bytes)/(1024*1024) as "size(M)" from user_segments

　　where segment_name=upper('&index_name');

　　4、序列号

　　查看序列号，last_number是当前值

　　SQL>select * from user_sequences;

　　5、视图

　　查看视图的名称

　　SQL>select view_name from user_views;

　　查看创建视图的select语句

　　SQL>set view_name,text_length from user_views;

　　SQL>set long 2000; 说明：可以根据视图的text_length值设定set long 的大小

　　SQL>select text from user_views where view_name=upper('&view_name');

　　6、同义词

　　查看同义词的名称

　　SQL>select * from user_synonyms;

SELECT * FROM ALL_SYSNONYMS;

　　7、约束条件

　　查看某表的约束条件

　　SQL>select constraint_name, constraint_type,search_condition, r_constraint_name

　　from user_constraints where table_name = upper('&table_name');

　　SQL>select c.constraint_name,c.constraint_type,cc.column_name

　　from user_constraints c,user_cons_columns cc

　　where c.owner = upper('&table_owner') and c.table_name = upper('&table_name')

　　and c.owner = cc.owner and c.constraint_name = cc.constraint_name

　　order by cc.position;

　　8、存储函数和过程

　　查看函数和过程的状态

　　SQL>select object_name,status from user_objects where object_type='FUNCTION';

　　SQL>select object_name,status from user_objects where object_type='PROCEDURE';

　　查看函数和过程的源代码

　　SQL>select text from all_source where owner=user and name=upper('&plsql_name');
select name from v$datafile
 


------------

su - oracle
sqlplus tmrpt/tmrpt @init_tmrpt.sql
sqlplus tmrpt/tmrpt @resource_tmrpt.sql 

bash提示。




------------

create or replace procedure drop_jobs is
begin
  declare 
  cursor jl is select * from user_jobs;
begin
  for r in jl loop
    dbms_job.remove(r.job);    
  end loop;
end; 
end drop_jobs;

删除所有的表、job、存储过程、序列，方法、
-----------------------------------------------
-- Export file for user TMRPT                --
-- Created by xinlei on 2013/11/12, 15:31:32 --
-----------------------------------------------

set define off
spool product_script.log

prompt
prompt Creating procedure PRODUCT_SCRIPT
prompt =================================
prompt
CREATE OR REPLACE PROCEDURE PRODUCT_SCRIPT IS
 TABLE_SQL VARCHAR(500);
 SEQUENCE_SQL VARCHAR(500);
 FUNCTION_SQL VARCHAR(500);
 PROCEDURE_SQL VARCHAR(500);
BEGIN
  DECLARE
  CURSOR JL IS SELECT * FROM USER_JOBS;
  BEGIN
    FOR R IN JL LOOP
      DBMS_JOB.REMOVE(R.JOB);
    END LOOP;
    COMMIT;
  END;
  
  DECLARE
  CURSOR JL1 IS SELECT * FROM USER_OBJECTS T WHERE T.OBJECT_NAME!='PRODUCT_SCRIPT' AND T.OBJECT_TYPE IN ('TABLE','SEQUENCE','FUNCTION','PROCEDURE') ;
  BEGIN
    --SELECT * FROM USER_OBJECTS T WHERE T.OBJECT_TYPE='TABLE'
    FOR R1 IN JL1 LOOP
      IF(R1.OBJECT_TYPE = 'TABLE') THEN
        TABLE_SQL:='  DROP TABLE '|| R1.OBJECT_NAME ||' CASCADE CONSTRAINTS';
        EXECUTE IMMEDIATE TABLE_SQL;
      END IF;
      
      IF(R1.OBJECT_TYPE = 'SEQUENCE') THEN
        SEQUENCE_SQL:='  DROP SEQUENCE '|| R1.OBJECT_NAME ;
        EXECUTE IMMEDIATE SEQUENCE_SQL;
      END IF;
      
      IF(R1.OBJECT_TYPE = 'FUNCTION') THEN
        FUNCTION_SQL:='  DROP FUNCTION '|| R1.OBJECT_NAME ;
        EXECUTE IMMEDIATE FUNCTION_SQL;
      END IF;
      
      IF(R1.OBJECT_TYPE = 'PROCEDURE') THEN
        PROCEDURE_SQL:='  DROP PROCEDURE '|| R1.OBJECT_NAME ;
        EXECUTE IMMEDIATE PROCEDURE_SQL;
      END IF;
    END LOOP;
    

    
  END;

END PRODUCT_SCRIPT;
/


spool off


------------

select userenv('language') from dual;---------查看数据库的编码格式
create tablespace gaodebao datafile 'gaodebao.dbf' size 1000m;---------创建表空间

提问者所指的数据库应该是表空间。
创建表空间：
CREATE TABLESPACE TBS_ETL_DATA LOGGING DATAFILE 'G:\oracle\product\10.2.0\oradata\tbs_etl_data01.dbf' SIZE 521M AUTOEXTEND OFF;
创建用户：
create user vpetl identified by vpetl default tablespace TBS_ETL_DATA;
赋权限：
grant connect,resource,alter system,debug connect session,select any table,delete any table,drop any table,alter any table to vpetl;
创建表：
create table tablename(id varchar2(20));
备注：创建表空间的file路径根据实际需要修改为linux等系统的路径即可。


dbms_job.remove(365);

select job,priv_user from user_jobs;
select * from user_jobs

execute dbms_job.remove(29);

select * from user_procedures  t where t.object_type  like '%PRO%';
select *  from user_tables;
select *  from user_objects  t where t.object_type  like 'TABLE';

select  distinct(t.OBJECT_TYPE) from user_objects  t;

select 'drop table '|| t.OBJECT_NAME  from user_objects  t where t.object_type  like 'TABLE';
 Select Tablespace_Name,Sum(bytes)/1024/1024 From Dba_Segments Group By Tablespace_Name


select username,default_tablespace from user_users;------查看用户默认的表空间
 Select Tablespace_Name,Sum(bytes)/1024/1024 From Dba_Segments Group By Tablespace_Name ;-------------查看用户的所有表空间
 
 
 
 可以自增长表空间大小就可以了.
增加表空间大小的四种方法
Meathod1：给表空间增加数据文件
ALTER TABLESPACE app_data ADD DATAFILE
'D:\ORACLE\PRODUCT\10.2.0\ORADATA\EDWTEST\APP03.DBF' SIZE 50M;
 
Meathod2：新增数据文件，并且允许数据文件自动增长
ALTER TABLESPACE app_data ADD DATAFILE
'D:\ORACLE\PRODUCT\10.2.0\ORADATA\EDWTEST\APP04.DBF' SIZE 50M
AUTOEXTEND ON NEXT 5M MAXSIZE 100M;
 
Meathod3：允许已存在的数据文件自动增长
ALTER DATABASE DATAFILE 'D:\ORACLE\PRODUCT\10.2.0\ORADATA\EDWTEST\APP03.DBF'
AUTOEXTEND ON NEXT 5M MAXSIZE 100M;
 
Meathod4：手工改变已存在数据文件的大小
ALTER DATABASE DATAFILE 'D:\ORACLE\PRODUCT\10.2.0\ORADATA\EDWTEST\APP02.DBF'
RESIZE 100M;

------------

--查看oracle数据库字符集： 

　　select userenv('language') from dual;
　　查询结果：
　　SIMPLIFIED CHINESE_CHINA.AL32UTF8
--修改oracle数据库字符集：（在SQL Plus中）
conn sys/oracle as sysdba

  ALTER SYSTEM DISABLE RESTRICTED SESSION;改完编码后执行
　　sql> conn / as sysdba;
　　sql> shutdown immediate;
　　database closed.
　　database dismounted.
　　oracle instance shut down.
　　sql> startup mount;
　　oracle instance started.
　　total system global area  135337420 bytes
　　fixed size                          452044 bytes
　　variable size                     109051904 bytes
　　database buffers              25165824 bytes
　　redo buffers                      667648 bytes
　　database mounted.
　　sql> alter system enable restricted session;
　　system altered.
　　sql> alter system set job_queue_processes=0;
　　system altered.
　　sql> alter system set aq_tm_processes=0;
　　system altered.
　　sql> alter database open;
　　database altered.
　　sql> alter database character set internal_use JA16SJIS;
　　sql> shutdown immediate;
　　sql> startup;
安装oracle遇到"未初始化服务句柄错误"
解决方法：
修改sqlnet.ora中的SQLNET.AUTHENTICATION_SERVICES= NONE 
解释: 

三个配置文件 
listener.ora、sqlnet.ora、tnsnames.ora  ，都是放在$ORACLE_HOME\network\admin目录下。 



重点：三个文件的作用和使用 
#----------------------- 
sqlnet.ora-----作用类似于linux或者其他unix的nsswitch.conf文件，通过这个文件来决定怎么样找一个连接中出现的连接字符串， 
例如我们客户端输入 
sqlplus sys/oracle@orcl 
假如我的sqlnet.ora是下面这个样子 

SQLNET.AUTHENTICATION_SERVICES= (NTS) 
NAMES.DIRECTORY_PATH= (TNSNAMES,HOSTNAME) 

那么，客户端就会首先在tnsnames.ora文件中找orcl的记录.如果没有相应的记录则尝试把orcl当作一个主机名，通过网络的途径去解析它的ip地址然后去连接这个ip上GLOBAL_DBNAME=orcl这个实例，当然我这里orcl并不是一个主机名 
如果我是这个样子 

NAMES.DIRECTORY_PATH= (TNSNAMES) 

那么客户端就只会从tnsnames.ora查找orcl的记录 
括号中还有其他选项，如LDAP等并不常用。 


#------------------------ 
Tnsnames.ora------这个文件类似于unix 的hosts文件，提供的tnsname到主机名或者ip的对应，只有当sqlnet.ora中类似 
NAMES.DIRECTORY_PATH= (TNSNAMES)  这样，也就是客户端解析连接字符串的顺序中有TNSNAMES是，才会尝试使用这个文件。 

例子中有两个，ORCL 对应的本机，SALES对应的另外一个IP地址，里边还定义了使用主用服务器还是共享服务器模式进行连接，一句一句说 




#你所要连接的时候输入得TNSNAME 
ORCL = 
  (DESCRIPTION = 
(ADDRESS_LIST = 
#下面是这个TNSNAME对应的主机，端口，协议 
      (ADDRESS = (PROTOCOL = TCP)(HOST = 127.0.0.1)(PORT = 1521)) 
    ) 
(CONNECT_DATA = 
#使用专用服务器模式去连接需要跟服务器的模式匹配，如果没有就根据服务器的模式 
#自动调节 
(SERVER = DEDICATED) 
#对应service_name，SQLPLUS>;show parameter service_name; 
#进行查看 
      (SERVICE_NAME = orcl) 
    ) 
  ) 
#下面这个类似 
SALES = 
  (DESCRIPTION = 
    (ADDRESS_LIST = 
      (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.188.219)(PORT = 1521)) 
    ) 
    (CONNECT_DATA = 
      (SERVER = DEDICATED) 
      (SERVICE_NAME = sales) 
    ) 
  ) 


#---------------------- 
客户端完了我们来看服务器端 
listener.ora------listener监听器进程的配置文件 
关于listener进程就不多说了，接受远程对数据库的接入申请并转交给oracle的服务器进程。所以如果不是使用的远程的连接，listener进程就不是必需的，同样的如果关闭listener进程并不会影响已经存在的数据库连接。 

Listener.ora文件的例子 

#listener.ora Network Configuration File: #E:\oracle\product\10.1.0\Db_2\NETWORK\ADMIN\listener.ora 
# Generated by Oracle configuration tools. 

＃下面定义LISTENER进程为哪个实例提供服务 
＃这里是ORCL，并且它对应的ORACLE_HOME和GLOBAL_DBNAME 
#其中GLOBAL_DBNAME不是必需的除非使用HOSTNAME做数据库连接 
SID_LIST_LISTENER = 
  (SID_LIST = 
    (SID_DESC = 
      (GLOBAL_DBNAME = boway) 
      (ORACLE_HOME = E:\oracle\product\10.1.0\Db_2) 
      (SID_NAME = ORCL) 
    ) 
  ) 
#监听器的名字，一台数据库可以有不止一个监听器 
#再向下面是监听器监听的协议，ｉｐ，端口等，这里使用的ｔｃｐ１５２１端口，并且使＃用的是主机名 
LISTENER =         
  (DESCRIPTION = 
    (ADDRESS = (PROTOCOL = TCP)(HOST = boway)(PORT = 1521)) 
  ) 

上面的例子是一个最简单的例子，但也是最普遍的。一个listener进程为一个instance(SID)提供服务。 
监听器的操作命令 
$ORACLE_HOME/bin/lsnrctl start,其他诸如stop,status等。具体敲完一个lsnrctl后看帮助。 


上面说到的三个文件都可以通过图形的配置工具来完成配置 
$ORACLE_HOME/netca   向导形式的 
$ORACLE_HOME/netmgr 
本人比较习惯netmgr, 

profile 配置的是sqlnet.ora也就是名称解析的方式 
service name 配置的是tnsnames.ora文件 
listeners配置的是listener.ora文件，即监听器进程 
具体的配置可以尝试一下然后来看一下配置文件。 


这样一来总体结构就有了，是 
当你输入sqlplus sys/oracle@orcl的时候 
1． 查询sqlnet.ora看看名称的解析方式，发现是TNSNAME 
2． 则查询tnsnames.ora文件，从里边找orcl的记录，并且找到主机名，端口和service_name 
3． 如果listener进程没有问题的话，建立与listener进程的连接。 
4． 根据不同的服务器模式如专用服务器模式或者共享服务器模式，listener采取接下去的动作。默认是专用服务器模式，没有问题的话客户端就连接上了数据库的server process。 
5． 这时候网络连接已经建立，listener进程的历史使命也就完成了。 


#--------------- 
几种连接用到的命令形式 
1.sqlplus / as sysdba 这是典型的操作系统认证，不需要listener进程 
2.sqlplus sys/oracle 这种连接方式只能连接本机数据库，同样不需要listener进程 
3.sqlplus sys/oracle@orcl 这种方式需要listener进程处于可用状态。最普遍的通过网络连接。 

以上连接方式使用sys用户或者其他通过密码文件验证的用户都不需要数据库处于可用状态，操作系统认证也不需要数据库可用，普通用户因为是数据库认证，所以数据库必需处于open状态。 




然后就是 
#------------- 
平时排错可能会用到的 
1．lsnrctl status查看服务器端listener进程的状态 
LSNRCTL>; help 
The following operations are available 
An asterisk (*) denotes a modifier or extended command: 
start               stop                status 
services            version             reload 
save_config         trace               change_password 
quit                exit                set* 
show* 
LSNRCTL>; status 
 :em11:  
2．tnsping 查看客户端sqlnet.ora和tnsname.ora文件的配置正确与否，及对应的服务器的listener进程的状态。 
C:\>;tnsping orcl 

TNS Ping Utility for 32-bit Windows: Version 10.1.0.2.0 - Production on 16-8月 - 
2005 09:36:08 

Copyright (c) 1997, 2003, Oracle.  All rights reserved. 

Used parameter files: 
E:\oracle\product\10.1.0\Db_2\network\admin\sqlnet.ora 


Used TNSNAMES adapter to resolve the alias 
Attempting to contact (DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP) 
(HOST = 127.0.0.1)(PORT = 1521))) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_ 
NAME = orcl))) 
OK (20 msec) 

3． 
SQL>;show sga  查看instance是否已经启动 

SQL>; select open_mode from v$database; 查看数据库是打开还是mount状态。 
OPEN_MODE 
---------- 
READ WRITE  


#----------------- 
使用hostname访问数据库而不是tnsname的例子 

使用tnsname访问数据库是默认的方式，但是也带来点问题，那就是客户端都是需要配置tnsnames.ora文件的。如果你的数据库服务器地址发生改变，就需要重新编辑客户端这个文件。通过hostname访问数据库就没有了这个麻烦。 

需要修改 
服务器端listener.ora 
#监听器的配置文件listener.ora 
#使用host naming则不再需要tnsname.ora文件做本地解析 
# listener.ora Network Configuration File: d:\oracle\product\10.1.0\db_1\NETWORK\ADMIN\listener.ora 
# Generated by Oracle configuration tools. 

SID_LIST_LISTENER = 
  (SID_LIST = 
    (SID_DESC = 
  #    (SID_NAME = PLSExtProc) 
(SID_NAME = orcl) 
(GLOBAL_DBNAME = boway) 
      (ORACLE_HOME = d:\oracle\product\10.1.0\db_1) 
  #    (PROGRAM = extproc) 
    ) 
  ) 

LISTENER = 
  (DESCRIPTION_LIST = 
    (DESCRIPTION = 
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC)) 
    ) 
    (DESCRIPTION = 
      (ADDRESS = (PROTOCOL = TCP)(HOST = boway)(PORT = 1521)) 
    ) 
  ) 

客户端sqlnet.ora 如果确认不会使用TNSNAME访问的话，可以去掉TNSNAMES 
# sqlnet.ora Network Configuration File: d:\oracle\product\10.1.0\db_1\NETWORK\ADMIN\sqlnet.ora 
# Generated by Oracle configuration tools. 

SQLNET.AUTHENTICATION_SERVICES= (NTS) 

NAMES.DIRECTORY_PATH= (HOSTNAME) 

Tnsnames.ora文件不需要配置，删除也无所谓。 
下面就是网络和操作系统的配置问题了，怎么样能够解析我的主机名的问题了 
可以通过下面的方式连接 
sqlplus sys/oracle@boway 
这样的话，会连接boway这台服务器，并且listener来确定你所要连接的service_name。 




 


 
其中,SERVICE_NAME 未SID的名称 非数据库名称






ORA-12518: TNS: 监听程序无法分发客户机连接
ORACLE 2008-07-12 13:25:55 阅读395 评论0 字号：大中小 
今天在自己的T61上装了ORACLE10G，成功装好后，连数据库报如下错误：
SQL> conn sys/sys@my10g as sysdba
ERROR:
ORA-12518: TNS: 监听程序无法分发客户机连接
 
SQL> conn sjh/sjh@my10g
ERROR:
ORA-12518: TNS: 监听程序无法分发客户机连接
 
C:\Documents and Settings\is_sjh>tnsping my10g
TNS Ping Utility for 32-bit Windows: Version 10.2.0.1.0 - Production on 12-3月 -
2008 19:59:46
Copyright (c) 1997, 2005, Oracle.  All rights reserved.
已使用的参数文件:
c:\oracle\product\10.2.0\db_1\network\admin\sqlnet.ora

已使用 TNSNAMES 适配器来解析别名
Attempting to contact (DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)
(HOST = localhost)(PORT = 1521))) (CONNECT_DATA = (SERVICE_NAME = oracsjh)))
OK (20 毫秒)
 
TNSNAMES.ORA的内容如下：
MY10G =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = localhost)(PORT = 1521))
    )
    (CONNECT_DATA =
      (SERVICE_NAME = oracsjh)
    )
  )
 
listner.ora的内容如下：
# listener.ora Network Configuration File: c:\oracle\product\10.2.0\db_1\NETWORK\ADMIN\listener.ora
# Generated by Oracle configuration tools.
SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (SID_NAME = PLSExtProc)
      (ORACLE_HOME = c:\oracle\product\10.2.0\db_1)
      (PROGRAM = extproc)
    )
    (SID_DESC =
      (GLOBAL_DBNAME = oracsjh)
      (ORACLE_HOME = c:\oracle\product\10.2.0\db_1)
      (SID_NAME = oracsjh)
    )
  )
LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = WWW-D413A159A8B.nj.chervon.com)(PORT = 1521))
    )
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC0))
    )
  )
 
一再检查没发现什么问题啊，后来用OS认证的方式连到DB上一看才知道自己犯了一个很低级的错误。INSTANCE NAME跟两个配置文件的配置不一样。将oracsjh改为跟数据库INSTANCE名一样：sjhorac
问题解决。为了证实自己的想法，我又让问题重现：
 
TNSNAMES.ORA的内容如下：
MY10G =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = localhost)(PORT = 1521))
    )
    (CONNECT_DATA =
      (SERVICE_NAME = ABC)
    )
  )
 
listner.ora的内容如下：
# listener.ora Network Configuration File: c:\oracle\product\10.2.0\db_1\NETWORK\ADMIN\listener.ora
# Generated by Oracle configuration tools.
SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (SID_NAME = PLSExtProc)
      (ORACLE_HOME = c:\oracle\product\10.2.0\db_1)
      (PROGRAM = extproc)
    )
    (SID_DESC =
      (GLOBAL_DBNAME = ABC)
      (ORACLE_HOME = c:\oracle\product\10.2.0\db_1)
      (SID_NAME = ABC)
    )
  )
LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = WWW-D413A159A8B.nj.chervon.com)(PORT = 1521))
    )
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC0))
    )
  )
 
将SERVICE_NAME ，GLOBAL_DBNAME ，SID_NAME 改为ABC。重起LISTENER。
TNSPING依然是可以的。
C:\Documents and Settings\is_sjh>tnsping my10g
TNS Ping Utility for 32-bit Windows: Version 10.2.0.1.0 - Production on 12-3月 -
2008 20:47:52
Copyright (c) 1997, 2005, Oracle.  All rights reserved.
已使用的参数文件:
c:\oracle\product\10.2.0\db_1\network\admin\sqlnet.ora

已使用 TNSNAMES 适配器来解析别名
Attempting to contact (DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)
(HOST = localhost)(PORT = 1521))) (CONNECT_DATA = (SERVICE_NAME = ORAC)))
OK (10 毫秒)
 
--问题重现：
SQL> conn sjh/sjh@my10g
ERROR:
ORA-12518: TNS: 监听程序无法分发客户机连接
总结：ORACLE网络配置这块要特别小心，大多数错误都是由这些配置文件没有配置好而引起的。当然也有些比较特殊的情况。在解决问题的过程中看了一些资料很值的参考：
http://www.itpub.net/521086.html
https://metalink.oracle.com  



------------

sys_guid()；
select dbms_random.value(1,100) from dual;----------生成浮点数
select round(dbms_random.value(1,100)) f1 from dual ；生成随机的整数
purge recyclebin ------清空回收站 ；
select * from user_recyclebin --------查看回收站
drop table table_name   purge;---------删除表不进入回收站



------------

select * from user_role_privs;
select username,default_tablespace from user_users;

付给权限

grant select on SYS.DBA_JOBS_RUNNING to TMRPT;
grant execute on SYS.DBMS_JOB to TMRPT;
grant read, write on directory SYS.DUMPDIR to TMRPT;-----授权更改dumpdir文件的读写权限；DIRECTORY:供转储文件和日志文件使用的目录对象。
grant execute on SYS.KILL_SESSION to TMRPT;
grant select on SYS.V_$LOCKED_OBJECT to TMRPT;
grant select on SYS.V_$SESSION to TMRPT;
-- Grant/Revoke role privileges 
grant connect to TMRPT;
grant resource to TMRPT;
-- Grant/Revoke system privileges 
grant create sequence to TMRPT;
grant create view to TMRPT;
grant debug connect session to TMRPT;
grant unlimited tablespace to TMRPT;

收回权限：
revoke bda to tmrpt;

grant select any table to vpetlpg
alter any table
grant   drop any table  to vpetlgy?
grant   delete any table  to vpetlgy?


存储过程执行需要，drop any table，delete any table ，select any table


------------

SELECT GROUP#,SEQUENCE#,MEMBERS,BYTES/1024/1024,STATUS,ARCHIVED FROM V$LOG; 

------------

ORACLE数据字典视图的种类分别为：USER,ALL 和 DBA.

　　USER_*:有关用户所拥有的对象信息，即用户自己创建的对象信息

　　ALL_*:有关用户可以访问的对象的信息，即用户自己创建的对象的信息加上

　　其他用户创建的对象但该用户有权访问的信息

　　DBA_*:有关整个数据库中对象的信息

　　(这里的*可以为TABLES,INDEXES,OBJECTS,USERS等。)

　　1、查看所有用户

　　select * from dba_user;

　　select * from all_users;

　　select * from user_users;

　　2、查看用户系统权限

　　select * from dba_sys_privs;

　　select * from all_sys_privs;

　　select * from user_sys_privs;

　　3、查看用户对象权限

　　select * from dba_tab_privs;

　　select * from all_tab_privs;

　　select * from user_tab_privs;

　　4、查看所有角色

　　select * from dba_roles;

　　5、查看用户所拥有的角色

　　select * from dba_role_privs;

　　select * from user_role_privs;

　　6、查看当前用户的缺省表空间

　　select username,default_tablespace from user_users;

　　7、查看某个角色的具体权限

　　如grant connect,resource,create session,create view to TEST;

　　8、查看RESOURCE具有那些权限

　　用SELECT * FROM DBA_SYS_PRIVS WHERE GRANTEE='RESOURCE';

原文出自【比特网】，转载请保留原文链接：http://soft.chinabyte.com/database/215/12374715.shtml

------------

怎样查看Oracle的数据库名称sid
用sysdba身份登录 比如 conn / as  sysdba 匿名管理员登陆
执行 select name form V$database; 或是执行select * from  V$database;
不过执行第二个显示的内容太多了不好找自己想要的结果
你也可以先用desc V$database;语句查看一下V$database都有什么字段然后选择自己想要的字段进行选择
查看实例名称(sid)：
select instance_name from  V$instance;
一般默认情况下sid与你的数据库的名称是一样的！

------------

C:\Documents and Settings\Administrator>imp tmrpt/tmrpt@22.11.103.12:1521/bocReport  file=c:\yuCheng\event_log_realtime.d
mp tables=(event_log_realtime);


imp tmrpt/tmrpt@22.11.103.12:1521/bocReport  full= y  file=c:\yuCheng\event_log_realtime.dmp ignore= y;


imp vpetl_hhbank/vpetl_hhbank@192.168.6.58:1521/orcl file=/home/oracle/vp_etl.dmp ignore =y;

etladmin

C:\Documents and Settings\Administrator>EXP etladmin/etladmin@192.168.6.200:1521/orcl file=c:\yuCheng\event_log_realtime.d
mp tables=(event_log_realtime);



EXP 用户名/密码 GRANTS=Y TABLES=(要导出的表1, 要导出的表2, 以此类推) file=E:\目录\文件名.dmp


imp tvpay2dev/tvpay@localhost:1521/gaodebao file=c:\aaa.dmp ignore =y;


jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=localhost)(PORT=1522))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=gaodebao)))


------------

forAll

------------

ORACLE批量绑定FORALL与BULK COLLECT

博客分类： 数据库相关
OracleSQLSQL ServerperformanceUP 
   FORALL与BULK COLLECT的使用方法: 
1．使用FORALL比FOR效率高，因为前者只切换一次上下文，而后者将是在循环次数一样多个上下文间切换。 

2．使用BLUK COLLECT一次取出一个数据集合，比用游标条取数据效率高，尤其是在网络不大好的情况下。但BLUK COLLECT需要大量内存。 

例子: 
Sql代码  收藏代码
create table test_forall ( user_id number(10), user_name varchar2(20));  

select into 中使用bulk collect 
Sql代码  收藏代码
DECLARE  
  TYPE table_forall IS TABLE OF test_forall%ROWTYPE;  
  v_table table_forall;  
BEGIN  
    SELECT mub.user_id,mub.user_name  
         BULK COLLECT INTO v_table  
    FROM mag_user_basic mub  
         WHERE mub.user_id BETWEEN 10000 AND 10100;  
    FORALL idx IN 1..v_table.COUNT  
           INSERT INTO test_forall VALUES v_table(idx);  
           --VALUES(v_table(idx).user_id,v_table(idx).user_name);Error  
           --在PL/SQL中，BULK In-BIND与RECORD，%ROWTYPE是不能在一块使用的，  
           --也就是说，BULK In-BIND只能与简单类型的数组一块使用  
    COMMIT;  
  
EXCEPTION  
    WHEN OTHERS THEN  
        ROLLBACK;  
    
END;  

fetch into 中使用bulk collect 
Sql代码  收藏代码
DECLARE  
  TYPE table_forall IS TABLE OF test_forall%ROWTYPE;  
  v_table table_forall;     
    
  CURSOR c1 IS  
    SELECT mub.user_id,mub.user_name  
         FROM mag_user_basic mub  
           WHERE mub.user_id BETWEEN 10000 AND 10100;  
BEGIN  
   OPEN c1;  
   --在fetch into中使用bulk collect  
   FETCH c1 BULK COLLECT INTO v_table;  
     
   FORALL idx IN 1..v_table.COUNT  
         INSERT INTO test_forall VALUES v_table(idx);  
    COMMIT;  
  
EXCEPTION  
    WHEN OTHERS THEN  
        ROLLBACK;  
END;  

在returning into中使用bulk collect 
Sql代码  收藏代码
CREATE TABLE test_forall2 AS SELECT * FROM test_forall;  
----在returning into中使用bulk collect  
DECLARE  
   TYPE IdList IS TABLE OF test_forall.User_Id%TYPE;  
   enums IdList;  
   TYPE NameList IS TABLE OF test_forall.user_name%TYPE;  
   names NameList;  
BEGIN  
   DELETE FROM test_forall2 WHERE user_id = 10100  
        RETURNING user_id, user_name BULK COLLECT INTO enums, names;  
   dbms_output.put_line('Deleted ' || SQL%ROWCOUNT || ' rows:');  
   FOR i IN enums.FIRST .. enums.LAST  
   LOOP  
     dbms_output.put_line('User #' || enums(i) || ': ' || names(i));  
   END LOOP;  
   COMMIT;  
     
EXCEPTION  
    WHEN OTHERS THEN  
        ROLLBACK;  
         
END;  

批量更新中，将for改成forall 
Sql代码  收藏代码
DECLARE   
    TYPE NumList IS VARRAY(20) OF NUMBER;                                                  
    depts NumList := NumList(10, 30, 70, ...);  
 -- department numbers                      
     BEGIN          
     ...             
       FOR i IN depts.FIRST..depts.LAST  
       LOOP  
       ...  
       --UPDATE statement is sent to the SQL engine   
       -- with each iteration of the FOR loop!  
         UPDATE emp SET sal = sal * 1.10 WHERE deptno = depts(i);  
      END LOOP:   
    END;            

Sql代码  收藏代码
--UPDATE statement is sent to the SQL engine just once, with the entire nested table  
FORALL i IN depts.FIRST..depts.LAST   
  UPDATE emp SET sal = sal * 1.10 WHERE deptno = depts(i);   

To maximize performance, rewrite your programs as follows: 
a. If an INSERT, UPDATE, or DELETE statement executes inside a loop and References collection elements, move it into a FORALL statement. 
b. If a SELECT INTO, FETCH INTO, or RETURNING INTO clause references a 
Collection, incorporate the BULK COLLECT clause. 
c. If possible, use host arrays to pass collections back and forth between your Programs and the database server. 
d. If the failure of a DML operation on a particular row is not a serious problem,Include the keywords SAVE EXCEPTIONS in the FORALL statement and report Or clean up the errors in a subsequent loop using the %BULK_EXCEPTIONS Attribute.


------------

select * from v$session；


select mo

------------

 ALTER TABLE event_log_realtime ADD PARTITION P20300101 VALUES LESS THAN(TO_DATE('2030/01/01', 'YYYY-MM-DD'));增加分区
 alter table USER_TEST.DAM_DISPATCH_FILES_INFORMATION drop constraint DAM_DISPATCH_FILES_INFORMAT_PK; 删除主索引

------------

 JOB_REALTIME_2_MINUTE
GET_DATA_FROM_REALTIM_2_MINUTE
INSERT_COLLECT_DATA_LOG
UPDATE_COLLECT_DATA_LOG
JOB_BATCH_TRANSFOR_DATA
BATCH_TRANSFOR_DATA
GET_DATA_2_AUTH_M_AND_RE_CC认证方式及结果统计表
GET_DATA_2_CLI_BEHA_ALS_CC调查的行为数量
GET_DATA_2_FIXDATE_SOLOLINE_T
GET_DATA_2_DEVICE_RISK_I_B --设备风险信息表汇总
APPEND_RESULT_WHEN_UPDATE
GET_DATA_2_PRO_INFORMAT_B --各省用户数量及报警情况总览表汇总
插入随机数据
插入指定条数数据
游标的应用2
游标的应用1
睡觉时间
增加表分区etl_add_day_partition

------------

通过这个job调用real_to_min。每五分钟执行一次（在while---loop里面每次增加五分钟），在这个里面判断RP_COLLECT_DATA_LOG里面的REDO_TIME是否小于三次，小于三次的才执行get_data_from_realtim_2_minute，当操作成功后把此次操作的结果记录到UPDATE_COLLECT_DATA_LOG表里面
CREATE OR REPLACE PROCEDURE JOB_REALTIME_2_MINUTE
AS
 VAR_RECORD_ID  VARCHAR2(30);
 VAR_RECORD_NUM NUMBER;
 VAR_MINUTE_RECORD_ID VARCHAR(30);
 VAR_MINUTE_REDO_TIME INTEGER;
  VAR_SYSTIME VARCHAR(30);--系统时间
 /*minute表里的最大时间*/
 VAR_MAX_MINUTE_TIME VARCHAR(30);
 OP_STATUS VARCHAR(5) ;--当前时间段的汇总的状态
 STATUS_TIMES_ID VARCHAR(30);--返回的执行次数 ID已经当前状态
 --END_TIME DATE;
BEGIN
  /*得到过程最终时间*/
  --SELECT to_date(to_char(sysdate-1,'yyyy-mm-dd')||' 23:59:59','yyyy-mm-dd hh24:mi:ss')  INTO END_TIME FROM DUAL;

  ----------------CESHI----------
  --END_TIME := TO_DATE('2013-01-29 02:29:59','YYYY-MM-DD HH24:MI:SS');

  VAR_RECORD_NUM := 0;
 /*获取系统最大时间*/
  VAR_SYSTIME := SUBSTR(GET_MIN_EVENT_TIME,0,16);
 -- VAR_SYSTIME :=SUBSTR('2013-01-29 02:25:00',0,16);
 /*获取分钟表的最大时间*/
   SELECT CASE  WHEN MAX(t.trans_time) IS NULL
   THEN VAR_SYSTIME ELSE
   --分钟表里已经汇总过的最大时间，本次从它的下一时间开始，如果无则使用realtime里的
   TO_CHAR(MAX(t.trans_time+(1/24/12)),'yyyy-mm-dd hh24:mi')
   END INTO VAR_MAX_MINUTE_TIME FROM rp_trans_log_minute t
   WHERE T.TRANS_TIME > SYSDATE - 1/8;
  --保证汇总时间为整五分钟
  VAR_MAX_MINUTE_TIME := GET_REAL_TIME_FOR_MINUTE(VAR_MAX_MINUTE_TIME);
   /*插入日志*/
   --判断是否为重做
     INSERT_COLLECT_DATA_LOG(
        VAR_RECORD_ID,        --RECORD_ID 将来会返回主键，用于修改日志操作
        'JOB_REALTIME_2_MINUTE', --PROC_NAME 存储过程名称
        'JOB_REALTIME_2_MINUTE',  --FROM_TABLE 来源表
        'JOB_REALTIME_2_MINUTE',  --TO_TABLE 目标表
        TO_CHAR(SYSDATE-(1/24/60),'YYYY-MM-DD HH24:MI:SS'),        --DATA_RANGE 数据范围
        TO_CHAR(SYSDATE-(1/24/60),'YYYY-MM-DD HH24:MI:SS'),        --DATA_BEGIN_TIME 数据开始时间
        TO_CHAR(SYSDATE-(1/24/60),'YYYY-MM-DD HH24:MI:SS')         --DATA_END_TIME 数据开始时间
      );
--循环调用汇总存储过程
while
  to_date(VAR_MAX_MINUTE_TIME,'YYYY-MM-DD HH24:MI') + 1/24/12 <=  SYSDATE - 1/24/30 --当前时间的前两分钟
  --to_date(VAR_MAX_MINUTE_TIME,'YYYY-MM-DD HH24:MI') < END_TIME

  LOOP
  STATUS_TIMES_ID := GET_RECORD_ID_AND_REDO_TIME(VAR_MAX_MINUTE_TIME||':00','GET_DATA_FROM_REALTIM_2_MINUTE');---例如‘R001711632’
  VAR_MINUTE_REDO_TIME := TO_NUMBER(SUBSTR(STATUS_TIMES_ID,2,2));--‘0’
  VAR_MINUTE_RECORD_ID := SUBSTR(STATUS_TIMES_ID,4,length(STATUS_TIMES_ID));--‘1711632’
  OP_STATUS := SUBSTR(STATUS_TIMES_ID,1,1);‘R’
  IF VAR_MINUTE_REDO_TIME < 3 AND  OP_STATUS != 'R' THEN  --如果次数小于三次，并且运行状态不是‘正在运行’
  get_data_from_realtim_2_minute(
     VAR_MAX_MINUTE_TIME,
     TO_CHAR(TO_DATE(VAR_MAX_MINUTE_TIME,'YYYY-MM-DD HH24:MI')+(1/24/60*4),'YYYY-MM-DD HH24:MI'),
     VAR_MINUTE_RECORD_ID,
     VAR_MINUTE_REDO_TIME+1
     );
  END IF;
  VAR_MAX_MINUTE_TIME := TO_CHAR(TO_DATE(VAR_MAX_MINUTE_TIME,'YYYY-MM-DD HH24:MI')+(1/24/60*5),'YYYY-MM-DD HH24:MI');

  END LOOP;


  /*操作成功后修改日志记录*/
  UPDATE_COLLECT_DATA_LOG(
    VAR_RECORD_ID,
    NULL,
    SYSDATE,
    'SUCCESSFUL',
    VAR_RECORD_NUM,
    0
  );
  EXCEPTION
     WHEN OTHERS
     THEN
         /*操作失败后修改日志记录*/
       UPDATE_COLLECT_DATA_LOG(
           VAR_RECORD_ID,
           NULL,
           SYSDATE,
           'FAILED',
           VAR_RECORD_NUM,
           0
         );

       RETURN;

END JOB_REALTIME_2_MINUTE;


------------

CREATE OR REPLACE PROCEDURE GET_DATA_FROM_REALTIM_2_MINUTE(
      INPUT_TODAY_TO_MINUTE_BEGIN IN VARCHAR2,
      INPUT_TODAY_TO_MINUTE_END IN VARCHAR2,
      INPUT_RECORD_ID IN VARCHAR2,
      INPUT_REDO_TIMES IN INTEGER
 )
AS
 /*报表原始数据表中的最后更新时间*/
 VAR_TODAY_TO_MINUTE_BEGIN VARCHAR2(20);
 VAR_TODAY_TO_MINUTE_END VARCHAR2(20);
 VAR_BEGIN_TIME DATE;
 VAR_END_TIME DATE;

 /*日志表的主键*/
 VAR_RECORD_ID VARCHAR2(50);
 /*插入记录数量*/
 VAR_RECORD_NUM NUMBER;
  /*执行动态sql*/
 VAR_DYNAMIC_SQL VARCHAR2(12000);
 /*辅助表中用的时间*/
 VAR_SHORT_DATE DATE;

--AUTHOR:毛小明
--从实时交易表汇总到分钟表
BEGIN

  VAR_RECORD_NUM := 0;

   --处理参数过长
  IF LENGTH(INPUT_TODAY_TO_MINUTE_BEGIN) > 16
      THEN
       VAR_TODAY_TO_MINUTE_BEGIN := SUBSTR(INPUT_TODAY_TO_MINUTE_BEGIN,1,16);
  ELSE
       VAR_TODAY_TO_MINUTE_BEGIN := INPUT_TODAY_TO_MINUTE_BEGIN;
  END IF;
  IF LENGTH(INPUT_TODAY_TO_MINUTE_END) > 16
      THEN
       VAR_TODAY_TO_MINUTE_END := SUBSTR(INPUT_TODAY_TO_MINUTE_END,1,16);
  ELSE
       VAR_TODAY_TO_MINUTE_END := INPUT_TODAY_TO_MINUTE_END;
  END IF;
   /*数据结束时间 今天的零时零分*/
  VAR_BEGIN_TIME := TO_DATE(VAR_TODAY_TO_MINUTE_BEGIN||'00','YYYY-MM-DD HH24:MI:SS');
  /*数据开始时间 昨天的零时零分*/
  VAR_END_TIME := TO_DATE(VAR_TODAY_TO_MINUTE_END||'59','YYYY-MM-DD HH24:MI:SS');
       /*插入日志*/
      --判断是否为重做
      IF INPUT_REDO_TIMES = 0
      THEN
        --首次执行的开始，插入数据
        INSERT_COLLECT_DATA_LOG(
          VAR_RECORD_ID,        --RECORD_ID 将来会返回主键，用于修改日志操作
          'GET_DATA_FROM_REALTIM_2_MINUTE', --PROC_NAME 存储过程名称
          'RP_TRANS_LOG_REALTIME',  --FROM_TABLE 来源表
          'RP_TRANS_LOG_MINUTE',  --TO_TABLE 目标表
          TO_CHAR(VAR_BEGIN_TIME,'YYYY-MM-DD HH24:MI:SS')||'-'|| TO_CHAR(VAR_END_TIME,'YYYY-MM-DD HH24:MI:SS') ,  --DATA_RANGE 数据范围
          TO_CHAR(VAR_BEGIN_TIME,'YYYY-MM-DD HH24:MI:SS'),        --DATA_BEGIN_TIME 数据开始时间
          TO_CHAR(VAR_END_TIME,'YYYY-MM-DD HH24:MI:SS')          --DATA_END_TIME 数据开始时间
        );
     ELSE
        --重复执行的开始，修改数据
      VAR_RECORD_ID := INPUT_RECORD_ID;
        UPDATE_COLLECT_DATA_LOG(
            VAR_RECORD_ID,
            SYSDATE,
            NULL,
            'RUNNING',
            VAR_RECORD_NUM,
            INPUT_REDO_TIMES
        );
      END IF;
      SET TRANSACTION NAME 'GET_DATA_FROM_REALTIM_2_MINUTE';
      /*把准备汇总的数据的HAS_USED状态转为T*/
      UPDATE EVENT_LOG_REALTIME T SET T.HAS_USED = 'T',T.HAS_USED_TIME=T.LASTMODIFIED WHERE  T.SYS_CREATION_DATE >=  VAR_BEGIN_TIME
      AND T.SYS_CREATION_DATE <= VAR_END_TIME AND T.HAS_USED = 'N';
      /*抽取TM的交易数据到报表的原始数据表*/

      VAR_DYNAMIC_SQL := 'INSERT INTO RP_TRANS_LOG_MINUTE
      (
        TRANS_TIME,
        TRANS_PROVINCE,
        TRANS_TYPE,
        SCORE_RANGE,
        RULE_NAME,
        POLICY_ACTION,
        /*新加字段开始*/
        CHALLENGE_SUCCESSFUL,
        CHALLENGE_AUTH_METHOD,
        PRIORITY,---
        DESCRIBE,--
        IS_USE_DEVICE,--
        TRANS_DITCH,
        TRANS_OPER_SYSTEM,
        TRANS_BROWSER,
        FLAGGED,
        RESOLUTION,
        /*新加字段结束*/
        TRANS_NUM,
        TRIGGERED_NUM,
        TRIGGERED_SUCCESSFUL_NUM,
        /*新加字段开始*/
        WEB_TRANS_NUM,
        MOBILE_TRANS_NUM,
        IPAD_TRANS_NUM,
        QA_LOGIN_NUM,
        SMS_LOGIN_NUM,
        CC_LOGIN_NUM,
        REGISTRAR_QA_NUM,--***
        CREATE_CUSTOMR_FILE_NUM,
        ALLOW_TRANS_NUM,
        REVIEW_TRANS_NUM,
        CHALLENGE_TRANS_NUM,
        DENY_TRANS_NUM,
        TOTAL_SCORE_RANGE,
        TOTAL_AMOUNT
        /*新加字段结束*/
      )
      SELECT
      TO_DATE(SUBSTR(TO_CHAR(SYS_CREATION_DATE,''YYYY-MM-DD HH24:MI:SS''),0,16),''YYYY-MM-DD HH24:MI''),
      get_province(IP_COUNTRY,IP_CITY,ip_region) AS TRANS_PROVINCE,
      GET_NAME_BY_CODE(GET_TOTAL_EVENT_TYPE(T.EVENT_TYPE,T.USER_DEFINED_EVENT_TYPE),''eventType'') AS TRANS_TYPE,
      GET_SCORE_RANGE(T.RISK_SCORE) AS RISK_SCORE_RANGE,
      NVL(POLICY_RULE_ID,''FALLBACK_RULE'') AS RULE_NAME,
      POLICY_ACTION,
      CHALLENGE_SUCCESSFUL,
      CHALLENGE_AUTH_METHOD,
      SUBSTR(GET_RULE_ORDER_ID(ORG_ID,POLICY_RULE_ID),0,INSTR(GET_RULE_ORDER_ID(ORG_ID,POLICY_RULE_ID),''+'')-1),--优先级
      SUBSTR(GET_RULE_ORDER_ID(ORG_ID,POLICY_RULE_ID),INSTR(GET_RULE_ORDER_ID(ORG_ID,POLICY_RULE_ID),''-'')+1),--描述
      NVL(IS_DEVICE_BOUND,''N''),
      CHANNEL_INDICATOR,
      OPERATING_SYSTEM,
      BROWSER_TYPE,
      FLAGGED,
      RESOLUTION,
      COUNT(1) AS TRANS_NUM,
      SUM(CASE WHEN POLICY_ACTION = ''CHALLENGE''  THEN 1 ELSE 0 END) AS TRIGGERED_NUM,
      SUM(CASE WHEN POLICY_ACTION = ''CHALLENGE'' AND CHALLENGE_SUCCESSFUL = ''Y'' THEN 1 ELSE 0 END) AS TRIGGERED_SUCCESSFUL_NUM,
      SUM(case WHEN CHANNEL_INDICATOR = ''WEB'' then 1 else 0 end ) AS WEB_TRANS_NUM,--WEB交易量
      SUM(case WHEN CHANNEL_INDICATOR = ''MOBILE'' then 1 else 0 end ) AS MOBILE_TRANS_NUM,--Mobile交易量
      SUM(case WHEN '||get_vale_from_cd1('6','4')||' = ''IPAD'' then 1 else 0 end ) AS IPDA_TRANS_NUM,--Ipad交易量
     (SELECT SUM(CASE WHEN T1.ACSPNAME = ''QUESTION'' AND T1.STATUS = ''ACTIVE'' THEN 1 ELSE 0 END) FROM ACSPUSERACCOUNT T1 WHERE TO_DATE(to_char( T1.lastmodified,''yyyy-mm-DD HH24:MI:SS'' ),''yyyy-mm-DD HH24:MI:SS'') >  TO_DATE('''||TO_CHAR(VAR_BEGIN_TIME,'YYYY-MM-DD HH24:MI:SS')||''',''YYYY-MM-DD HH24:MI:SS'') AND TO_DATE(to_char( T1.lastmodified,''yyyy-mm-DD HH24:MI:SS'' ),''yyyy-mm-DD HH24:MI:SS'') <=  TO_DATE('''||TO_CHAR(VAR_END_TIME,'YYYY-MM-DD HH24:MI:SS')||''',''YYYY-MM-DD HH24:MI:SS'')  )AS QA_LOGIN_NUM,
      (SELECT SUM(CASE WHEN T1.ACSPNAME = ''SMS'' AND T1.STATUS = ''ACTIVE'' THEN 1 ELSE 0 END) FROM ACSPUSERACCOUNT T1  WHERE TO_DATE(to_char( T1.lastmodified,''yyyy-mm-DD HH24:MI:SS'' ),''yyyy-mm-DD HH24:MI:SS'') >  TO_DATE('''||TO_CHAR(VAR_BEGIN_TIME,'YYYY-MM-DD HH24:MI:SS')||''',''YYYY-MM-DD HH24:MI:SS'') AND TO_DATE(to_char( T1.lastmodified,''yyyy-mm-DD HH24:MI:SS'' ),''yyyy-mm-DD HH24:MI:SS'') <=  TO_DATE('''||TO_CHAR(VAR_END_TIME,'YYYY-MM-DD HH24:MI:SS')||''',''YYYY-MM-DD HH24:MI:SS''))AS SMS_LOGIN_NUM,
      (SELECT SUM(CASE WHEN T1.ACSPNAME = ''CCC'' AND T1.STATUS = ''ACTIVE'' THEN 1 ELSE 0 END) FROM ACSPUSERACCOUNT T1  WHERE TO_DATE(to_char( T1.lastmodified,''yyyy-mm-DD HH24:MI:SS'' ),''yyyy-mm-DD HH24:MI:SS'') >  TO_DATE('''||TO_CHAR(VAR_BEGIN_TIME,'YYYY-MM-DD HH24:MI:SS')||''',''YYYY-MM-DD HH24:MI:SS'') AND TO_DATE(to_char( T1.lastmodified,''yyyy-mm-DD HH24:MI:SS'' ),''yyyy-mm-DD HH24:MI:SS'') <=  TO_DATE('''||TO_CHAR(VAR_END_TIME,'YYYY-MM-DD HH24:MI:SS')||''',''YYYY-MM-DD HH24:MI:SS''))AS CC_LOGIN_NUM,
      ''11111'',
      (SELECT COUNT(USERNAME) FROM USERS T2 WHERE  T2.CREATED >= TO_DATE( '''||TO_CHAR(VAR_BEGIN_TIME,'YYYY-MM-DD HH24:MI:SS')||''',''YYYY-MM-DD HH24:MI:SS'')
      AND T2.CREATED <= TO_DATE('''||TO_CHAR(VAR_END_TIME,'YYYY-MM-DD HH24:MI:SS')||''',''YYYY-MM-DD HH24:MI:SS'')  ) AS CREATE_CUSTOMR_FILE_NUM ,
      SUM(CASE WHEN POLICY_ACTION = ''ALLOW'' then 1 else 0 end ) as ALLOW_TRANS_NUM,
      SUM(CASE WHEN POLICY_ACTION = ''REVIEW'' then 1 else 0 end ) as REVIEW_TRANS_NUM,
      SUM(CASE WHEN POLICY_ACTION = ''AHALLENGE'' then 1 else 0 end ) as CHALLENGE_TRANS_NUM,
      SUM(CASE WHEN POLICY_ACTION = ''DENY'' then 1 else 0 end ) as DENY_TRANS_NUM,
      SUM(RISK_SCORE) AS TOTAL_SCORE_RANGE,
      SUM(GET_AMT_BY_CURRENCY(AMOUNT_ORIGINAL,AMOUNT_CURRENCY)) AS TOTAL_AMOUNT--通过汇率表和币种转换再求和
      FROM EVENT_LOG_REALTIME T
      WHERE SYS_CREATION_DATE >= TO_DATE('''||TO_CHAR(VAR_BEGIN_TIME,'YYYY-MM-DD HH24:MI:SS')||''',''YYYY-MM-DD HH24:MI:SS'') AND SYS_CREATION_DATE <=  TO_DATE('''||TO_CHAR(VAR_END_TIME,'YYYY-MM-DD HH24:MI:SS')||''' ,''YYYY-MM-DD HH24:MI:SS'')
      AND HAS_USED = ''T''
      AND T.HAS_USED_TIME=T.LASTMODIFIED
      GROUP BY
      TO_DATE(SUBSTR(TO_CHAR(SYS_CREATION_DATE,''YYYY-MM-DD HH24:MI:SS''),0,16),''YYYY-MM-DD HH24:MI''),
      get_province(IP_COUNTRY,IP_CITY,ip_region) ,
      GET_NAME_BY_CODE(GET_TOTAL_EVENT_TYPE(T.EVENT_TYPE,T.USER_DEFINED_EVENT_TYPE),''eventType'') ,
      GET_SCORE_RANGE(T.RISK_SCORE) ,
      NVL(POLICY_RULE_ID,''FALLBACK_RULE'') ,
      POLICY_ACTION,
      CHALLENGE_SUCCESSFUL,
      CHALLENGE_AUTH_METHOD,
      SUBSTR(GET_RULE_ORDER_ID(ORG_ID,POLICY_RULE_ID),0,INSTR(GET_RULE_ORDER_ID(ORG_ID,POLICY_RULE_ID),''+'')-1),--优先级
      SUBSTR(GET_RULE_ORDER_ID(ORG_ID,POLICY_RULE_ID),INSTR(GET_RULE_ORDER_ID(ORG_ID,POLICY_RULE_ID),''-'')+1),--描述
      NVL(IS_DEVICE_BOUND,''N''),
      CHANNEL_INDICATOR,
      OPERATING_SYSTEM,
      BROWSER_TYPE,
      FLAGGED,
      RESOLUTION ';
     -- insert into test (test_name) values(VAR_DYNAMIC_SQL);
      --insert into test (test_name) values(TO_CHAR(VAR_BEGIN_TIME));
      --insert into test (test_name) values(TO_CHAR(VAR_END_TIME));
     -- commit;
      execute immediate VAR_DYNAMIC_SQL;
      -------------------------------------------------------------------------------------
      
            --往辅助表里增加数据
         --获取缩短后的时间
          SELECT MAX(TO_DATE(SUBSTR(TO_CHAR(T1.SYS_CREATION_DATE,'YYYY-MM-DD HH:MI:SS'),0,7),'YYYY-MM')) INTO VAR_SHORT_DATE
             FROM EVENT_LOG_REALTIME T1 where  T1.SYS_CREATION_DATE >=  VAR_BEGIN_TIME
              AND T1.SYS_CREATION_DATE <= VAR_END_TIME AND T1.HAS_USED = 'T'; 
         --RP_ALL_OF_DEVICE_ID（交易时间、设备ID）
        
          INSERT INTO RP_ALL_OF_DEVICE_ID (TRANS_TIME,DEVICE_ID)
          SELECT TO_DATE(SUBSTR(TO_CHAR(T1.SYS_CREATION_DATE,'YYYY-MM-DD HH:MI:SS'),0,7),'YYYY-MM') AS TRANS_TIME,
                 T2.PMID AS DEVICE_ID FROM EVENT_LOG_REALTIME T1,DESKTOPS T2 WHERE T1.COOKIE = T2.PMID
                 AND T1.SYS_CREATION_DATE >=  VAR_BEGIN_TIME AND T1.SYS_CREATION_DATE <= VAR_END_TIME AND T1.HAS_USED = 'T';
         --RP_BD_DEVICE_CUSTOMER_ID（客户ID、是否绑定设备、交易时间）
         INSERT INTO RP_BD_DEVICE_CUSTOMER_ID (TRANS_TIME,CUSTOMER_ID,BOUND_DEVICE_OR_NOT)
          SELECT TO_DATE(SUBSTR(TO_CHAR(T1.SYS_CREATION_DATE,'YYYY-MM-DD HH:MI:SS'),0,7),'YYYY-MM') AS TRANS_TIME,
                 T1.User_Id AS CUSTOMER_ID,t1.is_device_bound as BOUND_DEVICE_OR_NOT FROM EVENT_LOG_REALTIME T1 WHERE  SYS_CREATION_DATE >=  VAR_BEGIN_TIME
                 AND SYS_CREATION_DATE <= VAR_END_TIME AND HAS_USED = 'T';
         --RP_BD_DEVICE_ID（设备ID、设备类型、交易时间）
         INSERT INTO RP_BD_DEVICE_ID (TRANS_TIME,DEVICE_ID,DEVICE_TYPE)
             SELECT TO_DATE(SUBSTR(TO_CHAR(T1.SYS_CREATION_DATE,'YYYY-MM-DD HH:MI:SS'),0,7),'YYYY-MM') AS TRANS_TIME,
                 T2.PMID AS DEVICE_ID ,t1.channel_indicator as DEVICE_TYPE FROM EVENT_LOG_REALTIME T1,DESKTOPS T2
                 WHERE T1.COOKIE = T2.PMID AND T2.BINDINGS_COUNT > 0
                 AND SYS_CREATION_DATE >=  VAR_BEGIN_TIME AND SYS_CREATION_DATE <= VAR_END_TIME AND HAS_USED = 'T';
    
    
         --RP_CHALLENGE_FAIL_BD_DEVICE_ID（认证方式、设备ID、交易时间）
         INSERT INTO RP_CHALLENGE_FAIL_BD_DEVICE_ID (TRANS_TIME,DEVICE_ID,CHALLENGE_AUTH_METHOD)
          SELECT TO_DATE(SUBSTR(TO_CHAR(T1.SYS_CREATION_DATE,'YYYY-MM-DD HH:MI:SS'),0,7),'YYYY-MM') AS TRANS_TIME,
                 T2.PMID AS DEVICE_ID,t1.Challenge_Auth_Method  FROM EVENT_LOG_REALTIME T1,DESKTOPS T2 WHERE T1.COOKIE = T2.PMID AND T2.BINDINGS_COUNT > 0
                 AND SYS_CREATION_DATE >=  VAR_BEGIN_TIME AND SYS_CREATION_DATE <= VAR_END_TIME AND HAS_USED = 'T' AND T1.CHALLENGE_SUCCESSFUL = 'N';
         --RP_COUNT_DIVICE_AMOUNT（操作系统、浏览器、设备类型、设备ID、交易时间、渠道）
         INSERT INTO RP_COUNT_DIVICE_AMOUNT (TRANS_TIME,DEVICE_ID,OPERATIING_SYSTEM,BROWSER,DEVICE_TYPE,TRANS_DITCH)
          SELECT TO_DATE(SUBSTR(TO_CHAR(T1.SYS_CREATION_DATE,'YYYY-MM-DD HH:MI:SS'),0,7),'YYYY-MM') AS TRANS_TIME,
                 T2.PMID AS DEVICE_ID,T1.OPERATING_SYSTEM,T1.BROWSER_TYPE AS BROWSER, (T1.OPERATING_SYSTEM||T1.BROWSER_TYPE) AS DEVICE_TYPE,
                 T1.Channel_Indicator as TRANS_DITCH
                 FROM EVENT_LOG_REALTIME T1,DESKTOPS T2 WHERE T1.COOKIE = T2.PMID
                 AND T1.SYS_CREATION_DATE >=  VAR_BEGIN_TIME AND T1.SYS_CREATION_DATE <= VAR_END_TIME AND T1.HAS_USED = 'T';
         --RP_COUNT_USER_AMOUNT（操作系统、浏览器、设备类型、客户ID、交易时间、渠道）
         INSERT INTO RP_COUNT_USER_AMOUNT (TRANS_TIME,CUSTOMER_ID,OPERATIING_SYSTEM,BROWSER,DEVICE_TYPE,TRANS_DITCH)
          SELECT TO_DATE(SUBSTR(TO_CHAR(T1.SYS_CREATION_DATE,'YYYY-MM-DD HH:MI:SS'),0,7),'YYYY-MM') AS TRANS_TIME,
                 T1.USER_ID AS CUSTOMER_ID,T1.OPERATING_SYSTEM,T1.BROWSER_TYPE AS BROWSER, (T1.OPERATING_SYSTEM||T1.BROWSER_TYPE) AS DEVICE_TYPE,
                 T1.Channel_Indicator as TRANS_DITCH
                 FROM EVENT_LOG_REALTIME T1 WHERE  T1.SYS_CREATION_DATE >=  VAR_BEGIN_TIME AND T1.SYS_CREATION_DATE <= VAR_END_TIME AND T1.HAS_USED = 'T';
         --RP_CUSTOMER_ID_IP_TRANS_PRO（客户ID、IP地址、交易省份、交易时间）
         INSERT INTO RP_CUSTOMER_ID_IP_TRANS_PRO (TRANS_TIME,CUSTOMER_ID,IP_ADDRESS,TRANS_PROVINCE)
          SELECT TO_DATE(SUBSTR(TO_CHAR(T1.SYS_CREATION_DATE,'YYYY-MM-DD HH:MI:SS'),0,7),'YYYY-MM') AS TRANS_TIME,
                 T1.User_Id  AS CUSTOMER_ID,t1.ip_address,  get_province(t1.IP_COUNTRY,t1.IP_CITY,t1.ip_region) AS TRANS_PROVINCE  FROM EVENT_LOG_REALTIME T1 WHERE
                 SYS_CREATION_DATE >=  VAR_BEGIN_TIME AND SYS_CREATION_DATE <= VAR_END_TIME AND HAS_USED = 'T' AND T1.CHALLENGE_SUCCESSFUL = 'N';
         --RP_ID_UNQUE（IP地址、交易时间）
         INSERT INTO RP_IP_UNIQUE (TRANS_TIME,IP_ADDRESS)
          SELECT TO_DATE(SUBSTR(TO_CHAR(T1.SYS_CREATION_DATE,'YYYY-MM-DD HH:MI:SS'),0,7),'YYYY-MM') AS TRANS_TIME,
                 t1.ip_address  FROM EVENT_LOG_REALTIME T1 WHERE
                 SYS_CREATION_DATE >=  VAR_BEGIN_TIME AND SYS_CREATION_DATE <= VAR_END_TIME AND HAS_USED = 'T' AND T1.CHALLENGE_SUCCESSFUL = 'N';
         --RP_PROVINCE_CUSTOMER_AMOUNT（交易省份、客户ID、交易时间）
         INSERT INTO RP_PROVINCE_CUSTOMER_AMOUNT (TRANS_TIME,TRANS_PROVINCE,CUSTOMER_ID)
          SELECT TO_DATE(SUBSTR(TO_CHAR(T1.SYS_CREATION_DATE,'YYYY-MM-DD HH:MI:SS'),0,7),'YYYY-MM') AS TRANS_TIME,
                 get_province(T1.IP_COUNTRY,T1.IP_CITY,T1.IP_REGION) AS TRANS_PROVINCE,T1.USER_ID AS CUSTOMER_ID  FROM EVENT_LOG_REALTIME T1 WHERE
                 SYS_CREATION_DATE >=  VAR_BEGIN_TIME AND SYS_CREATION_DATE <= VAR_END_TIME AND HAS_USED = 'T' AND T1.CHALLENGE_SUCCESSFUL = 'N';
         --RP_PROVINCE_DEVICEID(交易省份、设备ID、交易时间)
         INSERT INTO RP_PROVINCE_DEVICEID (TRANS_TIME,DEVICE_ID,TRANS_PROVINCE)
          SELECT TO_DATE(SUBSTR(TO_CHAR(T1.SYS_CREATION_DATE,'YYYY-MM-DD HH:MI:SS'),0,7),'YYYY-MM') AS TRANS_TIME,
                 T2.PMID AS DEVICE_ID ,get_province(T1.IP_COUNTRY,T1.IP_CITY,t1.ip_region) AS TRANS_PROVINCE FROM EVENT_LOG_REALTIME T1,DESKTOPS T2 WHERE T1.COOKIE = T2.PMID
                 AND T1.SYS_CREATION_DATE >=  VAR_BEGIN_TIME AND T1.SYS_CREATION_DATE <= VAR_END_TIME AND T1.HAS_USED = 'T';
         --RP_PROVINCE_DITCH_DEVICEID(交易省份、设备ID、交易时间、交易渠道)
         INSERT INTO RP_PROVINCE_DITCH_DEVICEID (TRANS_TIME,DEVICE_ID,TRANS_PROVINCE,TRANS_DITCH)
          SELECT TO_DATE(SUBSTR(TO_CHAR(T1.SYS_CREATION_DATE,'YYYY-MM-DD HH:MI:SS'),0,7),'YYYY-MM') AS TRANS_TIME,
                 T2.PMID AS DEVICE_ID ,get_province(T1.IP_COUNTRY,T1.IP_CITY,t1.ip_region) AS TRANS_PROVINCE ,
                 T1.CHANNEL_INDICATOR AS TRANS_DITCH FROM EVENT_LOG_REALTIME T1,DESKTOPS T2 WHERE T1.COOKIE = T2.PMID
                 AND T1.SYS_CREATION_DATE >=  VAR_BEGIN_TIME AND T1.SYS_CREATION_DATE <= VAR_END_TIME AND T1.HAS_USED = 'T';
         --RP_TRANS_DITCH_CUSTOMER_ID(交易渠道、客户ID、交易时间)
         INSERT INTO RP_TRANS_DITCH_CUSTOMER_ID (TRANS_TIME,TRANS_DITCH,CUSTOMER_ID)
                  SELECT 
                TO_DATE(SUBSTR(TO_CHAR(T1.SYS_CREATION_DATE, 'YYYY-MM-DD HH:MI:SS'), 0, 7), 'YYYY-MM') AS TRANS_TIME,
                
                (case
                  when (get_vale_from_cd_gnpx(',' || T1.CDF_S_1 || ',' || T1.CDF_S_2 || ',' ||
                                              T1.CDF_S_3 || ',' || T1.CDF_S_4 || ',' ||
                                              T1.CDF_S_5 || ',' || T1.CDF_S_6 || ',' ||
                                              T1.CDF_S_7 || ',' || T1.CDF_S_8 || ',' ||
                                              T1.CDF_S_9 || ',' || T1.CDF_S_10 || ',' ||
                                              T1.CDF_S_11 || ',' || T1.CDF_S_12 || ',' ||
                                              T1.CDF_S_13 || ',' || T1.CDF_S_14 || ',' ||
                                              T1.CDF_S_15 || ',' || T1.CDF_S_16,
                                              '6',
                                              '4')) = 'IPAD' THEN
                   'IPAD'
                  ELSE
                   T1.CHANNEL_INDICATOR
                END) AS TRANS_DITCH,
                T1.USER_ID AS CUSTOMER_ID
         
           FROM EVENT_LOG_REALTIME T1 WHERE
                 SYS_CREATION_DATE >=  VAR_BEGIN_TIME AND SYS_CREATION_DATE <= VAR_END_TIME AND HAS_USED = 'T' AND T1.CHALLENGE_SUCCESSFUL = 'N';
         --RP_USERAMOUNT_PROVINCE_DITCH_C(交易渠道、客户ID、交易时间、省份)
         INSERT INTO RP_USERAMOUNT_PROVINCE_DITCH_C (TRANS_TI·			ME,TRANS_DITCH,CUSTOMER_ID,TRANS_PROVINCE)
          SELECT TO_DATE(SUBSTR(TO_CHAR(T1.SYS_CREATION_DATE,'YYYY-MM-DD HH:MI:SS'),0,7),'YYYY-MM') AS TRANS_TIME,
                 T1.CHANNEL_INDICATOR AS TRANS_DITCH,T1.USER_ID AS CUSTOMER_ID,get_province(T1.IP_COUNTRY,T1.IP_CITY,t1.ip_region) AS TRANS_PROVINCE
                 FROM EVENT_LOG_REALTIME T1 WHERE
                 SYS_CREATION_DATE >=  VAR_BEGIN_TIME AND SYS_CREATION_DATE <= VAR_END_TIME AND HAS_USED = 'T';


        --RP_DEVICE_ID_IP_TRANS_PRO( 设备ID,IP地址,交易省份,交易时间)

         INSERT INTO RP_DEVICE_ID_IP_TRANS_PRO(TRANS_TIME,DEVICE_ID,IP_ADDRESS,TRANS_PROVINCE)
          SELECT TO_DATE(SUBSTR(TO_CHAR(T1.SYS_CREATION_DATE,'YYYY-MM-DD HH:MI:SS'),0,7),'YYYY-MM') AS TRANS_TIME,
                 T2.PMID AS DEVICE_ID ,T1.IP_ADDRESS AS IP_ADDRESS,get_province(T1.IP_COUNTRY,T1.IP_CITY,t1.ip_region) AS TRANS_PROVINCE
                 FROM EVENT_LOG_REALTIME T1,DESKTOPS T2 WHERE T1.COOKIE = T2.PMID and
                 T1.SYS_CREATION_DATE >=  VAR_BEGIN_TIME AND T1.SYS_CREATION_DATE <= VAR_END_TIME AND T1.HAS_USED = 'T' AND T1.CHALLENGE_SUCCESSFUL = 'N';

      
      ------------------------------------------------------------
      INSERT INTO event_log_real_gather
        (event_id,
         event_time,
         ip_address,
         event_type,
         user_defined_event_type,
         risk_score,
         policy_action,
         challenge_auth_method,
         challenge_successful,
         policy_rule_id,
         short_date,
         sys_creation_date,
         lastmodified,
         user_id,
         user_hash,
         preliminary_score,
         has_used,
         has_used_time,
         ip_country,
         ip_city,
         channel_indicator,
         operating_system,
         browser_type,
         amount_original,
         amount_currency,
         user_acct_number,
         ext_acct_number,
         ext_acct_owner_name,
         flagged,
         resolution,
         cdf_s_1,
         cdf_s_2,
         cdf_s_3,
         cdf_s_4,
         cdf_s_5,
         cdf_s_6,
         cdf_s_7,
         cdf_s_8,
         cdf_s_9,
         cdf_s_10,
         cdf_s_11,
         cdf_s_12,
         cdf_s_13,
         cdf_s_14,
         cdf_s_15,
         cdf_s_16,
         cdf_s_17,
         cdf_s_18,
         cdf_s_19,
         cdf_s_20,
         org_id,
         is_device_bound,
         cookie,
         ip_region
         )SELECT
          event_id,
       event_time,
       ip_address,
       event_type,
       user_defined_event_type,
       risk_score,
       policy_action,
       challenge_auth_method,
       challenge_successful,
       policy_rule_id,
       short_date,
       sys_creation_date,
       lastmodified,
       user_id,
       user_hash,
       preliminary_score,
       has_used,
       has_used_time,
       ip_country,
       ip_city,
       channel_indicator,
       operating_system,
       browser_type,
       amount_original,
       amount_currency,
       user_acct_number,
       ext_acct_number,
       ext_acct_owner_name,
       flagged,
       resolution,
       cdf_s_1,
       cdf_s_2,
       cdf_s_3,
       cdf_s_4,
       cdf_s_5,
       cdf_s_6,
       cdf_s_7,
       cdf_s_8,
       cdf_s_9,
       cdf_s_10,
       cdf_s_11,
       cdf_s_12,
       cdf_s_13,
       cdf_s_14,
       cdf_s_15,
       cdf_s_16,
       cdf_s_17,
       cdf_s_18,
       cdf_s_19,
       cdf_s_20,
       org_id,
       is_device_bound,
       cookie,
       ip_region
  from event_log_realtime T WHERE  T.HAS_USED = 'T' AND T.HAS_USED_TIME=T.LASTMODIFIED AND  T.SYS_CREATION_DATE >=  VAR_BEGIN_TIME
      AND T.SYS_CREATION_DATE <= VAR_END_TIME;
      
      ---------------------------------------------------------------
    


      --往已确认欺诈交易表插入欺诈数据
      VAR_DYNAMIC_SQL := 'INSERT INTO RP_COMFIRMED_EVENT_DETAIL(
        EVENT_ID,--ID
        TRANS_TIME,--交易时间
        TRANS_TYPE,--交易类型
        TRANS_PROVINCE,--开户省份
        CCE_CSTNO,--客户号
        CCE_CERTTYPE,--证件类型
        CCE_CERTNO,--证件号
        CCE_AMT,--交易金额
        CCE_RISK_SCORE,--不处理的风险分值
        CCE_PAYEE_ACC,--付款人账号
        CCE_PAYEE_NAME,--付款人姓名
        CCE_REC_NODE,--收款人开户行
        CCE_REC_ACC,--收款人账号
        CCE_REC_NAME,--收款人姓名
        RULE_NAME,--规则名称
        CCE_RULE_NOTE,--规则描述
        SCORE_RANGE--处理后的风险分值
      )select
       EVENT_ID,
       SYS_CREATION_DATE,
       GET_NAME_BY_CODE(GET_TOTAL_EVENT_TYPE(T1.EVENT_TYPE,T1.USER_DEFINED_EVENT_TYPE),''eventType'') AS TRANS_TYPE,
      -- get_province(IP_COUNTRY,IP_CITY) AS CCE_TRANSTYPE,
       get_vale_from_cd_p('||get_vale_from_cd1('13','5')||'),--开户省份为自定义字段
       USER_ID,
       '||get_vale_from_cd1('4','4')||',--证件类型为自定义字段
       '||get_vale_from_cd1('7','4')||',--证件号为自定义字段  要转换成动态SQL
       GET_AMT_BY_CURRENCY(AMOUNT_ORIGINAL,AMOUNT_CURRENCY),--通过汇率和币种转换
       RISK_SCORE,
       USER_ACCT_NUMBER,
       '||get_vale_from_cd_g1(get_vale_from_cd_al)||',--付款人姓名
       '||get_vale_from_cd1('11','5')||',--收款人开户行 自定义字段 需转换成动态SQL
       EXT_ACCT_NUMBER,
       EXT_ACCT_OWNER_NAME,
       NVL(POLICY_RULE_ID,''FALLBACK_RULE'') AS RULE_NAME,
       SUBSTR(GET_RULE_ORDER_ID(ORG_ID,POLICY_RULE_ID),INSTR(GET_RULE_ORDER_ID(ORG_ID,POLICY_RULE_ID),''-'')+1),--描述
       GET_SCORE_RANGE(RISK_SCORE) AS RISK_SCORE_RANGE
       FROM EVENT_LOG_REALTIME T1
       WHERE T1.SYS_CREATION_DATE >=  TO_DATE('''||TO_CHAR(VAR_BEGIN_TIME,'YYYY-MM-DD HH24:MI:SS')||''',''YYYY-MM-DD HH24:MI:SS'')
        AND T1.SYS_CREATION_DATE <=  TO_DATE('''||TO_CHAR(VAR_END_TIME,'YYYY-MM-DD HH24:MI:SS')||''' ,''YYYY-MM-DD HH24:MI:SS'') AND T1.HAS_USED = ''T''
       AND T1.HAS_USED_TIME=T1.LASTMODIFIED
       AND (T1.POLICY_ACTION = ''DENY'' OR (T1.POLICY_ACTION = ''CHALLENGE'' AND T1.CHALLENGE_SUCCESSFUL=''N'' AND T1.FLAGGED=''Y'') OR ( T1.FLAGGED IS NULL AND T1.RESOLUTION=''F'' ))';
       --insert into test (test_name) values(VAR_DYNAMIC_SQL);
       --commit;
       execute immediate VAR_DYNAMIC_SQL;

     /*把汇总了的数据的HAS_USED字段变为Y*/
     UPDATE EVENT_LOG_REALTIME T SET T.HAS_USED = 'Y',T.HAS_USED_TIME = SYSDATE WHERE  T.SYS_CREATION_DATE >=  VAR_BEGIN_TIME
      AND T.SYS_CREATION_DATE <= VAR_END_TIME AND T.HAS_USED = 'T' AND T.LASTMODIFIED=T.HAS_USED_TIME;
     UPDATE EVENT_LOG_REALTIME T SET T.HAS_USED = 'N',T.HAS_USED_TIME = SYSDATE WHERE  T.SYS_CREATION_DATE >=  VAR_BEGIN_TIME
      AND T.SYS_CREATION_DATE <= VAR_END_TIME AND T.HAS_USED = 'T' AND T.LASTMODIFIED!=T.HAS_USED_TIME;
      /*记录插入的数据量*/
      VAR_RECORD_NUM := SQL%ROWCOUNT;
      /*提交插入数据的操作*/

      /*操作成功后修改日志记录*/
      UPDATE_COLLECT_DATA_LOG(
        VAR_RECORD_ID,
        NULL,
        SYSDATE,
        'SUCCESSFUL',
        VAR_RECORD_NUM,
        0
      );

      COMMIT;
  EXCEPTION
     WHEN OTHERS
     THEN
         ROLLBACK;
         VAR_RECORD_NUM := 0;
         /*操作失败后修改日志记录*/
         UPDATE_COLLECT_DATA_LOG(
           VAR_RECORD_ID,
           NULL,
           SYSDATE,
           'FAILED',
           VAR_RECORD_NUM,
           INPUT_REDO_TIMES
         );

       RETURN ;

END GET_DATA_FROM_REALTIM_2_MINUTE;


------------

当 是第一次执行（INPUT_REDO_TIMES=0的时候），插入日志表 id、  存储过程名称 、表 来源表， TO_TABLE 目标表、DATA_RANGE 数据范围、数据开始时间、数据结束时间
CREATE OR REPLACE PROCEDURE INSERT_COLLECT_DATA_LOG(
       INPUT_RECORD_ID IN OUT VARCHAR2,
       INPUT_PROC_NAME IN VARCHAR2,
       INPUT_FROM_TABLE IN VARCHAR2,
       INPUT_TO_TABLE IN VARCHAR2,
       INPUT_DATA_RANGE IN VARCHAR2,
       INPUT_DATA_BEGIN_TIME IN VARCHAR2,
       INPUT_DATA_END_TIME IN VARCHAR2
)
AS
BEGIN

  /*日志表的主键*/
  SELECT SEQ_COLLECT_DATA_LOG.NEXTVAL INTO INPUT_RECORD_ID FROM DUAL;

  /*插入日志*/
  INSERT INTO RP_COLLECT_DATA_LOG
  (
   RECORD_ID,
   PROC_NAME,
   FROM_TABLE,
   TO_TABLE,
   DATA_RANGE,
   DATA_BEGIN_TIME,
   DATA_END_TIME,
   OP_BEGIN_TIME,
   OP_END_TIME,
   OP_STATUS,
   RECORD_NUM,
   REDO_TIMES
  )
  VALUES
  (
   INPUT_RECORD_ID,
   INPUT_PROC_NAME,
   INPUT_FROM_TABLE,
   INPUT_TO_TABLE,
   INPUT_DATA_RANGE,
   INPUT_DATA_BEGIN_TIME,
   INPUT_DATA_END_TIME,
   SYSDATE,
   NULL,
   'RUNNING',
   0,
   0
  );
  COMMIT;

END INSERT_COLLECT_DATA_LOG;


------------

--当这个INPUT_REDO_TIMES大于0并且小于三次的时候
CREATE OR REPLACE PROCEDURE UPDATE_COLLECT_DATA_LOG(
       INPUT_RECORD_ID IN VARCHAR2,
       INPUT_OP_BEGIN_TIME IN DATE,
       INPUT_OP_END_TIME IN DATE,
       INPUT_OP_STATUS IN VARCHAR2,
       INPUT_RECORD_NUM INTEGER,
       INPUT_REDO_TIMES IN INTEGER
)
AS
BEGIN

  /*操作完成后修改日志记录*/
  IF INPUT_OP_BEGIN_TIME IS NOT NULL
  --如果是在过程执行开始时的修改，则改结束时间为空
  THEN
    UPDATE RP_COLLECT_DATA_LOG SET
    OP_BEGIN_TIME = INPUT_OP_BEGIN_TIME,
    OP_END_TIME = NULL,
    OP_STATUS = INPUT_OP_STATUS,
    RECORD_NUM = INPUT_RECORD_NUM,
    REDO_TIMES = INPUT_REDO_TIMES
    WHERE RECORD_ID = INPUT_RECORD_ID;

    COMMIT;
  ELSIF INPUT_OP_END_TIME IS NOT NULL
  --如果是在过程执行结束时的修改，则不修改开始时间
  THEN
    UPDATE RP_COLLECT_DATA_LOG SET
    --OP_BEGIN_TIME = INPUT_OP_BEGIN_TIME,
    OP_END_TIME = INPUT_OP_END_TIME,
    OP_STATUS = INPUT_OP_STATUS,
    RECORD_NUM = INPUT_RECORD_NUM,
    REDO_TIMES = INPUT_REDO_TIMES
    WHERE RECORD_ID = INPUT_RECORD_ID;

    COMMIT;
  END IF;

END UPDATE_COLLECT_DATA_LOG;


------------

汇总从小时为粒度到年的所有汇总 ，然后再执行一些 汇总procedure 
CREATE OR REPLACE PROCEDURE JOB_BATCH_TRANSFOR_DATA
AS
  /*今天的凌晨做操作，传入昨天的日期,统计昨天的数据*/

 VAR_YESTERDAY VARCHAR2(20);
 VAR_RECORD_ID  VARCHAR2(30);
 VAR_RECORD_NUM NUMBER;

--AUTHOR:毛小明
--批处理 小时到天 天到周。。。批量处理
BEGIN
  VAR_RECORD_NUM := 0;

   /*插入日志*/

    --首次执行的开始，插入数据
   INSERT_COLLECT_DATA_LOG(
    VAR_RECORD_ID,        --RECORD_ID 将来会返回主键，用于修改日志操作
    'JOB_BATCH_TRANSFOR_DATA', --PROC_NAME 存储过程名称
    'JOB_BATCH_TRANSFOR_DATA',  --FROM_TABLE 来源表
    'JOB_BATCH_TRANSFOR_DATA',  --TO_TABLE 目标表
    TO_CHAR(SYSDATE - 1 ,'YYYY-MM-DD'),        --DATA_RANGE 数据范围
    TO_CHAR(SYSDATE - 1 ,'YYYY-MM-DD'),        --DATA_BEGIN_TIME 数据开始时间
    TO_CHAR(SYSDATE - 1 ,'YYYY-MM-DD')          --DATA_END_TIME 数据开始时间
  );

  /*今天的凌晨做操作，传入今天的日期,统计昨天的数据*/
  VAR_YESTERDAY := TO_CHAR(SYSDATE ,'YYYY-MM-DD');
 --VAR_YESTERDAY := '2013-06-01';--CESHI
  BATCH_TRANSFOR_DATA(VAR_YESTERDAY,0,0);


  /*操作成功后修改日志记录*/
  UPDATE_COLLECT_DATA_LOG(
    VAR_RECORD_ID,
    NULL,
    SYSDATE,
    'SUCCESSFUL',
    VAR_RECORD_NUM,
    0
  );
    GET_DATA_2_AUTH_M_AND_RE_CC;  ------------------各省用户数量及报警情况总览表
     GET_DATA_2_CLI_BEHA_ALS_CC; -------------客户行为分析报表
     GET_DATA_2_FIXDATE_SOLOLINE_T;
     GET_DATA_2_DEVICE_RISK_I_B;
     GET_DATA_2_PRO_INFORMAT_B;


  EXCEPTION
     WHEN OTHERS
     THEN
         /*操作失败后修改日志记录*/
        UPDATE_COLLECT_DATA_LOG(
           VAR_RECORD_ID,
           NULL,
           SYSDATE,
           'FAILED',
           VAR_RECORD_NUM,
           0
         );

       RETURN;

END JOB_BATCH_TRANSFOR_DATA;


------------

如果是此条数据第一次用（INPUT_REDO_TIMES = 0），那么就往日志表里面插数据，如果超过一次那么就去日志表里面更新这表数据
同时还执行get_data_from_day_2_month, get_data_from_day_2_week, get_data_from_halfyear_2_year, get_data_from_hour_2_day, 
CREATE OR REPLACE PROCEDURE BATCH_TRANSFOR_DATA(
      INPUT_TODAY IN VARCHAR2,
      INPUT_RECORD_ID IN VARCHAR2,
      INPUT_REDO_TIMES IN INTEGER
)
AS
 VAR_INT_FLAG INTEGER ;--标示
 VAR_SYSTIME VARCHAR(30);--系统时间
 VAR_TOTAL_RECORD_ID VARCHAR(30);--用作汇总时的日志参数
 VAR_TOTAL_REDO_TIME INTEGER;--用作汇总时的日志参数
 VAR_MAX_TIME VARCHAR(20);--当前汇总的表里的最大时间
 OP_STATUS VARCHAR(5) ;--当前时间段的汇总的状态
 STATUS_TIMES_ID VARCHAR(30);--返回的执行次数 ID已经当前状态
 /*传入今天的日期,统计今天的数据*/
 /*凌晨进行数据的转换与统计*/

 --天--
 VAR_TODAY VARCHAR2(20);
 VAR_TODAY_DATE DATE;
 --明天的日期
 VAR_TOMORROW_DATE DATE;

 --周
 --今天是周几
 VAR_TOMORROW_NUM_OF_WEEK VARCHAR2(20);
 /*上周一的开始时间*/
 VAR_BEGIN_OF_THIS_WEEK VARCHAR2(20);

 --月
 VAR_TOMORROW_DAY VARCHAR2(20);
 VAR_TOMORROW_MONTH_DAY VARCHAR2(20);
 VAR_BEGIN_OF_THIS_MONTH VARCHAR2(20);

 --季度
 VAR_TODAY_QUARTER VARCHAR2(20);
 VAR_TOMORROW_QUARTER VARCHAR2(20);
 /*上个季度的开始时间*/
 VAR_BEGIN_OF_THIS_QUARTER VARCHAR2(20);

 --半年
 /*上个半年的开始时间*/
 VAR_BEGIN_OF_THIS_HALF_YEAR VARCHAR2(20);

 --年
 /*今天的年份*/
 VAR_TODAY_YEAR VARCHAR2(4);

 --日志表的主键
 VAR_RECORD_ID  VARCHAR2(30);
 --受影响的记录数
 VAR_RECORD_NUM NUMBER;
--AUTHOR :毛小明
BEGIN
   /*获取系统最大时间*/
  VAR_SYSTIME := SUBSTR(GET_MIN_EVENT_TIME,0,10);
  VAR_RECORD_NUM := 0;

  --处理参数过长
  IF LENGTH(INPUT_TODAY) > 10
      THEN
       VAR_TODAY := SUBSTR(INPUT_TODAY,1,10);
  ELSE
       VAR_TODAY := INPUT_TODAY;
  END IF;

   /*插入日志*/

   --判断是否为重做
  IF INPUT_REDO_TIMES = 0
  THEN
  INSERT_COLLECT_DATA_LOG(
    VAR_RECORD_ID,        --RECORD_ID 将来会返回主键，用于修改日志操作
    'BATCH_TRANSFOR_DATA', --PROC_NAME 存储过程名称
    'BATCH_TRANSFOR_DATA',  --FROM_TABLE 来源表
    'BATCH_TRANSFOR_DATA',  --TO_TABLE 目标表
    VAR_TODAY,        --DATA_RANGE 数据范围
    VAR_TODAY,        --DATA_BEGIN_TIME 数据开始时间
    VAR_TODAY          --DATA_END_TIME 数据开始时间
  );
  ELSE
  --重复执行的开始，修改数据
    VAR_RECORD_ID := INPUT_RECORD_ID;
    UPDATE_COLLECT_DATA_LOG(
        VAR_RECORD_ID,
        SYSDATE,
        NULL,
        'RUNNING',
        VAR_RECORD_NUM,
        INPUT_REDO_TIMES
    );
  END IF;

  --今天的日期
  VAR_TODAY_DATE := TO_DATE(VAR_TODAY,'YYYY-MM-DD');
  VAR_TOMORROW_DATE := VAR_TODAY_DATE + 1;

  /*=====================================每天晚上的数据汇总开始=====================================*/

  --=============日报数据的汇总=============
  --今天的日期(日报汇总)
 SELECT CASE  WHEN MAX(t.trans_time) IS NULL
  THEN VAR_SYSTIME ELSE
  TO_CHAR(MAX(t.trans_time+(1)),'yyyy-mm-dd') END
  INTO VAR_MAX_TIME
  FROM rp_trans_log_day t WHERE T.TRANS_TIME > SYSDATE - 3;
  --从上次成功汇总到本次汇总中间遗漏的操作循环执行
  while
  to_date(VAR_MAX_TIME,'YYYY-MM-DD') <  to_date(VAR_TODAY,'YYYY-MM-DD')
  LOOP
    STATUS_TIMES_ID := GET_RECORD_ID_AND_REDO_TIME(VAR_MAX_TIME,'GET_DATA_FROM_HOUR_2_DAY');
    VAR_TOTAL_REDO_TIME := TO_NUMBER(SUBSTR(STATUS_TIMES_ID,2,2));
    VAR_TOTAL_RECORD_ID := SUBSTR(STATUS_TIMES_ID,4,length(STATUS_TIMES_ID));
    OP_STATUS := SUBSTR(STATUS_TIMES_ID,1,1);

    IF VAR_TOTAL_REDO_TIME < 3 AND OP_STATUS != 'R'   THEN
       get_data_from_hour_2_day(VAR_MAX_TIME,VAR_TOTAL_RECORD_ID,VAR_TOTAL_REDO_TIME+1);
    END IF;
    VAR_MAX_TIME := TO_CHAR(TO_DATE(VAR_MAX_TIME,'YYYY-MM-DD')+(1),'YYYY-MM-DD');
  END LOOP;




   --=============周报数据的汇总=============
  --获取周报表中最大周的周一的日期
  VAR_MAX_TIME := GET_MAX_WEEK_BEGIN_TIME ;
  while
               to_date(VAR_MAX_TIME,'YYYY-MM-DD')+13 <  to_date(VAR_TODAY,'YYYY-MM-DD')

  LOOP
    STATUS_TIMES_ID := GET_RECORD_ID_AND_REDO_TIME(TO_CHAR(TO_DATE(VAR_MAX_TIME,'YYYY-MM-DD')+7,'YYYY-MM-DD'),'GET_DATA_FROM_DAY_2_WEEK');
    VAR_TOTAL_REDO_TIME := TO_NUMBER(SUBSTR(STATUS_TIMES_ID,2,2));
    VAR_TOTAL_RECORD_ID := SUBSTR(STATUS_TIMES_ID,4,length(STATUS_TIMES_ID));
    OP_STATUS := SUBSTR(STATUS_TIMES_ID,1,1);

    IF VAR_TOTAL_REDO_TIME < 3 AND OP_STATUS != 'R'   THEN
     get_data_from_day_2_week(
     TO_CHAR(TO_DATE(VAR_MAX_TIME,'YYYY-MM-DD')+7,'YYYY-MM-DD'),
     TO_CHAR(TO_DATE(VAR_MAX_TIME,'YYYY-MM-DD')+13,'YYYY-MM-DD'),
     VAR_TOTAL_RECORD_ID,VAR_TOTAL_REDO_TIME+1
     );
  END IF;
    VAR_MAX_TIME := TO_CHAR(TO_DATE(VAR_MAX_TIME,'YYYY-MM-DD')+(7),'YYYY-MM-DD');
  END LOOP;

  --月汇总表里的最大日期
  SELECT CASE  WHEN MAX(t.trans_time) IS NULL
  THEN SUBSTR(VAR_SYSTIME,0,7) ELSE
  TO_CHAR(MAX(t.trans_time+40),'yyyy-mm') END
  INTO VAR_MAX_TIME
  FROM rp_trans_log_month t
  WHERE T.TRANS_TIME > SYSDATE -100;
  while
  to_date(VAR_MAX_TIME,'YYYY-MM') <  to_date(to_char(to_date(VAR_TODAY,'YYYY-MM-DD'),'YYYY-MM'),'YYYY-MM')
  LOOP
    STATUS_TIMES_ID := GET_RECORD_ID_AND_REDO_TIME(VAR_MAX_TIME,'GET_DATA_FROM_DAY_2_MONTH');
    VAR_TOTAL_REDO_TIME := TO_NUMBER(SUBSTR(STATUS_TIMES_ID,2,2));
    VAR_TOTAL_RECORD_ID := SUBSTR(STATUS_TIMES_ID,4,length(STATUS_TIMES_ID));
    OP_STATUS := SUBSTR(STATUS_TIMES_ID,1,1);

  IF VAR_TOTAL_REDO_TIME < 3 AND OP_STATUS != 'R'   THEN
  get_data_from_day_2_month(
    TO_CHAR(TO_DATE(VAR_MAX_TIME,'YYYY-MM'),'YYYY-MM-DD'),
    TO_CHAR(TO_DATE(TO_CHAR(TO_DATE(VAR_MAX_TIME,'YYYY-MM')+40,'YYYY-MM'),'YYYY-MM')-1,'YYYY-MM-DD'),
    VAR_TOTAL_RECORD_ID,
    VAR_TOTAL_REDO_TIME+1
    );
   END IF;
  VAR_MAX_TIME := TO_CHAR(TO_DATE(VAR_MAX_TIME,'YYYY-MM')+40,'YYYY-MM');
  END LOOP;

  --=============季度报数据的汇总=============
  VAR_INT_FLAG := TO_NUMBER(SUBSTR(GET_MAX_QUARTER_NUMBER,5,6));
  IF VAR_INT_FLAG <=3 THEN
  VAR_MAX_TIME := SUBSTR(GET_MAX_QUARTER_NUMBER,0,4) || '-0' || TO_CHAR(VAR_INT_FLAG*3);
  ELSE
  VAR_MAX_TIME := SUBSTR(GET_MAX_QUARTER_NUMBER,0,4) || '-' || TO_CHAR(VAR_INT_FLAG*3);
  END IF;
  while
  to_date(VAR_MAX_TIME,'YYYY-MM') <  to_date(to_char(to_date(VAR_TODAY,'YYYY-MM-DD'),'YYYY-MM'),'YYYY-MM')
  LOOP
  STATUS_TIMES_ID := GET_RECORD_ID_AND_REDO_TIME(TO_CHAR(TO_DATE(VAR_MAX_TIME,'YYYY-MM')-40,'YYYY-MM'),'GET_DATA_FROM_MONTH_2_QUARTER');
    VAR_TOTAL_REDO_TIME := TO_NUMBER(SUBSTR(STATUS_TIMES_ID,2,2));
    VAR_TOTAL_RECORD_ID := SUBSTR(STATUS_TIMES_ID,4,length(STATUS_TIMES_ID));
    OP_STATUS := SUBSTR(STATUS_TIMES_ID,1,1);

  IF VAR_TOTAL_REDO_TIME < 3 AND OP_STATUS != 'R'   THEN
  get_data_from_month_2_quarter(
    TO_CHAR(TO_DATE(VAR_MAX_TIME,'YYYY-MM')-40,'YYYY-MM'),
    VAR_MAX_TIME,
    VAR_TOTAL_RECORD_ID,
    VAR_TOTAL_REDO_TIME+1
    );
   END IF;
  VAR_MAX_TIME := TO_CHAR(TO_DATE(VAR_MAX_TIME,'YYYY-MM')+100,'YYYY-MM');
  END LOOP;
  --=============半年报数据的汇总=============
  VAR_MAX_TIME := GET_MAX_HALFYEAR_NUMBER;
  VAR_INT_FLAG := TO_NUMBER(SUBSTR(VAR_MAX_TIME,6,2));
  IF VAR_INT_FLAG = 1 THEN
  VAR_MAX_TIME := SUBSTR(VAR_MAX_TIME,0,4) || '-0' ||TO_CHAR(VAR_INT_FLAG*6);
  else
  VAR_MAX_TIME := SUBSTR(VAR_MAX_TIME,0,4) || '-' ||TO_CHAR(VAR_INT_FLAG*6);
  END IF;
   while
       to_date(VAR_MAX_TIME,'YYYY-MM') <  to_date(to_char(to_date(VAR_TODAY,'YYYY-MM-DD'),'YYYY-MM'),'YYYY-MM')
  LOOP
    STATUS_TIMES_ID :=  GET_RECORD_ID_AND_REDO_TIME(TO_CHAR(TO_DATE(VAR_MAX_TIME,'YYYY-MM')-150,'YYYY-MM'),'GET_DATA_FROM_MONTH_2_HALFYEAR');
    VAR_TOTAL_REDO_TIME := TO_NUMBER(SUBSTR(STATUS_TIMES_ID,2,2));
    VAR_TOTAL_RECORD_ID := SUBSTR(STATUS_TIMES_ID,4,length(STATUS_TIMES_ID));
    OP_STATUS := SUBSTR(STATUS_TIMES_ID,1,1);

    IF VAR_TOTAL_REDO_TIME < 3 AND OP_STATUS != 'R'   THEN
      get_data_from_month_2_halfyear(
        TO_CHAR(TO_DATE(VAR_MAX_TIME,'YYYY-MM')-150,'YYYY-MM'),
        VAR_MAX_TIME,
        VAR_TOTAL_RECORD_ID,
        VAR_TOTAL_REDO_TIME+1
        );
     END IF;
     VAR_MAX_TIME := TO_CHAR(TO_DATE(VAR_MAX_TIME,'YYYY-MM')+200,'YYYY-MM');
  END LOOP;

  --=============年报数据的汇总=============
  SELECT CASE  WHEN MAX(t.trans_time) IS NULL THEN SUBSTR(VAR_SYSTIME,0,4) ELSE
  TO_CHAR(MAX(t.trans_time+1)) END INTO VAR_MAX_TIME FROM rp_trans_log_year t;
  while
    TO_NUMBER(VAR_MAX_TIME) <  TO_NUMBER(SUBSTR(VAR_TODAY,0,4))
  LOOP
    STATUS_TIMES_ID :=  GET_RECORD_ID_AND_REDO_TIME(VAR_MAX_TIME,'GET_DATA_FROM_HALFYEAR_2_YEAR');
    VAR_TOTAL_REDO_TIME := TO_NUMBER(SUBSTR(STATUS_TIMES_ID,2,2));
    VAR_TOTAL_RECORD_ID := SUBSTR(STATUS_TIMES_ID,4,length(STATUS_TIMES_ID));
    OP_STATUS := SUBSTR(STATUS_TIMES_ID,1,1);

    IF VAR_TOTAL_REDO_TIME < 3 AND OP_STATUS != 'R'   THEN
    get_data_from_halfyear_2_year(VAR_MAX_TIME,VAR_TOTAL_RECORD_ID,VAR_TOTAL_REDO_TIME+1);
   END IF;
   VAR_MAX_TIME := TO_CHAR(TO_NUMBER(VAR_MAX_TIME)+1);
  END LOOP;

  /*==================================每天晚上的数据汇总结束========================================*/

  /*操作成功后修改日志记录*/
  UPDATE_COLLECT_DATA_LOG(
    VAR_RECORD_ID,
    NULL,
    SYSDATE,
    'SUCCESSFUL',
    VAR_RECORD_NUM,
    INPUT_REDO_TIMES
  );

  EXCEPTION
     WHEN OTHERS
     THEN
         /*操作失败后修改日志记录*/
         UPDATE_COLLECT_DATA_LOG(
            VAR_RECORD_ID,
            NULL,
            SYSDATE,
            'FAILED',
            VAR_RECORD_NUM,
            INPUT_REDO_TIMES
         );

       RETURN;

END BATCH_TRANSFOR_DATA;


------------

create or replace procedure GET_DATA_2_AUTH_M_AND_RE_CC

 is
 TRANS_TIME DATE;
 TRANS_TIME_ DATE;--交易时间
 TRANS_TIME_MIN_MON DATE;--月报中的最小时间

 CHALLENGE_AUTH_METHOD VARCHAR2(50);--认证方式
 AUTH_TRANS_NUM NUMBER;--认证比数
 AUTH_SUCCESS_TRANS_NUM NUMBER;--成功认证比数
 AUTH_FAILED_TRANS_NUM NUMBER;--失败认证比数
 DEVICE_AUTH_FAILED_TRANS_NUM NUMBER;--绑定设备认证失败交易比数
 AUTH_FALIED_DEVICE_NUM NUMBER;--认证失败的绑定设备数
 TIME_SCY             DATE;--用于循环的时间(取当前时间)
 MAX_TIME              DATE;--本表中的最大时间
 TIME_TODAY            DATE;--当前时间
 VAR_CHAL_AUTH_ME      NUMBER;--CHALLENGE_AUTH_METHOD的个数
 VAR_AUTH_METHOD_AND_RE RP_AUTH_METHOD_AND_RESULT%ROWTYPE;
 CCC_SMS_Q    VARCHAR2(50);
 VAR_NULL     NUMBER;
 VAR_RECORD_ID  VARCHAR2(30);--log日志主键


begin

    SELECT MAX(T.TRANS_TIME) INTO TRANS_TIME_ FROM RP_TRANS_LOG_MONTH T;
    SELECT min(T.TRANS_TIME) INTO TRANS_TIME_MIN_MON FROM RP_TRANS_LOG_MONTH T;
     SELECT max(T.TRANS_TIME) INTO  MAX_TIME FROM  RP_AUTH_METHOD_AND_RESULT T;

    IF   TRANS_TIME_ IS NOT NULL AND MAX_TIME IS NULL THEN

      WHILE TRANS_TIME_MIN_MON < to_date(SUBSTR(to_char(sysdate,'yyyy/mm/dd'),1,8)||'01','yyyy/mm/dd')
        LOOP
          ----------------------------------------------------------------------------------


            VAR_CHAL_AUTH_ME := 1;
         WHILE
           VAR_CHAL_AUTH_ME < 4

          LOOP
           SELECT GET_LINE_BY_NUM(VAR_CHAL_AUTH_ME) INTO CCC_SMS_Q FROM DUAL;

           SELECT COUNT(*) INTO VAR_NULL FROM RP_TRANS_LOG_MONTH T WHERE  T.TRANS_TIME = TRANS_TIME_MIN_MON AND T.CHALLENGE_AUTH_METHOD = CCC_SMS_Q;


           IF VAR_NULL > 0  THEN

              INSERT INTO RP_AUTH_METHOD_AND_RESULT(

               TRANS_TIME,
               CHALLENGE_AUTH_METHOD,
               AUTH_TRANS_NUM,
               AUTH_SUCCESS_TRANS_NUM,
               AUTH_FAILED_TRANS_NUM,
               DEVICE_AUTH_FAILED_TRANS_NUM,
               AUTH_FALIED_DEVICE_NUM
              )
              SELECT * FROM(
              SELECT
                T.TRANS_TIME as TRANS_TIME,
               T.CHALLENGE_AUTH_METHOD as CHALLENGE_AUTH_METHOD,
               sum(T.trans_num) AS AUTH_TRANS_NUM,
               sum(case T.CHALLENGE_SUCCESSFUL
                   when 'Y' then
                    T.trans_num
                   else
                    0
                 end) as AUTH_SUCCESS_TRANS_NUM,
                  sum(case T.CHALLENGE_SUCCESSFUL
                   when 'N' then
                    T.trans_num
                   else
                    0
                 end) as AUTH_FAILED_TRANS_NUM,
                 sum(case when T.CHALLENGE_SUCCESSFUL = 'N'
                               and IS_USE_DEVICE ='Y'
                          then T.trans_num
                          else 0
                  end) as DEVICE_AUTH_FAILED_TRANS_NUM ,
                  COUNT(C.DEVICE_ID) AS  AUTH_FALIED_DEVICE_NUM

                 FROM  RP_TRANS_LOG_MONTH T ,RP_CHALLENGE_FAIL_BD_DEVICE_ID C
                 WHERE T.CHALLENGE_AUTH_METHOD=C.CHALLENGE_AUTH_METHOD(+)
                       AND T.TRANS_TIME = TRANS_TIME_MIN_MON
                        AND C.TRANS_TIME(+) =  T.TRANS_TIME
                        AND T.CHALLENGE_AUTH_METHOD = CCC_SMS_Q
                 group by T.TRANS_TIME ,t.CHALLENGE_AUTH_METHOD
                 order by  t.CHALLENGE_AUTH_METHOD
                  );
                  COMMIT;

                   END IF;
                  VAR_CHAL_AUTH_ME :=VAR_CHAL_AUTH_ME+1;
                  END LOOP;



          TRANS_TIME_MIN_MON := ADD_MONTHS(TRANS_TIME_MIN_MON,1);
        END LOOP;

    ELSE


    select to_date(SUBSTR(to_char(sysdate,'yyyy/mm/dd'),1,8)||'01','yyyy/mm/dd') INTO TIME_SCY from dual;
    select to_date(SUBSTR(to_char(sysdate,'yyyy/mm/dd'),1,8)||'01','yyyy/mm/dd') INTO TIME_TODAY from dual;

          while TIME_SCY >  ADD_MONTHS(TIME_TODAY,-3)
           LOOP

             TIME_SCY := ADD_MONTHS(TIME_SCY,-1);


             IF TIME_SCY <= MAX_TIME THEN

              VAR_CHAL_AUTH_ME := 1;
                 WHILE
                   VAR_CHAL_AUTH_ME < 4

                  LOOP

                   SELECT GET_LINE_BY_NUM(VAR_CHAL_AUTH_ME) INTO CCC_SMS_Q FROM DUAL;
                  -- SELECT min(T.TRANS_TIME) INTO TRANS_TIME_MIN_MON FROM RP_TRANS_LOG_MONTH T where T.POLICY_ACTION = CCC_SMS_Q;
                   SELECT COUNT(*) INTO VAR_NULL FROM RP_TRANS_LOG_MONTH T WHERE  T.TRANS_TIME = TIME_SCY AND T.CHALLENGE_AUTH_METHOD = CCC_SMS_Q;
                   --------------------------------------------------------------------------------

                   IF VAR_NULL > 0  THEN


                    SELECT

                           NVL(T.CHALLENGE_AUTH_METHOD,'NULL') AS CHALLENGE_AUTH_METHOD ,
                           NVL(sum(T.trans_num),0) AS AUTH_TRANS_NUM ,
                           NVL(sum(case T.CHALLENGE_SUCCESSFUL
                               when 'Y' then
                                T.trans_num
                               else
                                0
                             end),0) AS AUTH_SUCCESS_TRANS_NUM ,
                              NVL(sum(case T.CHALLENGE_SUCCESSFUL
                               when 'N' then
                                T.trans_num
                               else
                                0
                             end),0) AS AUTH_FAILED_TRANS_NUM ,
                             NVL(sum(case when T.CHALLENGE_SUCCESSFUL = 'N'
                                           and IS_USE_DEVICE ='Y'
                                      then T.trans_num
                                      else 0
                              end),0) AS DEVICE_AUTH_FAILED_TRANS_NUM,
                              SUM(1) AS AA,
                              NVL(T.TRANS_TIME,Sysdate)

                              INTO VAR_AUTH_METHOD_AND_RE

                              FROM  RP_TRANS_LOG_MONTH T
                               WHERE T.TRANS_TIME = TIME_SCY AND T.CHALLENGE_AUTH_METHOD = CCC_SMS_Q
                               group by T.TRANS_TIME ,t.CHALLENGE_AUTH_METHOD;



                     UPDATE RP_AUTH_METHOD_AND_RESULT T SET
                           T.TRANS_TIME = VAR_AUTH_METHOD_AND_RE.TRANS_TIME,
                           T.CHALLENGE_AUTH_METHOD=VAR_AUTH_METHOD_AND_RE.CHALLENGE_AUTH_METHOD,
                           T.AUTH_TRANS_NUM=VAR_AUTH_METHOD_AND_RE.AUTH_TRANS_NUM,
                           T.AUTH_SUCCESS_TRANS_NUM=VAR_AUTH_METHOD_AND_RE.AUTH_SUCCESS_TRANS_NUM,
                           T.AUTH_FAILED_TRANS_NUM=VAR_AUTH_METHOD_AND_RE.AUTH_FAILED_TRANS_NUM,
                           T.DEVICE_AUTH_FAILED_TRANS_NUM=VAR_AUTH_METHOD_AND_RE.DEVICE_AUTH_FAILED_TRANS_NUM

                           WHERE T.TRANS_TIME = TIME_SCY AND T.CHALLENGE_AUTH_METHOD = CCC_SMS_Q;
                           COMMIT;

                       end if;

                          VAR_CHAL_AUTH_ME :=VAR_CHAL_AUTH_ME+1;
                   END LOOP;


              ELSE

               VAR_CHAL_AUTH_ME := 1;
                 WHILE
                   VAR_CHAL_AUTH_ME < 4

                  LOOP
                   SELECT GET_LINE_BY_NUM(VAR_CHAL_AUTH_ME) INTO CCC_SMS_Q FROM DUAL;

                   SELECT COUNT(*) INTO VAR_NULL FROM RP_TRANS_LOG_MONTH T WHERE  T.TRANS_TIME = TIME_SCY AND T.CHALLENGE_AUTH_METHOD = CCC_SMS_Q;
                   --------------------------------------------------------------------------------

                   IF VAR_NULL > 0  THEN

                      INSERT INTO RP_AUTH_METHOD_AND_RESULT(

                       TRANS_TIME,
                       CHALLENGE_AUTH_METHOD,
                       AUTH_TRANS_NUM,
                       AUTH_SUCCESS_TRANS_NUM,
                       AUTH_FAILED_TRANS_NUM,
                       DEVICE_AUTH_FAILED_TRANS_NUM,
                       AUTH_FALIED_DEVICE_NUM
                      )
                      SELECT * FROM(
                      SELECT
                        T.TRANS_TIME as TRANS_TIME,
                       T.CHALLENGE_AUTH_METHOD as CHALLENGE_AUTH_METHOD,
                       sum(T.trans_num) AS AUTH_TRANS_NUM,
                       sum(case T.CHALLENGE_SUCCESSFUL
                           when 'Y' then
                            T.trans_num
                           else
                            0
                         end) as AUTH_SUCCESS_TRANS_NUM,
                          sum(case T.CHALLENGE_SUCCESSFUL
                           when 'N' then
                            T.trans_num
                           else
                            0
                         end) as AUTH_FAILED_TRANS_NUM,
                         sum(case when T.CHALLENGE_SUCCESSFUL = 'N'
                                       and IS_USE_DEVICE ='Y'
                                  then T.trans_num
                                  else 0
                          end) as DEVICE_AUTH_FAILED_TRANS_NUM ,
                          COUNT(C.DEVICE_ID) AS  AUTH_FALIED_DEVICE_NUM

                         FROM  RP_TRANS_LOG_MONTH T ,RP_CHALLENGE_FAIL_BD_DEVICE_ID C
                         WHERE T.CHALLENGE_AUTH_METHOD=C.CHALLENGE_AUTH_METHOD(+)
                               AND T.TRANS_TIME = TIME_SCY
                                AND C.TRANS_TIME(+) =  T.TRANS_TIME
                                AND T.CHALLENGE_AUTH_METHOD = CCC_SMS_Q
                         group by T.TRANS_TIME ,t.CHALLENGE_AUTH_METHOD
                         order by  t.CHALLENGE_AUTH_METHOD
                          );
                          COMMIT;

                           END IF;
                          VAR_CHAL_AUTH_ME :=VAR_CHAL_AUTH_ME+1;
                          END LOOP;

                          ------------------------------------------------------------------


              ------------------------------------------------------------------

             END IF;


         END LOOP;


       END IF;
 EXCEPTION
           WHEN OTHERS
           THEN
              ROLLBACK;
               /*操作失败后插入日志记录*/
               INSERT_COLLECT_DATA_LOG_4_FIX(
                   VAR_RECORD_ID,        --RECORD_ID 将来会返回主键，用于修改日志操作
                  'GET_DATA_2_AUTH_M_AND_RE_CC', --PROC_NAME 存储过程名称
                  'rp_trans_log_month--RP_CHALLENGE_FAIL_BD_DEVICE_ID',  --FROM_TABLE 来源表
                  '',  --TO_TABLE 目标表
                  SYSDATE,        --DATA_RANGE 数据范围
                  TIME_SCY,        --DATA_BEGIN_TIME 数据开始时间
                  TIME_SCY          --DATA_END_TIME 数据开始时间
                   );

             RETURN;

end GET_DATA_2_AUTH_M_AND_RE_CC;


------------

create or replace procedure GET_DATA_2_CLI_BEHA_ALS_CC--逻辑有些需要进一步处理-----完活

 is
 CUSTOMER_ACTION_ VARCHAR2(50);--客户行为
 TRANS_NUM_ NUMBER;--交易量
 TRANS_PERCENT_ VARCHAR2(10);--交易量百分比
 BROOM_ACTION_NUM_ NUMBER;--调查的行为数量
 BROOM_ACTION_PERCENT_ VARCHAR2(10);--调查的行为百分比
 SYS_FAKE_TRANS_NUM_ NUMBER;--系统标记欺诈交易量
 HUM_FAKE_TRANS_NUM_ NUMBER;--人工标记欺诈交易量
 FAKE_TRANS_NUM_ NUMBER;--欺诈交易量
 FAKE_BROOM_PERCENT_ VARCHAR2(10);--欺诈交易占调查交易百分比
 SYS_REAL_TRANS_NUM_ NUMBER;--系统标记真实交易量
 HUM_REAL_TRANS_NUM_ NUMBER;--人工标记真实交易量
 REAL_TRANS_NUM_ NUMBER;--真实交易量
 SUGGEST_ACTION_NUM_ NUMBER;--建议此行为的规则数量
 AVE_RISK_RANGE_ NUMBER;--平均风险分值
 TRANS_TIME_ DATE;--时间
 TRANS_TIME_MIN_MON date;--月表中的最小时间

 TIME_SCY             DATE;--用于循环的时间(取当前时间)
 MAX_TIME              DATE;--本表中的最大时间
 TIME_TODAY            DATE;--当前时间
 VAR_POLICY_ACTION    NUMBER;--用于循环记数，得到POLICY_ACTION
 var_cyc  number;
 line_val varchar2(50);
  VAR_RP_CLIENT_BEHAVE_ALS RP_CLIENT_BEHAVE_ALS%ROWTYPE;
   VAR_RECORD_ID  VARCHAR2(30);--log日志主键

   VAR_TRANS_NUM  NUMBER;--当月的所有交易量
   VAR_BROOM_ACTION_NUM NUMBER;--当月总体调查总数量
   IS_NULL  NUMBER;--判断是否为空
   VAR_COUNT_IN_ERR NUMBER;--在当月人为介入的数量(错漏报表中的条数)
   VAR_COUNT_IN_ERR_A NUMBER;--在当月人为介入ALOOW的数量(错漏报表中的条数)
   VAR_COUNT_IN_ERR_C NUMBER;--在当月人为介入CHANGELE的数量(错漏报表中的条数)
   VAR_COUNT_IN_ERR_R NUMBER;--在当月人为介入REVIEW的数量(错漏报表中的条数)
   VAR_COUNT_IN_ERR_D NUMBER;--在当月人为介入DENY的数量(错漏报表中的条数)
   VAR_COUNT_IN_ERR_4_USE NUMBER;--在循环中使用到的人为介入的数量
   




begin
  SELECT MAX(T.TRANS_TIME) INTO TRANS_TIME_ FROM RP_TRANS_LOG_MONTH T;
  SELECT min(T.TRANS_TIME) INTO TRANS_TIME_MIN_MON FROM RP_TRANS_LOG_MONTH T;
  
   /*
    IF TRANS_TIME_ IS NULL THEN
       select add_months(to_date(SUBSTR(to_char(sysdate,'yyyy/mm/dd'),1,8)||'01','yyyy/mm/dd'),-1) INTO TRANS_TIME_ from dual;
    END IF;
   */
    SELECT MAX(C.TRANS_TIME) INTO MAX_TIME FROM RP_CLIENT_BEHAVE_ALS C;

    IF TRANS_TIME_ IS NOT NULL AND MAX_TIME IS NULL THEN
      ------------------=========================------------------------------------

       WHILE TRANS_TIME_MIN_MON < to_date(SUBSTR(to_char(sysdate,'yyyy/mm/dd'),1,8)||'01','yyyy/mm/dd')
         LOOP
           SELECT SUM(T.TRANS_NUM) INTO VAR_TRANS_NUM FROM RP_TRANS_LOG_MONTH T WHERE T.TRANS_TIME = TRANS_TIME_MIN_MON;
           SELECT COUNT(*) INTO VAR_COUNT_IN_ERR FROM RP_ERR_LOST_DETAIL T WHERE T.TRANS_TIME = TRANS_TIME_MIN_MON;
           SELECT COUNT(*) INTO VAR_COUNT_IN_ERR_A FROM RP_ERR_LOST_DETAIL T WHERE T.TRANS_TIME = TRANS_TIME_MIN_MON AND T.ERD_BE_STT='ALLOW';
           SELECT COUNT(*) INTO VAR_COUNT_IN_ERR_C FROM RP_ERR_LOST_DETAIL T WHERE T.TRANS_TIME = TRANS_TIME_MIN_MON AND T.ERD_BE_STT='CHALLENGE';
           SELECT COUNT(*) INTO VAR_COUNT_IN_ERR_R FROM RP_ERR_LOST_DETAIL T WHERE T.TRANS_TIME = TRANS_TIME_MIN_MON AND T.ERD_BE_STT='REVIEW';
           SELECT COUNT(*) INTO VAR_COUNT_IN_ERR_D FROM RP_ERR_LOST_DETAIL T WHERE T.TRANS_TIME = TRANS_TIME_MIN_MON AND T.ERD_BE_STT='DENY';
           
            SELECT (SUM(CASE WHEN  T.POLICY_ACTION = 'ALLOW'  THEN SUM(T.TRANS_NUM) ELSE 0 END))
                  + SUM(CASE WHEN  T.POLICY_ACTION = 'CHALLENGE'  THEN SUM(T.TRANS_NUM) ELSE 0 END)
                  + SUM(CASE WHEN  T.POLICY_ACTION = 'REVIEW' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                  + SUM(CASE WHEN  T.POLICY_ACTION = 'DENY'  THEN SUM(T.TRANS_NUM) ELSE 0 END)
                  + VAR_COUNT_IN_ERR
                          INTO    VAR_BROOM_ACTION_NUM
                   FROM  RP_TRANS_LOG_MONTH T 
                               WHERE  T.TRANS_TIME = TRANS_TIME_MIN_MON  GROUP BY T.TRANS_TIME,T.POLICY_ACTION;
           
            VAR_POLICY_ACTION :=4;

                while  VAR_POLICY_ACTION <=7
                 LOOP
                    select VAR_POLICY_ACTION into var_cyc from dual;
                   select  GET_LINE_BY_NUM(var_cyc) into line_val from dual;
                  SELECT COUNT(1) INTO IS_NULL FROM RP_TRANS_LOG_MONTH T WHERE T.POLICY_ACTION =line_val AND T.TRANS_TIME=TRANS_TIME_MIN_MON;
                  IF IS_NULL > 0 THEN
                      select COUNT(DISTINCT(T.RULE_NAME)) into SUGGEST_ACTION_NUM_
                             from RP_TRANS_LOG_MONTH t WHERE T.POLICY_ACTION=line_val AND T.TRIGGERED_NUM>0 AND T.TRANS_TIME =TRANS_TIME_MIN_MON;
                      if line_val = 'ALLOW' then                         
                        VAR_COUNT_IN_ERR_4_USE:=VAR_COUNT_IN_ERR_A;                        
                        end IF ;  
                      if    line_val ='CHALLENGE' then VAR_COUNT_IN_ERR_4_USE:=VAR_COUNT_IN_ERR_C;
                       end if;  
                      if    line_val ='REVIEW' then VAR_COUNT_IN_ERR_4_USE:=VAR_COUNT_IN_ERR_R;
                       end if;  
                      if    line_val ='DENY' then VAR_COUNT_IN_ERR_4_USE:=VAR_COUNT_IN_ERR_D;
                       end if;    

                    INSERT INTO RP_CLIENT_BEHAVE_ALS(

                                CUSTOMER_ACTION ,--客户行为2
                                TRANS_NUM ,--交易量3
                                TRANS_PERCENT,--交易量百分比4
                                BROOM_ACTION_NUM ,--调查的行为数量,--搁置5
                                BROOM_ACTION_PERCENT ,--调查的行为百分比--搁置6
                                SYS_FAKE_TRANS_NUM ,--系统标记欺诈交易量7
                                HUM_FAKE_TRANS_NUM ,--人工标记欺诈交易量,搁置8
                                FAKE_TRANS_NUM ,--欺诈交易量，搁置9
                                FAKE_BROOM_PERCENT ,--欺诈交易占调查交易百分比，搁置10
                                SYS_REAL_TRANS_NUM ,--系统标记真实交易量11
                                HUM_REAL_TRANS_NUM ,--人工标记真实交易量12
                                REAL_TRANS_NUM ,--真实交易量13
                                SUGGEST_ACTION_NUM,--建议此行为的规则数量14
                                AVE_RISK_RANGE, --平均风险分值15
                                 TRANS_TIME,
                                 REAL_TRANS_PER--真实交易占调查交易的百分比

                          )
                         SELECT

                                    max(POLICY_ACTION) AS CUSTOMER_ACTION ,--2交易行为
                                   MAX(SUM(T.TRANS_NUM)) AS TRANS_NUM,--3交易量
                                   NUM_2_PER_UTIL(MAX(SUM(T.TRANS_NUM)),VAR_TRANS_NUM) AS TRANS_PERCENT ,--4交易量百分比
                                   (SUM(CASE WHEN  T.POLICY_ACTION = 'ALLOW'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'CHALLENGE'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'REVIEW' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'DENY'  THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + VAR_COUNT_IN_ERR_4_USE) AS BROOM_ACTION_NUM  ,--5调查的行为数量搁置--CASEMANGER不知怎么生成案例
                                   NUM_2_PER_UTIL((SUM(CASE WHEN  T.POLICY_ACTION = 'ALLOW'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'CHALLENGE'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'REVIEW' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'DENY'  THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + VAR_COUNT_IN_ERR_4_USE) ,VAR_BROOM_ACTION_NUM) as BROOM_ACTION_PERCENT,--搁置--6调查的行为百分比
                                   (SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='N'  THEN sum(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' THEN sum(T.TRANS_NUM) ELSE 0 END)) AS SYS_FAKE_TRANS_NUM,--7系统标记欺诈交易量
                                   (SUM(CASE WHEN T.FLAGGED IS NULL AND T.RESOLUTION='F' THEN SUM(T.TRANS_NUM) ELSE 0 END)) AS HUM_FAKE_TRANS_NUM ,--8人工标记欺诈交易量
                                  (SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='N'  THEN sum(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' THEN sum(T.TRANS_NUM) ELSE 0 END)+
                                            SUM(CASE WHEN T.FLAGGED IS NULL AND T.RESOLUTION='F' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            ) AS FAKE_TRANS_NUM ,--9欺诈交易量
                                   NUM_2_PER_UTIL( SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='N'  THEN sum(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' THEN sum(T.TRANS_NUM) ELSE 0 END)+
                                            SUM(CASE WHEN T.FLAGGED IS NULL AND T.RESOLUTION='F' THEN SUM(T.TRANS_NUM) ELSE 0 END)                                           
                                             ,
                                              SUM(CASE WHEN  T.POLICY_ACTION = 'ALLOW'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'CHALLENGE'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'REVIEW' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'DENY'  THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + VAR_COUNT_IN_ERR_4_USE ) as FAKE_BROOM_PERCENT ,--10欺诈交易占调查交易百分比
                                  ( SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW' AND T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            +SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='Y' AND  T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)) AS SYS_REAL_TRANS_NUM,--11系统标记真实交易量
                                  (SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW'AND T.RESOLUTION = 'G' THEN SUM(T.TRANS_NUM) ELSE 0 END)                                           
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'REVIEW' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END )
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                              ) AS  HUM_REAL_TRANS_NUM,--12人工标记真实交易量
                                  (SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW' AND T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            +SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='Y' AND  T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            +SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW'AND T.RESOLUTION = 'G' THEN SUM(T.TRANS_NUM) ELSE 0 END)                                           
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'REVIEW' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END )
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END) ) as REAL_TRANS_NUM ,--13真实交易量
                                 
                                   SUGGEST_ACTION_NUM_ as SUGGEST_ACTION_NUM,--14
                                   num_worked(MAX(SUM(T.TOTAL_SCORE_RANGE)),MAX(SUM(T.TRANS_NUM)))  as AVE_RISK_RANGE,--15
                                   max(t.trans_time) as TRANS_TIME,
                                    NUM_2_PER_UTIL(SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW' AND T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            +SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='Y' AND  T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            +SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW'AND T.RESOLUTION = 'G' THEN SUM(T.TRANS_NUM) ELSE 0 END)                                           
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'REVIEW' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END )
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END) ,
                                              SUM(CASE WHEN  T.POLICY_ACTION = 'ALLOW'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'CHALLENGE'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'REVIEW' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'DENY'  THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + VAR_COUNT_IN_ERR_4_USE) as REAL_TRANS_PER

                                   FROM  RP_TRANS_LOG_MONTH T
                                   WHERE
                                          T.TRANS_TIME = TRANS_TIME_MIN_MON AND                                       
                                         T.POLICY_ACTION =   line_val                                       
                                   GROUP BY T.TRANS_TIME,T.POLICY_ACTION,T.CHALLENGE_SUCCESSFUL,T.FLAGGED,T.RESOLUTION,T.RULE_NAME ;

                                 END IF;
                                  VAR_POLICY_ACTION := VAR_POLICY_ACTION + 1;
                            END LOOP;
                            TRANS_TIME_MIN_MON := ADD_MONTHS(TRANS_TIME_MIN_MON,1);
         END LOOP;

      -----------------------============================---------------------------------
      ELSE

          select to_date(SUBSTR(to_char(sysdate,'yyyy/mm/dd'),1,8)||'01','yyyy/mm/dd') INTO TIME_SCY from dual;
          select to_date(SUBSTR(to_char(sysdate,'yyyy/mm/dd'),1,8)||'01','yyyy/mm/dd') INTO TIME_TODAY from dual;

          VAR_POLICY_ACTION :=4;

          while TIME_SCY >  ADD_MONTHS(TIME_TODAY,-3)

             LOOP
                TIME_SCY := ADD_MONTHS(TIME_SCY,-1);


               IF TIME_SCY <= MAX_TIME  THEN

               -----------------------------------------------------------------------------------------------------
                  SELECT SUM(T.TRANS_NUM) INTO VAR_TRANS_NUM FROM RP_TRANS_LOG_MONTH T WHERE T.TRANS_TIME = TIME_SCY;


                 SELECT COUNT(*) INTO VAR_COUNT_IN_ERR FROM RP_ERR_LOST_DETAIL T WHERE T.TRANS_TIME = TIME_SCY;
                 SELECT COUNT(*) INTO VAR_COUNT_IN_ERR_A FROM RP_ERR_LOST_DETAIL T WHERE T.TRANS_TIME = TIME_SCY AND T.ERD_BE_STT='ALLOW';
                 SELECT COUNT(*) INTO VAR_COUNT_IN_ERR_C FROM RP_ERR_LOST_DETAIL T WHERE T.TRANS_TIME = TIME_SCY AND T.ERD_BE_STT='CHALLENGE';
                 SELECT COUNT(*) INTO VAR_COUNT_IN_ERR_R FROM RP_ERR_LOST_DETAIL T WHERE T.TRANS_TIME = TIME_SCY AND T.ERD_BE_STT='REVIEW';
                 SELECT COUNT(*) INTO VAR_COUNT_IN_ERR_D FROM RP_ERR_LOST_DETAIL T WHERE T.TRANS_TIME = TIME_SCY AND T.ERD_BE_STT='DENY';
                 
                  SELECT (SUM(CASE WHEN  T.POLICY_ACTION = 'ALLOW'  THEN SUM(T.TRANS_NUM) ELSE 0 END))
                        + SUM(CASE WHEN  T.POLICY_ACTION = 'CHALLENGE'  THEN SUM(T.TRANS_NUM) ELSE 0 END)
                        + SUM(CASE WHEN  T.POLICY_ACTION = 'REVIEW' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                        + SUM(CASE WHEN  T.POLICY_ACTION = 'DENY'  THEN SUM(T.TRANS_NUM) ELSE 0 END)
                        + VAR_COUNT_IN_ERR
                                INTO    VAR_BROOM_ACTION_NUM
                         FROM  RP_TRANS_LOG_MONTH T 
                                     WHERE  T.TRANS_TIME = TIME_SCY  GROUP BY T.TRANS_TIME,T.POLICY_ACTION;
                       --------------------------------------------------------------------------------------------------------


                 while  VAR_POLICY_ACTION <=7
                 LOOP

                   select VAR_POLICY_ACTION into var_cyc from dual;
                   select  GET_LINE_BY_NUM(var_cyc) into line_val from dual;
                   SELECT COUNT(1) INTO IS_NULL FROM RP_TRANS_LOG_MONTH T WHERE T.POLICY_ACTION =line_val AND T.TRANS_TIME=TIME_SCY;
                  IF IS_NULL > 0 THEN
                    select COUNT(DISTINCT(T.RULE_NAME)) into SUGGEST_ACTION_NUM_
                             from RP_TRANS_LOG_MONTH t WHERE T.POLICY_ACTION=line_val AND T.TRIGGERED_NUM>0 AND T.TRANS_TIME =TIME_SCY;
                      if line_val = 'ALLOW' then                         
                        VAR_COUNT_IN_ERR_4_USE:=VAR_COUNT_IN_ERR_A;                        
                        end IF ;  
                      if    line_val ='CHALLENGE' then VAR_COUNT_IN_ERR_4_USE:=VAR_COUNT_IN_ERR_C;
                       end if;  
                      if    line_val ='REVIEW' then VAR_COUNT_IN_ERR_4_USE:=VAR_COUNT_IN_ERR_R;
                       end if;  
                      if    line_val ='DENY' then VAR_COUNT_IN_ERR_4_USE:=VAR_COUNT_IN_ERR_D;
                       end if;          

                   SELECT

                                    max(POLICY_ACTION) AS CUSTOMER_ACTION ,--2交易行为
                                   MAX(SUM(T.TRANS_NUM)) AS TRANS_NUM,--3交易量
                                   NUM_2_PER_UTIL(MAX(SUM(T.TRANS_NUM)),VAR_TRANS_NUM) AS TRANS_PERCENT ,--4交易量百分比
                                   (SUM(CASE WHEN  T.POLICY_ACTION = 'ALLOW'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'CHALLENGE'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'REVIEW' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'DENY'  THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + VAR_COUNT_IN_ERR_4_USE) AS BROOM_ACTION_NUM  ,--5调查的行为数量搁置--CASEMANGER不知怎么生成案例
                                   NUM_2_PER_UTIL((SUM(CASE WHEN  T.POLICY_ACTION = 'ALLOW'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'CHALLENGE'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'REVIEW' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'DENY'  THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + VAR_COUNT_IN_ERR_4_USE) ,VAR_BROOM_ACTION_NUM) as BROOM_ACTION_PERCENT,--搁置--6调查的行为百分比
                                   (SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='N'  THEN sum(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' THEN sum(T.TRANS_NUM) ELSE 0 END)) AS SYS_FAKE_TRANS_NUM,--7系统标记欺诈交易量
                                   (SUM(CASE WHEN T.FLAGGED IS NULL AND T.RESOLUTION='F' THEN SUM(T.TRANS_NUM) ELSE 0 END)) AS HUM_FAKE_TRANS_NUM ,--8人工标记欺诈交易量
                                  (SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='N'  THEN sum(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' THEN sum(T.TRANS_NUM) ELSE 0 END)+
                                            SUM(CASE WHEN T.FLAGGED IS NULL AND T.RESOLUTION='F' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            ) AS FAKE_TRANS_NUM ,--9欺诈交易量
                                   NUM_2_PER_UTIL( SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='N'  THEN sum(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' THEN sum(T.TRANS_NUM) ELSE 0 END)+
                                            SUM(CASE WHEN T.FLAGGED IS NULL AND T.RESOLUTION='F' THEN SUM(T.TRANS_NUM) ELSE 0 END)                                           
                                             ,
                                              SUM(CASE WHEN  T.POLICY_ACTION = 'ALLOW'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'CHALLENGE'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'REVIEW' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'DENY'  THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + VAR_COUNT_IN_ERR_4_USE ) as FAKE_BROOM_PERCENT ,--10欺诈交易占调查交易百分比
                                  ( SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW' AND T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            +SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='Y' AND  T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)) AS SYS_REAL_TRANS_NUM,--11系统标记真实交易量
                                  (SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW'AND T.RESOLUTION = 'G' THEN SUM(T.TRANS_NUM) ELSE 0 END)                                           
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'REVIEW' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END )
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                              ) AS  HUM_REAL_TRANS_NUM,--12人工标记真实交易量
                                  (SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW' AND T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            +SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='Y' AND  T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            +SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW'AND T.RESOLUTION = 'G' THEN SUM(T.TRANS_NUM) ELSE 0 END)                                           
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'REVIEW' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END )
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END) ) as REAL_TRANS_NUM ,--13真实交易量
                                 
                                   SUGGEST_ACTION_NUM_ as SUGGEST_ACTION_NUM,--14
                                   num_worked(MAX(SUM(T.TOTAL_SCORE_RANGE)),MAX(SUM(T.TRANS_NUM)))  as AVE_RISK_RANGE,--15
                                   max(t.trans_time) as TRANS_TIME,
                                    NUM_2_PER_UTIL(SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW' AND T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            +SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='Y' AND  T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            +SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW'AND T.RESOLUTION = 'G' THEN SUM(T.TRANS_NUM) ELSE 0 END)                                           
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'REVIEW' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END )
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END) ,
                                              SUM(CASE WHEN  T.POLICY_ACTION = 'ALLOW'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'CHALLENGE'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'REVIEW' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'DENY'  THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + VAR_COUNT_IN_ERR_4_USE) as REAL_TRANS_PER

                                 into VAR_RP_CLIENT_BEHAVE_ALS


                               FROM  RP_TRANS_LOG_MONTH T 
                               WHERE
                                      T.TRANS_TIME = TIME_SCY AND
                                     T.POLICY_ACTION =   line_val
                               GROUP BY T.TRANS_TIME,T.POLICY_ACTION,T.CHALLENGE_SUCCESSFUL,T.FLAGGED,T.RESOLUTION,T.RULE_NAME;

                         UPDATE  RP_CLIENT_BEHAVE_ALS T SET
                               --  T.CUSTOMER_ACTION=CUSTOMER_ACTION_ ,--客户行为2
                                 T.TRANS_NUM=VAR_RP_CLIENT_BEHAVE_ALS.Trans_Num ,--交易量3
                                 T.TRANS_PERCENT=VAR_RP_CLIENT_BEHAVE_ALS.Trans_Percent,--交易量百分比4
                                 T.BROOM_ACTION_NUM=VAR_RP_CLIENT_BEHAVE_ALS.Broom_Action_Num ,--调查的行为数量,--搁置5
                                 T.BROOM_ACTION_PERCENT=VAR_RP_CLIENT_BEHAVE_ALS.Broom_Action_Percent ,--调查的行为百分比--搁置6
                                 T.SYS_FAKE_TRANS_NUM=VAR_RP_CLIENT_BEHAVE_ALS.Sys_Fake_Trans_Num,--系统标记欺诈交易量7
                                 T.HUM_FAKE_TRANS_NUM=VAR_RP_CLIENT_BEHAVE_ALS.Hum_Fake_Trans_Num,--人工标记欺诈交易量,搁置8
                                 T.FAKE_TRANS_NUM=VAR_RP_CLIENT_BEHAVE_ALS.Fake_Trans_Num ,--欺诈交易量，搁置9
                                 T.FAKE_BROOM_PERCENT=VAR_RP_CLIENT_BEHAVE_ALS.Fake_Broom_Percent ,--欺诈交易占调查交易百分比，搁置10
                                 T.SYS_REAL_TRANS_NUM=VAR_RP_CLIENT_BEHAVE_ALS.Sys_Real_Trans_Num ,--系统标记真实交易量11
                                 T.HUM_REAL_TRANS_NUM=VAR_RP_CLIENT_BEHAVE_ALS.HUM_REAL_TRANS_NUM,--人工标记真实交易量12
                                 T.REAL_TRANS_NUM=VAR_RP_CLIENT_BEHAVE_ALS.REAL_TRANS_NUM ,--真实交易量13
                                 T.SUGGEST_ACTION_NUM=VAR_RP_CLIENT_BEHAVE_ALS.SUGGEST_ACTION_NUM,--建议此行为的规则数量14
                                 T.AVE_RISK_RANGE=VAR_RP_CLIENT_BEHAVE_ALS.AVE_RISK_RANGE ,--平均风险分值15
                                 T.REAL_TRANS_PER = VAR_RP_CLIENT_BEHAVE_ALS.REAL_TRANS_PER
                                 WHERE T.TRANS_TIME = TIME_SCY AND T.CUSTOMER_ACTION =line_val
                                 ;
                                 COMMIT;
                                 END IF;
                                 VAR_POLICY_ACTION := VAR_POLICY_ACTION + 1;

                       END LOOP;


               ELSE
                      VAR_POLICY_ACTION :=4;

                while  VAR_POLICY_ACTION <=7
                 LOOP
                    select VAR_POLICY_ACTION into var_cyc from dual;
                   select  GET_LINE_BY_NUM(var_cyc) into line_val from dual;
                  SELECT COUNT(1) INTO IS_NULL FROM RP_TRANS_LOG_MONTH T WHERE T.POLICY_ACTION =line_val AND T.TRANS_TIME=TIME_SCY;
                  IF IS_NULL > 0 THEN
                      select COUNT(DISTINCT(T.RULE_NAME)) into SUGGEST_ACTION_NUM_
                             from RP_TRANS_LOG_MONTH t WHERE T.POLICY_ACTION=line_val AND T.TRIGGERED_NUM>0 AND T.TRANS_TIME =TIME_SCY;
                       if line_val = 'ALLOW' then                         
                                   VAR_COUNT_IN_ERR_4_USE:=VAR_COUNT_IN_ERR_A;                        
                      end IF ;  
                      if    line_val ='CHALLENGE' then VAR_COUNT_IN_ERR_4_USE:=VAR_COUNT_IN_ERR_C;
                       end if;  
                      if    line_val ='REVIEW' then VAR_COUNT_IN_ERR_4_USE:=VAR_COUNT_IN_ERR_R;
                       end if;  
                      if    line_val ='DENY' then VAR_COUNT_IN_ERR_4_USE:=VAR_COUNT_IN_ERR_D;
                       end if;         

                      INSERT INTO RP_CLIENT_BEHAVE_ALS(

                                CUSTOMER_ACTION ,--客户行为2
                                TRANS_NUM ,--交易量3
                                TRANS_PERCENT,--交易量百分比4
                                BROOM_ACTION_NUM ,--调查的行为数量,--搁置5
                                BROOM_ACTION_PERCENT ,--调查的行为百分比--搁置6
                                SYS_FAKE_TRANS_NUM ,--系统标记欺诈交易量7
                                HUM_FAKE_TRANS_NUM ,--人工标记欺诈交易量,搁置8
                                FAKE_TRANS_NUM ,--欺诈交易量，搁置9
                                FAKE_BROOM_PERCENT ,--欺诈交易占调查交易百分比，搁置10
                                SYS_REAL_TRANS_NUM ,--系统标记真实交易量11
                                HUM_REAL_TRANS_NUM ,--人工标记真实交易量12
                                REAL_TRANS_NUM ,--真实交易量13
                                SUGGEST_ACTION_NUM,--建议此行为的规则数量14
                                AVE_RISK_RANGE, --平均风险分值15
                                 TRANS_TIME,
                                 REAL_TRANS_PER--真实交易占调查交易的百分比

                          )
                         SELECT

                                    max(POLICY_ACTION) AS CUSTOMER_ACTION ,--2交易行为
                                   MAX(SUM(T.TRANS_NUM)) AS TRANS_NUM,--3交易量
                                   NUM_2_PER_UTIL(MAX(SUM(T.TRANS_NUM)),VAR_TRANS_NUM) AS TRANS_PERCENT ,--4交易量百分比
                                   (SUM(CASE WHEN  T.POLICY_ACTION = 'ALLOW'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'CHALLENGE'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'REVIEW' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'DENY'  THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + VAR_COUNT_IN_ERR_4_USE) AS BROOM_ACTION_NUM  ,--5调查的行为数量搁置--CASEMANGER不知怎么生成案例
                                   NUM_2_PER_UTIL((SUM(CASE WHEN  T.POLICY_ACTION = 'ALLOW'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'CHALLENGE'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'REVIEW' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'DENY'  THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + VAR_COUNT_IN_ERR_4_USE) ,VAR_BROOM_ACTION_NUM) as BROOM_ACTION_PERCENT,--搁置--6调查的行为百分比
                                   (SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='N'  THEN sum(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' THEN sum(T.TRANS_NUM) ELSE 0 END)) AS SYS_FAKE_TRANS_NUM,--7系统标记欺诈交易量
                                   (SUM(CASE WHEN T.FLAGGED IS NULL AND T.RESOLUTION='F' THEN SUM(T.TRANS_NUM) ELSE 0 END)) AS HUM_FAKE_TRANS_NUM ,--8人工标记欺诈交易量
                                  (SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='N'  THEN sum(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' THEN sum(T.TRANS_NUM) ELSE 0 END)+
                                            SUM(CASE WHEN T.FLAGGED IS NULL AND T.RESOLUTION='F' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            ) AS FAKE_TRANS_NUM ,--9欺诈交易量
                                   NUM_2_PER_UTIL( SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='N'  THEN sum(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' THEN sum(T.TRANS_NUM) ELSE 0 END)+
                                            SUM(CASE WHEN T.FLAGGED IS NULL AND T.RESOLUTION='F' THEN SUM(T.TRANS_NUM) ELSE 0 END)                                           
                                             ,
                                              SUM(CASE WHEN  T.POLICY_ACTION = 'ALLOW'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'CHALLENGE'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'REVIEW' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'DENY'  THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + VAR_COUNT_IN_ERR_4_USE ) as FAKE_BROOM_PERCENT ,--10欺诈交易占调查交易百分比
                                  ( SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW' AND T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            +SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='Y' AND  T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)) AS SYS_REAL_TRANS_NUM,--11系统标记真实交易量
                                  (SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW'AND T.RESOLUTION = 'G' THEN SUM(T.TRANS_NUM) ELSE 0 END)                                           
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'REVIEW' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END )
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                              ) AS  HUM_REAL_TRANS_NUM,--12人工标记真实交易量
                                  (SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW' AND T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            +SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='Y' AND  T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            +SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW'AND T.RESOLUTION = 'G' THEN SUM(T.TRANS_NUM) ELSE 0 END)                                           
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'REVIEW' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END )
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END) ) as REAL_TRANS_NUM ,--13真实交易量
                                 
                                   SUGGEST_ACTION_NUM_ as SUGGEST_ACTION_NUM,--14
                                   num_worked(MAX(SUM(T.TOTAL_SCORE_RANGE)),MAX(SUM(T.TRANS_NUM)))  as AVE_RISK_RANGE,--15
                                   max(t.trans_time) as TRANS_TIME,
                                    NUM_2_PER_UTIL(SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW' AND T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            +SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.CHALLENGE_SUCCESSFUL ='Y' AND  T.FLAGGED IS NULL THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            +SUM(CASE WHEN T.POLICY_ACTION = 'ALLOW'AND T.RESOLUTION = 'G' THEN SUM(T.TRANS_NUM) ELSE 0 END)                                           
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'CHALLENGE' AND T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'REVIEW' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END )
                                            + SUM(CASE WHEN T.POLICY_ACTION = 'DENY' AND  T.RESOLUTION='G' THEN SUM(T.TRANS_NUM) ELSE 0 END) ,
                                              SUM(CASE WHEN  T.POLICY_ACTION = 'ALLOW'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'CHALLENGE'  THEN SUM(T.TRANS_NUM) ELSE 0 END)                                          
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'REVIEW' THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + SUM(CASE WHEN  T.POLICY_ACTION = 'DENY'  THEN SUM(T.TRANS_NUM) ELSE 0 END)
                                            + VAR_COUNT_IN_ERR_4_USE) as REAL_TRANS_PER

                                   FROM  RP_TRANS_LOG_MONTH T
                                   WHERE
                                          T.TRANS_TIME = TIME_SCY AND                                       
                                         T.POLICY_ACTION =   line_val                                       
                                   GROUP BY T.TRANS_TIME,T.POLICY_ACTION,T.CHALLENGE_SUCCESSFUL,T.FLAGGED,T.RESOLUTION,T.RULE_NAME ;
                                 END IF;
                                  VAR_POLICY_ACTION := VAR_POLICY_ACTION + 1;
                            END LOOP;

               END IF;
             END LOOP;
          END IF;
    EXCEPTION
           WHEN OTHERS
           THEN
              ROLLBACK;
               /*操作失败后插入日志记录*/
               INSERT_COLLECT_DATA_LOG_4_FIX(
                   VAR_RECORD_ID,        --RECORD_ID 将来会返回主键，用于修改日志操作
                  'GET_DATA_2_CLI_BEHA_ALS_CC', --PROC_NAME 存储过程名称
                  'rp_trans_log_month--',  --FROM_TABLE 来源表
                  '',  --TO_TABLE 目标表
                  SYSDATE,        --DATA_RANGE 数据范围
                  TIME_SCY,        --DATA_BEGIN_TIME 数据开始时间
                  TIME_SCY          --DATA_END_TIME 数据开始时间
                   );

             RETURN;


end GET_DATA_2_CLI_BEHA_ALS_CC;


------------

CREATE OR REPLACE PROCEDURE GET_DATA_2_FIXDATE_SOLOLINE_T
AS
  F_S_TRANS_TIME DATE;--交易时间
  ARN_TRANS_ALL_NUM VARCHAR2(50);--总交易量
  ARN_ALLO_NUM VARCHAR2(50);--ALLOW交易量
  ARN_REVI_NUM VARCHAR2(50);--REVIEW交易量
  ARN_CHAL_NUM VARCHAR2(50);--CHALLENGE交易量
  ARN_DENY_NUM VARCHAR2(50);--DENY交易量
  ARN_ENHAN_SUCC_NUM VARCHAR2(50); --认证成功数量
  ARN_ENHAN_ALL_NUM VARCHAR2(50);--认证总数量
  ARN_ENHAN_FAIL_NUM VARCHAR2(50);--认证失败数量
  ARN_QA_NUM VARCHAR2(50);--QA交易量
  ARN_QA_SUCC_NUM VARCHAR2(50);--QA成功交易量
  ARN_QA_FAIL_NUM VARCHAR2(50);--QA失败交易量
  ARN_CC_NUM VARCHAR2(50);--
  ARN_CC_SUCC_NUM VARCHAR2(50);--
  ARN_CC_FAIL_NUM VARCHAR2(50);--
  ARN_SMS_NUM VARCHAR2(50);--
  ARN_SMS_SUCC_NUM VARCHAR2(50);--
  ARN_SMS_FAIL_NUM VARCHAR2(50);--
  ARN_BIND_FAIL_TRANS VARCHAR2(50);--
  ARN_FAIL_BIND_MAC VARCHAR2(50);--
  ARN_AVG_VAL VARCHAR2(50);---
  V_CMI_BIND_MAC_NUM number;--
  CMI_PC_BIND_NUM VARCHAR2(50);--
  CMI_MOBI_BIND_NUM VARCHAR2(50);--
  CMI_BIND_CST_NUM VARCHAR2(50);--
  CMI_UNBIND_CST_NUM VARCHAR2(50);--
  CUT_WEB_USR_NUM VARCHAR2(50);--
  CUT_MOBI_USR_NUM VARCHAR2(50);--
  CUT_IPAD_USR_NUM VARCHAR2(50);--
  CUT_WEB_TRANS_NUM VARCHAR2(50);--
  CUT_MOBI_TRANS_NUM VARCHAR2(50);--
  CUT_IPAD_TRANS_NUM VARCHAR2(50);--
  CUT_ALL_TRANS_NUM VARCHAR2(50);--
  NRU_QA_REG_NUM VARCHAR2(50);--
  NRU_QA_REG_PER VARCHAR2(50);--
  NRU_SMS_REG_NUM VARCHAR2(50);--
  NRU_SMS_REG_PER VARCHAR2(50);--
  NRU_CC_REG_NUM VARCHAR2(50);--
  NRU_CC_REG_PER VARCHAR2(50);--
  NRU_QA_RES_NUM VARCHAR2(50);--
  NRU_QA_RES_PER VARCHAR2(50);--
  NRU_CST_DOC_NUM VARCHAR2(50);--
  ALL_USER_NUM NUMBER;--VARCHAR2(50);------------辅助(所有的去重用户)
  ALL_IP_NUM NUMBER;--VARCHAR2(50);--
  ALL_ADDR_NUM NUMBER;--VARCHAR2(50);--
  ALL_DEVICE_NUM NUMBER;--VARCHAR2(50);--
  TIME_SCY DATE;--用于循环的时间
  MAX_TIME DATE;--表中最大时间
  TIME_TODAY DATE;--当前时间
  VAR_RP_FIXDATE_SOLOLINE RP_FIXDATE_SOLOLINE%ROWTYPE;
   TRANS_TIME_MIN_MON date;--月表中的最小时间
      VAR_RECORD_ID  VARCHAR2(30);--log日志主键
      IS_NULL  NUMBER;
      IS_NULL_2 NUMBER;


 /*
 以上是固定周期单行表数据
  MAX_TRANS_TIME DATE;
 */

BEGIN

 --交易时间
 SELECT MAX(T.TRANS_TIME) INTO F_S_TRANS_TIME FROM RP_TRANS_LOG_MONTH T;

  SELECT min(T.TRANS_TIME) INTO TRANS_TIME_MIN_MON FROM RP_TRANS_LOG_MONTH T;


 select to_date(SUBSTR(to_char(sysdate,'yyyy/mm/dd'),1,8)||'01','yyyy/mm/dd') INTO TIME_SCY from dual;
 select to_date(SUBSTR(to_char(sysdate,'yyyy/mm/dd'),1,8)||'01','yyyy/mm/dd') INTO TIME_TODAY from dual;
 SELECT MAX(TRANS_TIME) INTO MAX_TIME FROM RP_FIXDATE_SOLOLINE ;

 IF F_S_TRANS_TIME IS NOT NULL AND MAX_TIME IS NULL THEN
   WHILE TRANS_TIME_MIN_MON < TIME_TODAY
     LOOP
       ----------------------==============================------------------------

        SELECT COUNT(1) INTO IS_NULL_2 FROM RP_TRANS_LOG_MONTH T WHERE  T.TRANS_TIME = TRANS_TIME_MIN_MON;
                        IF IS_NULL_2 > 0 THEN
                         INSERT INTO RP_FIXDATE_SOLOLINE(
                            TRANS_TIME,--交易时间
                            ARN_TRANS_ALL_NUM,--总交易量
                            ARN_ALLO_NUM,--ALLOW交易量
                            ARN_REVI_NUM,--REVIEW交易量
                            ARN_CHAL_NUM,--CHALLENGE交易量
                            ARN_DENY_NUM,--DENY交易量
                            ARN_ENHAN_SUCC_NUM,--加强认证成功交易量
                            ARN_ENHAN_ALL_NUM,--加强认证交易量
                            ARN_ENHAN_FAIL_NUM,--加强认证失败交易量
                            ARN_QA_NUM,--QA交易量
                            ARN_QA_SUCC_NUM,--QA成功交易量
                            ARN_QA_FAIL_NUM,--QA失败交易量
                            ARN_CC_NUM,--CC交易量
                            ARN_CC_SUCC_NUM,--CC成功交易量
                            ARN_CC_FAIL_NUM,--CC失败交易量
                            ARN_SMS_NUM,--SMS交易量
                            ARN_SMS_SUCC_NUM,--SMS成功交易量
                            ARN_SMS_FAIL_NUM,--SMS失败交易量
                            ARN_BIND_FAIL_TRANS,--绑定设备认证失败交易笔数
                            CUT_WEB_TRANS_NUM,--Web交易用户数
                            CUT_MOBI_TRANS_NUM,--MOBILE交易用户数
                            CUT_IPAD_TRANS_NUM,--IPAD交易用户数
                            NRU_QA_RES_NUM,--重置 QA数量
                            NRU_QA_RES_PER,--重置 QA百分比
                            NRU_QA_REG_NUM,--QA注册数量
                            NRU_QA_REG_PER,--QA注册百分比
                            NRU_SMS_REG_NUM,--SMS注册数量
                            NRU_SMS_REG_PER,--SMS注册百分比
                            NRU_CC_REG_NUM,--CC注册数量
                            NRU_CC_REG_PER,--CC注册百分比
                            ARN_AVG_VAL,--平均风险分值
                            NRU_CST_DOC_NUM,--建立客户档案数量
                            CUT_ALL_TRANS_NUM--总交易量2

                            )
                      SELECT
                       MAX(T.TRANS_TIME),
                       nvl(SUM(T.TRANS_NUM),0) AS ARN_TRANS_ALL_NUM,
                       nvl(SUM(T.ALLOW_TRANS_NUM),0) AS ARN_ALLO_NUM,
                       nvl(SUM(T.REVIEW_TRANS_NUM),0) AS ARN_REVI_NUM,
                       nvl(SUM(T.CHALLENGE_TRANS_NUM),0) AS ARN_CHAL_NUM,
                       nvl(SUM(T.DENY_TRANS_NUM),0) AS ARN_DENY_NUM,
                       SUM(case CHALLENGE_SUCCESSFUL when 'Y' then trans_num else 0 end) AS ARN_ENHAN_SUCC_NUM,
                       SUM(T.TRANS_NUM) AS ARN_ENHAN_ALL_NUM,
                       SUM(case CHALLENGE_SUCCESSFUL when 'N' then trans_num else 0 end) AS ARN_ENHAN_FAIL_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'QUESTION' then trans_num else 0 end) AS ARN_QA_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'QUESTION'and CHALLENGE_SUCCESSFUL = 'Y' then trans_num else 0 end) AS ARN_QA_SUCC_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'QUESTION'and CHALLENGE_SUCCESSFUL = 'N' then trans_num else 0 end) AS ARN_QA_FAIL_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'CCC' then trans_num else 0 end) AS ARN_CC_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'CCC'and CHALLENGE_SUCCESSFUL = 'Y' then trans_num else 0 end) AS ARN_CC_SUCC_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'CCC'and CHALLENGE_SUCCESSFUL = 'N' then trans_num else 0 end) AS ARN_CC_FAIL_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'SMS' then trans_num else 0 end) AS ARN_SMS_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'SMS'and CHALLENGE_SUCCESSFUL = 'Y' then trans_num else 0 end) AS ARN_SMS_SUCC_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'SMS'and CHALLENGE_SUCCESSFUL = 'N' then trans_num else 0 end) AS ARN_SMS_FAIL_NUM,
                       SUM(case  when IS_USE_DEVICE = 'Y' then trans_num else 0 end) AS ARN_BIND_FAIL_TRANS,
                       nvl(SUM(WEB_TRANS_NUM ),0) AS CUT_WEB_TRANS_NUM,
                       nvl(SUM( MOBILE_TRANS_NUM )-SUM(IPAD_TRANS_NUM),0) AS CUT_MOBI_TRANS_NUM,
                       nvl(SUM(IPAD_TRANS_NUM),0) AS CUT_IPAD_TRANS_NUM,
                      '',-- nvl(SUM(REGISTRAR_QA_NUM),0) AS NRU_QA_RES_NUM,--
                      '',-- num_2_per_util(SUM(REGISTRAR_QA_NUM ),SUM( QA_LOGIN_NUM)) AS NRU_QA_RES_PER,

                       nvl(SUM(QA_LOGIN_NUM),0) AS NRU_QA_REG_NUM,
                       num_2_per_util(SUM(QA_LOGIN_NUM),SUM( QA_LOGIN_NUM)+SUM( SMS_LOGIN_NUM )+SUM( CC_LOGIN_NUM )) AS NRU_QA_REG_PER,

                       nvl(SUM( SMS_LOGIN_NUM),0) AS NRU_SMS_REG_NUM,
                       num_2_per_util(SUM( SMS_LOGIN_NUM),SUM( QA_LOGIN_NUM)+SUM( SMS_LOGIN_NUM )+SUM( CC_LOGIN_NUM )) AS NRU_SMS_REG_PER,

                       nvl(SUM( CC_LOGIN_NUM),0) AS NRU_CC_REG_NUM,
                       num_2_per_util(SUM( CC_LOGIN_NUM ),SUM( QA_LOGIN_NUM)+SUM( SMS_LOGIN_NUM )+SUM( CC_LOGIN_NUM )) AS NRU_CC_REG_PER,

                       NUM_WORKED(SUM(TOTAL_SCORE_RANGE),SUM(TRANS_NUM)) AS ARN_AVG_VAL,
                       nvl(SUM(CREATE_CUSTOMR_FILE_NUM),0) AS NRU_CST_DOC_NUM,
                       nvl(SUM(TRANS_NUM),0) AS CUT_ALL_TRANS_NUM

                       FROM  RP_TRANS_LOG_MONTH T WHERE T.TRANS_TIME = TRANS_TIME_MIN_MON ;

                       COMMIT;



                 --所有的去重用户数     
                       
                    SELECT COUNT(distinct T.CUSTOMER_ID)  INTO ALL_USER_NUM  FROM RP_BD_DEVICE_CUSTOMER_ID T WHERE T.TRANS_TIME = TRANS_TIME_MIN_MON ;    
                  --所有的去重ip
                  SELECT COUNT(distinct T.IP_ADDRESS)   INTO ALL_IP_NUM FROM RP_IP_UNIQUE T WHERE T.TRANS_TIME = TRANS_TIME_MIN_MON;

                  --所有的去重交易省份
                  SELECT COUNT(distinct t1.trans_province) INTO ALL_ADDR_NUM FROM  RP_PROVINCE_CUSTOMER_AMOUNT T1 WHERE T1.TRANS_TIME = TRANS_TIME_MIN_MON;


              --所有的去重 DEVICE_id
                SELECT COUNT (distinct K.DEVICE_ID) INTO ALL_DEVICE_NUM  FROM RP_ALL_OF_DEVICE_ID K WHERE K.TRANS_TIME =  TRANS_TIME_MIN_MON ;
                
           --绑定设备总数量
                  SELECT COUNT(DISTINCT K.DEVICE_ID)  INTO V_CMI_BIND_MAC_NUM FROM RP_BD_DEVICE_ID K  WHERE K.TRANS_TIME = TRANS_TIME_MIN_MON;
/*
               --认证失败的绑定设备数量1
                  SELECT COUNT(DISTINCT T.DEVICE_ID) INTO ARN_FAIL_BIND_MAC FROM RP_CHALLENGE_FAIL_BD_DEVICE_ID T WHERE T.TRANS_TIME = TRANS_TIME_MIN_MON;


                 --Web交易用户数
                  SELECT COUNT(DISTINCT K.CUSTOMER_ID ) INTO CUT_WEB_USR_NUM FROM RP_TRANS_DITCH_CUSTOMER_ID K WHERE K.TRANS_DITCH='WEB' AND K.TRANS_TIME = TRANS_TIME_MIN_MON ;
                 --MOBILE交易用户数
                   SELECT COUNT(DISTINCT K.CUSTOMER_ID ) INTO CUT_MOBI_USR_NUM FROM RP_TRANS_DITCH_CUSTOMER_ID K WHERE K.TRANS_DITCH='MOBILE' AND K.TRANS_TIME = TRANS_TIME_MIN_MON ;


                  --IPAD交易用户数
                   SELECT COUNT(DISTINCT K.CUSTOMER_ID ) INTO CUT_IPAD_USR_NUM FROM RP_TRANS_DITCH_CUSTOMER_ID K WHERE K.TRANS_DITCH='IPAD' AND K.TRANS_TIME = TRANS_TIME_MIN_MON ;


                  

                 --PC绑定数量
                      SELECT COUNT(DISTINCT K.DEVICE_ID)  INTO CMI_PC_BIND_NUM FROM RP_BD_DEVICE_ID K  WHERE K.DEVICE_TYPE='WEB' AND K.TRANS_TIME = TRANS_TIME_MIN_MON;

                 --MOBILE绑定数量
                      SELECT COUNT(DISTINCT K.DEVICE_ID)  INTO CMI_MOBI_BIND_NUM FROM RP_BD_DEVICE_ID K  WHERE K.DEVICE_TYPE='MOBILE' AND K.TRANS_TIME = TRANS_TIME_MIN_MON;


                   --绑定设备的客户数               
                   SELECT COUNT(DISTINCT K.CUSTOMER_ID) INTO CMI_BIND_CST_NUM FROM  RP_BD_DEVICE_CUSTOMER_ID K WHERE  K.BOUND_DEVICE_OR_NOT='Y'AND K.TRANS_TIME =  TRANS_TIME_MIN_MON;

                   --未绑定设备的客户数                        
                   SELECT COUNT(DISTINCT K.CUSTOMER_ID) INTO CMI_UNBIND_CST_NUM FROM  RP_BD_DEVICE_CUSTOMER_ID K WHERE  K.BOUND_DEVICE_OR_NOT!='Y'AND K.TRANS_TIME =  TRANS_TIME_MIN_MON;
    */


                     UPDATE RP_FIXDATE_SOLOLINE R SET
                            R.ARN_FAIL_BIND_MAC = (SELECT COUNT(DISTINCT T.DEVICE_ID)  FROM RP_CHALLENGE_FAIL_BD_DEVICE_ID T WHERE T.TRANS_TIME = TRANS_TIME_MIN_MON),--认证失败的绑定设备书
                            R.CCM_CST_IP_NUM = NUM_WORKED(ALL_IP_NUM,ALL_USER_NUM),--每个用户使用的IP地址数量
                            R.CCM_CST_ADDR_NUM = NUM_WORKED(ALL_ADDR_NUM,ALL_USER_NUM),--每个用户登录的地区数量
                            R.CCM_CST_MAC_NUM = NUM_WORKED(ALL_DEVICE_NUM,ALL_USER_NUM),--每个用户拥有的设备数量
                            R.CCM_MAC_IP_NUM = NUM_WORKED(ALL_IP_NUM,ALL_DEVICE_NUM),--每个设备使用的IP地址数量
                            R.CCM_MAC_ADDR_NUM = NUM_WORKED(ALL_DEVICE_NUM,ALL_ADDR_NUM),--每个设备登录的地区数量
                            R.CCM_MAC_CST_NUM = NUM_WORKED(ALL_USER_NUM,ALL_DEVICE_NUM),--每个设备使用的用户数量
                            R.CCM_IP_CST_NUM =NUM_WORKED( ALL_USER_NUM,ALL_IP_NUM),--每个IP地址使用的用户数量
                            R.CCM_ADDR_CST_NUM =NUM_WORKED(ALL_USER_NUM,ALL_ADDR_NUM),--每个地区使用的用户数量
                            R.CCM_IP_MAC_NUM = NUM_WORKED(ALL_DEVICE_NUM,ALL_IP_NUM),--每个IP地址使用的设备数量
                            R.CCM_ADDR_MAC_NUM =NUM_WORKED(ALL_DEVICE_NUM,ALL_ADDR_NUM),--每个地区使用的设备数量
                            R.CUT_USR_NUM =NUM_WORKED( ( SELECT COUNT(distinct T.CUSTOMER_ID) FROM RP_BD_DEVICE_CUSTOMER_ID T WHERE T.TRANS_TIME = TRANS_TIME_MIN_MON  ),1),--总交易用户数
                            R.CUT_WEB_USR_NUM =NUM_WORKED( (SELECT COUNT(DISTINCT K.CUSTOMER_ID )  FROM RP_TRANS_DITCH_CUSTOMER_ID K WHERE K.TRANS_DITCH='WEB' AND K.TRANS_TIME = TRANS_TIME_MIN_MON ),1),--Web交易用户数--
                            R.CUT_MOBI_USR_NUM = NUM_WORKED(( SELECT COUNT(DISTINCT K.CUSTOMER_ID )  FROM RP_TRANS_DITCH_CUSTOMER_ID K WHERE K.TRANS_DITCH='MOBILE' AND K.TRANS_TIME = TRANS_TIME_MIN_MON),1),  --MOBILE交易用户数--
                            R.CUT_IPAD_USR_NUM = NUM_WORKED(( SELECT COUNT(DISTINCT K.CUSTOMER_ID )  FROM RP_TRANS_DITCH_CUSTOMER_ID K WHERE K.TRANS_DITCH='IPAD' AND K.TRANS_TIME = TRANS_TIME_MIN_MON),1),--IPAD交易用户数--
                            R.CMI_BIND_MAC_NUM =NUM_WORKED((SELECT COUNT(DISTINCT K.DEVICE_ID)   FROM RP_BD_DEVICE_ID K  WHERE K.TRANS_TIME = TRANS_TIME_MIN_MON),1),--绑定设备总数量--
                            R.CMI_PC_BIND_NUM =NUM_WORKED((SELECT COUNT(DISTINCT K.DEVICE_ID)   FROM RP_BD_DEVICE_ID K  WHERE K.DEVICE_TYPE='WEB' AND K.TRANS_TIME = TRANS_TIME_MIN_MON),1),--PC绑定数量--

                             R.CMI_MOBI_BIND_NUM =NUM_WORKED((SELECT COUNT(DISTINCT K.DEVICE_ID)   FROM RP_BD_DEVICE_ID K  WHERE K.DEVICE_TYPE='MOBILE' AND K.TRANS_TIME = TRANS_TIME_MIN_MON),1),--MOBILE绑定数量--
                            R.CMI_BIND_CST_NUM =NUM_WORKED(( SELECT COUNT(distinct K.CUSTOMER_ID) FROM RP_BD_DEVICE_CUSTOMER_ID K  WHERE K.BOUND_DEVICE_OR_NOT='Y'AND K.TRANS_TIME =  TRANS_TIME_MIN_MON),1),--绑定设备的客户数--
                            R.CMI_UNBIND_CST_NUM =NUM_WORKED(( SELECT COUNT(distinct K.CUSTOMER_ID) FROM RP_BD_DEVICE_CUSTOMER_ID K  WHERE K.BOUND_DEVICE_OR_NOT='N'AND K.TRANS_TIME =  TRANS_TIME_MIN_MON),1),--未绑定设备的客户数--
                            R.CMI_AVG_CST_MAC = NUM_WORKED(V_CMI_BIND_MAC_NUM,ALL_USER_NUM)---平均每个客户绑定的设备数
                            WHERE R.TRANS_TIME = TRANS_TIME_MIN_MON;
                            commit;
                         END IF;

       ----------------------==================================------------------------
       TRANS_TIME_MIN_MON:=ADD_MONTHS(TRANS_TIME_MIN_MON,1);
     END LOOP;
 ELSE

             if F_S_TRANS_TIME IS NOT NULL THEN

             while TIME_SCY >  ADD_MONTHS(TIME_TODAY,-3)
             loop
                 TIME_SCY := ADD_MONTHS(TIME_SCY,-1);

                 IF TIME_SCY <= MAX_TIME
                   THEN
                     SELECT COUNT(1) INTO IS_NULL FROM RP_TRANS_LOG_MONTH T WHERE  T.TRANS_TIME = TIME_SCY;
                   if IS_NULL > 0 then
                   --------------------------------
                   SELECT
                                 P.ARN_TRANS_ALL_NUM,--总交易量
                                P.ARN_ALLO_NUM,--ALLOW交易量
                                P.ARN_REVI_NUM,--REVIEW交易量
                                P.ARN_CHAL_NUM,--CHALLENGE交易量
                                 P.ARN_DENY_NUM,--DENY交易量
                                 P.ARN_ENHAN_SUCC_NUM,--加强认证成功交易量
                                 P.ARN_ENHAN_ALL_NUM,--加强认证交易量
                                 P.ARN_ENHAN_FAIL_NUM,--加强认证失败交易量
                                 P.ARN_QA_NUM,--QA交易量
                                 P.ARN_QA_SUCC_NUM,--QA成功交易量
                                 P.ARN_QA_FAIL_NUM,--QA失败交易量
                                 P.ARN_CC_NUM,--CC交易量
                                 P.ARN_CC_SUCC_NUM,--CC成功交易量
                                P. ARN_CC_FAIL_NUM,--CC失败交易量
                                 P.ARN_SMS_NUM,--SMS交易量
                                P. ARN_SMS_SUCC_NUM,--SMS成功交易量
                                 P.ARN_SMS_FAIL_NUM,--SMS失败交易量
                                 P.ARN_BIND_FAIL_TRANS,--绑定设备认证失败交易笔数
                                 'A',
                                   P.ARN_AVG_VAL,--平均风险分值
                                     'A',
                                'A',
                              'A',
                              'A',
                              'A',
                              'A',
                                 P.CUT_WEB_TRANS_NUM,--Web交易用户数
                                 P.CUT_MOBI_TRANS_NUM,--MOBILE交易用户数
                                 P.CUT_IPAD_TRANS_NUM,--IPAD交易用户数
                                   P.CUT_ALL_TRANS_NUM,--总交易量2
                                   'A',
                              'A',
                              'A',
                              'A',

                                 P.NRU_QA_REG_NUM,--QA注册数量
                                P.NRU_QA_REG_PER,--QA注册百分比
                                 P.NRU_SMS_REG_NUM,--SMS注册数量
                                P.NRU_SMS_REG_PER,--SMS注册百分比
                                 P.NRU_CC_REG_NUM,--CC注册数量
                                 P.NRU_CC_REG_PER,--CC注册百分比
                                   '',-- P.NRU_QA_RES_NUM,--重置 QA数量

                                '',-- P.NRU_QA_RES_PER,--重置 QA百分比

                                 P.NRU_CST_DOC_NUM,--建立客户档案数量
                                 'A',
                              'A',
                              'A',
                              'A',
                              'A',
                                'A',
                              'A',
                              'A',
                              'A',
                              'A',
                              P.TRANS_TIME


                             INTO VAR_RP_FIXDATE_SOLOLINE

                    FROM (  SELECT
                               SUM(T.TRANS_NUM) AS  ARN_TRANS_ALL_NUM,--总交易量
                               SUM(T.ALLOW_TRANS_NUM) AS ARN_ALLO_NUM,--ALLOW交易量
                               SUM(T.REVIEW_TRANS_NUM)AS   ARN_REVI_NUM,--REVIEW交易量
                               SUM(T.CHALLENGE_TRANS_NUM) AS  ARN_CHAL_NUM,--CHALLENGE交易量
                               SUM(T.DENY_TRANS_NUM) AS  ARN_DENY_NUM,--DENY交易量
                               SUM(case CHALLENGE_SUCCESSFUL when 'Y' then trans_num else 0 end) AS  ARN_ENHAN_SUCC_NUM,--加强认证成功交易量
                               SUM(T.TRANS_NUM) AS ARN_ENHAN_ALL_NUM,--加强认证交易量
                               SUM(case CHALLENGE_SUCCESSFUL when 'N' then trans_num else 0 end) AS  ARN_ENHAN_FAIL_NUM,--加强认证失败交易量
                               SUM(case  when CHALLENGE_AUTH_METHOD = 'QUESTION' then trans_num else 0 end) AS  ARN_QA_NUM,--QA交易量
                               SUM(case  when CHALLENGE_AUTH_METHOD = 'QUESTION'and CHALLENGE_SUCCESSFUL = 'Y' then trans_num else 0 end) AS ARN_QA_SUCC_NUM,--QA成功交易量
                               SUM(case  when CHALLENGE_AUTH_METHOD = 'QUESTION'and CHALLENGE_SUCCESSFUL = 'N' then trans_num else 0 end) AS  ARN_QA_FAIL_NUM,--QA失败交易量
                               SUM(case  when CHALLENGE_AUTH_METHOD = 'CCC' then trans_num else 0 end) AS  ARN_CC_NUM,--CC交易量
                               SUM(case  when CHALLENGE_AUTH_METHOD = 'CCC'and CHALLENGE_SUCCESSFUL = 'Y' then trans_num else 0 end) AS ARN_CC_SUCC_NUM,--CC成功交易量
                               SUM(case  when CHALLENGE_AUTH_METHOD = 'CCC'and CHALLENGE_SUCCESSFUL = 'N' then trans_num else 0 end) AS ARN_CC_FAIL_NUM,--CC失败交易量
                               SUM(case  when CHALLENGE_AUTH_METHOD = 'SMS' then trans_num else 0 end) AS ARN_SMS_NUM,--SMS交易量
                               SUM(case  when CHALLENGE_AUTH_METHOD = 'SMS'and CHALLENGE_SUCCESSFUL = 'Y' then trans_num else 0 end) AS  ARN_SMS_SUCC_NUM,--SMS成功交易量
                               SUM(case  when CHALLENGE_AUTH_METHOD = 'SMS'and CHALLENGE_SUCCESSFUL = 'N' then trans_num else 0 end) AS  ARN_SMS_FAIL_NUM,--SMS失败交易量
                               SUM(case  when IS_USE_DEVICE = 'Y' then trans_num else 0 end) AS ARN_BIND_FAIL_TRANS,--绑定设备认证失败交易笔数
                               SUM( WEB_TRANS_NUM) AS  CUT_WEB_TRANS_NUM,--Web交易用户数
                               SUM( MOBILE_TRANS_NUM)-SUM( IPAD_TRANS_NUM) AS CUT_MOBI_TRANS_NUM,--MOBILE交易用户数
                               SUM( IPAD_TRANS_NUM) AS CUT_IPAD_TRANS_NUM,--IPAD交易用户数
                              '',-- SUM( REGISTRAR_QA_NUM ) AS NRU_QA_RES_NUM,--重置 QA数量
                              '',-- num_2_per_util(SUM(REGISTRAR_QA_NUM), SUM( QA_LOGIN_NUM )) AS NRU_QA_RES_PER,--重置 QA百分比

                               SUM( QA_LOGIN_NUM ) AS NRU_QA_REG_NUM,--QA注册数量
                               num_2_per_util(SUM( QA_LOGIN_NUM),SUM( QA_LOGIN_NUM)+SUM( SMS_LOGIN_NUM )+SUM( CC_LOGIN_NUM )) AS  NRU_QA_REG_PER,--QA注册百分比

                               SUM(SMS_LOGIN_NUM) AS  NRU_SMS_REG_NUM,--SMS注册数量
                               num_2_per_util(SUM( SMS_LOGIN_NUM ),SUM( QA_LOGIN_NUM)+SUM( SMS_LOGIN_NUM )+SUM( CC_LOGIN_NUM )) AS   NRU_SMS_REG_PER,--SMS注册百分比

                               SUM( CC_LOGIN_NUM) AS NRU_CC_REG_NUM,--CC注册数量
                               num_2_per_util(SUM( CC_LOGIN_NUM ),SUM( QA_LOGIN_NUM)+SUM( SMS_LOGIN_NUM )+SUM( CC_LOGIN_NUM )) AS  NRU_CC_REG_PER,--CC注册百分比

                               NUM_WORKED(SUM(TOTAL_SCORE_RANGE),SUM(TRANS_NUM)) AS ARN_AVG_VAL,--平均风险分值
                               SUM(CREATE_CUSTOMR_FILE_NUM) AS NRU_CST_DOC_NUM,--建立客户档案数量
                               SUM(TRANS_NUM) CUT_ALL_TRANS_NUM,--总交易量2
                               MAX(T.TRANS_TIME) AS TRANS_TIME

                               FROM  RP_TRANS_LOG_MONTH T WHERE T.TRANS_TIME = TIME_SCY ) P    ;


                   ---------------------------------


                   --------------------------------

                      UPDATE RP_FIXDATE_SOLOLINE R SET
                                R.ARN_TRANS_ALL_NUM = VAR_RP_FIXDATE_SOLOLINE.ARN_TRANS_ALL_NUM,--总交易量
                                R.ARN_ALLO_NUM = VAR_RP_FIXDATE_SOLOLINE.ARN_ALLO_NUM,--ALLOW交易量
                                R.ARN_REVI_NUM =VAR_RP_FIXDATE_SOLOLINE.ARN_REVI_NUM ,--REVIEW交易量
                                R.ARN_CHAL_NUM=VAR_RP_FIXDATE_SOLOLINE.ARN_CHAL_NUM,--CHALLENGE交易量
                                R.ARN_DENY_NUM = VAR_RP_FIXDATE_SOLOLINE.ARN_DENY_NUM,--DENY交易量
                                R.ARN_ENHAN_SUCC_NUM = VAR_RP_FIXDATE_SOLOLINE.ARN_ENHAN_SUCC_NUM,--加强认证成功交易量
                                R.ARN_ENHAN_ALL_NUM = VAR_RP_FIXDATE_SOLOLINE.ARN_ENHAN_ALL_NUM,--加强认证交易量
                                 R.ARN_ENHAN_FAIL_NUM= VAR_RP_FIXDATE_SOLOLINE.ARN_ENHAN_FAIL_NUM, --加强认证失败交易量
                                 R.ARN_QA_NUM =VAR_RP_FIXDATE_SOLOLINE.ARN_QA_NUM,--QA交易量
                                R.ARN_QA_SUCC_NUM = VAR_RP_FIXDATE_SOLOLINE.ARN_QA_SUCC_NUM ,--QA成功交易量
                                R.ARN_QA_FAIL_NUM = VAR_RP_FIXDATE_SOLOLINE.ARN_QA_FAIL_NUM,--QA失败交易量
                                R.ARN_CC_NUM = VAR_RP_FIXDATE_SOLOLINE.ARN_CC_NUM,--CC交易量
                                R.ARN_CC_SUCC_NUM = VAR_RP_FIXDATE_SOLOLINE.ARN_CC_SUCC_NUM,--CC成功交易量
                                R.ARN_CC_FAIL_NUM = VAR_RP_FIXDATE_SOLOLINE.ARN_CC_FAIL_NUM,--CC失败交易量
                                R.ARN_SMS_NUM=VAR_RP_FIXDATE_SOLOLINE.ARN_SMS_NUM,--SMS交易量
                                R.ARN_SMS_SUCC_NUM = VAR_RP_FIXDATE_SOLOLINE.ARN_SMS_SUCC_NUM,--SMS成功交易量
                                R.ARN_SMS_FAIL_NUM = VAR_RP_FIXDATE_SOLOLINE.ARN_SMS_FAIL_NUM,--SMS失败交易量
                                R.ARN_BIND_FAIL_TRANS = VAR_RP_FIXDATE_SOLOLINE.ARN_BIND_FAIL_TRANS,--绑定设备认证失败交易笔数
                                 R.CUT_WEB_TRANS_NUM = VAR_RP_FIXDATE_SOLOLINE.CUT_WEB_TRANS_NUM,--Web交易用户数
                                R.CUT_MOBI_TRANS_NUM = VAR_RP_FIXDATE_SOLOLINE.CUT_MOBI_TRANS_NUM,--MOBILE交易用户数
                                R.CUT_IPAD_TRANS_NUM = VAR_RP_FIXDATE_SOLOLINE.CUT_IPAD_TRANS_NUM,--IPAD交易用户数
                               -- R.NRU_QA_RES_NUM = VAR_RP_FIXDATE_SOLOLINE.NRU_QA_RES_NUM,--重置 QA数量
                               -- R.NRU_QA_RES_PER = VAR_RP_FIXDATE_SOLOLINE.NRU_QA_RES_PER,--重置 QA百分比
                                R.NRU_QA_REG_NUM = VAR_RP_FIXDATE_SOLOLINE.NRU_QA_REG_NUM,--QA注册数量
                                R.NRU_QA_REG_PER=VAR_RP_FIXDATE_SOLOLINE.NRU_QA_REG_PER,--QA注册百分比
                                R.NRU_SMS_REG_NUM = VAR_RP_FIXDATE_SOLOLINE.NRU_SMS_REG_NUM,--SMS注册数量
                                R.NRU_SMS_REG_PER = VAR_RP_FIXDATE_SOLOLINE.NRU_SMS_REG_PER,--SMS注册百分比
                                R.NRU_CC_REG_NUM = VAR_RP_FIXDATE_SOLOLINE.NRU_CC_REG_NUM,--CC注册数量
                                 R.NRU_CC_REG_PER = VAR_RP_FIXDATE_SOLOLINE.NRU_CC_REG_PER,--CC注册百分比
                                R.ARN_AVG_VAL = VAR_RP_FIXDATE_SOLOLINE.ARN_AVG_VAL,--平均风险分值
                                R.NRU_CST_DOC_NUM = VAR_RP_FIXDATE_SOLOLINE.NRU_CST_DOC_NUM,--建立客户档案数量
                                R.CUT_ALL_TRANS_NUM = VAR_RP_FIXDATE_SOLOLINE.CUT_ALL_TRANS_NUM--总交易量2

                            WHERE R.TRANS_TIME = TIME_SCY;
                            commit ;
                            end if;

                   ELSE

                        SELECT COUNT(1) INTO IS_NULL_2 FROM RP_TRANS_LOG_MONTH T WHERE  T.TRANS_TIME = TIME_SCY;
                        IF IS_NULL_2 > 0 THEN
                         INSERT INTO RP_FIXDATE_SOLOLINE(
                            TRANS_TIME,--交易时间
                            ARN_TRANS_ALL_NUM,--总交易量
                            ARN_ALLO_NUM,--ALLOW交易量
                            ARN_REVI_NUM,--REVIEW交易量
                            ARN_CHAL_NUM,--CHALLENGE交易量
                            ARN_DENY_NUM,--DENY交易量
                            ARN_ENHAN_SUCC_NUM,--加强认证成功交易量
                            ARN_ENHAN_ALL_NUM,--加强认证交易量
                            ARN_ENHAN_FAIL_NUM,--加强认证失败交易量
                            ARN_QA_NUM,--QA交易量
                            ARN_QA_SUCC_NUM,--QA成功交易量
                            ARN_QA_FAIL_NUM,--QA失败交易量
                            ARN_CC_NUM,--CC交易量
                            ARN_CC_SUCC_NUM,--CC成功交易量
                            ARN_CC_FAIL_NUM,--CC失败交易量
                            ARN_SMS_NUM,--SMS交易量
                            ARN_SMS_SUCC_NUM,--SMS成功交易量
                            ARN_SMS_FAIL_NUM,--SMS失败交易量
                            ARN_BIND_FAIL_TRANS,--绑定设备认证失败交易笔数
                            CUT_WEB_TRANS_NUM,--Web交易用户数
                            CUT_MOBI_TRANS_NUM,--MOBILE交易用户数
                            CUT_IPAD_TRANS_NUM,--IPAD交易用户数
                            NRU_QA_RES_NUM,--重置 QA数量
                            NRU_QA_RES_PER,--重置 QA百分比
                            NRU_QA_REG_NUM,--QA注册数量
                            NRU_QA_REG_PER,--QA注册百分比
                            NRU_SMS_REG_NUM,--SMS注册数量
                            NRU_SMS_REG_PER,--SMS注册百分比
                            NRU_CC_REG_NUM,--CC注册数量
                            NRU_CC_REG_PER,--CC注册百分比
                            ARN_AVG_VAL,--平均风险分值
                            NRU_CST_DOC_NUM,--建立客户档案数量
                            CUT_ALL_TRANS_NUM--总交易量2

                            )
                      SELECT
                       MAX(T.TRANS_TIME),
                       nvl(SUM(T.TRANS_NUM),0) AS ARN_TRANS_ALL_NUM,
                       nvl(SUM(T.ALLOW_TRANS_NUM),0) AS ARN_ALLO_NUM,
                       nvl(SUM(T.REVIEW_TRANS_NUM),0) AS ARN_REVI_NUM,
                       nvl(SUM(T.CHALLENGE_TRANS_NUM),0) AS ARN_CHAL_NUM,
                       nvl(SUM(T.DENY_TRANS_NUM),0) AS ARN_DENY_NUM,
                       SUM(case CHALLENGE_SUCCESSFUL when 'Y' then trans_num else 0 end) AS ARN_ENHAN_SUCC_NUM,
                       SUM(T.TRANS_NUM) AS ARN_ENHAN_ALL_NUM,
                       SUM(case CHALLENGE_SUCCESSFUL when 'N' then trans_num else 0 end) AS ARN_ENHAN_FAIL_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'QUESTION' then trans_num else 0 end) AS ARN_QA_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'QUESTION'and CHALLENGE_SUCCESSFUL = 'Y' then trans_num else 0 end) AS ARN_QA_SUCC_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'QUESTION'and CHALLENGE_SUCCESSFUL = 'N' then trans_num else 0 end) AS ARN_QA_FAIL_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'CCC' then trans_num else 0 end) AS ARN_CC_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'CCC'and CHALLENGE_SUCCESSFUL = 'Y' then trans_num else 0 end) AS ARN_CC_SUCC_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'CCC'and CHALLENGE_SUCCESSFUL = 'N' then trans_num else 0 end) AS ARN_CC_FAIL_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'SMS' then trans_num else 0 end) AS ARN_SMS_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'SMS'and CHALLENGE_SUCCESSFUL = 'Y' then trans_num else 0 end) AS ARN_SMS_SUCC_NUM,
                       SUM(case  when CHALLENGE_AUTH_METHOD = 'SMS'and CHALLENGE_SUCCESSFUL = 'N' then trans_num else 0 end) AS ARN_SMS_FAIL_NUM,
                       SUM(case  when IS_USE_DEVICE = 'Y' then trans_num else 0 end) AS ARN_BIND_FAIL_TRANS,
                       nvl(SUM(WEB_TRANS_NUM ),0) AS CUT_WEB_TRANS_NUM,
                       nvl(SUM( MOBILE_TRANS_NUM ),0) AS CUT_MOBI_TRANS_NUM,
                       nvl(SUM(IPAD_TRANS_NUM),0) AS CUT_IPAD_TRANS_NUM,
                      '',-- nvl(SUM(REGISTRAR_QA_NUM),0) AS NRU_QA_RES_NUM,--
                      '',-- num_2_per_util(SUM(REGISTRAR_QA_NUM ),SUM( QA_LOGIN_NUM)) AS NRU_QA_RES_PER,

                       nvl(SUM(QA_LOGIN_NUM),0) AS NRU_QA_REG_NUM,
                       num_2_per_util(SUM(QA_LOGIN_NUM),SUM( QA_LOGIN_NUM)+SUM( SMS_LOGIN_NUM )+SUM( CC_LOGIN_NUM )) AS NRU_QA_REG_PER,

                       nvl(SUM( SMS_LOGIN_NUM),0) AS NRU_SMS_REG_NUM,
                       num_2_per_util(SUM( SMS_LOGIN_NUM),SUM( QA_LOGIN_NUM)+SUM( SMS_LOGIN_NUM )+SUM( CC_LOGIN_NUM )) AS NRU_SMS_REG_PER,

                       nvl(SUM( CC_LOGIN_NUM),0) AS NRU_CC_REG_NUM,
                       num_2_per_util(SUM( CC_LOGIN_NUM ),SUM( QA_LOGIN_NUM)+SUM( SMS_LOGIN_NUM )+SUM( CC_LOGIN_NUM )) AS NRU_CC_REG_PER,

                       NUM_WORKED(SUM(TOTAL_SCORE_RANGE),SUM(TRANS_NUM)) AS ARN_AVG_VAL,
                       nvl(SUM(CREATE_CUSTOMR_FILE_NUM),0) AS NRU_CST_DOC_NUM,
                       nvl(SUM(TRANS_NUM),0) AS CUT_ALL_TRANS_NUM

                       FROM  RP_TRANS_LOG_MONTH T WHERE T.TRANS_TIME = TIME_SCY ;

                       COMMIT;



                 --所有的去重用户数

               SELECT COUNT(distinct T.CUSTOMER_ID) INTO ALL_USER_NUM FROM RP_BD_DEVICE_CUSTOMER_ID T WHERE T.TRANS_TIME = TIME_SCY ;
                  --所有的去重ip
                  SELECT COUNT(distinct T.IP_ADDRESS)   INTO ALL_IP_NUM FROM RP_IP_UNIQUE T WHERE T.TRANS_TIME = TIME_SCY;


                  --所有的去重交易省份
                  SELECT COUNT(distinct t1.trans_province) INTO ALL_ADDR_NUM FROM  RP_PROVINCE_CUSTOMER_AMOUNT T1 WHERE T1.TRANS_TIME = TIME_SCY;

              --所有的去重 DEVICE_id
              
                SELECT COUNT (distinct K.DEVICE_ID) INTO ALL_DEVICE_NUM  FROM RP_ALL_OF_DEVICE_ID K WHERE K.TRANS_TIME =  TIME_SCY ;
                
                   --绑定设备总数量
                     SELECT COUNT(DISTINCT K.DEVICE_ID)  INTO V_CMI_BIND_MAC_NUM FROM RP_BD_DEVICE_ID K  WHERE K.TRANS_TIME = TIME_SCY;

--------------------------------------------------
/*
               --认证失败的绑定设备数量1
                  SELECT COUNT(DISTINCT T.DEVICE_ID) INTO ARN_FAIL_BIND_MAC FROM RP_CHALLENGE_FAIL_BD_DEVICE_ID T WHERE T.TRANS_TIME = TIME_SCY;


                 --Web交易用户数
                  SELECT COUNT(DISTINCT K.CUSTOMER_ID ) INTO CUT_WEB_USR_NUM FROM RP_TRANS_DITCH_CUSTOMER_ID K WHERE K.TRANS_DITCH='WEB' AND K.TRANS_TIME = TIME_SCY ;
                 --MOBILE交易用户数
                   SELECT COUNT(DISTINCT K.CUSTOMER_ID ) INTO CUT_MOBI_USR_NUM FROM RP_TRANS_DITCH_CUSTOMER_ID K WHERE K.TRANS_DITCH='MOBILE' AND K.TRANS_TIME = TIME_SCY ;

                  --IPAD交易用户数
                   SELECT COUNT(DISTINCT K.CUSTOMER_ID ) INTO CUT_IPAD_USR_NUM FROM RP_TRANS_DITCH_CUSTOMER_ID K WHERE K.TRANS_DITCH='IPAD' AND K.TRANS_TIME = TIME_SCY ;


                
                 --PC绑定数量
                      SELECT COUNT(DISTINCT K.DEVICE_ID)  INTO CMI_PC_BIND_NUM FROM RP_BD_DEVICE_ID K  WHERE K.DEVICE_TYPE='WEB' AND K.TRANS_TIME = TIME_SCY;

                 --MOBILE绑定数量
                      SELECT COUNT(DISTINCT K.DEVICE_ID)  INTO CMI_MOBI_BIND_NUM FROM RP_BD_DEVICE_ID K  WHERE K.DEVICE_TYPE='MOBILE' AND K.TRANS_TIME = TIME_SCY;

                   --绑定设备的客户数
                   
                   SELECT COUNT(DISTINCT K.CUSTOMER_ID) INTO CMI_BIND_CST_NUM FROM  RP_BD_DEVICE_CUSTOMER_ID K WHERE  K.BOUND_DEVICE_OR_NOT='Y'AND K.TRANS_TIME =  TIME_SCY;

                 

                   --未绑定设备的客户数
                   SELECT COUNT(DISTINCT K.CUSTOMER_ID) INTO CMI_UNBIND_CST_NUM FROM  RP_BD_DEVICE_CUSTOMER_ID K WHERE  K.BOUND_DEVICE_OR_NOT!='Y'AND K.TRANS_TIME =  TIME_SCY;

                 */
                


                       UPDATE RP_FIXDATE_SOLOLINE R SET
                            R.ARN_FAIL_BIND_MAC = (SELECT COUNT(DISTINCT T.DEVICE_ID)  FROM RP_CHALLENGE_FAIL_BD_DEVICE_ID T WHERE T.TRANS_TIME = TIME_SCY),--认证失败的绑定设备书
                            R.CCM_CST_IP_NUM = NUM_WORKED(ALL_IP_NUM,ALL_USER_NUM),--每个用户使用的IP地址数量
                            R.CCM_CST_ADDR_NUM = NUM_WORKED(ALL_ADDR_NUM,ALL_USER_NUM),--每个用户登录的地区数量
                            R.CCM_CST_MAC_NUM = NUM_WORKED(ALL_DEVICE_NUM,ALL_USER_NUM),--每个用户拥有的设备数量
                            R.CCM_MAC_IP_NUM = NUM_WORKED(ALL_IP_NUM,ALL_DEVICE_NUM),--每个设备使用的IP地址数量
                            R.CCM_MAC_ADDR_NUM = NUM_WORKED(ALL_DEVICE_NUM,ALL_ADDR_NUM),--每个设备登录的地区数量
                            R.CCM_MAC_CST_NUM = NUM_WORKED(ALL_USER_NUM,ALL_DEVICE_NUM),--每个设备使用的用户数量
                            R.CCM_IP_CST_NUM =NUM_WORKED( ALL_USER_NUM,ALL_IP_NUM),--每个IP地址使用的用户数量
                            R.CCM_ADDR_CST_NUM =NUM_WORKED(ALL_USER_NUM,ALL_ADDR_NUM),--每个地区使用的用户数量
                            R.CCM_IP_MAC_NUM = NUM_WORKED(ALL_DEVICE_NUM,ALL_IP_NUM),--每个IP地址使用的设备数量
                            R.CCM_ADDR_MAC_NUM =NUM_WORKED(ALL_DEVICE_NUM,ALL_ADDR_NUM),--每个地区使用的设备数量
                            R.CUT_USR_NUM =NUM_WORKED( ( SELECT COUNT(distinct T.CUSTOMER_ID) FROM RP_BD_DEVICE_CUSTOMER_ID T WHERE T.TRANS_TIME = TIME_SCY  ),1),--总交易用户数
                            R.CUT_WEB_USR_NUM =NUM_WORKED( (SELECT COUNT(DISTINCT K.CUSTOMER_ID )  FROM RP_TRANS_DITCH_CUSTOMER_ID K WHERE K.TRANS_DITCH='WEB' AND K.TRANS_TIME = TIME_SCY ),1),--Web交易用户数--
                            R.CUT_MOBI_USR_NUM = NUM_WORKED(( SELECT COUNT(DISTINCT K.CUSTOMER_ID )  FROM RP_TRANS_DITCH_CUSTOMER_ID K WHERE K.TRANS_DITCH='MOBILE' AND K.TRANS_TIME = TIME_SCY),1),  --MOBILE交易用户数--
                            R.CUT_IPAD_USR_NUM = NUM_WORKED(( SELECT COUNT(DISTINCT K.CUSTOMER_ID )  FROM RP_TRANS_DITCH_CUSTOMER_ID K WHERE K.TRANS_DITCH='IPAD' AND K.TRANS_TIME = TIME_SCY),1),--IPAD交易用户数--
                            R.CMI_BIND_MAC_NUM =NUM_WORKED((SELECT COUNT(DISTINCT K.DEVICE_ID)   FROM RP_BD_DEVICE_ID K  WHERE K.TRANS_TIME = TIME_SCY),1),--绑定设备总数量--
                            R.CMI_PC_BIND_NUM =NUM_WORKED((SELECT COUNT(DISTINCT K.DEVICE_ID)   FROM RP_BD_DEVICE_ID K  WHERE K.DEVICE_TYPE='WEB' AND K.TRANS_TIME = TIME_SCY),1),--PC绑定数量--

                             R.CMI_MOBI_BIND_NUM =NUM_WORKED((SELECT COUNT(DISTINCT K.DEVICE_ID)   FROM RP_BD_DEVICE_ID K  WHERE K.DEVICE_TYPE='MOBILE' AND K.TRANS_TIME = TIME_SCY),1),--MOBILE绑定数量--
                            R.CMI_BIND_CST_NUM =NUM_WORKED(( SELECT COUNT(distinct K.CUSTOMER_ID) FROM RP_BD_DEVICE_CUSTOMER_ID K  WHERE K.BOUND_DEVICE_OR_NOT='Y'AND K.TRANS_TIME =  TIME_SCY),1),--绑定设备的客户数--
                            R.CMI_UNBIND_CST_NUM =NUM_WORKED(( SELECT COUNT(distinct K.CUSTOMER_ID) FROM RP_BD_DEVICE_CUSTOMER_ID K  WHERE K.BOUND_DEVICE_OR_NOT='N'AND K.TRANS_TIME =  TIME_SCY),1),--未绑定设备的客户数--
                            R.CMI_AVG_CST_MAC = NUM_WORKED(V_CMI_BIND_MAC_NUM,ALL_USER_NUM)---平均每个客户绑定的设备数
                            WHERE R.TRANS_TIME = TIME_SCY;
                            commit;
                         END IF;
                    END IF;
                    commit;

             end loop;
            END IF;
   END IF;

 EXCEPTION
           WHEN OTHERS
           THEN
              ROLLBACK;
               /*操作失败后插入日志记录*/
               INSERT_COLLECT_DATA_LOG_4_FIX(
                   VAR_RECORD_ID,        --RECORD_ID 将来会返回主键，用于修改日志操作
                  'GET_DATA_2_FIXDATE_SOLOLINE_T', --PROC_NAME 存储过程名称
                  'rp_trans_log_month--',  --FROM_TABLE 来源表
                  '',  --TO_TABLE 目标表
                  SYSDATE,        --DATA_RANGE 数据范围
                  TIME_SCY,        --DATA_BEGIN_TIME 数据开始时间
                  TIME_SCY          --DATA_END_TIME 数据开始时间
                   );

             RETURN;

END GET_DATA_2_FIXDATE_SOLOLINE_T;


------------

create or replace procedure GET_DATA_2_DEVICE_RISK_I_B --设备风险信息表汇总--每月job一次

 is

   TRANS_TIME_           DATE;--
   IS_NULL        NUMBER;--用于判断月报里有没有数据
   VAR_RECORD_ID  VARCHAR2(30);--log日志主键

   TRANS_TIME_MIN_MON date;--月表中的最小时间
   TRANS_TIME_MAX_MON date;--月表中的最小时间
   MAX_TIME_IN_TARGET DATE;-- DEVICE_RISK_INFORMATION表中的最大时间

  -- INTO_LOG_TIME    DATE;--将本月的一号插入到目标表中

begin

   SELECT MAX(T.TRANS_TIME) INTO TRANS_TIME_MAX_MON FROM RP_TRANS_LOG_MONTH T;
   SELECT MIN(T.TRANS_TIME) INTO TRANS_TIME_MIN_MON FROM RP_TRANS_LOG_MONTH T;
   SELECT MAX(T.TRANS_TIME) INTO MAX_TIME_IN_TARGET FROM DEVICE_RISK_INFORMATION T;

   IF TRANS_TIME_MAX_MON IS NOT NULL AND MAX_TIME_IN_TARGET IS NULL THEN
     WHILE TRANS_TIME_MIN_MON < to_date(SUBSTR(to_char(sysdate,'yyyy/mm/dd'),1,8)||'01','yyyy/mm/dd')
       LOOP
         SELECT COUNT(*) INTO IS_NULL FROM RP_TRANS_LOG_MONTH T WHERE T.TRANS_TIME = TRANS_TIME_MIN_MON;
         IF IS_NULL > 0 THEN
            INSERT INTO DEVICE_RISK_INFORMATION(
                 trans_time   ,   --交易时间
                 trans_ditch ,--交易渠道
                 operating_system    ,--操作系统
                 browser     ,--浏览器
                 device_num   ,--设备类型总数
                 device_percent   ,--设备类型占总数半分比
                 total_device_num ,--设备数量
                 total_device_percent ,--设备总数百分比
                 user_num  ,--用户数量
                 user_percent ,--用户数量百分比
                 alarm_num    ,--报警数量
                 alarm_percent  --报警数量百分比


            )
            SELECT
             T.TRANS_TIME,
              T.TRANS_DITCH,
              T.TRANS_OPER_SYSTEM,
              T.TRANS_BROWSER,
              SUM(T.TRANS_NUM),
              NUM_2_PER_UTIL( SUM(T.TRANS_NUM),(SELECT SUM(T2.TRANS_NUM) FROM RP_TRANS_LOG_MONTH T2 WHERE T2.TRANS_TIME = T.TRANS_TIME )), --
             ( SELECT  COUNT(P.DEVICE_ID ) FROM RP_COUNT_DIVICE_AMOUNT P WHERE P.TRANS_DITCH = T.TRANS_DITCH
              AND T.TRANS_OPER_SYSTEM = P.OPERATIING_SYSTEM AND T.TRANS_BROWSER = P.BROWSER AND P.TRANS_TIME = T.TRANS_TIME ) ,--
              NUM_2_PER_UTIL( ( SELECT  COUNT(P.DEVICE_ID ) FROM RP_COUNT_DIVICE_AMOUNT P WHERE P.TRANS_DITCH = T.TRANS_DITCH
              AND T.TRANS_OPER_SYSTEM = P.OPERATIING_SYSTEM AND T.TRANS_BROWSER = P.BROWSER AND P.TRANS_TIME = T.TRANS_TIME ),
              (SELECT COUNT(P2.DEVICE_ID) FROM RP_COUNT_DIVICE_AMOUNT P2 WHERE P2.TRANS_TIME = T.TRANS_TIME  ))  ,--
               ( select  COUNT(C2.CUSTOMER_ID) from RP_COUNT_USER_AMOUNT c2 where T.TRANS_DITCH = C2.TRANS_DITCH AND
                   T.TRANS_OPER_SYSTEM = C2.OPERATIING_SYSTEM AND
                   T.TRANS_BROWSER = C2.BROWSER AND C2.TRANS_TIME = T.TRANS_TIME) ,--
              NUM_2_PER_UTIL( ( select  COUNT(C2.CUSTOMER_ID) from RP_COUNT_USER_AMOUNT c2 where T.TRANS_DITCH = C2.TRANS_DITCH AND
                   T.TRANS_OPER_SYSTEM = C2.OPERATIING_SYSTEM AND
                   T.TRANS_BROWSER = C2.BROWSER  AND C2.TRANS_TIME = T.TRANS_TIME) ,(SELECT COUNT(C2.CUSTOMER_ID) FROM RP_COUNT_USER_AMOUNT C2 WHERE C2.TRANS_TIME = T.TRANS_TIME)),--
              SUM(CASE WHEN POLICY_ACTION = 'ALLOW' THEN 0 ELSE T.TRANS_NUM END) ,--
              NUM_2_PER_UTIL( SUM(CASE WHEN POLICY_ACTION = 'ALLOW' THEN 0 ELSE T.TRANS_NUM END),(SELECT SUM(K.ANUM)
                              FROM(SELECT SUM(E.TRANS_NUM) AS ANUM FROM RP_TRANS_LOG_MONTH E WHERE E.TRANS_TIME=TRANS_TIME_MIN_MON) K))--

             FROM  RP_TRANS_LOG_MONTH T
             WHERE

                   T.TRANS_TIME = TRANS_TIME_MIN_MON
               GROUP BY t.trans_time,T.TRANS_DITCH,T.TRANS_OPER_SYSTEM,T.TRANS_BROWSER
              ;
              COMMIT;
         END IF;
         TRANS_TIME_MIN_MON := ADD_MONTHS(TRANS_TIME_MIN_MON,1);
       END LOOP;
ELSE

      SELECT COUNT(*) INTO IS_NULL FROM RP_TRANS_LOG_MONTH;
     -- select to_date(SUBSTR(to_char(sysdate,'yyyy/mm/dd'),1,8)||'01','yyyy/mm/dd') INTO INTO_LOG_TIME from dual;

      IF IS_NULL > 0 THEN
           SET TRANSACTION NAME 'GET_DATA_2_DEVICE_RISK_I_B';
            SELECT MAX(T.TRANS_TIME) INTO TRANS_TIME_ FROM RP_TRANS_LOG_MONTH T;
            IF TRANS_TIME_ IS NULL THEN
             select add_months(to_date(SUBSTR(to_char(sysdate,'yyyy/mm/dd'),1,8)||'01','yyyy/mm/dd'),-1) INTO TRANS_TIME_ from dual;
            END IF;

            DELETE DEVICE_RISK_INFORMATION T WHERE T.TRANS_TIME =  TRANS_TIME_;

            INSERT INTO DEVICE_RISK_INFORMATION(
                 trans_time   ,   --交易时间
                 trans_ditch ,--交易渠道
                 operating_system    ,--操作系统
                 browser     ,--浏览器
                 device_num   ,--设备类型数
                 device_percent   ,--设备类型占总数半分比
                 total_device_num ,--设备数量
                 total_device_percent ,--设备总数百分比
                 user_num  ,--用户数量
                 user_percent ,--用户数量百分比
                 alarm_num    ,--报警数量
                 alarm_percent  --报警数量百分比


            )
            SELECT
             T.TRANS_TIME,
              T.TRANS_DITCH,
              T.TRANS_OPER_SYSTEM,
              T.TRANS_BROWSER,
              SUM(T.TRANS_NUM),
              NUM_2_PER_UTIL( SUM(T.TRANS_NUM),(SELECT SUM(T2.TRANS_NUM) FROM RP_TRANS_LOG_MONTH T2 WHERE T2.TRANS_TIME = T.TRANS_TIME )), --
             ( SELECT  COUNT(P.DEVICE_ID ) FROM RP_COUNT_DIVICE_AMOUNT P WHERE P.TRANS_DITCH = T.TRANS_DITCH
              AND T.TRANS_OPER_SYSTEM = P.OPERATIING_SYSTEM AND T.TRANS_BROWSER = P.BROWSER AND P.TRANS_TIME = T.TRANS_TIME ) ,--
              NUM_2_PER_UTIL( ( SELECT  COUNT(P.DEVICE_ID ) FROM RP_COUNT_DIVICE_AMOUNT P WHERE P.TRANS_DITCH = T.TRANS_DITCH
              AND T.TRANS_OPER_SYSTEM = P.OPERATIING_SYSTEM AND T.TRANS_BROWSER = P.BROWSER AND P.TRANS_TIME = T.TRANS_TIME ),
              (SELECT COUNT(P2.DEVICE_ID) FROM RP_COUNT_DIVICE_AMOUNT P2 WHERE P2.TRANS_TIME = T.TRANS_TIME  ))  ,--
               ( select  COUNT(C2.CUSTOMER_ID) from RP_COUNT_USER_AMOUNT c2 where T.TRANS_DITCH = C2.TRANS_DITCH AND
                   T.TRANS_OPER_SYSTEM = C2.OPERATIING_SYSTEM AND
                   T.TRANS_BROWSER = C2.BROWSER AND C2.TRANS_TIME = T.TRANS_TIME) ,--
              NUM_2_PER_UTIL( ( select  COUNT(C2.CUSTOMER_ID) from RP_COUNT_USER_AMOUNT c2 where T.TRANS_DITCH = C2.TRANS_DITCH AND
                   T.TRANS_OPER_SYSTEM = C2.OPERATIING_SYSTEM AND
                   T.TRANS_BROWSER = C2.BROWSER  AND C2.TRANS_TIME = T.TRANS_TIME) ,(SELECT COUNT(C2.CUSTOMER_ID) FROM RP_COUNT_USER_AMOUNT C2 WHERE C2.TRANS_TIME = T.TRANS_TIME)),--
              SUM(CASE WHEN POLICY_ACTION = 'ALLOW' THEN 0 ELSE T.TRANS_NUM END) ,--
              NUM_2_PER_UTIL( SUM(CASE WHEN POLICY_ACTION = 'ALLOW' THEN 0 ELSE T.TRANS_NUM END),
              (SELECT SUM(K.ANUM)
                              FROM(SELECT SUM(E.TRANS_NUM) AS ANUM FROM RP_TRANS_LOG_MONTH E WHERE E.TRANS_TIME=TRANS_TIME_) K))--

             FROM  RP_TRANS_LOG_MONTH T
             WHERE

                   T.TRANS_TIME = TRANS_TIME_
               GROUP BY t.trans_time,T.TRANS_DITCH,T.TRANS_OPER_SYSTEM,T.TRANS_BROWSER
              ;
              COMMIT;

          END IF;
     END IF;
      EXCEPTION

         WHEN OTHERS
         THEN
             ROLLBACK;
              INSERT_COLLECT_DATA_LOG_4_FIX(
              VAR_RECORD_ID,        --RECORD_ID 将来会返回主键，用于修改日志操作
              'GET_DATA_2_DEVICE_RISK_I_B', --PROC_NAME 存储过程名称
              '',  --FROM_TABLE 来源表
              'DEVICE_RISK_INFORMATION',  --TO_TABLE 目标表
              TO_CHAR(sysdate,'YYYY-MM-DD HH24:MI:SS') ,  --DATA_RANGE 数据范围
              TO_CHAR(TRANS_TIME_,'YYYY-MM-DD HH24:MI:SS'),        --DATA_BEGIN_TIME 数据开始时间
              TO_CHAR(TRANS_TIME_,'YYYY-MM-DD HH24:MI:SS')          --DATA_END_TIME 数据结束时间
            );

       RETURN ;

end GET_DATA_2_DEVICE_RISK_I_B;


------------

CREATE OR REPLACE PROCEDURE APPEND_RESULT_WHEN_UPDATE
--AUTHOR:毛小明
--当交易数据发生修改时 向汇总结果表追加统计结果
AS
  --v_ErrorCode NUMBER;           -- Variable to hold the error message code
  --v_ErrorText VARCHAR2(200);
  VAR_SYSDATE VARCHAR2(30);
  VAR_ORDER_ID VARCHAR2(300);
  VAR_EVENT_ID INTEGER;--存放EVENT_ID
  STATUS_TIMES_ID VARCHAR(30);--返回的执行次数 ID以及当前状态
  VAR_RECORD_ID VARCHAR(30);--日志的ID
  VAR_REDO_TIME INTEGER;--日志的执行次数
  OP_STATUS VARCHAR(5) ;--当前数据被更新的状态
  CANNOT_UPDATE_ID VARCHAR(300);--当前不能被更新的数据的ID
  --当前数据在REALTIME被汇总的时间
  VAR_USED_TIME DATE;
  --EVENT_LOG_UPDATE一行记录的数据类型
  VAR_EVENT_LOG_UPDATE EVENT_LOG_UPDATE%ROWTYPE;


  --VAR_EVENT_LOG一行记录的数据类型
  VAR_EVENT_LOG_REAL_GATHER EVENT_LOG_REAL_GATHER%ROWTYPE;
  --定义EVENT_LOG_UPDATE游标
  CURSOR MY_CURSOR IS
  --修改表中没有操作过的数据,要按发生顺序依次执行
  SELECT * FROM EVENT_LOG_UPDATE T WHERE HAS_USED = 'N'
 --AND T.SYS_CREATION_DATE<TO_DATE('2022-2-22 00:00:00','YYYY-MM-DD HH24:MI;SS')
  AND T.SYS_CREATION_DATE>TO_DATE('2022-2-01 00:00:00','YYYY-MM-DD HH24:MI;SS')
  and t.sys_creation_date<TO_DATE('2022-2-20 12:00:00','YYYY-MM-DD HH24:MI;SS')
   ORDER BY LASTMODIFIED ASC;

  VAR_APPEND_RESULT_SQL VARCHAR2(8000);
  /*插入记录数量*/
  VAR_RECORD_NUM NUMBER;

  VAR_DATE_CHAR VARCHAR2(50);--用于游历游标时的时间获取成字符串形式
 -- VAR_LOG_POLICY_ACTION VARCHAR2(50);--没有更新前POLICY_ACTION的状态



  VAR_IS_IN_ERR NUMBER;--查一下是否错漏报表中已经存在此交易
  VAR_POLICY_ACT_STA_LOG VARCHAR2(20);--判定log表中数据，确定交易状态，如果是真实ALLOW,如果是欺诈DENY
  VAR_POLICY_ACT_STA_UPD VARCHAR2(20);--判定UPDATE表中数据，确定交易状态，如果是真实ALLOW,如果是欺诈DENY
  VAR_COUNT_IN_LOG NUMBER;--由于测试源端可能删除数据，导致update时，源端已经把event_log中的交易记录给删除，导致报错
  VAR_C4 VARCHAR2(200);--付款人证件
  VAR_C7 VARCHAR2(200);--证件号
  VAR_C6 VARCHAR2(200);--ipa
  VAR_C1 VARCHAR2(200);--付款人行名
  VAR_C11 VARCHAR2(200);--收款人开户行
  VAR_C13 VARCHAR2(200);--开户省份
   VAR_C4_2 VARCHAR2(200);--付款人证件
  VAR_C7_2 VARCHAR2(200);--证件号
  VAR_C6_2 VARCHAR2(200);--ipa
  VAR_C1_2 VARCHAR2(200);--付款人行名
  VAR_C11_2 VARCHAR2(200);--收款人开户行
  VAR_C13_2 VARCHAR2(200);--开户省份

  VAR_CDF_ALL VARCHAR2(2000);--所有的自定义因子拼接‘，all，’
  VAR_CDF_ALL_used VARCHAR2(2000);--以前的自定义因子拼接‘，all，’


BEGIN
  VAR_RECORD_NUM := 0;
  CANNOT_UPDATE_ID := '000000';
  --打开游标
  OPEN MY_CURSOR;

  --遍历游标
  LOOP
    FETCH MY_CURSOR INTO VAR_EVENT_LOG_UPDATE;
    --无数据时退出
    EXIT WHEN MY_CURSOR%NOTFOUND;
    ---------------------------------------
      VAR_POLICY_ACT_STA_LOG:='000';
      VAR_POLICY_ACT_STA_UPD:='0000';
      VAR_CDF_ALL_used:='';
      VAR_CDF_ALL:='';
      VAR_C4:='';
       VAR_C7:='';
       VAR_C6:='';
       VAR_C1:='';
       VAR_C11:='';
       VAR_C13:='';
       VAR_C4_2:='';
        VAR_C7_2:='';
       VAR_C6_2:='';
       VAR_C1_2:='';
       VAR_C11_2:='';
       VAR_C13_2:='';

    VAR_CDF_ALL:=','||VAR_EVENT_LOG_UPDATE.CDF_S_1||','||VAR_EVENT_LOG_UPDATE.CDF_S_2||','||VAR_EVENT_LOG_UPDATE.CDF_S_3||','||VAR_EVENT_LOG_UPDATE.CDF_S_4||','||VAR_EVENT_LOG_UPDATE.CDF_S_5
    ||','||VAR_EVENT_LOG_UPDATE.CDF_S_6||','||VAR_EVENT_LOG_UPDATE.CDF_S_7||','||VAR_EVENT_LOG_UPDATE.CDF_S_8||','||VAR_EVENT_LOG_UPDATE.CDF_S_9||','||VAR_EVENT_LOG_UPDATE.CDF_S_10
    ||','||VAR_EVENT_LOG_UPDATE.CDF_S_11||','||VAR_EVENT_LOG_UPDATE.CDF_S_12||','||VAR_EVENT_LOG_UPDATE.CDF_S_13||','||VAR_EVENT_LOG_UPDATE.CDF_S_14||','||VAR_EVENT_LOG_UPDATE.CDF_S_15
    ||','||VAR_EVENT_LOG_UPDATE.CDF_S_16||','||VAR_EVENT_LOG_UPDATE.CDF_S_17||','||VAR_EVENT_LOG_UPDATE.CDF_S_18||','||VAR_EVENT_LOG_UPDATE.CDF_S_19||','||VAR_EVENT_LOG_UPDATE.CDF_S_20||',';
    VAR_C4:=get_vale_from_cd_gnpx(VAR_CDF_ALL,'4','4');
    VAR_C7:=get_vale_from_cd_gnpx(VAR_CDF_ALL,'7','4');
    VAR_C6:=get_vale_from_cd_gnpx(VAR_CDF_ALL,'6','4');
    VAR_C1:=get_vale_from_cd_gnpx(VAR_CDF_ALL,'1','4');
    VAR_C11:=get_vale_from_cd_gnpx(VAR_CDF_ALL,'11','5');
    VAR_C13:=get_vale_from_cd_gnpx(VAR_CDF_ALL,'13','5');


    VAR_DATE_CHAR :=TO_CHAR(VAR_EVENT_LOG_UPDATE.LASTMODIFIED,'YYYY-MM-DD HH24:MI:SS');--



      --判定update状态

       IF (VAR_EVENT_LOG_UPDATE.RESOLUTION='F' AND VAR_EVENT_LOG_UPDATE.FLAGGED IS NULL)
         OR  VAR_EVENT_LOG_UPDATE.POLICY_ACTION = 'DENY'
         OR  (VAR_EVENT_LOG_UPDATE.POLICY_ACTION  = 'CHALLENGE' AND VAR_EVENT_LOG_UPDATE.CHALLENGE_SUCCESSFUL='N')

         THEN VAR_POLICY_ACT_STA_UPD:='DENY';
         END IF;
        IF VAR_EVENT_LOG_UPDATE.POLICY_ACTION = 'ALLOW'
          OR  (VAR_EVENT_LOG_UPDATE.POLICY_ACTION  = 'CHALLENGE' AND VAR_EVENT_LOG_UPDATE.CHALLENGE_SUCCESSFUL='Y')
          OR  (VAR_EVENT_LOG_UPDATE.FLAGGED='Y'   AND  VAR_EVENT_LOG_UPDATE.RESOLUTION = 'G')
         THEN VAR_POLICY_ACT_STA_UPD:='ALLOW';
         END IF;

    -----------------------------------------

    --查看此次修改的数据是否已经汇总过
    --先去realtime判断是否汇总过
 -- 只做realtime到minute的+1 -1
    --如果数据还没有进行汇总，则不处理
    --查询出UPDATE里的该条数据在REALTIME表里的被汇总的时间
    VAR_USED_TIME := GET_USED_TIME(VAR_EVENT_LOG_UPDATE.EVENT_ID,VAR_EVENT_LOG_UPDATE.SHORT_DATE);




    --如果更新发生在汇总后
    SET TRANSACTION NAME 'APPEND_RESULT_WHEN_UPDATE';
    STATUS_TIMES_ID := GET_RECORD_ID_AND_REDO_TIME(TO_CHAR(VAR_EVENT_LOG_UPDATE.LASTMODIFIED,'YYYY-MM-DD HH24:MI:SS'),'APPEND_RESULT_WHEN_UPDATE'||VAR_EVENT_LOG_UPDATE.EVENT_ID);
    VAR_REDO_TIME := TO_NUMBER(SUBSTR(STATUS_TIMES_ID,2,2))+1;
    OP_STATUS := SUBSTR(STATUS_TIMES_ID,1,1);
    IF OP_STATUS = 'R' and  VAR_REDO_TIME>3 THEN --如果有当前的数据正在被更新或（防止延时后两次更新一条数据）
     CANNOT_UPDATE_ID :=  VAR_EVENT_LOG_UPDATE.EVENT_ID;
    END IF;
    IF VAR_EVENT_LOG_UPDATE.EVENT_ID != CANNOT_UPDATE_ID THEN
        IF VAR_REDO_TIME = 0
        THEN
        /*插入日志*/
       /*插入日志*/
        INSERT_COLLECT_DATA_LOG(
        VAR_RECORD_ID,        --RECORD_ID 将来会返回主键，用于修改日志操作
        'APPEND_RESULT_WHEN_UPDATE'||VAR_EVENT_LOG_UPDATE.EVENT_ID, --PROC_NAME 存储过程名称和存储过程名字
        'EVENT_LOG_REALTIME',  --FROM_TABLE 来源表
        'RP_TANS_LOG_MINUTE',  --TO_TABLE 目标表
        VAR_EVENT_LOG_UPDATE.EVENT_ID,        --DATA_RANGE 数据范围
        TO_CHAR(VAR_EVENT_LOG_UPDATE.LASTMODIFIED,'YYYY-MM-DD HH24:MI:SS'),        --DATA_BEGIN_TIME 数据开始时间
        TO_CHAR(VAR_EVENT_LOG_UPDATE.LASTMODIFIED,'YYYY-MM-DD HH24:MI:SS')          --DATA_END_TIME 数据开始时间
       );
       ELSE
        --重复执行的开始，修改数据
        VAR_RECORD_ID := SUBSTR(STATUS_TIMES_ID,4,length(STATUS_TIMES_ID));
        UPDATE_COLLECT_DATA_LOG(
            VAR_RECORD_ID,
            SYSDATE,
            NULL,
            'RUNNING',
            VAR_RECORD_NUM,
            VAR_REDO_TIME
        );
      END IF;


    IF VAR_EVENT_LOG_UPDATE.LASTMODIFIED > VAR_USED_TIME
          THEN

               SELECT count(*) INTO VAR_COUNT_IN_LOG FROM EVENT_LOG_REAL_GATHER T WHERE T.EVENT_ID = VAR_EVENT_LOG_UPDATE.EVENT_ID
                       AND T.SHORT_DATE = VAR_EVENT_LOG_UPDATE.SHORT_DATE;
              if VAR_COUNT_IN_LOG>0 then
                --查询出EVENT_LOG里的该条数据
                SELECT * INTO VAR_EVENT_LOG_REAL_GATHER FROM EVENT_LOG_REAL_GATHER T WHERE T.EVENT_ID = VAR_EVENT_LOG_UPDATE.EVENT_ID
                       AND T.SHORT_DATE = VAR_EVENT_LOG_UPDATE.SHORT_DATE;

                   VAR_CDF_ALL_used:=','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_1||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_2||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_3||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_4||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_5
                      ||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_6||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_7||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_8||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_9||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_10
                      ||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_11||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_12||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_13||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_14||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_15
                      ||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_16||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_17||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_18||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_19||','||VAR_EVENT_LOG_REAL_GATHER.CDF_S_20||',';
                      VAR_C4_2:=get_vale_from_cd_gnpx(VAR_CDF_ALL_used,'4','4');
                      VAR_C7_2:=get_vale_from_cd_gnpx(VAR_CDF_ALL_used,'7','4');
                      VAR_C6_2:=get_vale_from_cd_gnpx(VAR_CDF_ALL_used,'6','4');
                      VAR_C1_2:=get_vale_from_cd_gnpx(VAR_CDF_ALL_used,'1','4');
                      VAR_C11_2:=get_vale_from_cd_gnpx(VAR_CDF_ALL_used,'11','5');
                      VAR_C13_2:=get_vale_from_cd_gnpx(VAR_CDF_ALL_used,'13','5');
                --存放log表中的自定义字段

                --没有更新前POLICY_ACTION的状态
              --  VAR_LOG_POLICY_ACTION := VAR_EVENT_LOG_REAL_GATHER.Policy_Action;

                 IF (VAR_EVENT_LOG_REAL_GATHER.RESOLUTION='F' AND VAR_EVENT_LOG_REAL_GATHER.FLAGGED IS NULL)
                     OR  VAR_EVENT_LOG_REAL_GATHER.POLICY_ACTION = 'DENY'
                     OR  (VAR_EVENT_LOG_REAL_GATHER.POLICY_ACTION  = 'CHALLENGE' AND VAR_EVENT_LOG_REAL_GATHER.CHALLENGE_SUCCESSFUL='N')

                  THEN VAR_POLICY_ACT_STA_LOG:='DENY';
                  END IF;

                  IF VAR_EVENT_LOG_REAL_GATHER.POLICY_ACTION = 'ALLOW'
                     OR  (VAR_EVENT_LOG_REAL_GATHER.POLICY_ACTION  = 'CHALLENGE' AND VAR_EVENT_LOG_REAL_GATHER.CHALLENGE_SUCCESSFUL='Y')
                     OR  (VAR_EVENT_LOG_REAL_GATHER.FLAGGED='Y'   AND  VAR_EVENT_LOG_REAL_GATHER.RESOLUTION = 'G')
                   THEN VAR_POLICY_ACT_STA_LOG:='ALLOW';
                   END IF;

            --+1sql
                SELECT SUBSTR(TO_CHAR(VAR_EVENT_LOG_UPDATE.SYS_CREATION_DATE,'YYYY/MM/DD HH24:MI:SS'),0,16) INTO VAR_SYSDATE FROM DUAL;
                VAR_ORDER_ID := GET_RULE_ORDER_ID(VAR_EVENT_LOG_REAL_GATHER.ORG_ID,VAR_EVENT_LOG_REAL_GATHER.POLICY_RULE_ID);
                  VAR_APPEND_RESULT_SQL := 'INSERT INTO RP_TRANS_LOG_MINUTE
                  (
                    TRANS_TIME,
                    TRANS_PROVINCE,
                    TRANS_TYPE,
                    SCORE_RANGE,
                    RULE_NAME,
                    POLICY_ACTION,--新增
                    /*新加字段开始*/
                    CHALLENGE_SUCCESSFUL,
                    CHALLENGE_AUTH_METHOD,
                    PRIORITY,---
                    DESCRIBE,--
                    IS_USE_DEVICE,--
                    TRANS_DITCH,
                    TRANS_OPER_SYSTEM,
                    TRANS_BROWSER,
                    FLAGGED,
                    RESOLUTION,
                    /*新加字段结束*/
                    TRANS_NUM,
                    TRIGGERED_NUM,
                    TRIGGERED_SUCCESSFUL_NUM,
                    /*新加字段开始*/
                    WEB_TRANS_NUM,
                    MOBILE_TRANS_NUM,
                    IPAD_TRANS_NUM,
                    QA_LOGIN_NUM,
                    SMS_LOGIN_NUM,
                    CC_LOGIN_NUM,
                    REGISTRAR_QA_NUM,--***
                    CREATE_CUSTOMR_FILE_NUM,
                    ALLOW_TRANS_NUM,
                    REVIEW_TRANS_NUM,
                    CHALLENGE_TRANS_NUM,
                    DENY_TRANS_NUM,
                    TOTAL_SCORE_RANGE,
                    TOTAL_AMOUNT
                    /*新加字段结束*/
                  )VALUES (
                  TO_DATE('''||VAR_SYSDATE||''', ''YYYY/MM/DD HH24:MI''),
                  '''||get_province(VAR_EVENT_LOG_UPDATE.IP_COUNTRY,VAR_EVENT_LOG_UPDATE.IP_CITY,VAR_EVENT_LOG_UPDATE.Ip_Region)||''',
                  '''||GET_NAME_BY_CODE(GET_TOTAL_EVENT_TYPE(VAR_EVENT_LOG_UPDATE.EVENT_TYPE,VAR_EVENT_LOG_UPDATE.USER_DEFINED_EVENT_TYPE),'eventType')||''',
                  '''||GET_SCORE_RANGE(VAR_EVENT_LOG_UPDATE.RISK_SCORE) ||''',
                  '''||NVL(VAR_EVENT_LOG_UPDATE.POLICY_RULE_ID,'FALLBACK_RULE')||''',
                  '''||VAR_EVENT_LOG_UPDATE.POLICY_ACTION||''',
                  '''||VAR_EVENT_LOG_UPDATE.CHALLENGE_SUCCESSFUL||''',
                  '''||VAR_EVENT_LOG_UPDATE.CHALLENGE_AUTH_METHOD||''',
                  '''||SUBSTR(VAR_ORDER_ID,0,INSTR(VAR_ORDER_ID,'+')-1)||''',--优先级
                  '''||SUBSTR(VAR_ORDER_ID,INSTR(VAR_ORDER_ID,'-')+1)||''',--描述
                  '''||NVL(VAR_EVENT_LOG_UPDATE.IS_DEVICE_BOUND,'N')||''',
                  '''||VAR_EVENT_LOG_UPDATE.CHANNEL_INDICATOR||''',
                  '''||VAR_EVENT_LOG_UPDATE.OPERATING_SYSTEM||''',
                  '''||VAR_EVENT_LOG_UPDATE.BROWSER_TYPE||''',
                  '''||VAR_EVENT_LOG_UPDATE.FLAGGED||''',
                  '''||VAR_EVENT_LOG_UPDATE.RESOLUTION||''',
                  '||1||',
                  '||CASE WHEN VAR_EVENT_LOG_UPDATE.POLICY_ACTION = 'CHALLENGE'  THEN 1 ELSE 0 END ||',
                  '||CASE WHEN VAR_EVENT_LOG_UPDATE.POLICY_ACTION = 'CHALLENGE' AND  VAR_EVENT_LOG_UPDATE.CHALLENGE_SUCCESSFUL = 'Y' THEN 1 ELSE 0 END||',
                  '||case WHEN VAR_EVENT_LOG_UPDATE.CHANNEL_INDICATOR = 'WEB' then 1 else 0 end||',--WEB交易量
                  '||case WHEN VAR_EVENT_LOG_UPDATE.CHANNEL_INDICATOR = 'MOBILE' then 1 else 0 end||',--Mobile交易量
                  '||case WHEN VAR_C6 = 'IPAD' then 1 else 0 end ||' ,--Ipad交易量
                  '||0||',
                  '||0||',
                  '||0||',
                  '||0||',
                  '||0||',
                  '||CASE WHEN VAR_EVENT_LOG_UPDATE.POLICY_ACTION = 'ALLOW' then 1 else 0 end||',
                  '||CASE WHEN VAR_EVENT_LOG_UPDATE.POLICY_ACTION = 'REVIEW' then 1 else 0 end||',
                  '||CASE WHEN VAR_EVENT_LOG_UPDATE.POLICY_ACTION = 'CHALLENGE' then 1 else 0 end||',
                  '||CASE WHEN VAR_EVENT_LOG_UPDATE.POLICY_ACTION = 'DENY' then 1 else 0 end||',
                  '||VAR_EVENT_LOG_UPDATE.RISK_SCORE||',
                  '||GET_AMT_BY_CURRENCY(VAR_EVENT_LOG_UPDATE.AMOUNT_ORIGINAL,VAR_EVENT_LOG_UPDATE.AMOUNT_CURRENCY)||')'--通过汇率表和币种转换再求和
                  ;
                --执行动态SQL
              --insert into test(test_name) values(VAR_APPEND_RESULT_SQL);
              --commit;
               execute immediate VAR_APPEND_RESULT_SQL;
               --commit;
               -- -1sql
                VAR_APPEND_RESULT_SQL := 'INSERT INTO RP_TRANS_LOG_MINUTE
                  (
                    TRANS_TIME,
                    TRANS_PROVINCE,
                    TRANS_TYPE,
                    SCORE_RANGE,
                    RULE_NAME,
                    POLICY_ACTION,--新增
                    /*新加字段开始*/
                    CHALLENGE_SUCCESSFUL,
                    CHALLENGE_AUTH_METHOD,
                    PRIORITY,---
                    DESCRIBE,--
                    IS_USE_DEVICE,--
                    TRANS_DITCH,
                    TRANS_OPER_SYSTEM,
                    TRANS_BROWSER,
                    FLAGGED,
                    RESOLUTION,
                    /*新加字段结束*/
                    TRANS_NUM,
                    TRIGGERED_NUM,
                    TRIGGERED_SUCCESSFUL_NUM,
                    /*新加字段开始*/
                    WEB_TRANS_NUM,
                    MOBILE_TRANS_NUM,
                    IPAD_TRANS_NUM,
                    QA_LOGIN_NUM,
                    SMS_LOGIN_NUM,
                    CC_LOGIN_NUM,
                    REGISTRAR_QA_NUM,--***
                    CREATE_CUSTOMR_FILE_NUM,
                    ALLOW_TRANS_NUM,
                    REVIEW_TRANS_NUM,
                    CHALLENGE_TRANS_NUM,
                    DENY_TRANS_NUM,
                    TOTAL_SCORE_RANGE,
                    TOTAL_AMOUNT
                    /*新加字段结束*/
                  )VALUES (
                  TO_DATE('''||VAR_SYSDATE||''', ''YYYY/MM/DD HH24:MI''),
                  '''||get_province(VAR_EVENT_LOG_REAL_GATHER.IP_COUNTRY,VAR_EVENT_LOG_REAL_GATHER.IP_CITY,VAR_EVENT_LOG_REAL_GATHER.Ip_Region)||''',
                  '''||GET_NAME_BY_CODE(GET_TOTAL_EVENT_TYPE(VAR_EVENT_LOG_REAL_GATHER.EVENT_TYPE,VAR_EVENT_LOG_REAL_GATHER.USER_DEFINED_EVENT_TYPE),'eventType')||''',
                  '''||GET_SCORE_RANGE(VAR_EVENT_LOG_REAL_GATHER.RISK_SCORE) ||''',
                  '''||NVL(VAR_EVENT_LOG_REAL_GATHER.POLICY_RULE_ID,'FALLBACK_RULE')||''',
                  '''||VAR_EVENT_LOG_REAL_GATHER.POLICY_ACTION||''',
                  '''||VAR_EVENT_LOG_REAL_GATHER.CHALLENGE_SUCCESSFUL||''',
                  '''||VAR_EVENT_LOG_REAL_GATHER.CHALLENGE_AUTH_METHOD||''',
                  '''||SUBSTR(VAR_ORDER_ID,0,INSTR(VAR_ORDER_ID,'+')-1)||''',--优先级
                  '''||SUBSTR(VAR_ORDER_ID,INSTR(VAR_ORDER_ID,'-')+1)||''',--描述
                  '''||NVL(VAR_EVENT_LOG_REAL_GATHER.IS_DEVICE_BOUND,'N')||''',
                  '''||VAR_EVENT_LOG_REAL_GATHER.CHANNEL_INDICATOR||''',
                  '''||VAR_EVENT_LOG_REAL_GATHER.OPERATING_SYSTEM||''',
                  '''||VAR_EVENT_LOG_REAL_GATHER.BROWSER_TYPE||''',
                  '''||VAR_EVENT_LOG_UPDATE.FLAGGED||''',
                  '''||VAR_EVENT_LOG_UPDATE.RESOLUTION||''',
                  '||-1||',
                  '||CASE WHEN VAR_EVENT_LOG_REAL_GATHER.POLICY_ACTION = 'CHALLENGE'  THEN -1 ELSE 0 END ||',
                  '||CASE WHEN VAR_EVENT_LOG_REAL_GATHER.POLICY_ACTION = 'CHALLENGE' AND  VAR_EVENT_LOG_REAL_GATHER.CHALLENGE_SUCCESSFUL = 'Y' THEN -1 ELSE 0 END||',
                  '||case WHEN VAR_EVENT_LOG_REAL_GATHER.CHANNEL_INDICATOR = 'WEB' then -1 else 0 end||',--WEB交易量
                  '||case WHEN VAR_EVENT_LOG_REAL_GATHER.CHANNEL_INDICATOR = 'MOBILE' then -1 else 0 end||',--Mobile交易量
                  '||case WHEN VAR_C6_2 = 'IPAD' then -1 else 0 end ||' ,--Ipad交易量
                  '||0||',
                  '||0||',
                  '||0||',
                  '||0||',
                  '||0||',
                  '||CASE WHEN VAR_EVENT_LOG_REAL_GATHER.POLICY_ACTION = 'ALLOW' then -1 else 0 end||' ,
                  '||CASE WHEN VAR_EVENT_LOG_REAL_GATHER.POLICY_ACTION = 'REVIEW' then -1 else 0 end||',
                  '||CASE WHEN VAR_EVENT_LOG_REAL_GATHER.POLICY_ACTION = 'AHALLENGE' then -1 else 0 end||',
                  '||CASE WHEN VAR_EVENT_LOG_REAL_GATHER.POLICY_ACTION = 'DENY' then -1 else 0 end||' ,
                  '||'-'||VAR_EVENT_LOG_REAL_GATHER.RISK_SCORE||',
                  '||'-'||GET_AMT_BY_CURRENCY(VAR_EVENT_LOG_REAL_GATHER.AMOUNT_ORIGINAL,VAR_EVENT_LOG_REAL_GATHER.AMOUNT_CURRENCY)||')'--通过汇率表和币种转换再求和
                  ;
                --执行动态SQL
               -- insert into test(test_name) values(VAR_APPEND_RESULT_SQL);
               -- commit;
                 execute immediate VAR_APPEND_RESULT_SQL;



                --系统或人工判断为非欺诈，从欺诈表中删除
                  IF VAR_POLICY_ACT_STA_UPD='ALLOW' THEN
                      DELETE FROM RP_COMFIRMED_EVENT_DETAIL T WHERE T.EVENT_ID = VAR_EVENT_LOG_UPDATE.EVENT_ID;
                  END IF;


                  --先判断该数据是否已经在 错漏报里存在了
                  --系统判断为正常交易人工改为欺诈的 或者相反 增加到已确认欺诈表里 并在错漏报里增加
                  --VAR_EVENT_ID :='';
                  SELECT COUNT(1)
                  --CASE WHEN T.EVENT_ID IS NULL THEN '####' ELSE T.EVENT_ID END
                  INTO VAR_EVENT_ID FROM RP_COMFIRMED_EVENT_DETAIL T WHERE T.EVENT_ID = VAR_EVENT_LOG_UPDATE.EVENT_ID;
                        IF VAR_EVENT_ID = 0 THEN


                           IF VAR_POLICY_ACT_STA_LOG='ALLOW' AND VAR_POLICY_ACT_STA_UPD='DENY' THEN

                                --把人工改为欺诈的增加到已确认欺诈表里
                                        VAR_APPEND_RESULT_SQL := 'INSERT INTO RP_COMFIRMED_EVENT_DETAIL(
                                        EVENT_ID,--ID
                                        TRANS_TIME,--交易时间
                                        TRANS_TYPE,--交易类型
                                        TRANS_PROVINCE,--开户省份
                                        CCE_CSTNO,--客户号
                                        CCE_CERTTYPE,--证件类型
                                        CCE_CERTNO,--证件号
                                        CCE_AMT,--交易金额
                                        CCE_RISK_SCORE,--不处理的风险分值
                                        CCE_PAY_NODE,--付款人开户行
                                        CCE_PAYEE_ACC,--付款人账号
                                        CCE_PAYEE_NAME,--付款人姓名
                                        CCE_REC_ACC,--收款人账号
                                        CCE_REC_NAME,--收款人姓名
                                        RULE_NAME,--规则名称
                                        CCE_RULE_NOTE,--规则描述
                                        CCE_RULE_EXPR,--规则表达式
                                        SCORE_RANGE--处理后的风险分值
                                      )VALUES('''||VAR_EVENT_LOG_UPDATE.EVENT_ID||''',
                                              TO_DATE('''||TO_CHAR(VAR_EVENT_LOG_UPDATE.SYS_CREATION_DATE,'YYYY/MM/DD HH24:MI:SS')||''', ''YYYY/MM/DD HH24:MI:SS''),
                                              '''||GET_NAME_BY_CODE(GET_TOTAL_EVENT_TYPE(VAR_EVENT_LOG_UPDATE.EVENT_TYPE,VAR_EVENT_LOG_UPDATE.USER_DEFINED_EVENT_TYPE),'eventType')||''',
                                              '''||VAR_C13||''',--开户省份为自定义字段，需要转换成动态SQL
                                              '||VAR_EVENT_LOG_UPDATE.USER_ID||',
                                              '''||VAR_C4||''',--证件类型为自定义字段  要转换成动态SQL
                                              '''||VAR_C7||''',--证件号为自定义字段  要转换成动态SQL
                                              '||GET_AMT_BY_CURRENCY(VAR_EVENT_LOG_UPDATE.AMOUNT_ORIGINAL,VAR_EVENT_LOG_UPDATE.AMOUNT_CURRENCY)||',--通过汇率和币种转换
                                              '||VAR_EVENT_LOG_UPDATE.RISK_SCORE||',
                                              '''||VAR_EVENT_LOG_UPDATE.USER_ACCT_NUMBER||''',
                                              '''||VAR_C1||''',--付款人姓名
                                              '''||VAR_C11||''',--收款人开户行 自定义字段 需转换成动态SQL
                                              '''||VAR_EVENT_LOG_UPDATE.EXT_ACCT_NUMBER||''',
                                              '''||VAR_EVENT_LOG_UPDATE.EXT_ACCT_OWNER_NAME||''',
                                              '''||NVL(VAR_EVENT_LOG_UPDATE.POLICY_RULE_ID,'FALLBACK_RULE')||''',
                                              '''||SUBSTR(VAR_ORDER_ID,INSTR(VAR_ORDER_ID,'-')+1)||''',--描述
                                              '' '',--表达式
                                              '||GET_SCORE_RANGE(VAR_EVENT_LOG_UPDATE.RISK_SCORE)||'
                                      )';

                                --insert into test(test_name) values(VAR_APPEND_RESULT_SQL);
                              -- commit;
                                 execute immediate VAR_APPEND_RESULT_SQL;

                            END IF;
                        END IF;

                  ----------------
                --如果两种状态不一致同时在错漏报里增加

                IF   (VAR_POLICY_ACT_STA_LOG ='ALLOW' AND VAR_POLICY_ACT_STA_UPD='DENY')
                  OR (VAR_POLICY_ACT_STA_LOG ='DENY' AND VAR_POLICY_ACT_STA_UPD='ALLOW')
                    THEN
                      SELECT COUNT(*) INTO VAR_IS_IN_ERR FROM  RP_ERR_LOST_DETAIL T WHERE T.ERD_TRF_NO = VAR_EVENT_LOG_UPDATE.EVENT_ID;

                         IF VAR_IS_IN_ERR >0 THEN
                            UPDATE RP_ERR_LOST_DETAIL T SET
                               T.ERD_BE_STT = VAR_POLICY_ACT_STA_LOG ,
                               T.ERD_AF_STT = VAR_POLICY_ACT_STA_UPD
                               WHERE T.ERD_TRF_NO = VAR_EVENT_LOG_UPDATE.EVENT_ID;
                           ELSE

                                  VAR_APPEND_RESULT_SQL := 'INSERT INTO RP_ERR_LOST_DETAIL
                                    (TRANS_TYPE,--交易类型
                                     ERD_TRF_NO,--交易流水号
                                     ERD_CST_NO,--客户号
                                     ERD_CERT_TYPE,--证件类型
                                     ERD_CERT_NO,--证件号
                                     ERD_CST_NAME,--客户姓名
                                     ERD_BE_STT,--审核前状态
                                     ERD_AF_STT,--审核后状态
                                     TRANS_TIME,--时间
                                     TRANS_PROVINCE,--交易省份
                                     RULE_NAME,--规则名称
                                     SCORE_RANGE--风险分值
                                    )VALUES(
                                        '''||GET_NAME_BY_CODE(GET_TOTAL_EVENT_TYPE(VAR_EVENT_LOG_UPDATE.EVENT_TYPE,VAR_EVENT_LOG_UPDATE.USER_DEFINED_EVENT_TYPE),'eventType')||''',
                                           '''||VAR_EVENT_LOG_UPDATE.EVENT_ID||''',
                                           '''||VAR_EVENT_LOG_UPDATE.USER_ID||''',
                                           '''||VAR_C4||''',--证件类型为自定义字段  要转换成动态SQL
                                          '''||VAR_C7||''',--证件号为自定义字段  要转换成动态SQL
                                          '''||VAR_C1||''',--付款人姓名
                                           '''||VAR_POLICY_ACT_STA_LOG||''', --审核前状态
                                           '''||VAR_POLICY_ACT_STA_UPD||''', --审核后状态
                                           TO_DATE('''||TO_CHAR(VAR_EVENT_LOG_UPDATE.SYS_CREATION_DATE,'YYYY/MM/DD HH24:MI:SS')||''', ''YYYY/MM/DD HH24:MI:SS''),
                                           '''||get_province(VAR_EVENT_LOG_UPDATE.IP_COUNTRY, VAR_EVENT_LOG_UPDATE.IP_CITY, VAR_EVENT_LOG_UPDATE.Ip_Region)||''', --交易省份
                                           '''||VAR_EVENT_LOG_UPDATE.POLICY_RULE_ID||''', --规则名称
                                           '''||VAR_EVENT_LOG_UPDATE.RISK_SCORE||''' --风险分值
                                      )';

                                       -- insert into test(test_name) values(VAR_APPEND_RESULT_SQL);
                                       -- commit;
                                    execute immediate VAR_APPEND_RESULT_SQL;
                                    END IF;
                                END IF;

        ---------------------
                  end if;
                      --   '||GET_FACT_INDEX_BY_NAME('customer_full_name')||',--付款人姓名
            UPDATE  event_log_real_gather T SET
                  event_id=VAR_EVENT_LOG_UPDATE.EVENT_ID,
                   event_time=VAR_EVENT_LOG_UPDATE.EVENT_TIME,
                   ip_address=VAR_EVENT_LOG_UPDATE.IP_ADDRESS,
                   event_type=VAR_EVENT_LOG_UPDATE.EVENT_TYPE,
                   user_defined_event_type=VAR_EVENT_LOG_UPDATE.USER_DEFINED_EVENT_TYPE,
                   risk_score=VAR_EVENT_LOG_UPDATE.RISK_SCORE,
                   policy_action=VAR_EVENT_LOG_UPDATE.POLICY_ACTION,
                   challenge_auth_method=VAR_EVENT_LOG_UPDATE.CHALLENGE_AUTH_METHOD,
                   challenge_successful=VAR_EVENT_LOG_UPDATE.CHALLENGE_SUCCESSFUL,
                   policy_rule_id=VAR_EVENT_LOG_UPDATE.POLICY_RULE_ID,
                   short_date=VAR_EVENT_LOG_UPDATE.SHORT_DATE,
                   sys_creation_date=VAR_EVENT_LOG_UPDATE.SYS_CREATION_DATE,
                   lastmodified=VAR_EVENT_LOG_UPDATE.LASTMODIFIED,
                   user_id=VAR_EVENT_LOG_UPDATE.USER_ID,
                   user_hash=VAR_EVENT_LOG_UPDATE.USER_HASH,
                   preliminary_score=VAR_EVENT_LOG_UPDATE.PRELIMINARY_SCORE,
                   has_used=VAR_EVENT_LOG_UPDATE.HAS_USED,
                   has_used_time=VAR_EVENT_LOG_UPDATE.Lastmodified,
                   ip_country=VAR_EVENT_LOG_UPDATE.IP_COUNTRY,
                   ip_city=VAR_EVENT_LOG_UPDATE.IP_CITY,
                   channel_indicator=VAR_EVENT_LOG_UPDATE.CHANNEL_INDICATOR,
                   operating_system=VAR_EVENT_LOG_UPDATE.OPERATING_SYSTEM,
                   browser_type=VAR_EVENT_LOG_UPDATE.BROWSER_TYPE,
                   amount_original=VAR_EVENT_LOG_UPDATE.AMOUNT_ORIGINAL,
                   amount_currency=VAR_EVENT_LOG_UPDATE.AMOUNT_CURRENCY,
                   user_acct_number=VAR_EVENT_LOG_UPDATE.USER_ACCT_NUMBER,
                   ext_acct_number=VAR_EVENT_LOG_UPDATE.EXT_ACCT_NUMBER,
                   ext_acct_owner_name=VAR_EVENT_LOG_UPDATE.EXT_ACCT_OWNER_NAME,
                   flagged=VAR_EVENT_LOG_UPDATE.FLAGGED,
                   resolution=VAR_EVENT_LOG_UPDATE.RESOLUTION,
                   cdf_s_1=VAR_EVENT_LOG_UPDATE.CDF_S_1,
                   cdf_s_2=VAR_EVENT_LOG_UPDATE.CDF_S_2,
                   cdf_s_3=VAR_EVENT_LOG_UPDATE.CDF_S_3,
                   cdf_s_4=VAR_EVENT_LOG_UPDATE.CDF_S_4,
                   cdf_s_5=VAR_EVENT_LOG_UPDATE.CDF_S_5,
                   cdf_s_6=VAR_EVENT_LOG_UPDATE.CDF_S_6,
                   cdf_s_7=VAR_EVENT_LOG_UPDATE.CDF_S_7,
                   cdf_s_8=VAR_EVENT_LOG_UPDATE.CDF_S_8,
                   cdf_s_9=VAR_EVENT_LOG_UPDATE.CDF_S_9,
                   cdf_s_10=VAR_EVENT_LOG_UPDATE.CDF_S_10,
                   cdf_s_11=VAR_EVENT_LOG_UPDATE.CDF_S_11,
                   cdf_s_12=VAR_EVENT_LOG_UPDATE.CDF_S_12,
                   cdf_s_13=VAR_EVENT_LOG_UPDATE.CDF_S_13,
                   cdf_s_14=VAR_EVENT_LOG_UPDATE.CDF_S_14,
                   cdf_s_15=VAR_EVENT_LOG_UPDATE.CDF_S_15,
                   cdf_s_16=VAR_EVENT_LOG_UPDATE.CDF_S_16,
                   cdf_s_17=VAR_EVENT_LOG_UPDATE.CDF_S_17,
                   cdf_s_18=VAR_EVENT_LOG_UPDATE.CDF_S_18,
                   cdf_s_19=VAR_EVENT_LOG_UPDATE.CDF_S_19,
                   cdf_s_20=VAR_EVENT_LOG_UPDATE.CDF_S_20,
                   org_id=VAR_EVENT_LOG_UPDATE.ORG_ID,
                   is_device_bound=VAR_EVENT_LOG_UPDATE.IS_DEVICE_BOUND,
                   cookie=VAR_EVENT_LOG_UPDATE.COOKIE,
                   ip_region=VAR_EVENT_LOG_UPDATE.IP_REGION
                   WHERE T.EVENT_ID = VAR_EVENT_LOG_UPDATE.EVENT_ID
                   AND T.SHORT_DATE = VAR_EVENT_LOG_UPDATE.SHORT_DATE;

       END IF;
    --并修改更新表记录的状态
    UPDATE EVENT_LOG_UPDATE SET
    HAS_USED = 'Y'  WHERE EVENT_ID = VAR_EVENT_LOG_UPDATE.EVENT_ID AND SHORT_DATE = VAR_EVENT_LOG_UPDATE.SHORT_DATE;
     /*操作成功后修改日志记录*/
    UPDATE_COLLECT_DATA_LOG(
      VAR_RECORD_ID,
      NULL,
      SYSDATE,
      'SUCCESSFUL',
      VAR_RECORD_NUM,
      0
    );
  END IF;
  COMMIT;



  END LOOP;

  --关闭游标
  IF MY_CURSOR%ISOPEN THEN
     CLOSE MY_CURSOR;
  END IF;

  EXCEPTION
     WHEN OTHERS
     THEN
        --v_ErrorCode := SQLCODE;
        --v_ErrorText := SUBSTR(SQLERRM, 1, 200);
        ROLLBACK;
        /*操作失败后修改日志记录*/
         UPDATE_COLLECT_DATA_LOG(
           VAR_RECORD_ID,
           NULL,
           SYSDATE,
           'FAILED',
           VAR_RECORD_NUM,
           VAR_REDO_TIME
         );

       RETURN;

END APPEND_RESULT_WHEN_UPDATE;


------------

CREATE OR REPLACE PROCEDURE GET_DATA_2_PRO_INFORMAT_B --各省用户数量及报警情况总览表汇总--每个月JOB一次
IS

   TRANS_TIME_           DATE;--
   IS_NULL        NUMBER;--用于判断月报里有没有数据
  /*日志表的主键*/
   VAR_RECORD_ID VARCHAR2(50);

    TRANS_TIME_MIN_MON DATE;--月表中的最小时间
   TRANS_TIME_MAX_MON DATE;--月表中的最小时间
   MAX_TIME_IN_TARGET DATE;-- EVER_PROVINCE_INFORMATION表中的最大时间

BEGIN


   SELECT MAX(T.TRANS_TIME) INTO TRANS_TIME_MAX_MON FROM RP_TRANS_LOG_MONTH T;
   SELECT MIN(T.TRANS_TIME) INTO TRANS_TIME_MIN_MON FROM RP_TRANS_LOG_MONTH T;
   SELECT MAX(T.TRANS_TIME) INTO MAX_TIME_IN_TARGET FROM EVER_PROVINCE_INFORMATION T;

    IF TRANS_TIME_MAX_MON IS NOT NULL AND MAX_TIME_IN_TARGET IS NULL THEN
     WHILE TRANS_TIME_MIN_MON < TO_DATE(SUBSTR(TO_CHAR(SYSDATE,'YYYY/MM/DD'),1,8)||'01','YYYY/MM/DD')
       LOOP
         SELECT COUNT(*) INTO IS_NULL FROM RP_TRANS_LOG_MONTH T WHERE T.TRANS_TIME = TRANS_TIME_MIN_MON;
         IF IS_NULL > 0 THEN
             INSERT INTO EVER_PROVINCE_INFORMATION(
                 TRANS_TIME,     --交易时间
                 TRANS_PROVINCE ,--交易省份
                 TRANS_DITCH    ,--渠道
                 USER_NUM       ,--用户数量
                 USER_PERCENT   ,--用户百分比
                 DEVICE_NUM     ,--设备数量
                 DEVICE_PERCENT ,--设备百分比
                 ALARM_NUM      ,--报警数量
                 ALARM_PERCENT --报警百分比
              )
              SELECT T.TRANS_TIME,
                 T.TRANS_PROVINCE,
                 T.TRANS_DITCH,
                 (SELECT COUNT(DISTINCT U.CUSTOMER_ID) FROM RP_USERAMOUNT_PROVINCE_DITCH_C U WHERE U.TRANS_PROVINCE=T.TRANS_PROVINCE AND U.TRANS_DITCH=T.TRANS_DITCH AND U.TRANS_TIME=T.TRANS_TIME),
                 NUM_2_PER_UTIL((SELECT COUNT(DISTINCT U.CUSTOMER_ID) FROM RP_USERAMOUNT_PROVINCE_DITCH_C U WHERE U.TRANS_PROVINCE=T.TRANS_PROVINCE AND U.TRANS_DITCH=T.TRANS_DITCH AND U.TRANS_TIME=T.TRANS_TIME),
           
                       (SELECT COUNT(DISTINCT U.CUSTOMER_ID) FROM RP_USERAMOUNT_PROVINCE_DITCH_C U WHERE U.TRANS_PROVINCE=T.TRANS_PROVINCE  AND U.TRANS_TIME=T.TRANS_TIME)),
                 (SELECT COUNT(DISTINCT D.DEVICE_ID) FROM RP_PROVINCE_DITCH_DEVICEID D WHERE D.TRANS_PROVINCE=T.TRANS_PROVINCE AND D.TRANS_DITCH=T.TRANS_DITCH AND D.TRANS_TIME=T.TRANS_TIME),
                 NUM_2_PER_UTIL((SELECT COUNT(DISTINCT D.DEVICE_ID) FROM RP_PROVINCE_DITCH_DEVICEID D WHERE D.TRANS_PROVINCE=T.TRANS_PROVINCE AND D.TRANS_DITCH=T.TRANS_DITCH AND D.TRANS_TIME=T.TRANS_TIME),
                 (SELECT COUNT(DISTINCT D.DEVICE_ID) FROM RP_PROVINCE_DITCH_DEVICEID D WHERE D.TRANS_PROVINCE=T.TRANS_PROVINCE   AND D.TRANS_TIME=T.TRANS_TIME)),
                 SUM(CASE WHEN POLICY_ACTION = 'ALLOW' THEN 0 ELSE T.TRANS_NUM END),
                NUM_2_PER_UTIL( SUM(CASE WHEN POLICY_ACTION = 'ALLOW' THEN 0 ELSE T.TRANS_NUM END),(SELECT SUM(K.TRANS_NUM) FROM(SELECT SUM(E.TRANS_NUM) AS TRANS_NUM FROM RP_TRANS_LOG_MINUTE E )K ))
            FROM  RP_TRANS_LOG_MONTH T
            where t.trans_time=TRANS_TIME_MIN_MON and t.trans_province is not null
            group by t.trans_time,t.trans_province,t.trans_ditch
            order by t.trans_time,t.trans_province,t.trans_ditch;

             COMMIT;
             END IF;
         TRANS_TIME_MIN_MON := ADD_MONTHS(TRANS_TIME_MIN_MON,1);
       END LOOP;
ELSE


           SELECT COUNT(*) INTO IS_NULL FROM RP_TRANS_LOG_MONTH;

           IF IS_NULL IS NOT NULL THEN

           SET TRANSACTION NAME 'GET_DATA_2_PRO_INFORMAT_B';

              SELECT MAX(T.TRANS_TIME) INTO TRANS_TIME_ FROM RP_TRANS_LOG_MONTH T;
              IF TRANS_TIME_ IS NULL THEN
                 SELECT ADD_MONTHS(TO_DATE(SUBSTR(TO_CHAR(SYSDATE,'YYYY/MM/DD'),1,8)||'01','YYYY/MM/DD'),-1) INTO TRANS_TIME_ FROM DUAL;
              END IF;


             DELETE EVER_PROVINCE_INFORMATION T WHERE T.TRANS_TIME= TRANS_TIME_;

             INSERT INTO EVER_PROVINCE_INFORMATION(
                 TRANS_TIME,     --交易时间
                 TRANS_PROVINCE ,--交易省份
                 TRANS_DITCH    ,--渠道
                 USER_NUM       ,--用户数量
                 USER_PERCENT   ,--用户百分比
                 DEVICE_NUM     ,--设备数量
                 DEVICE_PERCENT ,--设备百分比
                 ALARM_NUM      ,--报警数量
                 ALARM_PERCENT --报警百分比
              )
               SELECT T.TRANS_TIME,
                 T.TRANS_PROVINCE,
                 T.TRANS_DITCH,
                 (SELECT COUNT(DISTINCT U.CUSTOMER_ID) FROM RP_USERAMOUNT_PROVINCE_DITCH_C U WHERE U.TRANS_PROVINCE=T.TRANS_PROVINCE AND U.TRANS_DITCH=T.TRANS_DITCH AND U.TRANS_TIME=T.TRANS_TIME),
                 NUM_2_PER_UTIL((SELECT COUNT(DISTINCT U.CUSTOMER_ID) FROM RP_USERAMOUNT_PROVINCE_DITCH_C U WHERE U.TRANS_PROVINCE=T.TRANS_PROVINCE AND U.TRANS_DITCH=T.TRANS_DITCH AND U.TRANS_TIME=T.TRANS_TIME),
                 (SELECT COUNT(DISTINCT U.CUSTOMER_ID) FROM RP_USERAMOUNT_PROVINCE_DITCH_C U WHERE U.TRANS_PROVINCE=T.TRANS_PROVINCE  AND U.TRANS_TIME=T.TRANS_TIME)),
                 (SELECT COUNT(DISTINCT D.DEVICE_ID) FROM RP_PROVINCE_DITCH_DEVICEID D WHERE D.TRANS_PROVINCE=T.TRANS_PROVINCE AND D.TRANS_DITCH=T.TRANS_DITCH AND D.TRANS_TIME=T.TRANS_TIME),
                 NUM_2_PER_UTIL((SELECT COUNT(DISTINCT D.DEVICE_ID) FROM RP_PROVINCE_DITCH_DEVICEID D WHERE D.TRANS_PROVINCE=T.TRANS_PROVINCE AND D.TRANS_DITCH=T.TRANS_DITCH AND D.TRANS_TIME=T.TRANS_TIME),
                 (SELECT COUNT(DISTINCT D.DEVICE_ID) FROM RP_PROVINCE_DITCH_DEVICEID D WHERE D.TRANS_PROVINCE=T.TRANS_PROVINCE   AND D.TRANS_TIME=T.TRANS_TIME)),
                 SUM(CASE WHEN POLICY_ACTION = 'ALLOW' THEN 0 ELSE T.TRANS_NUM END),
                NUM_2_PER_UTIL( SUM(CASE WHEN POLICY_ACTION = 'ALLOW' THEN 0 ELSE T.TRANS_NUM END),(SELECT SUM(K.TRANS_NUM) FROM(SELECT SUM(E.TRANS_NUM) AS TRANS_NUM FROM RP_TRANS_LOG_MINUTE E )K ))
            FROM  RP_TRANS_LOG_MONTH T
            where t.trans_time=TRANS_TIME_  and t.trans_province is not null
            group by t.trans_time,t.trans_province,t.trans_ditch
            order by t.trans_time,t.trans_province,t.trans_ditch;


             COMMIT;

             END IF;

      END IF;

      EXCEPTION

         WHEN OTHERS
         THEN
             ROLLBACK;
              INSERT_COLLECT_DATA_LOG_4_FIX(
              VAR_RECORD_ID,        --RECORD_ID 将来会返回主键，用于修改日志操作
              'GET_DATA_2_PRO_INFORMAT_B', --PROC_NAME 存储过程名称
              '',  --FROM_TABLE 来源表
              'EVER_PROVINCE_INFORMATION',  --TO_TABLE 目标表
              TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS') ,  --DATA_RANGE 数据范围
              TO_CHAR(TRANS_TIME_,'YYYY-MM-DD HH24:MI:SS'),        --DATA_BEGIN_TIME 数据开始时间
              TO_CHAR(TRANS_TIME_,'YYYY-MM-DD HH24:MI:SS')          --DATA_END_TIME 数据结束时间
            );

       RETURN ;

END GET_DATA_2_PRO_INFORMAT_B;


------------

CREATE OR REPLACE PROCEDURE insert_data_4_pressure_3
 is

  --Result1  VARCHAR2(50);
  VAR_num number;
begin
  VAR_num:=1;

 while
   VAR_num< 1000000
   LOOP
      insert into rp_trans_log_day
        (trans_time,
         trans_province,
         trans_type,
         score_range,
         rule_name,
         trans_num)

        select to_date('2013/10/29', 'yyyy-mm-dd'),
               round(dbms_random.value(1, 300)) || '省',
               round(dbms_random.value(1, 800)) || '类型',
               round(dbms_random.value(1, 100)) || '风险分值',
               round(dbms_random.value(1, 300)) || '规则名称',
               '1'
          from dual;

        commit;

    VAR_num:=VAR_num+1;
    end loop;


end insert_data_4_pressure_3;


------------

CREATE OR REPLACE PROCEDURE insert_data_4_pressure_6
 is

  --Result1  VARCHAR2(50);
  VAR_SYSDATE varchar2(100);
begin
  VAR_SYSDATE:='2013/10/31 12:00:00';
  
 while 
   to_date(VAR_SYSDATE,'yyyy-mm-dd hh24:mi:ss')<  to_date('2013/10/31 12:30:01','yyyy-mm-dd hh24:mi:ss')
   LOOP
       insert into event_log_realtime
        (event_id, event_time, ip_address, event_type, user_defined_event_type, risk_score, policy_action, challenge_auth_method, challenge_successful, policy_rule_id, short_date, sys_creation_date, lastmodified, user_id, user_hash, preliminary_score, has_used, has_used_time, ip_country, ip_city, channel_indicator, operating_system, browser_type, amount_original, amount_currency, user_acct_number, ext_acct_number, ext_acct_owner_name, flagged, resolution, cdf_s_1, cdf_s_2, cdf_s_3, cdf_s_4, cdf_s_5, cdf_s_6, cdf_s_7, cdf_s_8, cdf_s_9, cdf_s_10, cdf_s_11, cdf_s_12, cdf_s_13, cdf_s_14, cdf_s_15, cdf_s_16, cdf_s_17, cdf_s_18, cdf_s_19, cdf_s_20, org_id, is_device_bound, cookie, ip_region)
        select sys_guid(),  to_date(VAR_SYSDATE,'yyyy-mm-dd hh24:mi:ss'), ip_address, event_type, user_defined_event_type, risk_score, policy_action, challenge_auth_method, challenge_successful, policy_rule_id, to_char( to_date(VAR_SYSDATE,'yyyy-mm-dd hh24:mi:ss'),'yyyymmdd'),  to_date(VAR_SYSDATE,'yyyy-mm-dd hh24:mi:ss'),  to_date(VAR_SYSDATE,'yyyy-mm-dd hh24:mi:ss')+1/24/60, user_id, user_hash, preliminary_score,'N','', ip_country, ip_city, channel_indicator, operating_system, browser_type, amount_original, amount_currency, user_acct_number, ext_acct_number, ext_acct_owner_name, flagged, resolution, cdf_s_1, cdf_s_2, cdf_s_3, cdf_s_4, cdf_s_5, cdf_s_6, cdf_s_7, cdf_s_8, cdf_s_9, cdf_s_10, cdf_s_11, cdf_s_12, cdf_s_13, cdf_s_14, cdf_s_15, cdf_s_16, cdf_s_17, cdf_s_18, cdf_s_19, cdf_s_20, org_id, is_device_bound, cookie, ip_region from insert_data5 ;
         
        commit; 
        
        
    insert into event_log_update
     (event_id, event_time, ip_address, event_type, user_defined_event_type, risk_score, policy_action, challenge_auth_method, challenge_successful, policy_rule_id, short_date, sys_creation_date, lastmodified, user_id, user_hash, preliminary_score, ip_country, ip_city, channel_indicator, operating_system, browser_type, amount_original, amount_currency, user_acct_number, ext_acct_number, ext_acct_owner_name, flagged, resolution, cdf_s_1, cdf_s_2, cdf_s_3, cdf_s_4, cdf_s_5, cdf_s_6, cdf_s_7, cdf_s_8, cdf_s_9, cdf_s_10, cdf_s_11, cdf_s_12, cdf_s_13, cdf_s_14, cdf_s_15, cdf_s_16, cdf_s_17, cdf_s_18, cdf_s_19, cdf_s_20, org_id, is_device_bound, cookie, has_used, update_time, ip_region)
   select event_id, event_time, ip_address, event_type, user_defined_event_type, risk_score, policy_action, challenge_auth_method, challenge_successful, policy_rule_id, short_date, sys_creation_date, lastmodified+1/24/60*6, user_id, user_hash, preliminary_score, ip_country, ip_city, channel_indicator, operating_system, browser_type, amount_original, amount_currency, user_acct_number, ext_acct_number, ext_acct_owner_name, flagged, 'F', cdf_s_1, cdf_s_2, cdf_s_3, cdf_s_4, cdf_s_5, cdf_s_6, cdf_s_7, cdf_s_8, cdf_s_9, cdf_s_10, cdf_s_11, cdf_s_12, cdf_s_13, cdf_s_14, cdf_s_15, cdf_s_16, cdf_s_17, cdf_s_18, cdf_s_19, cdf_s_20, org_id, is_device_bound, cookie,'N','', ip_region from event_log_realtime t where t.event_time=VAR_SYSDATE AND ROWNUM<21;
          
   commit;
         
        
    VAR_SYSDATE:=to_char( to_date(VAR_SYSDATE,'yyyy-mm-dd hh24:mi:ss')+1/24/60/60,'yyyy-mm-dd hh24:mi:ss');
    end loop;


end insert_data_4_pressure_6;

------------

CREATE OR REPLACE PROCEDURE TEST_CURSOR1(NAME_COPY IN VARCHAR) IS
      VAR_USER_NAME VARCHAR2(20);
      VAR_USER_ID   VARCHAR2(50);
      var_table_user_name      gaodebao%ROWTYPE;
      VAR_TIME         DATE;
      CURSOR MY_CURSOR IS  SELECT * FROM GAODEBAO;
BEGIN
   SELECT MAX(TIME) INTO VAR_TIME FROM USER_NAME ;
   IF VAR_TIME IS NULL THEN  
     VAR_TIME:=SYSDATE;
    END IF;
   OPEN MY_CURSOR;
   LOOP
      FETCH MY_CURSOR INTO var_table_user_name;
      VAR_USER_NAME:=var_table_user_name.User_Name;
    VAR_USER_ID:= SYS_GUID();
  
     
       EXIT WHEN MY_CURSOR%NOTFOUND;
       BEGIN
          INSERT INTO USER_NAME(USER_NAME,USER_ID,TIME) VALUES(VAR_USER_NAME,VAR_USER_ID,VAR_TIME );
          COMMIT;
        VAR_TIME:=  VAR_TIME+1;
        END;
      END LOOP;
     
      IF MY_CURSOR%ISOPEN THEN
     CLOSE MY_CURSOR;
      END IF;
END TEST_CURSOR1;


------------

CREATE OR REPLACE PROCEDURE TEST_CURSOR(NAME_COPY IN VARCHAR) IS
      VAR_USER_NAME VARCHAR2(20);
      VAR_USER_ID   VARCHAR2(50);
      VAR_INPUT      VARCHAR(20);
      VAR_TIME         DATE;
      CURSOR MY_CURSOR IS  SELECT USER_NAME FROM GAODEBAO;
BEGIN
     SELECT MAX(TIME) INTO VAR_TIME FROM USER_NAME ;
     IF VAR_TIME IS NULL THEN  
        VAR_TIME:=SYSDATE;
     END IF;
   OPEN MY_CURSOR;
   LOOP
      FETCH MY_CURSOR INTO VAR_USER_NAME;
       VAR_USER_ID:= SYS_GUID();
       EXIT WHEN MY_CURSOR%NOTFOUND;
       BEGIN
          INSERT INTO USER_NAME(USER_NAME,USER_ID,TIME) VALUES(VAR_USER_NAME,VAR_USER_ID,VAR_TIME );
          COMMIT;
        VAR_TIME:=  VAR_TIME+1;
        END;
      END LOOP;
     
      IF MY_CURSOR%ISOPEN THEN
     CLOSE MY_CURSOR;
      END IF;
END TEST_CURSOR;


------------

 DBMS_LOCK.SLEEP(30);

------------

CREATE OR REPLACE PROCEDURE etl_add_day_partition(
                                              --p 向分区表添加按新的日期分区，如果分区已经存在不做任何操作
                                              p_table_name varchar2, --s 分区表名称
                                              p_as_of_date date) --s 添加分区的日期
 as
  v_count    integer;
  csql       varchar2(4000);
  v_max_date date;
  v_user     varchar2(200);
begin
  --检查是否存在参数所指向的分区
  select count(*)
    into v_count
    from all_tab_partitions
   where table_name = upper(p_table_name)
     and partition_name = 'P' || to_char(p_as_of_date, 'yyyymmdd');

    select to_date(substr(max(partition_name), 2), 'yyyymmdd')
      into v_max_date
      from all_tab_partitions
     where table_name = upper(p_table_name);

    select table_owner
      into v_user
      from all_tab_partitions
     where table_name = upper(p_table_name)
       and rownum = 1;

  if v_count = 0
  then
    --不存在此分区


    loop
      v_max_date := v_max_date + 1;
      if v_max_date <= p_as_of_date
      then
        -- 使用 alter table add partition 语句添加分区
        csql := '  alter table ' || v_user || '.' || p_table_name ||
                ' add partition P' || to_char(v_max_date, 'yyyymmdd') ||
                ' values LESS than ( to_date(''' ||
                to_char(v_max_date + 1, 'yyyymmdd') || ''',''yyyymmdd'')) ';
        execute immediate csql;
      else
        return;
      end if;
    end loop;

     --如果存在该日期指向的分区则清空该分区
    else
     csql := '  alter table ' || v_user || '.' || p_table_name ||
                ' truncate partition P' || to_char(p_as_of_date, 'yyyymmdd');
     execute immediate csql;

  end if;
exception
  when others then
    dbms_output.put_line(p_table_name || ':' || SQLERRM);
end;



------------

job执行大略顺序
查询所有表是否为空
清空所有的表
跑job
7张同步数据
查看job进程数
ssh中设置.profile
real_2_min插入数据的辅助表
跑job
删除所有表

------------

append_result_when_update, 五分钟跑一次，进行更新表用的，relatime到mintue
batch_transfor_data, 8.汇总从小时为粒度到年的所有汇总。调用了
		get_data_from_day_2_month, 
		get_data_from_day_2_week, 
		get_data_from_halfyear_2_year, 
		get_data_from_hour_2_day, 
create_partition, 2.每天晚上23点建立第二天的分区
create_partition_when_setup, 1：第一次运行的时候运行建立分区，初始化运行一次
drop_partition, 10，删除90天以前的log表。三天前real表。九十天以前的分钟和小时表
d_p_4_sit, 删除所有分区
get_data_2_auth_m_and_re_cc, 
get_data_2_cli_beha_als_cc, 
get_data_2_device_risk_i_b, 
get_data_2_fixdate_sololine_t, 
get_data_2_pro_informat_b, 
get_data_from_day_2_month, 
get_data_from_day_2_week, 
get_data_from_halfyear_2_year, 
get_data_from_hour_2_day, 
get_data_from_minute_2_hour, 6.调用
get_data_from_month_2_halfyear, 
get_data_from_month_2_quarter, 
get_data_from_realtim_2_minute, 4.负责从real到min并且汇总到辅助表。
insert_collect_data_log, 除固定周期表外的所有表往里面插的。
insert_collect_data_log_4_fix, 固定周期的报表往日志表里面插
job_batch_transfor_data,  7.调用batch_transfor_data，还执行   
                       get_data_2_auth_m_and_re_cc, 
			get_data_2_cli_beha_als_cc, 
			get_data_2_device_risk_i_b, 
			get_data_2_fixdate_sololine_t, 
			get_data_2_pro_informat_b,	
job_create_partition, 创建并删除分区
job_make_up_batch_data, 
job_make_up_minute_2_hour, 捡漏分钟表
job_make_up_realtime_2_minute, 11,调用的是get_data_from_realtim_2_minute 找到汇总时间最大值，然后前推到realtime的最小时间值，然后进行汇总hasused=“n”并且汇总次数小于等于三，并且汇总状态不是R（正在汇总）。
job_minute_2_hour,   5.调用的是min_2_hour  每小时执行一次。
job_realtime_2_minute, 3：通过这个job调用real_to_min。每五分钟执行一次
test_ins_evt_log_rtime_4_sit, 
test_ins_evt_log_r_u_4_uat, 
truncate_and_drop_partition, 9.调用drop_partition
t_xinbl_update, 
update_collect_data_log  





------------

select count(*) from rp_CHALLENGE_FAIL_BD_DEVICE_ID;
select count(*) from rp_BD_DEVICE_ID;
select count(*) from rp_BD_DEVICE_CUSTOMER_ID;
select count(*) from rp_TRANS_DITCH_CUSTOMER_ID;
select count(*) from rp_USERAMOUNT_PROVINCE_DITCH_C;
select count(*) from rp_ALL_OF_DEVICE_ID;
select count(*) from rp_DEVICE_ID_IP_TRANS_PRO;
select count(*) from rp_IP_UNIQUE;
select count(*) from rp_COUNT_DIVICE_AMOUNT;
select count(*) from rp_COUNT_USER_AMOUNT;
select count(*) from rp_CUSTOMER_ID_IP_TRANS_PRO;
select count(*) from rp_PROVINCE_CUSTOMER_AMOUNT;
select count(*) from rp_PROVINCE_DITCH_DEVICEID;
select count(*) from rp_PROVINCE_DEVICEID;


select count(*) from rp_comfirmed_event_detail;
select count(*) from rp_err_lost_detail;

select count(*) from rp_trans_log_day;
select count(*) from rp_trans_log_halfyear;
select count(*) from rp_trans_log_hour;
select count(*) from rp_trans_log_minute;
select count(*) from rp_trans_log_month;
select count(*) from rp_trans_log_quarter;
select count(*) from rp_trans_log_week;
select count(*) from rp_trans_log_year;

select count(*) from  rp_fixdate_sololine;
select count(*) from  rp_auth_method_and_result;
select count(*) from  device_risk_information;
select count(*) from  rp_client_behave_als;
select count(*) from  ever_province_information;


------------

truncate table  RP_CHALLENGE_FAIL_BD_DEVICE_ID;
truncate table  RP_BD_DEVICE_ID;
truncate table  RP_BD_DEVICE_CUSTOMER_ID;
truncate table  RP_TRANS_DITCH_CUSTOMER_ID;
truncate table  RP_USERAMOUNT_PROVINCE_DITCH_C;
truncate table  RP_ALL_OF_DEVICE_ID;
truncate table  RP_DEVICE_ID_IP_TRANS_PRO;
truncate table  RP_IP_UNIQUE;
truncate table  RP_COUNT_DIVICE_AMOUNT;
truncate table  RP_COUNT_USER_AMOUNT;
truncate table  RP_CUSTOMER_ID_IP_TRANS_PRO;
truncate table  RP_PROVINCE_CUSTOMER_AMOUNT;
truncate table  RP_PROVINCE_DITCH_DEVICEID;
truncate table  RP_PROVINCE_DEVICEID;

truncate table  RP_ERR_LOST_DETAIL;
truncate table   RP_COMFIRMED_EVENT_DETAIL;

truncate table   rp_trans_log_minute;
truncate table   rp_trans_log_hour;
truncate table   rp_trans_log_day;
truncate table   rp_trans_log_week;
truncate table   rp_trans_log_month;
truncate table   rp_trans_log_quarter;
truncate table   rp_trans_log_halfyear;
truncate table   rp_trans_log_year;

truncate table  rp_fixdate_sololine;
truncate table  rp_auth_method_and_result;
truncate table  device_risk_information;
truncate table  rp_client_behave_als;
truncate table  ever_province_information;


truncate table RP_COLLECT_DATA_LOG;

truncate table TEST;




UPDATE EVENT_LOG_REALTIME T SET T.HAS_USED='N' ;






------------

在跑job的时候去：select * from rp_collect_data_log t where t.op_status!='SUCCESSFUL';看执行的时间是否在变
select count(*) from rp_trans_log_minute;

------------

select * from event_log t where event_id = '6a57:02a2cbd9e31:15ec2251_TRX1'
   and short_date = '20150530';
   
   select * from event_log_realtime t where event_id = '6a57:02a2cbd9e31:15ec2251_TRX3'
   and short_date = '20150530';
   
   select * from event_log_update t where event_id = '6a57:02a2cbd9e31:15ec2251_TRX1'
   and short_date = '20150530';

   select * from acspuseraccount t where t.acspid='11213';

   select * from desktops t where t.pmid='11';  90

   select * from pm_policy t where t.id='11';   

   select * from pm_rule t where t.id='11';

   select * from userchangehistory t where t.uhid='112111';

   select * from users t where t.username='11';  

   select * from FACT_META_DATA t where t.id='1122';  

------------

show parameter job_queue_process;查看可以跑的job数
select * from dba_jobs_running ;l查看正在跑的job
select * from dba_jobs ;
alter system set job_queue_processes=0 --关闭job进程，等待5--10秒钟 

alter system set job_quene_processes=5 --恢复原来的值 


------------


".profile" 28 lines, 948 characters 
umask 022
export ORACLE_SID=oraAOPF1
export ORACLE_BASE=/oracle/app/oracle
export GRID_HOME=/oracle/app/11.2.0/grid
export ORACLE_HOME=$ORACLE_BASE/product/11.2.0/db
export PATH=$ORACLE_HOME/bin:$GRID_HOME/bin:$PATH:$ORACLE_HOME/OPatch
export PATH=$PATH:/bin:/usr/ccs/bin:/usr/bin/X11:.:/usr/java5/bin
export LD_LIBRARY_PATH=$ORACLE_HOME/lib:$ORACLE_HOME/rdbms/lib:/lib:/usr/lib
export CLASSPATH=$ORACLE_HOME/JRE:$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib:$ORA
CLE_HOME/network/jlib
export NLS_LANG=AMERICAN_AMERICA.AL32UTF8
export ORACLE_OWNER=oracle
export PS1='$LOGNAME@'`hostname`:'$PWD''$ '
export AIXTHREAD_SCOPE=S
export ORACLE_TERM=vt100
export ORA_NLS33=$ORACLE_HOME/nls/data
export TMP=/tmp
export TMPDIR=/tmp
export OPATCH_PLATFORM_ID=212
export DISPLAY=3.3.3.229:0.0
export ORA_NL10=$ORACLE_HOME/nls/data
set -o vi
export EDITOR=vi
".profile" 28 lines, 948 characters
umask 022
export ORACLE_SID=oraAOPF1
export ORACLE_BASE=/oracle/app/oracle
export GRID_HOME=/oracle/app/11.2.0/grid
export ORACLE_HOME=$ORACLE_BASE/product/11.2.0/db
export PATH=$ORACLE_HOME/bin:$GRID_HOME/bin:$PATH:$ORACLE_HOME/OPatch
export PATH=$PATH:/bin:/usr/ccs/bin:/usr/bin/X11:.:/usr/java5/bin
export LD_LIBRARY_PATH=$ORACLE_HOME/lib:$ORACLE_HOME/rdbms/lib:/lib:/usr/lib
export CLASSPATH=$ORACLE_HOME/JRE:$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib:$ORACLE_HOME/network/jlib
export NLS_LANG=AMERICAN_AMERICA.AL32UTF8
export ORACLE_OWNER=oracle
export PS1='$LOGNAME@'`hostname`:'$PWD''$ '
export AIXTHREAD_SCOPE=S
export ORACLE_TERM=vt100
export ORA_NLS33=$ORACLE_HOME/nls/data
export TMP=/tmp
export TMPDIR=/tmp
export OPATCH_PLATFORM_ID=212
export DISPLAY=3.3.3.229:0.0
export ORA_NL10=$ORACLE_HOME/nls/data
set -o vi
export EDITOR=vi
alias l='ls -l'
export LANG=en_US
export NLS_DATE_FORMAT='YYYY-MM-DD HH24:MI:SS'











------------

1.RP_ALL_OF_DEVICE_ID（交易时间、设备ID）
2.RP_BD_DEVICE_CUSTOMER_ID（客户ID、是否绑定设备、交易时间）
3.RP_BD_DEVICE_ID（设备ID、设备类型、交易时间）
4.RP_CHALLENGE_FAIL_BD_DEVICE_ID（认证方式、设备ID、交易时间）
5.RP_COUNT_DIVICE_AMOUNT（操作系统、浏览器、设备类型、设备ID、交易时间、渠道）
6.RP_COUNT_USER_AMOUNT（操作系统、浏览器、设备类型、客户ID、交易时间、渠道）
7.RP_CUSTOMER_ID_IP_TRANS_PRO（客户ID、IP地址、交易省份、交易时间）
8.RP_ID_UNQUE（IP地址、交易时间）
9.RP_PROVINCE_CUSTOMER_AMOUNT（交易省份、客户ID、交易时间）
10.RP_PROVINCE_DEVICEID(交易省份、设备ID、交易时间)
11.RP_PROVINCE_DITCH_DEVICEID(交易省份、设备ID、交易时间、交易渠道)
12.RP_TRANS_DITCH_CUSTOMER_ID(交易渠道、客户ID、交易时间)
13.RP_USERAMOUNT_PROVINCE_DITCH_C(交易渠道、客户ID、交易时间、省份)
14.RP_DEVICE_ID_IP_TRANS_PRO( 设备ID,IP地址,交易省份,交易时间)
15.RP_COMFIRMED_EVENT_DETAIL 已确认欺诈交易表 

------------

--以下为相应job
variable job1 number; 
begin 
sys.dbms_job.submit(job => :job1, 
what => 'CREATE_PARTITION_WHEN_SETUP();', 
next_date => sysdate, ----当前时间执行 仅仅执行一次
interval => 'sysdate+100000');
commit; 
end; 
/ 
variable job1 number; 
begin 
sys.dbms_job.submit(job => :job1, 
what => 'JOB_BATCH_TRANSFOR_DATA();', 
next_date => TO_DATE(TO_CHAR(SYSDATE+1,'YYYY-MM-DD'),'YYYY-MM-DD')+1/24, ----明天01：00执行 间隔一天
interval => 'sysdate+1');
commit; 
end; 
/ 
variable job1 number; 
begin 
sys.dbms_job.submit(job => :job1, 
what => 'JOB_MAKE_UP_BATCH_DATA();', 
next_date => TO_DATE(TO_CHAR(SYSDATE+1,'YYYY-MM-DD'),'YYYY-MM-DD')+1/12, --明天02：00执行 间隔一天
interval => 'sysdate+1');
commit; 
end; 
/
variable job1 number; 
begin 
sys.dbms_job.submit(job => :job1, 
what => 'JOB_MAKE_UP_MINUTE_2_HOUR();', 
next_date => TO_DATE(TO_CHAR(SYSDATE+1/24,'YYYY-MM -DD hh24'),'YYYY-MM-DD hh24')+1/24/6, --下个小时过十分钟执行第一次 间隔一个小时
interval => 'sysdate+1/24');
commit; 
end; 
/
variable job1 number; 
begin 
sys.dbms_job.submit(job => :job1, 
what => 'JOB_MAKE_UP_REALTIME_2_MINUTE();', 
next_date => TO_DATE(TO_CHAR(SYSDATE+1/24,'YYYY-MM-DD hh24'),'YYYY-MM-DD hh24')+1/24/15, --下个小时过四分钟执行第一次 间隔五分钟 
interval => 'sysdate+1/24/60*5');
commit; 
end; 
/
variable job1 number; 
begin 
sys.dbms_job.submit(job => :job1, 
what => 'JOB_MINUTE_2_HOUR();', 
next_date => TO_DATE(TO_CHAR(SYSDATE+1/24,'YYYY-MM-DD hh24'),'YYYY-MM-DD hh24')+1/24/12, --下个小时过五分钟执行第一次 间隔一个小时
interval => 'sysdate+1/24');
commit; 
end; 
/
variable job1 number; 
begin 
sys.dbms_job.submit(job => :job1, 
what => 'JOB_REALTIME_2_MINUTE();', 
next_date =>  TO_DATE(TO_CHAR(SYSDATE+1/24,'YYYY-MM-DD hh24'),'YYYY-MM-DD hh24')+1/24/30, --下个小时过两分钟执行第一次 间隔五分钟
interval => 'sysdate+1/24/60*5');
commit; 
end; 
/
variable job1 number; 
begin 
sys.dbms_job.submit(job => :job1, 
what => 'JOB_CREATE_PARTITION();', 
next_date => TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD'),'YYYY-MM-DD')+1/24*23, --今天23：00执行 创建明天的分区 间隔一天, 
interval => 'sysdate+1');
commit; 
end; 
/
variable job1 number; 
begin 
sys.dbms_job.submit(job => :job1, 
what => 'APPEND_RESULT_WHEN_UPDATE();', 
next_date =>  TO_DATE(TO_CHAR(SYSDATE+1/24,'YYYY-MM-DD hh24'),'YYYY-MM-DD hh24')+1/24/30, --下个小时过两分钟执行第一次 间隔五分钟
interval => 'sysdate+1/24/60*5');
commit; 
end; 
/


------------


drop table AM_DOMAIN  cascade constraints;
drop table AM_ATTRIBUTE  cascade constraints;
drop table AM_ATTRIBUTECONDITION  cascade constraints;
drop table AM_CONDITION  cascade constraints;
drop table AM_CONDITIONGROUP  cascade constraints;
drop table AM_CONDITIONGROUP_CONDITION  cascade constraints;
drop table AM_DICTIONARY  cascade constraints;
drop table AM_FUNCTION  cascade constraints;
drop table AM_GROUP  cascade constraints;
drop table AM_GROUP_MENUIDS  cascade constraints;
drop table AM_MENU  cascade constraints;
drop table AM_OPTION  cascade constraints;
drop table AM_OPTION2  cascade constraints;
drop table AM_ORGAN  cascade constraints;
drop table AM_ORGANCONDITION  cascade constraints;
drop table AM_PERMISSION  cascade constraints;
drop table AM_RATE_APPLICATION_MANAGER  cascade constraints;
drop table AM_RATE_MAINTAIN  cascade constraints;
drop table AM_USER  cascade constraints;
drop table acspuseraccount  cascade constraints;
drop table DESKTOPS  cascade constraints;
drop table DEVICE_RISK_INFORMATION  cascade constraints;
drop table EVENT_LOG  cascade constraints;
drop table EVENT_LOG_REALTIME  cascade constraints;
drop table EVENT_LOG_REAL_GATHER  cascade constraints;
drop table EVENT_LOG_UPDATE  cascade constraints;
drop table EVER_PROVINCE_INFORMATION  cascade constraints;
drop table FACT_META_DATA  cascade constraints;
drop table INSERT_DATA  cascade constraints;
drop table INSERT_DATA1500  cascade constraints;
drop table INSERT_DATA2  cascade constraints;
drop table PM_POLICY  cascade constraints;
drop table PM_RULE  cascade constraints;
drop table RP_ALL_OF_DEVICE_ID  cascade constraints;
drop table RP_AUTH_METHOD_AND_RESULT  cascade constraints;
drop table RP_BD_DEVICE_CUSTOMER_ID  cascade constraints;
drop table RP_BD_DEVICE_ID  cascade constraints;
drop table RP_CHALLENGE_FAIL_BD_DEVICE_ID  cascade constraints;
drop table RP_CLIENT_BEHAVE_ALS  cascade constraints;
drop table RP_COLLECT_DATA_LOG  cascade constraints;
drop table RP_COMFIRMED_EVENT_DETAIL  cascade constraints;
drop table RP_COMMON_LIST  cascade constraints;
drop table RP_COUNT_DIVICE_AMOUNT  cascade constraints;
drop table RP_COUNT_USER_AMOUNT  cascade constraints;
drop table RP_CUSTOMER_ID_IP_TRANS_PRO  cascade constraints;
drop table RP_DEVICE_ID_IP_TRANS_PRO  cascade constraints;
drop table RP_ERR_LOST_DETAIL  cascade constraints;
drop table RP_FIXDATE_SOLOLINE  cascade constraints;
drop table RP_IP_UNIQUE  cascade constraints;
drop table RP_PROVINCE_CUSTOMER_AMOUNT  cascade constraints;
drop table RP_PROVINCE_DEVICEID  cascade constraints;
drop table RP_PROVINCE_DITCH_DEVICEID  cascade constraints;
drop table RP_REAL_TO_ERR  cascade constraints;
drop table RP_TRANS_DITCH_CUSTOMER_ID  cascade constraints;
drop table RP_TRANS_LOG_CONFIRMEDFRAUD  cascade constraints;
drop table RP_TRANS_LOG_DAY  cascade constraints;
drop table RP_TRANS_LOG_HALFYEAR  cascade constraints;
drop table RP_TRANS_LOG_HOUR  cascade constraints;
drop table RP_TRANS_LOG_LEAKFRAUD  cascade constraints;
drop table RP_TRANS_LOG_MINUTE  cascade constraints;
drop table RP_TRANS_LOG_MONTH  cascade constraints;
drop table RP_TRANS_LOG_QUARTER  cascade constraints;
drop table RP_TRANS_LOG_WEEK  cascade constraints;
drop table RP_TRANS_LOG_YEAR  cascade constraints;
drop table RP_USERAMOUNT_PROVINCE_DITCH_C  cascade constraints;
drop table USERS  cascade constraints;
drop table USERCHANGEHISTORY  cascade constraints;
drop table test  cascade constraints;

------------

GET_REAL_TIME_FOR_MINUTE
GET_RECORD_ID_AND_REDO_TIME
GET_PROVINCE
GET_NAME_BY_CODE
GET_FACT_INDEX_BY_NAME
GET_AMT_BY_CURRENCY
GET_LINE_BY_NUM
GET_TOTAL_EVENT_TYPE
GET_FACT_INDEX_BY_NAME

------------

如果分钟位数为0-5的话，就直接变分钟位为0，去除秒数；如果分钟位数为大于5（6-9）的话，就直接变分钟位为5，去除秒数
传入的DATA_TIME为分钟表里面的最大的汇总时间

create or replace function GET_REAL_TIME_FOR_MINUTE(
        DATA_TIME VARCHAR2 --时间
        ) return VARCHAR2
         is
     VAR_DATA_TIME VARCHAR(100);
--AUTHOR:王几
--根据传入时间的分钟的尾数获取本次汇总开始的时间（只针对每五分汇总）
begin
   VAR_DATA_TIME := DATA_TIME;
   IF TO_NUMBER(SUBSTR(VAR_DATA_TIME,16,1)) > 0
   AND TO_NUMBER(SUBSTR(VAR_DATA_TIME,16,1)) <5 THEN
    VAR_DATA_TIME := SUBSTR(VAR_DATA_TIME,0,15) || '0';
    ELSE IF TO_NUMBER(SUBSTR(VAR_DATA_TIME,16,1)) > 5 THEN
    VAR_DATA_TIME := SUBSTR(VAR_DATA_TIME,0,15) || '5';
    END IF;
   END IF;
   return VAR_DATA_TIME;
end;

------------

获取日志表里面某条数据的id和记录的时间，返回一个TIME_AND_ID；

create or replace function GET_RECORD_ID_AND_REDO_TIME (
      MIN_TIME VARCHAR2,--分钟表里面的最大的时间
      PROC_NAME VARCHAR2 --存储过程的名称
      )RETURN VARCHAR
         is
     TIME_AND_ID VARCHAR(100);
     VAR_MIN_TIME VARCHAR(100);
     VAR_PROC_NAME VARCHAR(100);
--AUTHOR:王几
--获取日志表里的某一条日志的ID和REDO_TIME
begin
  VAR_MIN_TIME := MIN_TIME;
  VAR_PROC_NAME := PROC_NAME;
  SELECT SUBSTR(OP_STATUS,0,1)||'0'||T.REDO_TIMES||T.RECORD_ID  INTO TIME_AND_ID
  FROM RP_COLLECT_DATA_LOG T WHERE T.PROC_NAME = VAR_PROC_NAME
  AND T.DATA_BEGIN_TIME = VAR_MIN_TIME AND ROWNUM < 2;
  if TIME_AND_ID is null then
     TIME_AND_ID :='N-11234';--N代表这个时间段的汇总没有被执行过，R标示正在执行，S表示已经执行成功，F表示失败
  end if;                    --只有在R的状态下不执行汇总
  return TIME_AND_ID;
  exception
  when NO_DATA_FOUND then
   TIME_AND_ID := 'N-11234';
   return TIME_AND_ID;
end;


------------

通过IP_COUNTRY、IP_CITY获取到省份所属
create or replace function GET_PROVINCE(--根据城市名称获取省份
        IP_COUNTRY VARCHAR2 ,--国家
        IP_CITY VARCHAR2 ,--城市
        IP_region
        ) return VARCHAR2
         is
     TRANS_PROVINCE VARCHAR(100);
--AUTHOR:毛小明
--根据数据字典里的值获得名称 如省份02返回河北
begin
  IF IP_COUNTRY = 'cn' THEN
    select O.AM_NAME
    into TRANS_PROVINCE
    from AM_OPTION O,AM_DICTIONARY D
    where  O.AM_DICTIONARY_ID = D.AM_ID
    and  D.AM_CODE = 'province_change'
    and O.AM_VALUE = IP_CITY
    and ROWNUM < 2;
    if TRANS_PROVINCE is null then
       TRANS_PROVINCE := IP_CITY;
    end if;
    return TRANS_PROVINCE;
  else
     TRANS_PROVINCE := IP_CITY;
     return TRANS_PROVINCE;
  end if;
  exception
    when NO_DATA_FOUND then
     TRANS_PROVINCE := IP_CITY;
     return TRANS_PROVINCE;
end;


------------

create or replace function GET_NAME_BY_CODE(
        DATA_CODE VARCHAR2 ,--编号
        TYPE_CODE VARCHAR2 --类型
        ) return VARCHAR2
         is
     DATE_NAME VARCHAR(100);
--AUTHOR:毛小明
--根据数据字典里的值获得名称 如省份02返回河北
begin
  select O.AM_NAME
  into DATE_NAME
  from AM_OPTION O,AM_DICTIONARY D
  where  O.AM_DICTIONARY_ID = D.AM_ID
  and  D.AM_CODE = TYPE_CODE
  and O.AM_VALUE = DATA_CODE
  and ROWNUM < 2;
  if DATE_NAME is null then
     DATE_NAME := DATA_CODE;
  end if;
  return DATE_NAME;
  exception
  when NO_DATA_FOUND then
   DATE_NAME := DATA_CODE;
   return DATE_NAME;
end;


------------

通过它的索引名字获取实际的custom_fact_index从未形成CDF_S_6的形式（自定义字段）
create or replace function GET_FACT_INDEX_BY_NAME(
       DATA_NAME VARCHAR2--名称
       )
        return VARCHAR2 is
       FACT_INDEX VARCHAR(20);
--AUTHOR：毛小明
begin
  select 'CDF_S_' || T.CUSTOM_FACT_INDEX
    into FACT_INDEX
    from FACT_META_DATA T
    where STATUS = '1'
    AND T.NAME = DATA_NAME
    AND  ROWNUM < 2;
   if FACT_INDEX = 'CDF_S_' then
     FACT_INDEX := 'CDF_S_1';
   end if;
   return FACT_INDEX;
   exception
   when NO_DATA_FOUND then FACT_INDEX := 'CDF_S_1';
   return FACT_INDEX;
  end;


------------

通过币种和金额来转换成人民币。
create or replace function GET_AMT_BY_CURRENCY(
       INPUT_AMOUNT_ORIGINAL NUMBER,  --金额
       INPUT_AMOUNT_CURRENCY VARCHAR2 --币种
       )
        return VARCHAR2 is
       OUT_AMOUNT_CNY NUMBER(20,2); --返回CNY金额
       VAR_CURRENCY_RATE NUMBER(20,2); --外币兑换人民币汇率
       VAR_CURRENCY_UNIT NUMBER(10); --汇率转换单位
begin
   IF INPUT_AMOUNT_ORIGINAL IS NULL OR INPUT_AMOUNT_ORIGINAL='' THEN
        OUT_AMOUNT_CNY := 0;
        RETURN OUT_AMOUNT_CNY;
	 END IF;
    IF INPUT_AMOUNT_CURRENCY='CNY' OR INPUT_AMOUNT_CURRENCY='RMB' OR INPUT_AMOUNT_CURRENCY='' THEN--原币种为人民币，无需转换
		 		OUT_AMOUNT_CNY := INPUT_AMOUNT_ORIGINAL;
		 		RETURN OUT_AMOUNT_CNY;
		 ELSE
		 		SELECT TO_NUMBER(A.AM_RATE_UNIT)
          INTO VAR_CURRENCY_UNIT
          FROM AM_RATE_MAINTAIN A WHERE A.AM_CURRENCY_CODE=INPUT_AMOUNT_CURRENCY;
          SELECT A.AM_DISCOUNT_PRICE
          INTO VAR_CURRENCY_RATE
          FROM AM_RATE_MAINTAIN A WHERE A.AM_CURRENCY_CODE=INPUT_AMOUNT_CURRENCY;
        OUT_AMOUNT_CNY := INPUT_AMOUNT_ORIGINAL*VAR_CURRENCY_RATE/VAR_CURRENCY_UNIT; --获取到外币汇率，转换为人民币
          RETURN OUT_AMOUNT_CNY;
      END IF;

      exception
          when NO_DATA_FOUND then OUT_AMOUNT_CNY := INPUT_AMOUNT_ORIGINAL; --无法识别币种，按照原金额大小存储
          RETURN OUT_AMOUNT_CNY;
END;


------------

create or replace function GET_LINE_BY_NUM(
num in number--传入数字，确定表中列的值
)
return VARCHAR2 is

  Result1  VARCHAR2(50);--返回一个百分数
begin
  select
          case when NUM=1 then 'CCC'
                when NUM=2 then 'QUESTION'
                when NUM =3 then 'SMS'
                when NUM =4 then 'DENY'
                when NUM =5 then 'CHALLENGE'
                when NUM =6 then 'REVIEW'
                when NUM =7 then 'ALLOW'
                   END
                INTO Result1  FROM DUAL;


  return Result1;
end GET_LINE_BY_NUM;

------------

create or replace function GET_TOTAL_EVENT_TYPE (
       EVENT_TYPE IN VARCHAR2, --事件类型
       USER_DEFINED_EVENT_TYPE IN VARCHAR2 --自定义事件类型
   ) return VARCHAR2 --定义返回的数据类型
  is
  /*最终的交易类型*/
  VAR_TOTAL_EVENT_TYPE VARCHAR2(100);
--AUTHOR: 毛小明
--获取交易的事件类型
  BEGIN

    CASE
    WHEN EVENT_TYPE = 'CLIENT_DEFINED'
    THEN VAR_TOTAL_EVENT_TYPE := USER_DEFINED_EVENT_TYPE;
    WHEN EVENT_TYPE != 'CLIENT_DEFINED' AND USER_DEFINED_EVENT_TYPE IS NULL
    THEN VAR_TOTAL_EVENT_TYPE := EVENT_TYPE;
    ELSE VAR_TOTAL_EVENT_TYPE := CONCAT(EVENT_TYPE||'-',USER_DEFINED_EVENT_TYPE);
    END CASE;

    RETURN VAR_TOTAL_EVENT_TYPE;

  END GET_TOTAL_EVENT_TYPE;


------------

create or replace function GET_FACT_INDEX_BY_NAME(
       DATA_NAME VARCHAR2--名称
       )
        return VARCHAR2 is
       FACT_INDEX VARCHAR(20);
--AUTHOR：毛小明
begin
  select 'CDF_S_' || T.CUSTOM_FACT_INDEX
    into FACT_INDEX
    from FACT_META_DATA T
    where STATUS = '1'
    AND T.NAME = DATA_NAME
    AND T.DELETION_DATE IS NULL
    AND  ROWNUM < 2;
   if FACT_INDEX = 'CDF_S_' then
     FACT_INDEX := 'CDF_S_1';
   end if;
   return FACT_INDEX;
   exception
   when NO_DATA_FOUND then FACT_INDEX := 'CDF_S_1';
   return FACT_INDEX;
  end;


------------


辛宝磊 2014/1/23 13:16:30
你弄吧 没有弄好
淡如水的空间 2014/1/23 13:16:41
你弄吧，
我休息会，

辛宝磊  11:12:39
     
      1、创建数据表空间  
		create tablespace RPTDAT
		datafile 'd:\oracle\product\10.2.0\oradata\bocReport\RPTDAT.dbf' 
		size 50m  
		autoextend on  
		next 50m maxsize 20480m; 
      2、创建用户并指定表空间
		create user tmrpt identified by tmrpt
		default tablespace RPTDAT
		temporary tablespace temp; 
		
		 create tablespace RPTIND
		datafile 'd:\oracle\product\10.2.0\oradata\bocReport\RPTIND.dbf' 
		size 50m  
		autoextend on  
		next 50m maxsize 20480m;  
   		   
      3、给用户授予权限  
		grant dba to tmrpt;
		GRANT 
		　　CREATE SESSION, CREATE ANY TABLE, CREATE ANY VIEW ,CREATE ANY INDEX, CREATE ANY PROCEDURE,
		　　ALTER ANY TABLE, ALTER ANY PROCEDURE,
		　　DROP ANY TABLE, DROP ANY VIEW, DROP ANY INDEX, DROP ANY PROCEDURE,
		　　SELECT ANY TABLE, INSERT ANY TABLE, UPDATE ANY TABLE, DELETE ANY TABLE
		　　TO username;
	4、创建dblink
		create database link to_test
		　　connect to scott identified by tiger
		　　using '(DESCRIPTION =
		　　(ADDRESS_LIST =
		　　(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.1.5)(PORT = 1521))
		　　)
		　　(CONNECT_DATA =
		　　(SERVER = DEDICATED)
		　　(SERVICE_NAME = bylw)
		　　)
		　　)';
		　　
	5、查看用户
		查看所有用户
		查看所有用户
		SELECT * FROM DBA_USERS;
		SELECT * FROM ALL_USERS;
		SELECT * FROM USER_USERS;
		查看用户系统权限
		查看用户系统权限
		SELECT * FROM DBA_SYS_PRIVS;
		SELECT * FROM USER_SYS_PRIVS;
		查看用户对象或角色权限
		查看用户对象权限
		SELECT * FROM DBA_TAB_PRIVS;
		SELECT * FROM ALL_TAB_PRIVS;
		SELECT * FROM USER_TAB_PRIVS;
	　　
	      select suM(bytes)/1024/1024 from dba_segments where segment_name='EVENT_LOG' AND OWNER='RSA_CORE';
  
        ALTER TABLE event_log ADD PARTITION P2030010100 VALUES LESS THAN(TO_DATE('2030/01/01 00', 'YYYY-MM-DD HH24'));
        
    
       
       SQL>shutdown immediate; 

SQL>startup; 

    select *       from user_tab_partitions t

job指定节点
exec dbms_job.instance(22,1)
　
　
　查看SGA，PGA 
　
　show parameter sga;
　show parameter pga;
      
      
     指定sql语句前面的标志 set sqlprompt ‘SQL’ 
      
      TO_DATE(SUBSTR(TO_CHAR(TRANS_TIME,'YYYY-MM-DD HH24:MI:SS'),0,13),'YYYY-MM-DD HH24') 改换时间格式
      
        create table components2 as select * from components where 1=2;--复制表
        
        将表查询的权限给另外得用户：  grant select any table to 另一用户
        							select 'GRANT SELECT ON '||table_name||' to b;'  from user_tables
        							
        select sys_guid() from dual ;--得到guid		
         SET TRANSACTION NAME 'GET_DATA_FROM_REALTIM_2_MINUTE';--建立事务	
         
        SQL> select to_char(current_scn) from v$database;

TO_CHAR(CURRENT_SCN)
----------------------------------------
348278059


expdp tmrpt/tmrpt dumpfile=event_test222.dmp directory=DUMPDIR TABLES=tmrpt.event_log_test logfile=event_test222.log job_name=event_test parallel=4 FLASHBACK_SCN=348278059

 exp rsa_core/rsa_core file=/rsatm/dump/event_test111.dmp log=/rsatm/dump/event_test111.log  TABLES=rsa_core.event_log_test2  		
         
       6.      如何定位重要(消耗资源多)的SQL
 
使用CPU多的用户session 
SELECT a.SID, spid, status, SUBSTR (a.program, 1, 40) prog, a.terminal,a.SQL_TEXT, osuser, VALUE / 60 / 100 VALUE 
FROM v$session a, v$process b, v$sesstat c 
WHERE c.statistic# = 12 AND c.SID = a.SID AND a.paddr = b.addr ORDER BY VALUE DESC;   
select sql_text from v$sql  where disk_reads &gt; 1000 or (executions &gt; 0 and buffer_gets/executions &gt; 30000);  						


------------

   @?/rdbms/admin/awrrpt          --导出awr报告 　
       @?/rdbms/admin/awrrpt          --导出awr报告
       
       配置路径在.profle中  export ORACLE_BASE=/oracle/app/oracle
       访问：cd $ORACLE_BASE


------------

 ORACLE分析函数---RANK()
分类： 个人常用 数据仓库 2011-07-12 23:22 297人阅读 评论(0) 收藏 举报
oracleinsertdatetablec
 create table B
(
  店铺     VARCHAR2(100),
  销售数量 VARCHAR2(100),
  价格     VARCHAR2(100),
  日期     DATE
)
tablespace USERS

/

insert into B (店铺, 销售数量, 价格, 日期)
values ('a', '3', '100', to_date('01-01-2011', 'dd-mm-yyyy'));
insert into B (店铺, 销售数量, 价格, 日期)
values ('a', '4', '200', to_date('02-02-2011', 'dd-mm-yyyy'));
insert into B (店铺, 销售数量, 价格, 日期)
values ('a', '4', '250', to_date('03-03-2011', 'dd-mm-yyyy'));
insert into B (店铺, 销售数量, 价格, 日期)
values ('b', '10', '120', to_date('05-05-2011', 'dd-mm-yyyy'));
insert into B (店铺, 销售数量, 价格, 日期)
values ('c', '5', '130', to_date('06-06-2011', 'dd-mm-yyyy'));
commit;

 

现在我们需要根据店铺进行分组，按照销售数量进行排名：



1.select b.*,row_number() over(partition by 店铺 order by to_number(销售数量) desc ) rn from b

ROW_NUMBER():为每一条分组纪录返回一个数字


2.select b.*,rank() over(partition by 店铺 order by to_number(销售数量) desc ) rn from b

RANK（）：返回数据项在分组中的排名。特点：在排名相等的情况下会在名次中留下空位


3.select b.*,dense_rank() over(partition by 店铺 order by to_number(销售数量) desc ) rn from b

DENSE_RANK():与RANK不同的是它在排名相等的情况下不会在名次中留下空位



http://blog.csdn.net/zftang/article/details/6601500；

------------

start d:\test.sql;
edit .编辑脚本，路径
spool：新建脚本:可以将屏幕的东西输出到sql文件；spool off；
输入条件：select * from gaodebao where name='&name';
设置linesize；设置显示行的宽度
设置pagesize：设置一页显示的行数。
如果删除已经创建表的用户，那么要用命令：drop user gaodebao dascade 级联删除。
改用户密码：password；
grant select on tablename to user;
去其他用户下查表：select * from system.emp;
如果全乡权限想继续传递的话，那么得：grant connect to gaodebao with grant option;


查看执行时间：set timing on



------------

-- Create table
create global temporary table TEMP_GB_INS_BAL
(
  org_code        VARCHAR2(60),
  subject_code    VARCHAR2(60),
  currency_code   VARCHAR2(60),
  data_source     VARCHAR2(60),
  check_phase_flg VARCHAR2(60),
  amt_bal         NUMBER(24,2),
  check_code      VARCHAR2(60)
  
  
)


on commit delete rows; 事物级临时会话


如果写成on commit preserve rows表示会话级临时表


-- Add comments to the table 
comment on table TEMP_GB_INS_BAL
  is '用于总分余额检查临时存放分户余额统计信息';
-- Add comments to the columns 
comment on column TEMP_GB_INS_BAL.org_code
  is '机构';
comment on column TEMP_GB_INS_BAL.subject_code
  is '科目';
comment on column TEMP_GB_INS_BAL.currency_code
  is '币种';
comment on column TEMP_GB_INS_BAL.data_source
  is '数据源';
comment on column TEMP_GB_INS_BAL.check_phase_flg
  is '检查阶段';
comment on column TEMP_GB_INS_BAL.amt_bal
  is '余额';
comment on column TEMP_GB_INS_BAL.check_code
  is '检查编号';

------------

1. 查看所有表空间大小

SQL> select tablespace_name,sum(bytes)/1024/1024 from dba_data_files
  2  group by tablespace_name;

2. 已经使用的表空间大小
SQL> select tablespace_name,sum(bytes)/1024/1024 from dba_free_space
  2  group by tablespace_name;

3. 所以使用空间可以这样计算

select a.tablespace_name,total,free,total-free used from 
( select tablespace_name,sum(bytes)/1024/1024 total from dba_data_files
   group by tablespace_name) a, 
( select tablespace_name,sum(bytes)/1024/1024 free from dba_free_space
   group by tablespace_name) b
where a.tablespace_name=b.tablespace_name;

4. 下面这条语句查看所有segment的大小。
Select Segment_Name,Sum(bytes)/1024/1024 From User_Extents Group By Segment_Name

5. 还有在命令行情况下如何将结果放到一个文件里。
SQL> spool out.txt
SQL> select * from v$database;
SQL> spool off


1.给表空间添加一个数据文件：
 
dba_data_files
ALTER TABLESPACE users
    ADD DATAFILE '/u02/oracle/rbdb1/users03.dbf' SIZE 10M
      AUTOEXTEND ON
      NEXT 512K
      MAXSIZE 250M;
 
2.调整数据文件的大小：
ALTER DATABASE DATAFILE '/u02/oracle/rbdb1/stuff01.dbf'
   RESIZE 100M;
 
3.启用或禁用数据文件的自动扩展：
 
ALTER DATABASE DATAFILE '/u02/oracle/rbdb1/users03.dbf' 
    AUTOEXTEND OFF;
    -------------------------------------------------------------------------------------------------------------------------
    
    1.查看所有表空间使用情况 
 
select 
b.file_id 文件ID号, 
b.tablespace_name 表空间名, 
b.bytes/1024/1024||'M'字节数, 
(b.bytes-sum(nvl(a.bytes,0)))/1024/1024||'M' 已使用, 
sum(nvl(a.bytes,0))/1024/1024||'M' 剩余空间, 
100 - sum(nvl(a.bytes,0))/(b.bytes)*100 占用百分比 
from dba_free_space a,dba_data_files b 
where a.file_id=b.file_id 
group by b.tablespace_name,b.file_id,b.bytes 
order by b.file_id; 
  www.2cto.com  
2.查看用户默认的表空间. 
 
sql: select username,default_tablespace from dba_users; 
 
3.查看要扩展的表空间使用的数据文件路径与名字 
 
sql:select * from dba_data_files where tablespace_name like 'USERS%'; 
 
4.扩展表空间,表空间扩展有两种方法：增加数据文件；调整当前数据文件的大小或扩展的大小。 
 
(1)增加数据文件 
 
ALTER TABLESPACE TESTTBS 
 
ADD DATAFILE 'D:/ora/datafile/users.ora' SIZE 500M 
 
AUTOEXTEND ON 
 
NEXT 50M 
 
MAXSIZE 2000M; 
 
增加了一个500M的数据文件，并且可以自动扩展到2G，每次扩展50M。 
 
(2)增加当前数据文件的大小 
 
ALTER DATABASE 
 
DATAFILE 'D:/ora/datafile/users.ora' 
 
RESIZE 50000M; 
 
或者使用file_id 
 
ALTER DATABASE 
 
DATAFILE 10 
    
    
    
    

------------

create table A as select * from B;

------------

两个Date类型字段：START_DATE，END_DATE，计算这两个日期的时间差（分别以天，小时，分钟，秒，毫秒）：
天：
ROUND(TO_NUMBER(END_DATE - START_DATE))
小时：
ROUND(TO_NUMBER(END_DATE - START_DATE) * 24)
分钟：
ROUND(TO_NUMBER(END_DATE - START_DATE) * 24 * 60)
秒：
ROUND(TO_NUMBER(END_DATE - START_DATE) * 24 * 60 * 60)
毫秒：
ROUND(TO_NUMBER(END_DATE - START_DATE) * 24 * 60 * 60 * 1000)
 
Oracle计算时间差函数 2008-08-20 10:00 两个Date类型字段：START_DATE，END_DATE，计算这两个日期的时间差（分别以天，小时，分钟，秒，毫秒）： 天： ROUND(TO_NUMBER(END_DATE - START_DATE)) 小时： ROUND(TO_NUMBER(END_DATE - START_DATE) * 24) 分钟： ROUND(TO_NUMBER(END_DATE - START_DATE) * 24 * 60) 秒： ROUND(TO_NUMBER(END_DATE - START_DATE) * 24 * 60 * 60) 毫秒： ROUND(TO_NUMBER(END_DATE - START_DATE) * 24 * 60 * 60 * 1000)
 外加to_date与to_char函数：
ORACLE中： 
select to_date('2007-06-28 19:51:20','yyyy-MM-dd HH24:mi:ss') from dual; 
一般SQL中： 
select to_date('2007-06-28 19:51:20','yyyy-MM-dd HH:mm:ss') from dual; 
区别： 
1、HH修改为HH24。 
2、分钟的mm修改为mi。
24 小时的形式显示出来要用 HH24
select to_char(sysdate,'yyyy-MM-dd HH24:mi:ss') from dual;
select to_date('2005-01-01 13:14:20','yyyy-MM-dd HH24:mi:ss') from dual;
 
to_date() function
1. 日期格式参数 含义说明
D 一周中的星期几
DAY 天的名字，使用空格填充到 9 个字符
DD 月中的第几天
DDD 年中的第几天
DY 天的简写名
IW ISO 标准的年中的第几周
IYYY ISO 标准的四位年份
YYYY 四位年份
YYY,YY,Y 年份的最后三位，两位，一位
HH 小时，按 12 小时计
HH24 小时，按 24 小时计
MI 分
SS 秒
MM 月
Mon 月份的简写
Month 月份的全名
W 该月的第几个星期
WW 年中的第几个星期      1. 日期时间间隔操作
当前时间减去 7 分钟的时间
select sysdate,sysdate - interval '7' MINUTE from dual
当前时间减去 7 小时的时间
select sysdate - interval '7' hour from dual
当前时间减去 7 天的时间
select sysdate - interval '7' day from dual
当前时间减去 7 月的时间
select sysdate,sysdate - interval '7' month from dual
当前时间减去 7 年的时间
select sysdate,sysdate - interval '7' year from dual
时间间隔乘以一个数字
select sysdate,sysdate - 8 *interval '2' hour from dual
 
2. 日期到字符操作
select sysdate,to_char(sysdate,'yyyy-mm-dd hh24:mi:ss') from dual
select sysdate,to_char(sysdate,'yyyy-mm-dd hh:mi:ss') from dual
select sysdate,to_char(sysdate,'yyyy-ddd hh:mi:ss') from dual
select sysdate,to_char(sysdate,'yyyy-mm iw-d hh:mi:ss') from dual
参考 oracle 的相关关文档 (ORACLE901DOC/SERVER.901/A90125/SQL_ELEMENTS4.HTM#48515)
 
3. 字符到日期操作
select to_date('2003-10-17 21:15:37','yyyy-mm-dd hh24:mi:ss') from dual
具体用法和上面的 to_char 差不多。
4.TO_NUMBER 
使用TO_NUMBER函数将字符转换为数字 
TO_NUMBER(char[, '格式'])
数字格式格式 
9 代表一个数字 
0 强制显示0 
$ 放置一个$符 
L 放置一个浮动本地货币符 
. 显示小数点 
, 显示千位指示符
oracle中的to_date参数含义 
  
  1.日期格式参数含义说明  
D 一周中的星期几  
DAY 天的名字，使用空格填充到9个字符  
DD 月中的第几天  
DDD 年中的第几天  
DY 天的简写名  
IW ISO标准的年中的第几周  
IYYY ISO标准的四位年份  
YYYY 四位年份  
YYY,YY,Y 年份的最后三位，两位，一位  
HH 小时，按12小时计  
HH24 小时，按24小时计  
MI 分  
SS 秒  
MM 月  
Mon 月份的简写  
Month 月份的全名  
W 该月的第几个星期  
WW 年中的第几个星期     1.日期时间间隔操作
当前时间减去7分钟的时间
select sysdate,sysdate - interval ’7’ MINUTE from dual
当前时间减去7小时的时间
select sysdate - interval ’7’ hour from dual
当前时间减去7天的时间
select sysdate - interval ’7’ day from dual
当前时间减去7月的时间
select sysdate,sysdate - interval ’7’ month from dual
当前时间减去7年的时间
select sysdate,sysdate - interval ’7’ year from dual
时间间隔乘以一个数字
select sysdate,sysdate - 8 *interval ’2’ hour from dual
   2.日期到字符操作 
select sysdate,to_char(sysdate,’yyyy-mm-dd hh24:mi:ss’) from dual
select sysdate,to_char(sysdate,’yyyy-mm-dd hh:mi:ss’) from dual
select sysdate,to_char(sysdate,’yyyy-ddd hh:mi:ss’) from dual
select sysdate,to_char(sysdate,’yyyy-mm iw-d hh:mi:ss’) from dual
参考oracle的相关关文档(ORACLE901DOC/SERVER.901/A90125/SQL_ELEMENTS4.HTM#48515)
   3. 字符到日期操作 
select to_date(’2003-10-17 21:15:37’,’yyyy-mm-dd hh24:mi:ss’) from dual
具体用法和上面的to_char差不多。
   4. trunk/ ROUND函数的使用 
select trunc(sysdate ,’YEAR’) from dual
select trunc(sysdate ) from dual
select to_char(trunc(sysdate ,’YYYY’),’YYYY’) from dual
    5.oracle有毫秒级的数据类型 
--返回当前时间 年月日小时分秒毫秒
select to_char(current_timestamp(5),’DD-MON-YYYY HH24:MI:SSxFF’) from dual;
--返回当前时间的秒毫秒，可以指定秒后面的精度(最大=9)
select to_char(current_timestamp(9),’MI:SSxFF’) from dual;
   6.计算程序运行的时间(ms) 
declare
type rc is ref cursor;
l_rc rc;
l_dummy all_objects.object_name%type;
l_start number default dbms_utility.get_time;
begin
  for I in 1 .. 1000 loop
  open l_rc for 'select object_name from all_objects '|| 'where object_id = ' || i;
  fetch l_rc into l_dummy;
  close l_rc;
  end loop;
  dbms_output.put_line ( round( (dbms_utility.get_time-l_start)/100, 2 ) ||' seconds ...' );
end;

------------

oracle查看用户、权限和表空间等操作方法
2012-03-20 14:38:35     我来说两句       收藏     我要投稿
oracle 查看 用户，用户权限，用户表空间，用户默认表空间 
 
 
1.查看用户和默认表空间的关系。 
  
  select   username,default_tablespace   from   dba_users;
 
2.查看当前用户的表：
 
select  table_name from  user_tables; 
 
 
3.查看所有用户的表名：
 
select table_name  from all_tables;  
 
4.查看所有表名（其中包括系统表）
 
select table_name  from all_tables;   
 
5.查看所有的表: 
 
select  *  from  tab/dba_tables/dba_objects/cat; 
 
下面介绍Oracle查询用户表空间
 
◆Oracle查询用户表空间：select * from user_all_tables
 
◆Oracle查询所有函数和储存过程：select * from user_source
 
◆Oracle查询所有用户：select * from all_users.select * from dba_users
 
◆Oracle查看当前用户连接：select * from v$Session
 
◆Oracle查看当前用户权限：select * from session_privs
 
◆Oracle查看用户表空间使用情况：
 
1.select a.file_id "FileNo",a.tablespace_name  "Tablespace_name",  a.bytes "Bytes",a.bytes-
 
sum(nvl(b.bytes,0)) "Used",  sum(nvl(b.bytes,0)) "Free",  sum(nvl(b.bytes,0))/a.bytes*100 "%free"  
 
from dba_data_files a, dba_free_space b  where a.file_id=b.file_id(+)  group by a.tablespace_name ,  
 
a.file_id,a.bytes order by a.tablespace_name; 
 
 
 
1.查看所有用户：
 
  select * from dba_user;
 
  select * from all_users;
 
  select * from user_users;
 
2.查看用户系统权限：
 
  select * from dba_sys_privs;
 
  select * from all_sys_privs;
 
  select * from user_sys_privs;
 
3.查看用户对象权限：
 
  select * from dba_tab_privs;
 
  select * from all_tab_privs;
 
  select * from user_tab_privs;
 
4.查看所有角色：
 
  select * from dba_roles;
 
5.查看用户所拥有的角色：
 
  select * from dba_role_privs;
 
  select * from user_role_privs;
 
 
6.查看角色所拥有的权限:
 
 
  select * from role_sys_privs;
 
 
  select * from role_tab_privs;
 
 
7.查看所有系统权限
 
 
  select * from system_privilege_map; 
 
 
8.查看所有对象权限
 
 
  select * from table_privilege_map;
 
 
以上是在Oracle中查看用户权限 ，
 
在DB2中为：
 
  select * from syscat.dbauth
 
  或者
 
  get authorizations
 
 
查看sid
 
  select * from v$instance
<!-- [if gte mso 9]><xml> <w:WordDocument> <w:View>Normal</w:View> <w:Zoom>0</w:Zoom> <w:PunctuationKerning/> <w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing> <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery> <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery> <w:ValidateAgainstSchemas/> <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid> <w:IgnoreMixedContent>false</w:IgnoreMixedContent> <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText> <w:Compatibility> <w:SpaceForUL/> <w:BalanceSingleByteDoubleByteWidth/> <w:DoNotLeaveBackslashAlone/> <w:ULTrailSpace/> <w:DoNotExpandShiftReturn/> <w:AdjustLineHeightInTable/> <w:BreakWrappedTables/> <w:SnapToGridInCell/> <w:WrapTextWithPunct/> <w:UseAsianBreakRules/> <w:DontGrowAutofit/> <w:UseFELayout/> </w:Compatibility> <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel> </w:WordDocument> </xml><![endif]--><!-- [if gte mso 9]><xml> <w:LatentStyles DefLockedState="false" LatentStyleCount="156"> </w:LatentStyles> </xml><![endif]--> <!-- /* Font Definitions */ @font-face {font-family:宋体; panose-1:2 1 6 0 3 1 1 1 1 1; mso-font-alt:SimSun; mso-font-charset:134; mso-generic-font-family:auto; mso-font-pitch:variable; mso-font-signature:3 135135232 16 0 262145 0;} @font-face {font-family:"\@宋体"; panose-1:2 1 6 0 3 1 1 1 1 1; mso-font-charset:134; mso-generic-font-family:auto; mso-font-pitch:variable; mso-font-signature:3 135135232 16 0 262145 0;} /* Style Definitions */ p.MsoNormal, li.MsoNormal, div.MsoNormal {mso-style-parent:""; margin:0cm; margin-bottom:.0001pt; text-align:justify; text-justify:inter-ideograph; mso-pagination:none; font-size:10.5pt; mso-bidi-font-size:10.0pt; font-family:"Times New Roman"; mso-fareast-font-family:宋体; mso-font-kerning:1.0pt;} /* Page Definitions */ @page {mso-page-border-surround-header:no; mso-page-border-surround-footer:no;} @page Section1 {size:595.3pt 841.9pt; margin:72.0pt 90.0pt 72.0pt 90.0pt; mso-header-margin:42.55pt; mso-footer-margin:49.6pt; mso-paper-source:0; layout-grid:15.6pt;} div.Section1 {page:Section1;} --> <!-- [if gte mso 10]> <style> /* Style Definitions */ table.MsoNormalTable {mso-style-name:普通表格; mso-tstyle-rowband-size:0; mso-tstyle-colband-size:0; mso-style-noshow:yes; mso-style-parent:""; mso-padding-alt:0cm 5.4pt 0cm 5.4pt; mso-para-margin:0cm; mso-para-margin-bottom:.0001pt; mso-pagination:widow-orphan; font-size:10.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman"; mso-ansi-language:#0400; mso-fareast-language:#0400; mso-bidi-language:#0400;} </style> <![endif]-->
获取表：
 
select table_name from user_tables; // 当前用户的表      
 
select table_name from all_tables; // 所有用户的表  
 
select table_name from dba_tables; // 包括系统表
 
select table_name from dba_tables where owner=' 用户名 '
 
user_tables ：
 
table_name,tablespace_name,last_analyzed 等
 
dba_tables ：
 
ower,table_name,tablespace_name,last_analyzed 等
 
all_tables ：
 
ower,table_name,tablespace_name,last_analyzed 等
 
all_objects ：
 
ower,object_name,subobject_name,object_id,created,last_ddl_time,timestamp,status 等
 
获取表字段：
 
select * from user_tab_columns where Table_Name=' 用户表 ';
 
select * from all_tab_columns where Table_Name=' 用户表 ';
 
select * from dba_tab_columns where Table_Name=' 用户表 ';
 
user_tab_columns ：
 
table_name,column_name,data_type,data_length,data_precision,data_scale,nullable,column_id 等
 
all_tab_columns ：
 
ower,table_name,column_name,data_type,data_length,data_precision,data_scale,nullable,column_id 等
 
dba_tab_columns ：
 
ower,table_name,column_name,data_type,data_length,data_precision,data_scale,nullable,column_id 等
 
获取表注释：
 
select * from user_tab_comments
 
user_tab_comments ： table_name,table_type,comments
 
-- 相应的还有 dba_tab_comments ， all_tab_comments ，这两个比 user_tab_comments 多了 ower 列。
 
获取字段注释：
 
select * from user_col_comments
 
user_col_comments ： table_name,column_name,comments

------------

SELECT check_code, MAX(check_run_tm),t.check_name,t.check_type,t.check_desc  FROM EDM_DQ_CHECK_REPORT_BASE t GROUP BY SUBSTR(check_run_tm,1,10),check_code,check_name,t.check_type,t.check_desc;

------------

某个数据文件损坏，如何打开数据库？ (for Linux)
PuJiang Science Park Of ShangHai 、 jccz_zys_zhouys 
最近做开发时不小心删除了创建的数据库表空间文件，导致服务器重新启动时普通用户
不能够正常登陆。网上有一篇此类文章是针对winnt和oracle8i的。我通过简单的尝试即解决了此问题，过程如下：

系统环境： 
1、操作系统：RedHat Advanced Server，机器内存512M
2、数据库：　Oracle 9i Release 9.2.0.1.0 for linux
3、安装路径：/home/oracle/ora

错误现象： 
因误操作，数据库中某一数据文件被误删，
Oracle相关服务显示已启动，用SQL*Plus可以连接sys DBA用户，但普通用户无法连接，
显示以下错误
ORA-01033: ORACLE initialization or shutdown in progress

模拟现象： 

create tablespace tablespace_ecms
datafile '/home/oracle/ora/products/9.2.0/oradata/ora9i/tablespace_ecms.dbf'
size 512M extent management local autoallocate
--default storage (initial 128k next 2M pctincrease 0)
online;

shutdown

在操作系统中删除tablespace_ecms.dbf文件

[oracle@js-oracle oracle]$ sudo - oracle -c "dbstart" >> /var/log/oracle
[oracle@js-oracle oracle]$ sudo - oracle -c "lsnrctl start" >> /var/log/oracle

在客户端PL/SQL工具中正常连接sys DBA用户，但数据库没有打开，同时普通用户无法连接，
显示以下错误
ORA-01033: ORACLE initialization or shutdown in progress

解决方法：

先让该数据文件脱机,就可以打开数据库
--NOARCHIVELOG模式命令
[oracle@js-oracle oracle]$ sqlplus /NOLOG

SQL> connect sys/wellhope as sysdba

SQL> alter database datafile '/home/oracle/ora/products/9.2.0/oradata/ora9i/tablespace_ecms.dbf' offline drop;

SQL> alter database open; --则数据库正常打开

SQL> select file#,name,status from v$datafile;

SQL> drop tablespace tablespace_ecms INCLUDing contents;

表空间已丢弃。


------------

SADDR RAW(4) 会话地址
SID NUMBER 会话标识符
SERIAL# NUMBER 会话序列号。用来唯一地标识绘画
对象。如果该会话结束且其他会话
以相同的会话ID 开始，则保证会
话级的命令被应用到正确会话对象
AUDSID NUMBER 审计会话ID
PADDR RAW(4) 拥有这个会话的进程地址
USER# NUMBER Oracle 用户标识符
USERNAME VARCHAR(30) Oracle 用户名
COMMAND NUMBER 正进行的命令（分析的最后一个语
句），关于值的列表，请参阅表B-
11
OWNERID NUMBER 如果值为2147483644，则此列的
内容无效。否则此列包含拥有可移
植会话的用户标符。对于利用并行
从服务器的操作，将这个值解释为
一个48 字节的值。其低位两字节
表示会话号，而高位字节表示查询
协调程序的实例ID
TADDR VARCHAR2(8) 事务处理状态对象的地址
LOCKWAIT VARCHAR2(8) 等待锁的地址；如果没有，为NULL
STATUS VARCHAR2(8) 会话的状态：ACTIVE (当前执行的
SQL)、INACTIVE、KILLED(标记为
终止)、CACHED（为Oracle*XA 使
用而临时高速缓存）、SNIPED（会
话不活动，在客户机上等待）
SERVER VARCHAR2(9) 服务器类型：DEDICATED、SHARED、
PSEUDO、NONE
SCHEMA# NUMBER 模式用户标识符
SCHEMANANME VARCHAR2(30) 模式用户名
OSUSER VARCHAR(15) 操作系统客户机用户名
PROCESS VARCHAR2(9) 操作系统客户机进程ID
MACHINE VARCHAR2(64) 操作系统机器名
TERMINAL VARCHAR2(10) 操作系统终端名
PROGRAM VARCHAR(48) 操作系统程序名
TYPE VARCHAR2(10) 会话类型
SQL_ADDRESS RAW(4) 与SQL_HASH_VALUE 一道使用标识
当前正在执行的SQL 语句
SQL_HASH_VALUE NUMBER 与SQL_ADDRESS 一道使用标识当前
正在执行的SQL 语句
MODULE VARCHAR2(48) 包含当前正在执行的模块名，正如
由调用
DBMS_APPLICATION_INFO.SET_MODU
LE 过程所设置
MODULE_HASH NUMBER 上面MODULE 的散列值
ACTION VARCHAR2(32) 包含当前执行活动的名称，正如由
调用
DBMS_APPLICATION_INFO.SET_ACTI
ON 过程所设置
ACTION_HASH NUMBER 上列活动名称的散列值
CLIENT_INFO VARCHAR2(64) 由
DBMS_APPLICATION_INFO.SET_CLIE
NT_INFO 过程设置的信息
FIXED_TABLE_
SEQUENCE
NUMBER 此列包含一个数，每当会话完成一
个数据库调用并且存在来自动态性
能表的介入选择，它个数就增加。
这个列可被性能监控程序用来监控
数据库中的统计数据。每当性能监
控程序查看数据库时，只需要查看
当前活动的会话或在这个列中具有
比上次性能监控程序所看到的最大
值更大的值的会话即可。所有其他
会话自上次性能监控程序查看数据
库以来都是空闲的
ROW_WAIT_OBJ# NUMBER 包含ROW_WAIT_ROW#中指定的ROW#
的表的对象ID
ROW_WAIT_FILE# NUMBER 包含ROW_WAIT_ROW#中指定的
ROWID 的数据文件的标识符。此列
仅在会话当前正在等待其他事务处
理提交并且ROW_ WAIT_OBJ#不为-
1 时有效
ROW_WAIT_BLOCK # NUMBER 包含ROW_WAIT_ROW#中指定的
ROWID 的数据文件的标识符。此列
仅在会话当前正在等待其他事务处
理提交并且ROW_正在等待其他事
务处理提交并且ROW_
ROW_WAIT_ROW# NUMBER 被锁定的当前ROWID。此列仅在会
话当前正在等待其他事务处理提交
并且ROW_ WAIT_OBJ#不为-1 时有
效
LOGON_TIME DATE 登录时间
LAST_CALL_ET NUMBER 最后一次调用
PDML_STATUS VARCHAR2(8) 如果ENABLED，则会话正处于
PARALLEL DML 启用方式。如果
DISABLED，则此会话不支持
PARALLEL DML 启用方式。如果
FORCED，则会话已经更改为强制
PARALLEL DLL
PDML_ENABLED VARCHAR2(3) 此列已被PDML_ENABLED 和PDML_
STATUS 所替代。请看上列内容
FAILOVER_TYPE VARCHAR2(10) 如果这个会话禁止失败切换，则为
NONE ，如果客户机能够在断开之
后失败切换其会话，则为
SESSION，如果客户机还能失败切
换正在进行的选择，则为SELECT
FAILOVER_METHOD VARXHAR2(3) 如果这个会话禁止失败切换，则为
NONE，如果客户机能够在断开之后
重新连接，为BASIC，如果备份实
例能够支持它所支持的每个实例的
所有连接，则为PRECONNECT
FAILED_OVER VARCHAR2(13) 如果运行在失败切换方式并进行过
失败切换，为TRUE，否则为FALSE
RESOURCE_CON
SU_MER_GROUP
VARCHAR2(32) 会话的当前资源使用者组的名称

------------

第一步,在cmd命令行，输入sqlplus

第二步，根据提示输入用户名与密码

1. 查看processes和sessions参数

　　SQL> show parameter processes

　　NAME                                 TYPE        VALUE

　　db_writer_processes                 integer    1

　　gcs_server_processes                integer    0

　　job_queue_processes                 integer    10

　　log_archive_max_processes           integer    2

　　processes                           integer    50

　　SQL> show parameter sessions

　　NAME                                 TYPE        VALUE

　　license_max_sessions                integer    0

　　license_sessions_warning            integer    0

　　logmnr_max_persistent_sessions      integer    1

　　sessions                            integer    60

　　shared_server_sessions              integer

　　2. 修改processes和sessions值

　　SQL> alter system set processes=300 scope=spfile;

　　系统已更改。

　　SQL> alter system set sessions=335 scope=spfile;

　　系统已更改。

　　3. 修改processes和sessions值必须重启oracle服务器才能生效

　　ORACLE的连接数(sessions)与其参数文件中的进程数(process)有关，它们的关系如下：

　　sessions=(1.1*process+5)

　　摘（二）

　　查询数据库当前进程的连接数：

　　select count(*) from v$process;

　　查看数据库当前会话的连接数：

　　elect count(*) from v$session;

　　查看数据库的并发连接数：

　　select count(*) from v$session where status='ACTIVE';

　　查看当前数据库建立的会话情况：

　　select sid,serial#,username,program,machine,status from v$session;

　查询数据库允许的最大连接数：

　　select value from v$parameter where name = 'processes';

　　或者：show parameter processes;

　　修改数据库允许的最大连接数：

　　alter system set processes = 300 scope = spfile;

　　(需要重启数据库才能实现连接数的修改)

　　重启数据库：

　　shutdown immediate;

　　startup;

　　查看当前有哪些用户正在使用数据：

　　select osuser,a.username,cpu_time/executions/1000000||'s',sql_fulltext,machine

　　from v$session a,v$sqlarea b

　　where a.sql_address = b.address

　　order by cpu_time/executions desc;

　　备注：UNIX 1个用户session对应一个操作系统process，而Windows体现在线程。

　　启动oracle

　　su - oracle

　　sqlplus system/pwd as sysdba  //进入sql

　　startup                                     //启动数据库

　　lsnrctl start                              //启动监听

　　sqlplus "/as sysdba"

　　shutdown immediate;

　　startup mount;

　　alter database open;


------------

删除表后，可以采用如下操作：
在 user_recyclebin中找到最近操作过的表名称，然后用闪回（只能用于10G及以上版本）。
FLASH BACK TABLE TABLE_NAME TO BEFORE DROP;
如果是删了或修改里面的数据，可以先建立一个快表将删除修改之前状态的数据找回到这个表中：
CREATE TABLE QUICK_TABLE AS
SELECT * FROM TABLE_NAME AS OF TIMESTAMP SYSDATE-1/24 (一小时前的)，减去的时间可以自己定 如：select * from TABLE_NAME  AS OF TIMESTAMP  (SYSTIMESTAMP - INTERVAL '1' MINUTE)









------------

dbms_lock.sleep(5)；
查看事务个数。
db2 list application for db catest|grep 192.168.3.219|wc -l



alter table EDM_DC_CLEAR_LOG
  add constraint PK_EDM_DC_CLEAR_LOG primary key (DC_ID, RUN_TM)
  using index 
  tablespace USERS
  pctfree 10
  initrans 2
  maxtrans 255
  storage
  (
    initial 64K
    minextents 1
    maxextents unlimited
  );

------------

lsnrctl status

用系统管理员权限登陆
  原因：没有启动监听器或者监听器损坏。如果是前者，使用命令net start OracleOraHome81TNSListener(名字可能有出入)即可;如果是后者，则使用“Net8 Configuration 
  Assistant”工具向导之“监听程序配置”增加一个监听器即可(基本不用写任何信息，一路OK。在添加之前可能需要把所有的监听器先删除!) 
  2、ORA-12500：TNS：监听程序无法启动专用服务器进程或ORA-12560：TNS：协议适配器错误 
  原因：ORACLE的数据库服务没有启动。使用命令net start ORACLESERVICEORADB(ORADB为数据库名字)即可。如果仍没有解决，请继续向下看。 
  3、如果数据库服务启动失败，则很有可能是其注册表项值损坏，最好的做法是以下两步： 
  1)ORADIM -DELETE -SID oradb 删除数据库服务项   2)ORADIM -NEW -SID oradb 新增数据库服务项 

----------------------------------------------------------
startup

------------

select /*+full(a) parallel(a,2)*/a.usernumber from xxx；

full(a)

强制使用某种优化法则
这个full(表)的目的是 括号里的表将会使用全表扫描。
parallel

加上这个说明，可以强行启用Oracle的多线程处理功能

Parallel后面的数字，越大，执行效率越高。不过，增大到一定值，效果就不明显了。所以，一般用8,10,12,16的比较常见。不过，数值越大，占用的资源也会相对增大的。如果是在一些package、function or procedure中写的话，还是不要写那么大，免得占用太多资源。

------------

解决方法一：
ERROR:
ORA-01034: ORACLE not available
ORA-27101: shared memory realm does not exist
进程 ID: 0
会话 ID: 0 序列号: 0
因为这个小小的错误，折腾了我好几个小时，特记录如下。
上网搜索了下解决方案，如下：
sqlplus "sys/password as sysdba"
连接成功，提示"已连接到空闲例程"
SQL> startup
ORACLE 例程已经启动。
Total System Global Area  535662592 bytes
Fixed Size                  1375792 bytes
Variable Size             293601744 bytes
Database Buffers          234881024 bytes
Redo Buffers                5804032 bytes
数据库装载完毕。
ORA-03113: 通信通道的文件结尾
进程 ID: 5412
会话 ID: 5 序列号: 5
出现一个新错误：ORA-03113: 通信通道的文件结尾；分析可能由于昨晚数据库强制关闭，导致文件状态可能不一致，因为正常关闭数据库会同步校验各文件，使得重新启动的时候文件时间点一致。
找到解决方案如下：
SQL> conn / as sysdba
已连接到空闲例程。
SQL> startup mount
ORACLE 例程已经启动。
Total System Global Area  535662592 bytes
Fixed Size                  1375792 bytes
Variable Size             293601744 bytes
Database Buffers          234881024 bytes
Redo Buffers                5804032 bytes
数据库装载完毕。
SQL> select * from v$log;
    GROUP#    THREAD#  SEQUENCE#      BYTES  BLOCKSIZE    MEMBERS ARC
---------- ---------- ---------- ---------- ---------- ---------- ---
STATUS           FIRST_CHANGE# FIRST_TIME     NEXT_CHANGE# NEXT_TIME
---------------- ------------- -------------- ------------ -------------
         1          1        340   52428800        512          1 NO
INACTIVE               8474486 02-4月 -11          8522856 02-4月 -11
         3          1        342   52428800        512          1 NO
INACTIVE               8555222 06-4月 -11          8565162 11-4月 -11
         2          1        343   52428800        512          1 NO
CURRENT                8565162 11-4月 -11       2.8147E+14
SQL> alter database open resetlogs
  2  ;
alter database open resetlogs
*
第 1 行出现错误:
ORA-01139: RESETLOGS 选项仅在不完全数据库恢复后有效
SQL> recover database until time '2011-04-11 12:12:12'
完成介质恢复。
SQL> alter database open resetlogs;
数据库已更改。
SQL> shutdown
数据库已经关闭。
已经卸载数据库。
ORACLE 例程已经关闭。
SQL> startup
ORACLE 例程已经启动。
Total System Global Area  535662592 bytes
Fixed Size                  1375792 bytes
Variable Size             293601744 bytes
Database Buffers          234881024 bytes
Redo Buffers                5804032 bytes
数据库装载完毕。
数据库已经打开。
 

解决方法：二

 字号：大 中 小
在试图登录pl/sql时,输入用户名（system/pwd)后，Oracle报告下列错误：
ERROR:
ORA-27101 Shared memory realm does not exist
ORA-01034 ORACLE not available &<60;


查阅了相关
ORA-27101 Shared memory realm does not exist
ORA-01034 ORACLE not available &<60;
的说明，解释为ORACLE_HOME或者ORACLE_SID设置不正确。
但检查bash_profile以后没有发现错误;
錯誤點，沒有開啟oracle服務；
解決辦法，直接開啟oracle相關數據庫的服務；
或按照下面的步驟操作:
lsnrctl start
sqlplus '/as sysdba'
sql> startup
emctl start dbconsole
isqlplusctl start

------------

http://lenovo-think:1158/em/console/license

Enterprise Manager Database Control URL - (gaodebao) : http://lenovo-THINK:1158/em  数据库配置文件已经安装到 G:\oracle\product\10.2.0,同时其他选定的安装组件也已经安装到 G:\oracle\product\10.2.0\db_1。 iSQL*Plus URL 为: http://lenovo-THINK:5560/isqlplus  iSQL*Plus DBA URL 为: http://lenovo-THINK:5560/isqlplus/dba


用户名、密码：sys gaodebao  system gaodebao

------------


设置SET ORACLE_SID=ORCL
ORCL--实例名称
 
--停止oracle实例服务
C:\Users\Administrator>net stop oracleserviceORCl
OracleServiceORCL 服务正在停止.........
OracleServiceORCL 服务已成功停止。
 
--启动oracle实例服务
C:\Users\Administrator>net start oracleserviceORCl
OracleServiceORCL 服务正在启动 ........
OracleServiceORCL 服务已经启动成功。

--启动oracle监听服务
C:\Users\Administrator>lsnrctl start

LSNRCTL for 32-bit Windows: Version 10.2.0.1.0 - Production on 06-5月 -2011 11:2
0:27

Copyright (c) 1991, 2005, Oracle.  All rights reserved.

启动tnslsnr: 请稍候...

TNSLSNR for 32-bit Windows: Version 10.2.0.1.0 - Production
系统参数文件为H:\oracle\product\10.2.0\db_1\network\admin\listener.ora
写入H:\oracle\product\10.2.0\db_1\network\log\listener.log的日志信息
监听: (DESCRIPTION=(ADDRESS=(PROTOCOL=ipc)(PIPENAME=\\.\pipe\EXTPROC1ipc)))
监听: (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=OUDH8N52JSGDDZG)(PORT=1521)))

正在连接到 (DESCRIPTION=(ADDRESS=(PROTOCOL=IPC)(KEY=EXTPROC1)))
LISTENER 的 STATUS
------------------------
别名                      LISTENER
版本                      TNSLSNR for 32-bit Windows: Version 10.2.0.1.0 - Produ
ction
启动日期                  06-5月 -2011 11:20:34
正常运行时间              0 天 0 小时 0 分 6 秒
跟踪级别                  off
安全性                    ON: Local OS Authentication
SNMP                      OFF
监听程序参数文件          H:\oracle\product\10.2.0\db_1\network\admin\listener.o
ra
监听程序日志文件          H:\oracle\product\10.2.0\db_1\network\log\listener.log

监听端点概要...
  (DESCRIPTION=(ADDRESS=(PROTOCOL=ipc)(PIPENAME=\\.\pipe\EXTPROC1ipc)))
  (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=OUDH8N52JSGDDZG)(PORT=1521)))
服务摘要..
服务 "PLSExtProc" 包含 1 个例程。
  例程 "PLSExtProc", 状态 UNKNOWN, 包含此服务的 1 个处理程序...
命令执行成功

--停止oracle监听服务

C:\Users\Administrator>lsnrctl stop

LSNRCTL for 32-bit Windows: Version 10.2.0.1.0 - Production on 06-5月 -2011 11:1
4:30

Copyright (c) 1991, 2005, Oracle.  All rights reserved.

正在连接到 (DESCRIPTION=(ADDRESS=(PROTOCOL=IPC)(KEY=EXTPROC1)))
命令执行成功

--启动oracle控制台服务
C:\Users\Administrator>emctl start dbconsole
Oracle Enterprise Manager 10g Database Control Release 10.2.0.1.0
Copyright (c) 1996, 2005 Oracle Corporation.  All rights reserved.
http://OUDH8N52JSGDDZG:1158/em/console/aboutApplication
Starting Oracle Enterprise Manager 10g Database Control ...OracleDBConsoleorcl
服务正在启动 ................
OracleDBConsoleorcl 服务已经启动成功。

--停止oracle控制台服务
C:\Users\Administrator>emctl stop dbconsole
Oracle Enterprise Manager 10g Database Control Release 10.2.0.1.0
Copyright (c) 1996, 2005 Oracle Corporation.  All rights reserved.
http://OUDH8N52JSGDDZG:1158/em/console/aboutApplication
OracleDBConsoleorcl 服务正在停止....
OracleDBConsoleorcl 服务已成功停止。

------------

CREATE TABLESPACE TBS_ETL_DATA    LOGGING     DATAFILE 'G:\oracle\product\10.2.0\oradata\tbs_etl_data01.dbf' SIZE 521M AUTOEXTEND OFF;

第二步：创建用户并授权
上接第一步。
在SQL>后面输入创建用户的语句：
create user vpetl identified by vpetl
default tablespace TBS_ETL_DATA;
回车，出现“User created.”表示用户创建成功。
在SQL>后面输入给用户授权的语句：
grant connect,resource,alter system,debug connect session,select any table,delete any table,drop any table,alter any table to vpetl;
回车，出现“Grant succeeded.”表示给用户授权成功。
在SQL>后面输入给用户授权的语句：
grant execute on DBMS_LOCK to vpetl;
回车，出现“Grant succeeded.”表示给用户授权成功。
在SQL>后面输入给用户授权的语句：
grant select on v_$session to vpetl;
回车，出现“Grant succeeded.”表示给用户授权成功。
在SQL>后面输入给用户授权的语句：
grant select on v_$ACCESS to vpetl;
回车，出现“Grant succeeded.”表示给用户授权成功。
在SQL>后面输入给用户授权的语句：
grant alter system to vpetl;
回车，出现“Grant succeeded.”表示给用户授权成功。
在SQL>后面输入给用户授权的语句：
grant insert any table,update any table to vpetl;
回车，出现“Grant succeeded.”表示给用户授权成功。


------------

每张表都是作为“段”来存储的，可以通过user_segments视图查看其相应信息。
段（segments）的定义：如果创建一个堆组织表，则该表就是一个段。
sql：SELECT segment_name AS TABLENAME,BYTES FROM user_segments WHERE segment_name='表名'。
解释：
segment_name 就是要查询的表名（大写），BYTES 为表存储所占用的字节数。本sql的意思就是查询出表名和表所占的存储空间大小。

------------

目标端
原端
Note1

------------

select * from event_log t where event_id = '6a57:02a2cbd31:15ec2251_TRX1'
and short_date = '20150530';
   
select * from event_log_realtime t where event_id = '6a57:02a2cbd31:15ec2251_TRX1'
 and short_date = '20150530';
   
   select * from event_log_update t where event_id = '6a57:02a2cbd31:15ec2251_TRX1'
   and short_date = '20150530';

   select * from acspuseraccount t where t.acspid='11213';

   select * from desktops t where t.pmid='11';

   select * from pm_policy t where t.id='11';

   select * from pm_rule t where t.id='11';

   select * from userchangehistory t where t.uhid='112111';

   select * from users t where t.username='11';

   select * from FACT_META_DATA t where t.id='112222';

------------

-------------------插入三天以内的，查看目标端event_log、event_log_realtime表
insert into event_log
  (EVENT_ID,
   EVENT_TIME,
   IP_ADDRESS,
   EVENT_TYPE,
   USER_DEFINED_EVENT_TYPE,
   RISK_SCORE,
   POLICY_ACTION,
   CHALLENGE_AUTH_METHOD,
   CHALLENGE_SUCCESSFUL,
   POLICY_RULE_ID,
   SHORT_DATE,
   SYS_CREATION_DATE,
   LASTMODIFIED,
   USER_ID,
   USER_HASH,
   PRELIMINARY_SCORE,
   IP_COUNTRY,
   IP_CITY,
   CHANNEL_INDICATOR,
   OPERATING_SYSTEM,
   BROWSER_TYPE,
   AMOUNT_ORIGINAL,
   AMOUNT_CURRENCY,
   USER_ACCT_NUMBER,
   EXT_ACCT_NUMBER,
   EXT_ACCT_OWNER_NAME,
   FLAGGED,
   RESOLUTION,
   CDF_S_1,
   CDF_S_2,
   CDF_S_3,
   CDF_S_4,
   CDF_S_5,
   CDF_S_6,
   CDF_S_7,
   CDF_S_8,
   CDF_S_9,
   CDF_S_10,
   CDF_S_11,
   CDF_S_12,
   CDF_S_13,
   CDF_S_14,
   CDF_S_15,
   CDF_S_16,
   CDF_S_17,
   CDF_S_18,
   CDF_S_19,
   CDF_S_20,
   ORG_ID,
   IS_DEVICE_BOUND,
   COOKIE)
values
  ('6a57:02a2cbd31:15ec2251_TRX1',
   to_date('26-11-2013 07:30:34', 'dd-mm-yyyy hh24:mi:ss'),
   '22.11.92.97',
   'SESSION_SIGNIN',
   'NA',
   160,
   'ALLOW',
   null,
   null,
   'BOC-SIT-登录',
   '20150530',
   to_date('26-11-2013 15:29:27', 'dd-mm-yyyy hh24:mi:ss'),
   to_date('26-11-2013 07:29:27', 'dd-mm-yyyy hh24:mi:ss'),
   '100378611',
   432,
   1751,
   'us',
   'empty',
   'WEB',
   'Windows',
   'Explorer',
   null,
   null,
   null,
   null,
   null,
   'Y',
   null,
   '813333333333',
   '10-1',
   '51530',
   '2FINANCIAL',
   '1li fh',
   '7tt123455',
   '4军人身份证',
   null,
   null,
   null,
   null,
   null,
   null,
   null,
   null,
   null,
   null,
   null,
   null,
   null,
   'BOC',
   'N',
   '7654');
commit;

------------------------------------------------------------------
-------------------插入三天以上的，查看目标端event_log、event_log_realtime表
 insert into event_log
  (EVENT_ID,
   EVENT_TIME,
   IP_ADDRESS,
   EVENT_TYPE,
   USER_DEFINED_EVENT_TYPE,
   RISK_SCORE,
   POLICY_ACTION,
   CHALLENGE_AUTH_METHOD,
   CHALLENGE_SUCCESSFUL,
   POLICY_RULE_ID,
   SHORT_DATE,
   SYS_CREATION_DATE,
   LASTMODIFIED,
   USER_ID,
   USER_HASH,
   PRELIMINARY_SCORE,
   IP_COUNTRY,
   IP_CITY,
   CHANNEL_INDICATOR,
   OPERATING_SYSTEM,
   BROWSER_TYPE,
   AMOUNT_ORIGINAL,
   AMOUNT_CURRENCY,
   USER_ACCT_NUMBER,
   EXT_ACCT_NUMBER,
   EXT_ACCT_OWNER_NAME,
   FLAGGED,
   RESOLUTION,
   CDF_S_1,
   CDF_S_2,
   CDF_S_3,
   CDF_S_4,
   CDF_S_5,
   CDF_S_6,
   CDF_S_7,
   CDF_S_8,
   CDF_S_9,
   CDF_S_10,
   CDF_S_11,
   CDF_S_12,
   CDF_S_13,
   CDF_S_14,
   CDF_S_15,
   CDF_S_16,
   CDF_S_17,
   CDF_S_18,
   CDF_S_19,
   CDF_S_20,
   ORG_ID,
   IS_DEVICE_BOUND,
   COOKIE)
values
  ('6a57:02a2cbd9e31:1c2251_TRX2',
   to_date('11-11-2013 07:30:34', 'dd-mm-yyyy hh24:mi:ss'),
   '22.11.92.97',
   'SESSION_SIGNIN',
   'NA',
   160,
   'ALLOW',
   null,
   null,
   'BOC-SIT-登录',
   '20150530',
   sysdate-5,
   sysdate-5,
   '100378611',
   432,
   1751,
   'us',
   'empty',
   'WEB',
   'Windows',
   'Explorer',
   null,
   null,
   null,
   null,
   null,
   'Y',
   null,
   '813333333333',
   '10-1',
   '51530',
   '2FINANCIAL',
   '1li fh',
   '7tt123455',
   '4军人身份证',
   null,
   null,
   null,
   null,
   null,
   null,
   null,
   null,
   null,
   null,
   null,
   null,
   null,
   'BOC',
   'N',
   '7654');
commit;

-------------插入一百天以上的，查看目标端event_log、event_log_realtime表--
  insert into event_log
    (EVENT_ID,
     EVENT_TIME,
     IP_ADDRESS,
     EVENT_TYPE,
     USER_DEFINED_EVENT_TYPE,
     RISK_SCORE,
     POLICY_ACTION,
     CHALLENGE_AUTH_METHOD,
     CHALLENGE_SUCCESSFUL,
     POLICY_RULE_ID,
     SHORT_DATE,
     SYS_CREATION_DATE,
     LASTMODIFIED,
     USER_ID,
     USER_HASH,
     PRELIMINARY_SCORE,
     IP_COUNTRY,
     IP_CITY,
     CHANNEL_INDICATOR,
     OPERATING_SYSTEM,
     BROWSER_TYPE,
     AMOUNT_ORIGINAL,
     AMOUNT_CURRENCY,
     USER_ACCT_NUMBER,
     EXT_ACCT_NUMBER,
     EXT_ACCT_OWNER_NAME,
     FLAGGED,
     RESOLUTION,
     CDF_S_1,
     CDF_S_2,
     CDF_S_3,
     CDF_S_4,
     CDF_S_5,
     CDF_S_6,
     CDF_S_7,
     CDF_S_8,
     CDF_S_9,
     CDF_S_10,
     CDF_S_11,
     CDF_S_12,
     CDF_S_13,
     CDF_S_14,
     CDF_S_15,
     CDF_S_16,
     CDF_S_17,
     CDF_S_18,
     CDF_S_19,
     CDF_S_20,
     ORG_ID,
     IS_DEVICE_BOUND,
     COOKIE)
  values
    ('6a57:02a2cbd9e31:5ec2251_TRX3',
     to_date('30-05-2015 07:30:34', 'dd-mm-yyyy hh24:mi:ss'),
     '22.11.92.97',
     'SESSION_SIGNIN',
     'NA',
     160,
     'ALLOW',
     null,
     null,
     'BOC-SIT-登录',
     '20150530',
     sysdate - 101,
     sysdate - 101,
     '100378611',
     432,
     1751,
     'us',
     'empty',
     'WEB',
     'Windows',
     'Explorer',
     null,
     null,
     null,
     null,
     null,
     'Y',
     null,
     '813333333333',
     '10-1',
     '51530',
     '2FINANCIAL',
     '1li fh',
     '7tt123455',
     '4军人身份证',
     null,
     null,
     null,
     null,
     null,
     null,
     null,
     null,
     null,
     null,
     null,
     null,
     null,
     'BOC',
     'N',
     '7654');
  commit;
------------------------------------------------------更新数据后

update event_log
   set 
       event_time = SYSDATE,
       
      
       
       risk_score = 33,
       policy_action = 'aa',
       challenge_auth_method = 'aa',
       challenge_successful = 'Y',
       policy_rule_id = '11111111111---',
    
       
      
       user_id = 'U_ID',
     
     
       ip_country = 'CN',
       ip_city = 'BEIJING',
      
       resolution = 'G'
       
  where event_id = '6a57:02a2cbd31:15ec2251_TRX1'
   and short_date = '20150530';
commit;
   -----------------------------------------------------

delete event_log
 where event_id = '6a57:02a2cbd31:15ec2251_TRX1'
   and short_date = '20150530';
commit;
---------------------------------------------------

---------------------------------------------------
insert into acspuseraccount
  (acspid,
   acspname,
   userid,
   status,
   LASTMODIFIED
   )
values
  ('11213',
   'aaaa',
55,
   'rrr',
   SYSTIMESTAMP
   
  );
commit;

update acspuseraccount t set t.userid =66 where t.acspid='11213';
commit;

DELETE FROM acspuseraccount  WHERE acspid='11213'; 
commit;
----------------------------------------------------------
insert into desktops
  (pmid,
   browser,
   ip_address

  )
values
  ('1134576',
   'qqqqq',
   'shanghai'

  );
commit;

update desktops set browser ='ccc' where pmid='1134576';
commit;

DELETE FROM desktops WHERE pmid='1134576'; 
commit;
--------------------------------------------------------------
insert into pm_policy
  (id, context_name, modification_date, deletion_date)
values
  ('11', 'aaa', sysdate, sysdate);
commit;

update pm_policy t set t.context_name ='ccc' where t.id='11';
commit;

DELETE FROM pm_policy WHERE id='11'; 
commit;
----------------------------------------------------------
insert into pm_rule
  (id,
  created_by,
  name,
   creation_date,
   description,
   modification_date,
   rule_order,
  RULE_STATUS,
   POLICY_ID
   )
values
  ('11',
'22',
'33',

   sysdate,
   'aaaaaa',
   sysdate,
   '33',
   33,
   '963c94f83b274dd8013b2778515c000e'
  );
commit;

update pm_rule t set t.description ='ccc' where t.id='11';
commit;

DELETE FROM pm_rule WHERE id='11'; 
commit;
----------------------------------------------------------------

insert into userchangehistory
  (uhid, userid, LASTMODIFIED)
values
  ('112111',111,SYSTIMESTAMP);
commit;

update userchangehistory t set t.userid =222 where t.uhid='112111';
commit;

DELETE FROM userchangehistory t where t.uhid='112111';
commit;
------------------------------------------------------------
insert into users
  (username, password,id,LASTMODIFIED)
values
  ('11', '222',11232,SYSTIMESTAMP);
commit;

update users t set t.password ='ccc' where t.id='11';
commit;

DELETE FROM users t where t.username='11';
commit;
-------------------------------------------
insert into RSA_CORE.FACT_META_DATA
  (ID,
   NAME,
   TYPE,
   CATEGORY,
   STATUS,
   CUSTOM_FACT_INDEX,
   DESCRIPTION,
   CREATION_DATE,
   CREATED_BY,
   MODIFICATION_DATE,
   MODIFIED_BY,
   DELETION_DATE
   
   )
values
  ('112222',
   'TEST_DATA9',
   'INT99',
   'CUSTOM_FACTS99',
   9,
   209,
   null,
   to_timestamp('02-11-2012 14:33:01.286000', 'dd-mm-yyyy hh24:mi:ss.ff'),
   'admin',
   to_timestamp('02-11-2012 14:33:01.286000', 'dd-mm-yyyy hh24:mi:ss.ff'),
   'admin',
   null);
commit;

UPDATE RSA_CORE.FACT_META_DATA t SET NAME = 'TEST_DATA_UPDATE' where t.id='112222' ;
COMMIT;

DELETE FROM RSA_CORE.FACT_META_DATA WHERE ID='112222';
COMMIT;



------------



------------

测试的一些命令
topas命令
nmon
iostat
iostat命令解析
如何动态扩大oracle 9i SGA区中的内存空间？ 
20131214
top
spotlight

------------

nmon 进入的监控页面
之后输入 h，是帮助，查看字母的用途
 #nmon -f -s  2 -c 10  ---f文件，s是秒，c是时间。
 之后将生成的文件放到nmon analyser v33g.xls文件中进行分析：查看MEM（内存），MEMNEW，SYS-SUMM，DISKBUSY（硬盘使用情况），CPU_ALL（cpu使用请况）
 说明：通常MEM、CPU_ALL、DISKBUSY不能超过75%。SUMM中cpus波动不能太大，太大是有问题的
idle是空闲。user用户。sys是系统 
topas：查看

新特性  描述  
启动 目前还有一个称为 "nmon" 的小型 Shell 脚本，可以用来启动适当的 nmon 版本。将该脚本和 nmon 二进制文件放入到您的 $PATH 中，然后输入：nmon。该版本目前仅在 32 位模式下进行了编译。所以，它可以运行于 32 位和 64 位硬件。这是为了使它更容易安装和运行。 
N = NFS 对于 nmon 10 来说，NFS 是全新的特性。 
p = 分区 (Partitions) 该特性是为了共享 CPU 分区信息，这是 p5/AIX5.3 的重要特性。  
C = CPU 这是为了支持使用 32 个以上 CPU 的计算机，最多可以根据需要达到 128 个逻辑 CPU。 
c = CPU 如果您在 POWER5 上使用 AIX 5.3，并且处于共享 CPU 环境中，那么该特性可以提供关于物理 CPU 使用的详细信息。 
S = 子类 (Subclass) 该特性根据要求表示 WLM 的子类。 
a = 磁盘适配器 (Disk adapters) 提供磁盘适配器的详细信息，比如它们的完整类型。 
r = 资源 (Resources) 其中包括以 MHz 为单位的 CPU 速度。 
k = 内核 (Kernel) 提供了一些新的字段。 
L = 大型页面 (Large pages) 提供了大型页面的状态信息，适用于追求高性能的用户。 
D = 磁盘 (Disk) 提供关于磁盘、磁盘类型大小、可用空间、卷组、适配器等更详细的信息。 
n = 网络 (Network) 提供关于网络适配器、MTU 和相关错误的详细信息。 
m = 内存 (Memory) 提供内存使用的更详细的信息，如系统（内核）和进程、活动虚拟内存。 
-B 这是移除封装的启动选项。 


xh = Help information     q = Quit nmon             0 = reset peak counts                                                                                                                     x
x+ = double refresh time  - = half refresh          r = ResourcesCPU/HW/MHz/AIX                                                                                                               x
xc = CPU by processor     C=upto 128 CPUs           p = LPAR Stats (if LPAR)                                                                                                                  x
xl = CPU avg longer term  k = Kernel Internal       # = PhysicalCPU if SPLPAR                                                                                                                 x
xm = Memory & Paging      M = Multiple Page Sizes  P = Paging Space                                                                                                                           x
xd = DiskI/O Graphs       D = DiskIO +Service times o = Disks %Busy Map                                                                                                                       x
xa = Disk Adapter         e = ESS vpath stats       V = Volume Group stats                                                                                                                    x
x^ = FC Adapter (fcstat)  O = VIOS SEA (entstat)    v = Verbose=OK/Warn/Danger                                                                                                                x
xn = Network stats        N=NFS stats (NN for v4)   j = JFS Usage stats                                                                                                                       x
xA = Async I/O Servers    w = see AIX wait procs   "="= Net/Disk KB<-->MB                                                                                                                     x
xb = black&white mode     g = User-Defined-Disk-Groups (see cmdline -g)                                                                                                                       x
xt = Top-Process --->     1=basic 2=CPU-Use 3=CPU(default) 4=Size 5=Disk-I/O                                                                                                                  x
xu = Top+cmd arguments    U = Top+WLM Classes       . = only busy disks & procs                                                                                                               x
xW = WLM Section          S = WLM SubClasses                                                                                                                                                  x
x[ = Start ODR            ] = Stop ODR                                                                                                                                                        x
x~ = Switch to topas screen                                                                                                                                                                   x
xNeed more details?  Then stop nmon and use: nmon -?   


------------

前两天将topas的man翻译了一下，希望对各位有所帮助！
文中有不对的地方，请指出来，我完善一下！
     
===========================================
TOPAS命令详解
Topas命令可以监控系统活动――memory，I/O，paging space，cpu，process。
此命令包含在perfagent.tools文件集里面。
命令使用方法：
topas [ -d number_of_monitored_hot_disks ] [ -h ] 
[ -i monitoring_interval_in_seconds ] 
[ -n number_of_monitored_hot_network_interfaces]
[ -p number_of_monitored_hot_processes ] 
[ -w number_of_monitored_hot_WLMclasses ] 
[ -c number_of_monitored_hot_CPUs ] 
[ -P | -W ]

参数：
-d：指定要监控的磁盘数。如果屏幕显示的区域足够大的话，这也是磁盘可显示的最大数。当这个数值超出实际安装的磁盘数，仅仅监控并显示安装磁盘的信息。这个参数缺省值为2，如果这个值设为0,将没有磁盘被监控。
-h：显示帮助信息。
-i：设置监控时间的间隔（秒），默认为2秒。
-n：设置被监控的网络接口数。这也是在屏幕上显示的最大网络接口数，当这个值超出了实际安装的网络接口数，仅仅监控并显示安装的网络接口信息。参数缺省值为2，如果这个值设为0,将没有网络信息被监控。
-p：指定被监控的进程数。这也是在屏幕上显示的最大进程数。缺省值为20，如果这个值为0,没见进程信息被监控。得到的这些进程信息是topas的主要开销。如果进程信息不需要，通常使用这个参数指定那些不想要的进程信息。
-w：指明被监控的WLM类的值。这也是在屏幕上显示的最大WLM值，当这个值超出了实际安装的WLM数，仅仅显示那些安装的WLM类的信息，缺省值为2,如果这个值为0,将没有信息显示。
-c：指明被监控的CPU数。这也是在屏幕上显示的最大CPU值，当这个值超出了实际安装的CPU数，仅仅显示那些安装的CPU的信息，缺省值为2,如果这个值为0,将没有信息显示。
-P：显示整个全屏进程显示。显示一系列最繁忙的进程，类似于默认显示的一部分，每个进程仅仅显示几列，可以通过任何列排序。
-W：显示全屏WLM（负载管理器）类。顶部显示一系列WLM类，类似于WLM类的一部分显示。

一些子命令：
a 这个键显示所有被监控的（CPU，network，disk，WLM，process）不同部分。
c 这个键在累积报告和最忙的CPU之间进行切换。
d 这个键在最忙的磁盘和系统总的磁盘活动之间进行切换。
h 显示帮助信息。
n 这个键在最忙的接口和系统总的网络活动之间进行切换。
w 这个键在WLM类的开关之间切换。
p 这个键进程的开关之间切换。
P 这个键用全屏进程显示替换默认的显示。
W 这个键用全屏WLM类显示替换默认显示。
f 移动光标到一个WLM类上，这个键可以在WLM屏幕底端显示一系列进程情况。
q 退出程序。
r 更新显示。


以下是各个部分表示的含义：
Cswitch：在监控期间每秒钟内容转换的次数；
Syscall：在监控期间每秒钟运行系统呼叫的总次数；
Reads：在监控期间每秒钟运行读系统呼叫的次数；
Writes：在监控期间每秒钟运行写系统呼叫的次数；
Forks：在监控期间每秒钟运行派生系统呼叫的次数；
Execs：在监控期间每秒钟运行执行系统呼叫的次数；
Runqueue：等待处理器空闲以便运行的线程平均数；
Waitqueue：等待分页完成的线程平均数；
Readch：在监控期间通过读系统呼叫每秒钟读出的字节数；
Writech：在监控期间通过写系统呼叫每秒钟写入的字节数；
Rawin：在监控期间通过TTYs每秒钟读入的裸字节数；
Ttyout：在监控期间每秒钟写入TTYs的字节数；
Igets：在监控期间每秒钟到节点查找例行程序的呼叫数；
Namei：在监控期间每秒钟路径查找例行程序的呼叫数；
Dirblk：在监控期间通过目录搜索例行程序每秒钟扫描到的目录块数；

PAGING部分显示的是分页每秒钟次数的统计：
Faults：在监控期间每秒钟发生的分页错误总数；
Steals：在监控期间被虚拟内存管理器每秒钟偷走的物理内存4k的帧；
PgspIn：在监控期间每秒钟从分页空间中读取的4k分页数；
PgspOut：在监控期间每秒钟写入分页空间的4k分页数；
PageIn：在监控期间每秒钟读取的4k分页数，这包括从文件系统读操作相关的分页活动，从这个值减去PgspIn的值就是每秒钟从文件系统读操作相关的分页活动数；
PageOut：在监控期间每秒钟写入的4k分页数，这包括向文件系统写操作相关的分页活动，从这个值减去PgspOut的值就是每秒钟向文件系统写操作相关的分页活动数；
Sios：在监控期间通过虚拟内存管理器得到的I/O请求数；

Momory部分显示的是实际内存和在使用中的内存：
Real,MB：以M为单位的实际内存；
％Comp：当前分配给计算分页片断的内存占实际内存的百分比。计算分页片断由分页空间产生。
％Nocomp：当前分配非计算分页片断的内存占实际内存的百分比。非计算分页片断包括那些文件空间，数据文件、可执行文件、或者共享库文件。
％Client：当前分配给用来缓冲远程挂载文件的内存占实际内存的百分比。

PAING SPACE显示分页空间的大小和使用率：
Size,MB：系统里所有分页空间的大小，以M为单位；
％Used：当前使用的分页空间占总空间的百分比；
％Free：当前空闲的分页空间占总空间的百分比。

CPU工具：
User％：显示运行的用户程序所占用的CPU百分比；
Kern%：显示运行的内核程序所占用的CPU百分比；
Wait%：显示等待IO操作所占用的CPU百分比；
Idel%：显示CPU空闲的百分比。

网络接口：
Interf：网络接口的名称；
KBPS：在监控期间每秒钟通过的以M为单位的总流量，这部分包括每秒钟接收和发送的总和。
I-Pack：在监控期间每秒钟接收到的数据包数；
O-Pack：在监控期间每秒钟发送的数据包数；
KB-In：在监控期间每秒钟接收到的字节数（以K为单位）；
KB-Out：在监控期间每秒钟发送的字节数（以K为单位）。

物理磁盘：
Disk：物理磁盘的名称；
Busy%：指明物理磁盘在活动状态的时间百分比；
KBPS：在监控期间每秒钟读写的字节数（以K为单位）；
TPS：每秒钟物理磁盘的数据传输量。一次传输指的是一次I/O请求；
KB-Read：每秒钟从物理磁盘读出的K字节数；
KB-Write：每秒钟向物理磁盘写入的K字节数。

WLM（负载管理）类：
％CPU Utilization：CPU的平均利用率；
％Mem Utilization：内存的平均利用率；
％Blk I/O：块I/O的平均利用率；

进程：
NAME：可执行程序的名称；
Process ID：进程的ID号；
％CPU Utilization：进程的CPU平均使用率，这个值指的是进程在生命周期中的平均使用率；
Paging Space Used：分配给进程的分页空间大小；
Process Owner：拥有这个进程的用户名；
Workload Management（WLM）Class：进程属于哪个WLM class。



------------

3、	nmon数据采集
3.1数据采集
为了实时监控系统在一段时间内的使用情况并将结果记录下来，我们可以通过运行以下命令实现：
#./ nmon -f -t -r test -s 30 -c 180
ltest：这次监控记录的标题与生产的文件名称
l-s 30：每30秒进行一次数据采集
l-c 180：一共采集180次
输入命令后，将自动在当前目录生成一个hostname_timeSeries.nmon的文件，如：
lhosname为test1，生产的文件为：test1_090320_2213.nmon
通过以下命令将nmon结果转换为csv文件：
# sort -A test1_090320_2213.nmon > test1_090320_2213.csv
即可在当前目录生产test1_090320_2213.csv文件。我们将test1_090320_2213.csv文件下载到本地转换为图形结果分析。
3.2生成图形化结果 
如何使用nmon analyser.xls工具生成excel文件呢？
1、下载nmon analyser.xls工具
2、打开nmon analyser.xls工具
3、调整excel宏安全性：工具-宏-安全性
（修改安全级别与可靠发行商）
（选择）安全级别：低
（勾上）信任所有安装的加载项和模板
（勾上）信任对于“Visual Baisc项目”的访问
4、 修改完后，确定-关闭nmon analyser.xls，重新打开 
5、点击Analyse nmon data按钮，加载之前下载的test1_090320_2213.csv
文件

 



------------


iostat用于输出CPU和磁盘I/O相关的统计信息. 
命令格式:
 iostat [ -c | -d ] [ -k | -m ] [ -t ] [ -V ] [ -x ] [ device [ ... ] | ALL ] [ -p [ device | ALL ]  ]       [ interval [ count ] ] 
 
 
1)iostat的 简单使用
 

iostat可以显示CPU和I/O系统的负载情况及分区状态信息. 
直接执行iostat可以显示下面内容:
 # iostatLinux 2.6.9-8.11.EVAL (ts3-150.ts.cn.tlan)      08/08/2007avg-cpu:  %user   %nice    %sys %iowait   %idle             12.01    0.00        2.15    2.30       83.54Device:            tps   Blk_read/s   Blk_wrtn/s   Blk_read   Blk_wrtnhda               7.13       200.12        34.73     640119     111076 
各个输出项目的含义如下:
 avg-cpu段:%user: 在用户级别运行所使用的CPU的百分比.%nice: nice操作所使用的CPU的百分比.%sys: 在系统级别(kernel)运行所使用CPU的百分比.%iowait: CPU等待硬件I/O时,所占用CPU百分比.%idle: CPU空闲时间的百分比.Device段:tps: 每秒钟发送到的I/O请求数.Blk_read /s: 每秒读取的block数.Blk_wrtn/s: 每秒写入的block数.Blk_read:   读入的block总数.Blk_wrtn:  写入的block总数. 
2)iostat参 数说明
 

iostat各个参数说明:
 -c 仅显示CPU统计信息.与-d选项互斥. -d 仅显示磁盘统计信息.与-c选项互斥. -k 以K为单位显示每秒的磁盘请求数,默认单位块. -p device | ALL  与-x选项互斥,用于显示块设备及系统分区的统计信息.也可以在-p后指定一个设备名,如:  # iostat -p hda  或显示所有设备  # iostat -p ALL -t    在输出数据时,打印搜集数据的时间. -V    打印版本号和帮助信息. -x    输出扩展信息. 
3)iostat输 出项目说明
 
Blk_read  读入块的当总数.              Blk_wrtn  写入块的总数.              kB_read/s  每秒从驱动器读入的数据量,单位为K.              kB_wrtn/s  每秒向驱动器写入的数据量,单位为K.              kB_read  读入的数据总量,单位为K.              kB_wrtn  写入的数据总量,单位为K.              rrqm/s  将读入请求合并后,每秒发送到设备的读入请求数.              wrqm/s  将写入请求合并后,每秒发送到设备的写入请求数.              r/s  每秒发送到设备的读入请求数.              w/s  每秒发送到设备的写入请求数.              rsec/s  每秒从设备读入的扇区数.              wsec/s  每秒向设备写入的扇区数.              rkB/s  每秒从设备读入的数据量,单位为K.              wkB/s  每秒向设备写入的数据量,单位为K.              avgrq-sz  发送到设备的请求的平均大小,单位是扇区.              avgqu-sz  发送到设备的请求的平均队列长度.              await  I/O请求平均执行时间.包括发送请求和执行的时间.单位是毫秒.              svctm  发送到设备的I/O请求的平均执行时间.单位是毫秒.              %util  在I/O请求发送到设备期间,占用CPU时间的百分比.用于显示设备的带宽利用率.  当这个值接近100%时,表示设备带宽已经占满. 
4)iostat示 例
 
#  iostat 显示一条统计记录,包括所有的CPU和设备.      # iostat -d 2 每隔2秒,显示一次设备统计信息.      # iostat -d 2 6 每隔2秒,显示一次设备统计信息.总共输出6次.      # iostat -x hda hdb 2 6 每隔2秒显示一次hda,hdb两个设备的扩展统计信息,共输出6次.      # iostat -p sda 2 6 每隔2秒显示一次sda及上面所有分区的统计信息,共输出6次.

------------

1.确定磁盘使用率    $ iostat -T 2 10  System configuration: lcpu=8 drives=29 paths=52 vdisks=0  tty:      tin         tout    avg-cpu: % user % sys % idle % iowait  time           0.0        377.0               77.6   6.1   16.2      0.1  11:35:45 Disks:        % tm_act     Kbps      tps    Kb_read   Kb_wrtn  time hdisk5          78.0     6080.0     439.0      12048       112  11:35:45 hdisk4          79.5     11856.5     453.5      23564       149  11:35:45 hdisk6          19.0     1664.0      13.0       3328         0  11:35:45 $    % tm_act  物理磁盘活动的时间百分比 KBPS   某块磁盘传输数据的总量（读或写） tps   某块物理磁盘每秒钟 IO 传输的数量 Kb_read  从磁盘上读取数据的总量 Kb_wrtn  写入磁盘的数据总量    如果 %tm_act 字段显示磁盘非常忙，并且 Kbps 字段显示持续的大量数据传输,应考虑散布数据跨越多个磁盘。该命令支持动态的配置改变。如果发现到配置改变，iostat 报告发出一个警告，并刷新最新的系统配置。其中% tm_act是指活动时间,kbps是在统计时间内所有Kb_read与Kb_wrtn之和除以时间的值，即每秒传输的字节数如果% tm_act常过70%却只有很低的Kbps，系统可能是有比较多的LV碎片或文件碎片，当都高时则系统正常。tps表示每秒的IO数，不同的磁盘系统其可承受的IO数不同。如果一块磁盘的活动率超过70%，可以通过转移一部分的磁盘活动压力到另一个磁盘上，或者通过多个磁盘驱动器来扩展I/O压力来获得更高的性能。    $ iostat -D hdisk0 (查看某一磁盘的情况)  System configuration: lcpu=8 drives=29 paths=52 vdisks=0 hdisk0         xfer:  %tm_act      bps      tps      bread      bwrtn                              4.6     58.3K     8.8       16.5K      41.9K                 read:      rps  avgserv  minserv  maxserv   timeouts      fails                          3.5      5.8      0.3     67.8           0          0                write:      wps  avgserv  minserv  maxserv   timeouts      fails                          5.3     11.2      0.6    114.9           0          0                queue:  avgtime  mintime  maxtime  avgwqsz    avgsqsz     sqfull                        136.8      0.0    388.4      0.2        0.0         3.8 --------------------------------------------------------------------------------       如果使用启用多路径 I/O ［multi-path input-output (MPIO)］的设备，可使用 iostat -m 命令显示每条相关路径的统计信息。 $ iostat -m -D hdisk6  System configuration: lcpu=8 drives=29 paths=52 vdisks=0 
hdisk6         xfer:  %tm_act      bps      tps      bread      bwrtn                              3.4    286.7K    28.6      285.3K       1.4K                 read:      rps  avgserv  minserv  maxserv   timeouts      fails                         28.5      1.9      0.1    383.4           0          0                write:      wps  avgserv  minserv  maxserv   timeouts      fails                          0.1      4.5      0.2     94.3           0          0                queue:  avgtime  mintime  maxtime  avgwqsz    avgsqsz     sqfull                          0.9      0.0    326.3      0.0        0.0        21.0 Path1          xfer:  %tm_act      bps      tps      bread      bwrtn                              3.4    286.7K    28.6      285.3K       1.4K Path0          xfer:  %tm_act      bps      tps      bread      bwrtn                              0.0      0.0      0.0        0.0        0.0   ------------------------------------------------------------------------------        2.确定CPU使用情况 $ iostat 2  System configuration: lcpu=8 drives=29 paths=52 vdisks=0 tty:      tin         tout    avg-cpu: % user % sys % idle % iowait           0.0        354.5               79.4   4.6   15.9      0.0 ...... ......    tin  系统从所有 ttys 读取的字符的总数 tout  系统写到所有 ttys 的字符的总数 %user  以用户模式执行 CPU 利用率的百分比 %sys  以内核模式执行 CPU 利用率的百分比  %idle  CPU 空闲时间的百分比，系统没有未解决的磁盘 I/O 请求 %iowait CPU 空闲时间的百分比，期间，系统有未解决的磁盘 I/O 请求 %physc 消耗物理 CPU 的百分比，只在运行共享处理器的分区显示 %entc  消耗分配容量的百分比，只在运行共享处理器的分区显示    3.异步IO $ iostat -A  System configuration: lcpu=8 drives=29 paths=52 vdisks=0 aio: avgc avfc maxg maif maxr             0    0    0   22 4096    avgc  指定时间间隔内，每秒平均全局 non-fast 路径 AIO 请求计数 avfc  指定埋单间隔内，每秒平均全局 AIO fast 路径请求计数  maxg  自最后一次取值以来，最大的全局 non-fast 路径 AIO 请求计数 maxf  自最后一次取值以来，最大 fast 路径请求计数  maxr  容许的最大 AIO 请求。这是 AIO 设备的 maxreqs 属性 
   4.确定适配器的利用率 $ iostat -a  System configuration: lcpu=8 drives=29 paths=52 vdisks=0 tty:      tin         tout    avg-cpu: % user % sys % idle % iowait           0.0         12.6               13.5   2.2   83.4      0.8 Adapter:                   Kbps      tps    Kb_read   Kb_wrtn fcs0                       0.0       0.0        180         0  Disks:              % tm_act     Kbps      tps    Kb_read   Kb_wrtn hdisk8                 0.0       0.0       0.0          0         0 hdisk9                 0.0       0.0       0.0          0         0 hdisk18                0.0       0.0       0.0          0         0 hdisk5                 0.0       0.0       0.0          0         0 hdisk11                0.0       0.0       0.0          0         0 hdisk10                0.0       0.0       0.0          0         0 hdisk12                0.0       0.0       0.0          0         0 hdisk16                0.0       0.0       0.0          0         0 hdisk13                0.0       0.0       0.0          0         0 hdisk14                0.0       0.0       0.0          0         0 hdisk19                0.0       0.0       0.0          0         0 hdisk4                 0.0       0.0       0.0          0         0 hdisk7                 0.0       0.0       0.0        180         0 hdisk20                0.0       0.0       0.0          0         0 hdisk15                0.0       0.0       0.0          0         0 hdisk22                0.0       0.0       0.0          0         0 hdisk24                0.0       0.0       0.0          0         0 hdisk17                0.0       0.0       0.0          0         0 hdisk6                 0.0       0.0       0.0          0         0 hdisk21                0.0       0.0       0.0          0         0 hdisk23                0.0       0.0       0.0          0         0 hdisk25                0.0       0.0       0.0          0         0 hdisk26                0.0       0.0       0.0          0         0 hdisk27                0.0       0.0       0.0          0         0 Adapter:                   Kbps      tps    Kb_read   Kb_wrtn sisscsia0                1037.2      24.0   853190413  2792786844 Disks:              % tm_act     Kbps      tps    Kb_read   Kb_wrtn hdisk2                 0.0       0.0       0.0          0         0  hdisk1                 2.9      43.1       5.9    7601140  143758376 hdisk0                 4.6      57.0       8.8   56471864  143758376 hdisk3                 3.6     937.2       9.4   789117409  2505270092 Adapter:                   Kbps      tps    Kb_read   Kb_wrtn ide0                       0.0       0.0          0         0  Disks:              % tm_act     Kbps      tps    Kb_read   Kb_wrtn cd0                    0.0       0.0       0.0          0         0 
Adapter:                   Kbps      tps    Kb_read   Kb_wrtn fcs1                     1753.6     141.4   5991841616  172643922 Disks:              % tm_act     Kbps      tps    Kb_read   Kb_wrtn hdisk8                 0.0       0.0       0.0          0         0 hdisk9                 0.0       0.0       0.0          0         0 hdisk18                0.0       0.0       0.0          0         0  hdisk5                 7.9     761.6      69.1   2654793648  22544736 hdisk11                0.0       0.0       0.0          0         0 hdisk10                0.0      58.5       0.2   205481199         0 hdisk12                0.0       0.0       0.0          0         0  hdisk16                0.0      59.9       0.3   210289843    108792 hdisk13                0.0       0.0       0.0          0         0 hdisk14                0.0       0.0       0.0          0         0 hdisk19                0.0       0.0       0.0          0         0  hdisk4                 5.8     593.5      43.2   1941265217  145036858 hdisk7                 0.0       0.0       0.0          0         0 hdisk20                0.0       0.0       0.0          0         0 hdisk15                0.0       0.0       0.0          0         0 hdisk22                0.0       0.0       0.0          0         0 hdisk24                0.0       0.0       0.0          0         0 hdisk17                0.0       0.0       0.0          0         0  hdisk6                 3.4     280.2      28.6   980011709   4953536 hdisk21                0.0       0.0       0.0          0         0 hdisk23                0.0       0.0       0.0          0         0 hdisk25                0.0       0.0       0.0          0         0 hdisk26                0.0       0.0       0.0          0         0 hdisk27                0.0       0.0       0.0          0         0   


------------

Oracle 9i 具有动态SGA的功能，用操作系统命令查看系统内存时，发现系统中还有空闲内存. 但为什么有时使用oracle 9i 的 
sql > alter system set db_cache_size=xxxxM 
命令时数据库会报告错 -- 没有足够的内存. 这是由操作系统引起的吗？ 

不是，原因在于此时SGA区中没有多余空闲内存。尽管系统中有空闲内存，但未分配给SGA 区。 
在oracle 9i 中 动态SGA的概念是无需经过 关闭实例（instance）, 修改初始化参数文件和重启实例这一过程，就可动态调整 buffer cache 和 share pool 的大小。 另外，动态SGA允许在实例运行时设置，下次启动时将有多少物理内存分配给SGA 这一数据库参数。 SGA 可用最大物理内存是由SGA_MAX_SIZE 参数来决定的。 
在启动实例时，大小为SGA_MAX_SIZE 的内存就分配给了SGA，SGA成员（buffer cache, share pool等）根据参数值也会获得相应的内存。 
实例启动后SGA的各成员所用内存之和可以小于SGA_MAX_SIZE。 数据库管理员通过使用 alter system 命令来调整SGA成员间的内存分配。 当SGA中有足够多的空闲内存时，增大share pool 或 buffer cache 才能完成，否则会报内存不足。 
另外Share pool 和 buffer cache 的尺寸也可动态缩小。 当实例已启动，SGA已达到 SGA_MAX_SIZE值，可通过先减少某一成员的内存，再增加另一成员的内存来完成。 
SGA成员间是相互独立的，在成员间分配内存时，其和一定不能大于 SGA_MAX_SIZE ， 并且db_cache_size 参数不能等于0。 

在OLAP与OLTP混合型的应用环境中，利用动态SGA的功能，可以根据不同时刻应用的优先级，来动态的调整buffer cache 和 share pool 的尺寸，以提高系统的性能 ： 
a. 当OLTP 应用 优先级高时，缩小 buffer cache 的值，增大 share pool 的值； 
b. 当 OLAP 应用优先级高时，缩小 share pool 的值，增大buffer cache 的值。 

例如： 
1． 增大buffer cache 尺寸 
SQL> show parameter db_cache_size; 显示当前 buffer chache 的大小 
NAME TYPE VALUE 
-------------------------- ----------- ----------------- 
db_cache_size big integer 4194304 
SQL> alter system set db_cache_size=8M; 增大buffer cache 到8MB。 
System altered. 
SQL> show parameter db_cache_size; 
NAME TYPE VALUE 
-------------------------- ----------- ----------------- 
db_cache_size big integer 8388608 

2. 调整参数 SGA_MAX_SIZE (需重启实例) 
SQL> alter system set SGA_MAX_SIZE= 1000M scope=spfile; 
System altered. 

3． 增大shared_pool_size 尺寸 
假设，初始参数值为： 
SGA_MAX_SIZE=128M 
DB_CACHE_SIZE=88M 
SHARED_POOL_SIZE=32M 

SQL>ALTER SYSTEM SET SHARED_POOL_SIZE=64M; 设置share_pool 的内存为64M 
Error ORA-04033, insufficient memory 

SQL>ALTER SYSTEM SET DB_CACHE_SIZE=56M; 减少buffer cache 的大小 
SQL>ALTER SYSTEM SET SHARED_POOL_SIZE=64M; 
Error ORA-04033, insufficient memory 
需要等 buffer cache 释放完，才可扩大 share pool 的大小 

SQL> select * from v$buffer_pool ; 检查内存释放是否完成。 

SQL>ALTER SYSTEM SET SHARED_POOL_SIZE=64M; 
System altered. 

------------

求cpu平均值：cpu_all
硬盘：diskbusy  硬盘3
io：
tps：问tm
event_log条数：



------------



------------

SGA：System Global Area是Oracle Instance的基本组成部分，在实例启动时分配;系统全局域SGA主要由三部分构成：共享池、数据缓冲区、日志缓冲区。
PGA：Process Global Area是为每个连接到Oracle database的用户进程保留的内存。



------------


SQL> show parameter shared_pool_size;

NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
shared_pool_size                     big integer 0
SQL> alter system set shared_pool_size=512m;

System altered.

SQL> show parameter shared_pool_size;

NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
shared_pool_size                     big integer 512M
SQL> show parameter sga_;

NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
sga_max_size                         big integer 1200M
sga_target                           big integer 1200M
SQL>

------------

黑马
选择器
each用法
表格隔行变色
选中
指定元素后面追加
jquery-1.10.2.js
attr属性
在table内tbody上追加
增加移除样式
对input获取和失去焦点值的改变
val的使用
全选和反选
收缩展开下个节点
表单验证
密码校验

------------

js
二级联动
级联省份

------------

#表示的是id；
$('#id') 等于 document.getElementById('id')；返回id的。对象
创建新窗口
window.top.createNewWindow("changePassword", "修改密码", "manage/view/changePassword", 400, 300);


<button id='aaa'>tijiao</button>函数直接量方式定义函数，匿名函数：
document.getElementById("aaa").onclick=function(){
}

------------

window.onload=function(){
ducument.getElementById("").onchange=function(){
//获取变化的省份
 var changePovinceValue=this.value;
 //
var xmlDoc =parseXML("cities.xml");
var provinceElement =null;
  var ccc =xmlDoc.getElementByTagName("province");
   for(var i=0;i<ccc.length;i++){
     var  xmlPrEle=ccc[i];
        var name =xmlPrEle.getAttribute("name");
  		if(changePovinceValue==name){
  		provinceElement =name;
         break;
    }
   }
      if(provinceElement !=null){
    //获取省下所有的city节点
    var  xmlcity = provinceElement .getElementByTagName("city");
    for(var i=0;i<xmlcity .length;i++){
    var cityValue =xmlcity [i].firstChild.nodeValue;
    //创建option标签，
    清空城市的下拉选
   var cityelement= document.getElementById("city")
    var ddd=   document.getElementById("city").getElementByTagName("option");
      for(var i=ddd.length-1;i>0;i--){
cityelement.removechild(ddd[i]);
}
    document.getElementById("city").add (new    Option(str,str));
    }
       }
     }
}

function parseXML(aaaaa)
{
try //Internet Explorer
  {
  xmlDoc=new ActiveXObject("Microsoft.XMLDOM");
  }
catch(e)
  {
  try //Firefox, Mozilla, Opera, etc.
    {
    xmlDoc=document.implementation.createDocument("","",null);
    }
  catch(e)
    {
    alert(e.message);
    return;
    }
  }
xmlDoc.async=false;
xmlDoc.load(aaa);



------------

<form action="http://www.sharejs.com" method=post name="creator" enctype="multipart/form-data"> 

<script language="javascript"> 
<!-- 
var where = new Array(35);  
function comefrom(loca,locacity) { this.loca = loca; this.locacity = locacity; }  
where[0]= new comefrom("请选择省份名","请选择城市名"); 
where[1] = new comefrom("北京","|东城|西城|崇文|宣武|朝阳|丰台|石景山|海淀|门头沟|房山|通州|顺义|昌平|大兴|平谷|怀柔|密云|延庆");  
where[2] = new comefrom("上海","|黄浦|卢湾|徐汇|长宁|静安|普陀|闸北|虹口|杨浦|闵行|宝山|嘉定|浦东|金山|松江|青浦|南汇|奉贤|崇明");  
where[3] = new comefrom("天津","|和平|东丽|河东|西青|河西|津南|南开|北辰|河北|武清|红挢|塘沽|汉沽|大港|宁河|静海|宝坻|蓟县");  
where[4] = new comefrom("重庆","|万州|涪陵|渝中|大渡口|江北|沙坪坝|九龙坡|南岸|北碚|万盛|双挢|渝北|巴南|黔江|长寿|綦江|潼南|铜梁|大足|荣昌|壁山|梁平|城口|丰都|垫江|武隆|忠县|开县|云阳|奉节|巫山|巫溪|石柱|秀山|酉阳|彭水|江津|合川|永川|南川");  
where[5] = new comefrom("河北","|石家庄|邯郸|邢台|保定|张家口|承德|廊坊|唐山|秦皇岛|沧州|衡水");  
where[6] = new comefrom("山西","|太原|大同|阳泉|长治|晋城|朔州|吕梁|忻州|晋中|临汾|运城");  
where[7] = new comefrom("内蒙古","|呼和浩特|包头|乌海|赤峰|呼伦贝尔盟|阿拉善盟|哲里木盟|兴安盟|乌兰察布盟|锡林郭勒盟|巴彦淖尔盟|伊克昭盟");  
where[8] = new comefrom("辽宁","|沈阳|大连|鞍山|抚顺|本溪|丹东|锦州|营口|阜新|辽阳|盘锦|铁岭|朝阳|葫芦岛");  
where[9] = new comefrom("吉林","|长春|吉林|四平|辽源|通化|白山|松原|白城|延边");  
where[10] = new comefrom("黑龙江","|哈尔滨|齐齐哈尔|牡丹江|佳木斯|大庆|绥化|鹤岗|鸡西|黑河|双鸭山|伊春|七台河|大兴安岭");  
where[11] = new comefrom("江苏","|南京|镇江|苏州|南通|扬州|盐城|徐州|连云港|常州|无锡|宿迁|泰州|淮安");  
where[12] = new comefrom("浙江","|杭州|宁波|温州|嘉兴|湖州|绍兴|金华|衢州|舟山|台州|丽水");  
where[13] = new comefrom("安徽","|合肥|芜湖|蚌埠|马鞍山|淮北|铜陵|安庆|黄山|滁州|宿州|池州|淮南|巢湖|阜阳|六安|宣城|亳州");  
where[14] = new comefrom("福建","|福州|厦门|莆田|三明|泉州|漳州|南平|龙岩|宁德");  
where[15] = new comefrom("江西","|南昌市|景德镇|九江|鹰潭|萍乡|新馀|赣州|吉安|宜春|抚州|上饶");  
where[16] = new comefrom("山东","|济南|青岛|淄博|枣庄|东营|烟台|潍坊|济宁|泰安|威海|日照|莱芜|临沂|德州|聊城|滨州|菏泽");  
where[17] = new comefrom("河南","|郑州|开封|洛阳|平顶山|安阳|鹤壁|新乡|焦作|濮阳|许昌|漯河|三门峡|南阳|商丘|信阳|周口|驻马店|济源");  
where[18] = new comefrom("湖北","|武汉|宜昌|荆州|襄樊|黄石|荆门|黄冈|十堰|恩施|潜江|天门|仙桃|随州|咸宁|孝感|鄂州"); 
where[19] = new comefrom("湖南","|长沙|常德|株洲|湘潭|衡阳|岳阳|邵阳|益阳|娄底|怀化|郴州|永州|湘西|张家界");  
where[20] = new comefrom("广东","|广州|深圳|珠海|汕头|东莞|中山|佛山|韶关|江门|湛江|茂名|肇庆|惠州|梅州|汕尾|河源|阳江|清远|潮州|揭阳|云浮");  
where[21] = new comefrom("广西","|南宁|柳州|桂林|梧州|北海|防城港|钦州|贵港|玉林|南宁地区|柳州地区|贺州|百色|河池");  
where[22] = new comefrom("海南","|海口|三亚");  
where[23] = new comefrom("四川","|成都|绵阳|德阳|自贡|攀枝花|广元|内江|乐山|南充|宜宾|广安|达川|雅安|眉山|甘孜|凉山|泸州");  
where[24] = new comefrom("贵州","|贵阳|六盘水|遵义|安顺|铜仁|黔西南|毕节|黔东南|黔南");  
where[25] = new comefrom("云南","|昆明|大理|曲靖|玉溪|昭通|楚雄|红河|文山|思茅|西双版纳|保山|德宏|丽江|怒江|迪庆|临沧"); 
where[26] = new comefrom("西藏","|拉萨|日喀则|山南|林芝|昌都|阿里|那曲");  
where[27] = new comefrom("陕西","|西安|宝鸡|咸阳|铜川|渭南|延安|榆林|汉中|安康|商洛");  
where[28] = new comefrom("甘肃","|兰州|嘉峪关|金昌|白银|天水|酒泉|张掖|武威|定西|陇南|平凉|庆阳|临夏|甘南");  
where[29] = new comefrom("宁夏","|银川|石嘴山|吴忠|固原");  
where[30] = new comefrom("青海","|西宁|海东|海南|海北|黄南|玉树|果洛|海西");  
where[31] = new comefrom("新疆","|乌鲁木齐|石河子|克拉玛依|伊犁|巴音郭勒|昌吉|克孜勒苏柯尔克孜|博尔塔拉|吐鲁番|哈密|喀什|和田|阿克苏");  
where[32] = new comefrom("香港","");  
where[33] = new comefrom("澳门","");  
where[34] = new comefrom("台湾","|台北|高雄|台中|台南|屏东|南投|云林|新竹|彰化|苗栗|嘉义|花莲|桃园|宜兰|基隆|台东|金门|马祖|澎湖");  
where[35] = new comefrom("其它","|北美洲|南美洲|亚洲|非洲|欧洲|大洋洲");  
function select() { 
with(document.creator.province) { var loca2 = options[selectedIndex].value; } 
for(i = 0;i < where.length;i ++) { 
if (where[i].loca == loca2) { 
loca3 = (where[i].locacity).split("|"); 
for(j = 0;j < loca3.length;j++) { with(document.creator.city) { length = loca3.length; options[j].text = loca3[j]; options[j].value = loca3[j]; var loca4=options[selectedIndex].value;}} 
break; 
}} 
document.creator.newlocation.value=loca2+loca4; 
} 
function init() { 
with(document.creator.province) { 
length = where.length; 
for(k=0;k<where.length;k++) { options[k].text = where[k].loca; options[k].value = where[k].loca; } 
options[selectedIndex].text = where[0].loca; options[selectedIndex].value = where[0].loca; 
} 
with(document.creator.city) { 
loca3 = (where[0].locacity).split("|"); 
length = loca3.length; 
for(l=0;l<length;l++) { options[l].text = loca3[l]; options[l].value = loca3[l]; } 
options[selectedIndex].text = loca3[0]; options[selectedIndex].value = loca3[0]; 
}} 
--> 
</script> 
<body onload="init()"> 
<font color=#000000><b>来自：</b>
请输入您所在国家的具体地方。此项可选

 
省份 <select name="province" onChange = "select()"></select>　城市 <select name="city" onChange = "select()">  </select>
 
我在 <input type=text name="newlocation" maxlength=12 size=12 style="font-weight: bold">　不能超过12个字符（6个汉字） 
</form> 


------------

基本选择器1
基本选择器2
层次选择器
属性过滤选择器
子元素选择器
form中值的获取和赋值

------------

获取焦点，触发函数：
$("#tid").foucs(function(){
alert("qqq");;//失去焦点
});

按钮的单击事件：
 //id选择器
  $("#tijiao").click( function () { $("#name").val("buhao");}); 
  //class选择器
  $("#change").click( function () { $("#.name").css("background","red");}); 
  //改变所有元素
  $("#all").click( function () { $("*").css("background","red");}); 
  //改变部分元素
  $("#some").click( function () { $("#name,#.name").css("background","red");});
  
  
  <%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
<%
String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
%>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <base href="<%=basePath%>">
    
    <title>My JSP 'test.jsp' starting page</title>
    
	<meta http-equiv="pragma" content="no-cache">
	<meta http-equiv="cache-control" content="no-cache">
	<meta http-equiv="expires" content="0">    
	<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
	<meta http-equiv="description" content="This is my page">
  <script type="text/javascript" src="jQuery/jquery.js"></script>
	<!--
	<link rel="stylesheet" type="text/css" href="styles.css">
	-->

  </head>
  <script type="text/javascript">
  
    function test(){
      var c=  $('#name').val();
         alert(c);
  }
  
  
  
  
  </script>
  <body>
 <from>
    <table>
     <tr>
      <td>
	    <input type='text' id ="name" name="name" value="haode"></inpt>
	    <input type="button"  value="tijiao1" id="tijiao" ></input><br>
	    <input type="button"  value="改变所有div的属性" id="change" ></input><br>
	    <input type="button"  value="改变所有元素的属性" id="all" ></input><br>
	    <input type="button"  value="改变特定元素的属性" id="some" ></input><br>
	    <input type="button"  value="层次选择器所有都变" id="fower" ></input><br>
	    <input type="button"  value="层次选择器子元素" id="fower2" ></input><br>
	   </td>
	 </tr>
   </table>
 </from>
 
    <div id="dd" class ="name" style="width:100px;height:100px;border:1px solid #ccc;">nihao
      <div id="dddd" class ="name" style="width:100px;height:100px;border:1px solid #ccc;">123132
        <div id="dddd" class ="name" style="width:100px;height:100px;border:1px solid #ccc;">343333333333 </div>
       </div>
     </div>
    <div id="dddd" class ="name" style="width:100px;height:100px;border:1px solid #ccc;">meiwangfa</div>
    
  </body>
  <div id="dddd" class ="name" style="width:100px;height:100px;border:1px solid #ccc;">1212434 </div>
    
  <script type="text/javascript">
  //id选择器
  $("#tijiao").click( function () { $("#name").val("buhao");}); 
  //class选择器
  $("#change").click( function () { $("#.name").css("background","red");}); 
  //改变所有元素
  $("#all").click( function () { $("*").css("background","red");}); 
  //改变部分元素
  $("#some").click( function () { $("#name,#.name").css("background","red");}); 
  //层次选择器. 改变所有的div背景色
  $("#fower").click( function () { $("body div").css("background","red");}); 
  //层次选择器. 改变子的div背景色
  $("#fower2").click( function () { $("body >  div").css("background","red");}); 
  
  
  </script>
</html>

  
  
  
  
  
  
  
  

------------

<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
<%
String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
%>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
     <base href="<%=basePath%>">
    
    <title>My JSP 'context.jsp' starting page</title>
    
	<meta http-equiv="pragma" content="no-cache">
	<meta http-equiv="cache-control" content="no-cache">
	<meta http-equiv="expires" content="0">    
	<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
	<meta http-equiv="description" content="This is my page">
  <script type="text/javascript" src="jQuery/jquery-1.10.2.js"></script>
	<!--
	<link rel="stylesheet" type="text/css" href="styles.css">
	-->

  </head>
  
  <body>
  基本选择器是以“：”分隔;
   <input type="button"  value="first" id="first" ></input><br>
   <input type="button"  value="last" id="last" ></input><br>
   <input type="button"  value="not" id="not" ></input><br>
   匹配所有索引值为偶数的元素，从 0 开始计数
   <input type="button"  value="even" id="even" ></input><br>
   查找表格的2、4、6行（即索引值1、3、5...）
   <input type="button"  value="odd" id="odd" ></input><br>
   匹配一个给定索引值的元素
   <input type="button"  value="eq" id="eq" ></input><br>
   匹配所有大于给定索引值的元素
   <input type="button"  value="gt" id="gt" ></input><br>
   匹配所有小于给定索引值的元素
   <input type="button"  value="lt" id="lt" ></input><br>
   <input type="button"  value="header" id="header" ></input><br>


   <div id="dddd1" class ="name1" style="width:100px;height:10px;border:1px solid #ccc;">1212434 </div>
   <div id="dddd2" class ="name2" style="width:100px;height:10px;border:1px solid #ccc;">1212434 </div>
   <div id="dddd3" class ="name3" style="width:100px;height:10px;border:1px solid #ccc;">1212434 </div>
  淡出fadeOut/淡入fadeIn
   <div id="movie" class ="name" style="width:100px;height:10px;border:1px solid #ccc;">滑动1 </div>
     匹配所有正在执行动画效果的元素
      <input type="button"  value="animated" id="animated1" ></input><br>
   <div id="animated" class ="name" style="width:100px;height:100px;border:1px solid #ccc;">1212434 </div>
    
    <ul>
    <li>list item 1</li>
    <li>list item 2</li>
    <li>list item 3</li>
    <li>list item 4</li>
    <li>list item 5</li>
</ul>
匹配如 h1, h2, h3之类的标题元素
<h1>Header 1</h1>
<p>Contents 1</p>
<h2>Header 2</h2>
<p>Contents 2</p>
  </body>
  <script type="text/javascript">
  //层次选择器. 改变子的div背景色
  $("#first").click( function () { $("div:first").css("color","blue");}); 
  $("#last").click( function () { $("div:last").css("color","red");}); 
  $("#not").click( function () { $("div:not(.name)").css("color","red");}); 
  $("#even").click( function () { $("li:even").css("background","yellow");}); 
  $("#odd").click( function () { $("li:odd").css("background","green");}); 
  $("#eq").click( function () { $("li:eq(3)").css("background","green");}); 
  $("#gt").click( function () { $("li:gt(3)").css("background","green");}); 
  $("#lt").click( function () { $("li:lt(3)").css("background","red");}); 
  $("#header").click( function () { $(":header").css("background","red");}); 
  $("#animated1").click( function () { $(":animated").css("background","red");}); 
  
 function ca(){
      $("#animated").slideToggle("slow",ca);
 }
  ca();
//  function movie(){
//       $("#movie").slideDown("slow",function(){
//    alert("Animation Done.");
//  });
//  }
//  function movie(){
//       $("#movie").fadeOut("slow",function(){
//    alert("Animation Done.");
//  });
//  }
 function movie(){
      $("#movie").fadeIn("slow",function(){
   alert("Animation Done.");
 });
 }
  movie();
  </script>
</html>


------------



------------

<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
<%
String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
%>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
     <base href="<%=basePath%>">
    
    <title>My JSP 'context.jsp' starting page</title>
    
	<meta http-equiv="pragma" content="no-cache">
	<meta http-equiv="cache-control" content="no-cache">
	<meta http-equiv="expires" content="0">    
	<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
	<meta http-equiv="description" content="This is my page">
  <script type="text/javascript" src="jQuery/jquery-1.10.2.js"></script>
	<!--
	<link rel="stylesheet" type="text/css" href="styles.css">
	-->

  </head>
  
  <body>

 <input type="button"  value="匹配包含给定属性的元素" id="attribute" ></input><br>
 <input type="button"  value="匹配给定的属性是某个特定值的元素" id="attribute1" ></input><br>
 <input type="button"  value="匹配所有不含有指定的属性，或者属性不等于特定值的元素" id="attribute2" ></input><br>
 <input type="button"  value="匹配给定的属性是以某些值开始的元素" id="attribute3" ></input><br>
 <input type="button"  value="匹配给定的属性是以某些值结尾的元素" id="attribute4" ></input><br>
 <input type="button"  value="匹配给定的属性是以包含某些值的元素" id="attribute5" ></input><br>
 <input type="button"  value="复合属性选择器，需要同时满足多个条件时使用" id="attribute6" ></input><br>
  <div id="dddd" class ="name" style="width:100px;height:100px;border:1px solid #ccc;">123</div>
  <div id="dddd1" class ="name1" style="width:100px;height:100px;border:1px solid #ccc;">123</div>
  <div id="dddd2" class ="name2" style="width:100px;height:100px;border:1px solid #ccc;">123</div>
    
 
  </body>
  <script type="text/javascript"> 
  $("#attribute").click( function () {$("div[class]").css("background","yellow");}); 
  $("#attribute1").click( function () {$("div[class='name2']").css("background","yellow");}); 
  $("#attribute2").click( function () {$("div[class][class=!'name2']").css("background","bule");}); 
  $("#attribute3").click( function () {$("div[class^='nam']").css("background","red");}); 
  $("#attribute4").click( function () {$("div[class$='me2']").css("background","red");}); 
  $("#attribute5").click( function () {$("div[class*='me2']").css("background","red");}); 
  $("#attribute6").click( function () {$("div[class$='me2'][id*='ddd']").css("background","red");}); 
  
  </script>
</html>


------------

<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
<%
String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
%>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
     <base href="<%=basePath%>">
    
    <title>My JSP 'context.jsp' starting page</title>
    
	<meta http-equiv="pragma" content="no-cache">
	<meta http-equiv="cache-control" content="no-cache">
	<meta http-equiv="expires" content="0">    
	<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
	<meta http-equiv="description" content="This is my page">
  <script type="text/javascript" src="jQuery/jquery-1.10.2.js"></script>
	<!--
	<link rel="stylesheet" type="text/css" href="styles.css">
	-->

  </head>
  
  <body>

 <input type="button"  value="匹配其父元素下的第N个子或奇偶元素" id="son" ></input><br>
  <div id="dddd" class ="name">
 
    <div id="dddd" class ="name12">123</div>
   <div id="dddd" class ="name11">12</div>

  </div>
  <div id="dddd1" class ="name1" style="width:100px;height:100px;border:1px solid #ccc;">123</div>
  <div id="dddd2" class ="name2" style="width:100px;height:100px;border:1px solid #ccc;">123</div>
    
 
  </body>
  <script type="text/javascript"> 
  //nth-child(even)
// :nth-child(odd)
// :nth-child(3n)
// :nth-child(2)
// :nth-child(3n+1)
// :nth-child(3n+2)

// first-child---------':first' 只匹配一个元素，而此选择符将为每个父元素匹配一个子元素
// last-child-------':last'只匹配一个元素，而此选择符将为每个父元素匹配一个子元素
// only-child---------如果某个元素是父元素中唯一的子元素，那将会被匹配
  $("#son").click( function () {
  var c = $("div[class*='name'] :nth-child(1)").text();
   alert(c);
});
  </script>
</html>


------------

<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
<%
String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
%>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
     <base href="<%=basePath%>">
    
    <title>My JSP 'context.jsp' starting page</title>
    
	<meta http-equiv="pragma" content="no-cache">
	<meta http-equiv="cache-control" content="no-cache">
	<meta http-equiv="expires" content="0">    
	<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
	<meta http-equiv="description" content="This is my page">
  <script type="text/javascript" src="jQuery/jquery-1.10.2.js"></script>
	<!--
	<link rel="stylesheet" type="text/css" href="styles.css">
	-->

  </head>
  
  <body>
  <input type="button"  value="改变可用input的值" id="form" ></input><br>
  <input type="button"  value="改变不可用的值" id="form1" ></input><br>
  <input type="button"  value="获取复选框选中个数" id="form2" ></input><br>
  <input type="button"  value="获取下拉选的值" id="form3" ></input><br>
  
<form>
    <input type="button" value="Input Button" /><br>
    <input type="checkbox"  name="hao" value="Input checkbox1"/>checkbox1
    <input type="checkbox" name="hao" value="Input checkbox2"/>checkbox2
    <input type="checkbox" name="hao" value="Input checkbox3"/>checkbox3
    <input type="checkbox" name="hao" value="Input checkbox4"/>checkbox4

    <input type="file"  value="Input file" /><br>
    <input type="hidden" value="Input hidden" /><br>
    <input type="image"  value="Input image"/><br>

    <input type="password"  value="Input password"/><br>
    <input type="radio" name="haoba" value="Input radio1" />男
    <input type="radio"name="haoba" value="Input radio2" />女<br>
    <input type="reset"  value="Input reset"/><br>

    <input type="submit" value="Input submit" /><br>
    <input type="text"  value="text " disabled="disabled"/><br>
    <input type="text"  value="text "/><br>
    <input type="text"  value="text " disabled="disabled" /><br>
    <input type="text"  value="text "/><br>
    <select multiple="multiple">
    <option>Option1</option>
    <option>Option2</option>
    <option>Option3</option>
    <option>Option4</option>
    
    </select>

    <textarea>   </textarea>
    <button>Button</button>

</form>
 

  <div id="dddd2" class ="name2" style="width:100px;height:100px;border:1px solid #ccc;">123</div>
    
 
  </body>
  <script type="text/javascript"> 
  //改变input中text的值：分别设置
  $("#form").click( function () {
    $("input[type='text']:enabled").each(function(index,domElm){
        $(this).val("name"); }); }); 
  //改变input中text的值：分别设置
  $("#form1").click( function () {
    $("input[type='text']:disabled").each(function(index,domElm){
        $(this).val("not user"); }); }); 
  //获取复选框的值
  $("#form2").click( function () {
    $("input[type=checkbox]:checked").each(function(index,domElm){
      alert(  $(domElm).val()); }); }); 
  
  //获取下拉选的值select 是option的父亲
  $("#form3").click( function () {
  $.each($("select  option:selected"),function(index,domElm){
   alert( $(domElm).val());
  });});
  
  
  </script>
</html>


------------


<form>
  <input type="text" name="email" />
  <input type="hidden" name="id"  value="zhangsan"/>
  <input type="hidden" name="id" value="zhangsa12n"/>
  <input type="hidden" name="id" value="zhangs32an"/>
</form>

 方法一-----------------------------------------
     $("#hidden1").click( function () { 
     var $hid= $("input:hidden");
       $hid.each(function (index, domEle) { 
       //遍历集合和数组，调用回调函数
  // domEle == this ；index为遍历的索引
      var $val=this.value;
      //用jquery写
      alert($(domEle).val());
     });
  });
  
方法二---------------------------------------------
 var p1=$("p");
  $.each(p1,function(index,domElm){
//   alert($(this).html());
  $(this).click(function(){alert($(domElm).html());});
});

------------

$("table.eq(0)  tr.even").css("background","blue");
eq(0):表示的是页面中的第一个表格
even：表示的是：匹配所有索引值为偶数的元素，从 0 开始计数；

$("table.eq(0)  tr.odd").css("background","blue");
odd：表示的是：匹配所有索引值为奇数的元素，从 0 开始计数；

------------

选中从左端到右端
$("#add").click(function(){
$("#second").append($("#first option:selected"))
});

全选
$("#add_all").click(function(){
$("#second").append($("#first option"))
});
双击从左端到右端
$("#first").dbclick(function(){
$("second").append($("first option:selected"));
});

------------

<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
<%
String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
%>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
     <base href="<%=basePath%>">
    
    <title>My JSP 'context.jsp' starting page</title>
    
	<meta http-equiv="pragma" content="no-cache">
	<meta http-equiv="cache-control" content="no-cache">
	<meta http-equiv="expires" content="0">    
	<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
	<meta http-equiv="description" content="This is my page">
  <script type="text/javascript" src="jQuery/jquery-1.10.2.js"></script>
	<!--
	<link rel="stylesheet" type="text/css" href="styles.css">
	-->

  </head>
  
  <body>
 
  <table id="city">
    <tr id ="name" >
      <td >Value1</td>
    </tr>
    <tr id ="name2">
       <td>Value 2</td>
    </tr>
  </table>
  
  <form>
  <input type="text" name="email" />
  <input type="hidden" name="id"  value="zhangsan"/>
  <input type="hidden" name="id" value="zhangsa12n"/>
   <input type="hidden" name="id" value="zhangs32an"/>
</form>
<table id="city1">
    <tr id ="name" >
      <td >Value1</td>
    </tr>
    <tr id ="name2">
       <td>Value 2</td>
    </tr>
  </table>
  </body>
  <script type="text/javascript">
  //内部的结尾处追加内容
 $("#city").append("<tr id ='name3' > <td >Value5</td> </tr>");
 //将特定的元素追加到内部的结尾处
  $("<tr id ='name3' > <td >Value6</td> </tr>").appendTo ($("#city"));
   //内部的开始处追加内容
 $("#city").prepend("<tr id ='name4' > <td >Value6</td> </tr>");
   //将特定的元素追加到内部的结尾处
  $("<tr id ='name3' > <td >Value7</td> </tr>").prependTo ($("#city"));
//指定元素后面插入节点                  同级
 $("#city").after($("#city1"));
//指定元素前面插入节点         同级
 $("#city").before($("#city1"));
 //insertAfter和insertBefore
 
  </script>
</html>


------------

/*!
 * jQuery JavaScript Library v1.10.2
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2013-07-03T13:48Z
 */
(function( window, undefined ) {

// Can't do this because several apps including ASP.NET trace
// the stack via arguments.caller.callee and Firefox dies if
// you try to trace through "use strict" call chains. (#13335)
// Support: Firefox 18+
//"use strict";
var
	// The deferred used on DOM ready
	readyList,

	// A central reference to the root jQuery(document)
	rootjQuery,

	// Support: IE<10
	// For `typeof xmlNode.method` instead of `xmlNode.method !== undefined`
	core_strundefined = typeof undefined,

	// Use the correct document accordingly with window argument (sandbox)
	location = window.location,
	document = window.document,
	docElem = document.documentElement,

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$,

	// [[Class]] -> type pairs
	class2type = {},

	// List of deleted data cache ids, so we can reuse them
	core_deletedIds = [],

	core_version = "1.10.2",

	// Save a reference to some core methods
	core_concat = core_deletedIds.concat,
	core_push = core_deletedIds.push,
	core_slice = core_deletedIds.slice,
	core_indexOf = core_deletedIds.indexOf,
	core_toString = class2type.toString,
	core_hasOwn = class2type.hasOwnProperty,
	core_trim = core_version.trim,

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		return new jQuery.fn.init( selector, context, rootjQuery );
	},

	// Used for matching numbers
	core_pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,

	// Used for splitting on whitespace
	core_rnotwhite = /\S+/g,

	// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

	// Match a standalone tag
	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,

	// JSON RegExp
	rvalidchars = /^[\],:{}\s]*$/,
	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
	rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
	rvalidtokens = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	},

	// The ready event handler
	completed = function( event ) {

		// readyState === "complete" is good enough for us to call the dom ready in oldIE
		if ( document.addEventListener || event.type === "load" || document.readyState === "complete" ) {
			detach();
			jQuery.ready();
		}
	},
	// Clean-up method for dom ready events
	detach = function() {
		if ( document.addEventListener ) {
			document.removeEventListener( "DOMContentLoaded", completed, false );
			window.removeEventListener( "load", completed, false );

		} else {
			document.detachEvent( "onreadystatechange", completed );
			window.detachEvent( "onload", completed );
		}
	};

jQuery.fn = jQuery.prototype = {
	// The current version of jQuery being used
	jquery: core_version,

	constructor: jQuery,
	init: function( selector, context, rootjQuery ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;

					// scripts is true for back-compat
					jQuery.merge( this, jQuery.parseHTML(
						match[1],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {
							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[2] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !== match[2] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || rootjQuery ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return rootjQuery.ready( selector );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	},

	// Start with an empty selector
	selector: "",

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return core_slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num == null ?

			// Return a 'clean' array
			this.toArray() :

			// Return just the object
			( num < 0 ? this[ this.length + num ] : this[ num ] );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;
		ret.context = this.context;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	ready: function( fn ) {
		// Add the callback
		jQuery.ready.promise().done( fn );

		return this;
	},

	slice: function() {
		return this.pushStack( core_slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: core_push,
	sort: [].sort,
	splice: [].splice
};

// Give the init function the jQuery prototype for later instantiation
jQuery.fn.init.prototype = jQuery.fn;

jQuery.extend = jQuery.fn.extend = function() {
	var src, copyIsArray, copy, name, options, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( length === i ) {
		target = this;
		--i;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	// Unique for each copy of jQuery on the page
	// Non-digits removed to match rinlinejQuery
	expando: "jQuery" + ( core_version + Math.random() ).replace( /\D/g, "" ),

	noConflict: function( deep ) {
		if ( window.$ === jQuery ) {
			window.$ = _$;
		}

		if ( deep && window.jQuery === jQuery ) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	},

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
		if ( !document.body ) {
			return setTimeout( jQuery.ready );
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.trigger ) {
			jQuery( document ).trigger("ready").off("ready");
		}
	},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray || function( obj ) {
		return jQuery.type(obj) === "array";
	},

	isWindow: function( obj ) {
		/* jshint eqeqeq: false */
		return obj != null && obj == obj.window;
	},

	isNumeric: function( obj ) {
		return !isNaN( parseFloat(obj) ) && isFinite( obj );
	},

	type: function( obj ) {
		if ( obj == null ) {
			return String( obj );
		}
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ core_toString.call(obj) ] || "object" :
			typeof obj;
	},

	isPlainObject: function( obj ) {
		var key;

		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		try {
			// Not own constructor property must be Object
			if ( obj.constructor &&
				!core_hasOwn.call(obj, "constructor") &&
				!core_hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
				return false;
			}
		} catch ( e ) {
			// IE8,9 Will throw exceptions on certain host objects #9897
			return false;
		}

		// Support: IE<9
		// Handle iteration over inherited properties before own properties.
		if ( jQuery.support.ownLast ) {
			for ( key in obj ) {
				return core_hasOwn.call( obj, key );
			}
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
		for ( key in obj ) {}

		return key === undefined || core_hasOwn.call( obj, key );
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	error: function( msg ) {
		throw new Error( msg );
	},

	// data: string of html
	// context (optional): If specified, the fragment will be created in this context, defaults to document
	// keepScripts (optional): If true, will include scripts passed in the html string
	parseHTML: function( data, context, keepScripts ) {
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		if ( typeof context === "boolean" ) {
			keepScripts = context;
			context = false;
		}
		context = context || document;

		var parsed = rsingleTag.exec( data ),
			scripts = !keepScripts && [];

		// Single tag
		if ( parsed ) {
			return [ context.createElement( parsed[1] ) ];
		}

		parsed = jQuery.buildFragment( [ data ], context, scripts );
		if ( scripts ) {
			jQuery( scripts ).remove();
		}
		return jQuery.merge( [], parsed.childNodes );
	},

	parseJSON: function( data ) {
		// Attempt to parse using the native JSON parser first
		if ( window.JSON && window.JSON.parse ) {
			return window.JSON.parse( data );
		}

		if ( data === null ) {
			return data;
		}

		if ( typeof data === "string" ) {

			// Make sure leading/trailing whitespace is removed (IE can't handle it)
			data = jQuery.trim( data );

			if ( data ) {
				// Make sure the incoming data is actual JSON
				// Logic borrowed from http://json.org/json2.js
				if ( rvalidchars.test( data.replace( rvalidescape, "@" )
					.replace( rvalidtokens, "]" )
					.replace( rvalidbraces, "")) ) {

					return ( new Function( "return " + data ) )();
				}
			}
		}

		jQuery.error( "Invalid JSON: " + data );
	},

	// Cross-browser xml parsing
	parseXML: function( data ) {
		var xml, tmp;
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		try {
			if ( window.DOMParser ) { // Standard
				tmp = new DOMParser();
				xml = tmp.parseFromString( data , "text/xml" );
			} else { // IE
				xml = new ActiveXObject( "Microsoft.XMLDOM" );
				xml.async = "false";
				xml.loadXML( data );
			}
		} catch( e ) {
			xml = undefined;
		}
		if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
			jQuery.error( "Invalid XML: " + data );
		}
		return xml;
	},

	noop: function() {},

	// Evaluates a script in a global context
	// Workarounds based on findings by Jim Driscoll
	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
	globalEval: function( data ) {
		if ( data && jQuery.trim( data ) ) {
			// We use execScript on Internet Explorer
			// We use an anonymous function so that context is window
			// rather than jQuery in Firefox
			( window.execScript || function( data ) {
				window[ "eval" ].call( window, data );
			} )( data );
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	// args is for internal usage only
	each: function( obj, callback, args ) {
		var value,
			i = 0,
			length = obj.length,
			isArray = isArraylike( obj );

		if ( args ) {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			}
		}

		return obj;
	},

	// Use native String.trim function wherever possible
	trim: core_trim && !core_trim.call("\uFEFF\xA0") ?
		function( text ) {
			return text == null ?
				"" :
				core_trim.call( text );
		} :

		// Otherwise use our own trimming functionality
		function( text ) {
			return text == null ?
				"" :
				( text + "" ).replace( rtrim, "" );
		},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArraylike( Object(arr) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				core_push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		var len;

		if ( arr ) {
			if ( core_indexOf ) {
				return core_indexOf.call( arr, elem, i );
			}

			len = arr.length;
			i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

			for ( ; i < len; i++ ) {
				// Skip accessing in sparse arrays
				if ( i in arr && arr[ i ] === elem ) {
					return i;
				}
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var l = second.length,
			i = first.length,
			j = 0;

		if ( typeof l === "number" ) {
			for ( ; j < l; j++ ) {
				first[ i++ ] = second[ j ];
			}
		} else {
			while ( second[j] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, inv ) {
		var retVal,
			ret = [],
			i = 0,
			length = elems.length;
		inv = !!inv;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			retVal = !!callback( elems[ i ], i );
			if ( inv !== retVal ) {
				ret.push( elems[ i ] );
			}
		}

		return ret;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value,
			i = 0,
			length = elems.length,
			isArray = isArraylike( elems ),
			ret = [];

		// Go through the array, translating each of the items to their
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}
		}

		// Flatten any nested arrays
		return core_concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var args, proxy, tmp;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = core_slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( core_slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	// Multifunctional method to get and set values of a collection
	// The value/s can optionally be executed if it's a function
	access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
		var i = 0,
			length = elems.length,
			bulk = key == null;

		// Sets many values
		if ( jQuery.type( key ) === "object" ) {
			chainable = true;
			for ( i in key ) {
				jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );
			}

		// Sets one value
		} else if ( value !== undefined ) {
			chainable = true;

			if ( !jQuery.isFunction( value ) ) {
				raw = true;
			}

			if ( bulk ) {
				// Bulk operations run against the entire set
				if ( raw ) {
					fn.call( elems, value );
					fn = null;

				// ...except when executing function values
				} else {
					bulk = fn;
					fn = function( elem, key, value ) {
						return bulk.call( jQuery( elem ), value );
					};
				}
			}

			if ( fn ) {
				for ( ; i < length; i++ ) {
					fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
				}
			}
		}

		return chainable ?
			elems :

			// Gets
			bulk ?
				fn.call( elems ) :
				length ? fn( elems[0], key ) : emptyGet;
	},

	now: function() {
		return ( new Date() ).getTime();
	},

	// A method for quickly swapping in/out CSS properties to get correct calculations.
	// Note: this method belongs to the css module but it's needed here for the support module.
	// If support gets modularized, this method should be moved back to the css module.
	swap: function( elem, options, callback, args ) {
		var ret, name,
			old = {};

		// Remember the old values, and insert the new ones
		for ( name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}

		ret = callback.apply( elem, args || [] );

		// Revert the old values
		for ( name in options ) {
			elem.style[ name ] = old[ name ];
		}

		return ret;
	}
});

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called after the browser event has already occurred.
		// we once tried to use readyState "interactive" here, but it caused issues like the one
		// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			setTimeout( jQuery.ready );

		// Standards-based browsers support DOMContentLoaded
		} else if ( document.addEventListener ) {
			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", completed, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", completed, false );

		// If IE event model is used
		} else {
			// Ensure firing before onload, maybe late but safe also for iframes
			document.attachEvent( "onreadystatechange", completed );

			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", completed );

			// If IE and not a frame
			// continually check to see if the document is ready
			var top = false;

			try {
				top = window.frameElement == null && document.documentElement;
			} catch(e) {}

			if ( top && top.doScroll ) {
				(function doScrollCheck() {
					if ( !jQuery.isReady ) {

						try {
							// Use the trick by Diego Perini
							// http://javascript.nwbox.com/IEContentLoaded/
							top.doScroll("left");
						} catch(e) {
							return setTimeout( doScrollCheck, 50 );
						}

						// detach all dom ready events
						detach();

						// and execute any waiting functions
						jQuery.ready();
					}
				})();
			}
		}
	}
	return readyList.promise( obj );
};

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

function isArraylike( obj ) {
	var length = obj.length,
		type = jQuery.type( obj );

	if ( jQuery.isWindow( obj ) ) {
		return false;
	}

	if ( obj.nodeType === 1 && length ) {
		return true;
	}

	return type === "array" || type !== "function" &&
		( length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj );
}

// All jQuery objects should point back to these
rootjQuery = jQuery(document);
/*!
 * Sizzle CSS Selector Engine v1.10.2
 * http://sizzlejs.com/
 *
 * Copyright 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2013-07-03
 */
(function( window, undefined ) {

var i,
	support,
	cachedruns,
	Expr,
	getText,
	isXML,
	compile,
	outermostContext,
	sortInput,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + -(new Date()),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	hasDuplicate = false,
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}
		return 0;
	},

	// General-purpose constants
	strundefined = typeof undefined,
	MAX_NEGATIVE = 1 << 31,

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf if we can't use a native one
	indexOf = arr.indexOf || function( elem ) {
		var i = 0,
			len = this.length;
		for ( ; i < len; i++ ) {
			if ( this[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",
	// http://www.w3.org/TR/css3-syntax/#characters
	characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

	// Loosely modeled on CSS identifier characters
	// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
	// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = characterEncoding.replace( "w", "w#" ),

	// Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + characterEncoding + ")" + whitespace +
		"*(?:([*^$|!~]?=)" + whitespace + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + identifier + ")|)|)" + whitespace + "*\\]",

	// Prefer arguments quoted,
	//   then not containing pseudos/brackets,
	//   then attribute selectors/non-parenthetical expressions,
	//   then anything else
	// These preferences are here to reduce the number of selectors
	//   needing tokenize in the PSEUDO preFilter
	pseudos = ":(" + characterEncoding + ")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + attributes.replace( 3, 8 ) + ")*)|.*)\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rsibling = new RegExp( whitespace + "*[+~]" ),
	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + characterEncoding + ")" ),
		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rescape = /'|\\/g,

	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			// BMP codepoint
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	};

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var match, elem, m, nodeType,
		// QSA vars
		i, groups, old, nid, newContext, newSelector;

	if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
		setDocument( context );
	}

	context = context || document;
	results = results || [];

	if ( !selector || typeof selector !== "string" ) {
		return results;
	}

	if ( (nodeType = context.nodeType) !== 1 && nodeType !== 9 ) {
		return [];
	}

	if ( documentIsHTML && !seed ) {

		// Shortcuts
		if ( (match = rquickExpr.exec( selector )) ) {
			// Speed-up: Sizzle("#ID")
			if ( (m = match[1]) ) {
				if ( nodeType === 9 ) {
					elem = context.getElementById( m );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE, Opera, and Webkit return items
						// by name instead of ID
						if ( elem.id === m ) {
							results.push( elem );
							return results;
						}
					} else {
						return results;
					}
				} else {
					// Context is not a document
					if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
						contains( context, elem ) && elem.id === m ) {
						results.push( elem );
						return results;
					}
				}

			// Speed-up: Sizzle("TAG")
			} else if ( match[2] ) {
				push.apply( results, context.getElementsByTagName( selector ) );
				return results;

			// Speed-up: Sizzle(".CLASS")
			} else if ( (m = match[3]) && support.getElementsByClassName && context.getElementsByClassName ) {
				push.apply( results, context.getElementsByClassName( m ) );
				return results;
			}
		}

		// QSA path
		if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
			nid = old = expando;
			newContext = context;
			newSelector = nodeType === 9 && selector;

			// qSA works strangely on Element-rooted queries
			// We can work around this by specifying an extra ID on the root
			// and working up from there (Thanks to Andrew Dupont for the technique)
			// IE 8 doesn't work on object elements
			if ( nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
				groups = tokenize( selector );

				if ( (old = context.getAttribute("id")) ) {
					nid = old.replace( rescape, "\\$&" );
				} else {
					context.setAttribute( "id", nid );
				}
				nid = "[id='" + nid + "'] ";

				i = groups.length;
				while ( i-- ) {
					groups[i] = nid + toSelector( groups[i] );
				}
				newContext = rsibling.test( selector ) && context.parentNode || context;
				newSelector = groups.join(",");
			}

			if ( newSelector ) {
				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch(qsaError) {
				} finally {
					if ( !old ) {
						context.removeAttribute("id");
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {Function(string, Object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key += " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
function assert( fn ) {
	var div = document.createElement("div");

	try {
		return !!fn( div );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( div.parentNode ) {
			div.parentNode.removeChild( div );
		}
		// release memory in IE
		div = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = attrs.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			( ~b.sourceIndex || MAX_NEGATIVE ) -
			( ~a.sourceIndex || MAX_NEGATIVE );

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Detect xml
 * @param {Element|Object} elem An element or a document
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var doc = node ? node.ownerDocument || node : preferredDoc,
		parent = doc.defaultView;

	// If no document and documentElement is available, return
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Set our document
	document = doc;
	docElem = doc.documentElement;

	// Support tests
	documentIsHTML = !isXML( doc );

	// Support: IE>8
	// If iframe document is assigned to "document" variable and if iframe has been reloaded,
	// IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936
	// IE6-8 do not support the defaultView property so parent will be undefined
	if ( parent && parent.attachEvent && parent !== parent.top ) {
		parent.attachEvent( "onbeforeunload", function() {
			setDocument();
		});
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties (excepting IE8 booleans)
	support.attributes = assert(function( div ) {
		div.className = "i";
		return !div.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( div ) {
		div.appendChild( doc.createComment("") );
		return !div.getElementsByTagName("*").length;
	});

	// Check if getElementsByClassName can be trusted
	support.getElementsByClassName = assert(function( div ) {
		div.innerHTML = "<div class='a'></div><div class='a i'></div>";

		// Support: Safari<4
		// Catch class over-caching
		div.firstChild.className = "i";
		// Support: Opera<10
		// Catch gEBCN failure to find non-leading classes
		return div.getElementsByClassName("i").length === 2;
	});

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( div ) {
		docElem.appendChild( div ).id = expando;
		return !doc.getElementsByName || !doc.getElementsByName( expando ).length;
	});

	// ID find and filter
	if ( support.getById ) {
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== strundefined && documentIsHTML ) {
				var m = context.getElementById( id );
				// Check parentNode to catch when Blackberry 4.6 returns
				// nodes that are no longer in the document #6963
				return m && m.parentNode ? [m] : [];
			}
		};
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
	} else {
		// Support: IE6/7
		// getElementById is not reliable as a find shortcut
		delete Expr.find["ID"];

		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== strundefined ) {
				return context.getElementsByTagName( tag );
			}
		} :
		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== strundefined && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See http://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			div.innerHTML = "<select><option selected=''></option></select>";

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}
		});

		assert(function( div ) {

			// Support: Opera 10-12/IE8
			// ^= $= *= and empty values
			// Should not select anything
			// Support: Windows 8 Native Apps
			// The type attribute is restricted during .innerHTML assignment
			var input = doc.createElement("input");
			input.setAttribute( "type", "hidden" );
			div.appendChild( input ).setAttribute( "t", "" );

			if ( div.querySelectorAll("[t^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			div.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( div ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( div, "div" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( div, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */

	// Element contains another
	// Purposefully does not implement inclusive descendent
	// As in, an element does not contain itself
	contains = rnative.test( docElem.contains ) || docElem.compareDocumentPosition ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = docElem.compareDocumentPosition ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var compare = b.compareDocumentPosition && a.compareDocumentPosition && a.compareDocumentPosition( b );

		if ( compare ) {
			// Disconnected nodes
			if ( compare & 1 ||
				(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

				// Choose the first element that is related to our preferred document
				if ( a === doc || contains(preferredDoc, a) ) {
					return -1;
				}
				if ( b === doc || contains(preferredDoc, b) ) {
					return 1;
				}

				// Maintain original order
				return sortInput ?
					( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :
					0;
			}

			return compare & 4 ? -1 : 1;
		}

		// Not directly comparable, sort on existence of method
		return a.compareDocumentPosition ? -1 : 1;
	} :
	function( a, b ) {
		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;

		// Parentless nodes are either documents or disconnected
		} else if ( !aup || !bup ) {
			return a === doc ? -1 :
				b === doc ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return doc;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch(e) {}
	}

	return Sizzle( expr, document, null, [elem] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val === undefined ?
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null :
		val;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		for ( ; (node = elem[i]); i++ ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (see #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[5] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] && match[4] !== undefined ) {
				match[2] = match[4];

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, outerCache, node, diff, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {
										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {
							// Seek `elem` from a previously-cached index
							outerCache = parent[ expando ] || (parent[ expando ] = {});
							cache = outerCache[ type ] || [];
							nodeIndex = cache[0] === dirruns && cache[1];
							diff = cache[0] === dirruns && cache[2];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									outerCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						// Use previously-cached element index if available
						} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {
							diff = cache[1];

						// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)
						} else {
							// Use the same loop as above to seek `elem` from the start
							while ( (node = ++nodeIndex && node && node[ dir ] ||
								(diff = nodeIndex = 0) || start.pop()) ) {

								if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {
									// Cache the index of each encountered element
									if ( useCache ) {
										(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];
									}

									if ( node === elem ) {
										break;
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf.call( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),
			//   not comment, processing instructions, or others
			// Thanks to Diego Perini for the nodeName shortcut
			//   Greater than "@" means alpha characters (specifically not starting with "#" or "?")
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeName > "@" || elem.nodeType === 3 || elem.nodeType === 4 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)
			// use getAttribute instead to test this case
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === elem.type );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

function tokenize( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( tokens = [] );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
}

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var data, cache, outerCache,
				dirkey = dirruns + " " + doneName;

			// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});
						if ( (cache = outerCache[ dir ]) && cache[0] === dirkey ) {
							if ( (data = cache[1]) === true || data === cachedruns ) {
								return data === true;
							}
						} else {
							cache = outerCache[ dir ] = [ dirkey ];
							cache[1] = matcher( elem, context, xml ) || cachedruns;
							if ( cache[1] === true ) {
								return true;
							}
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf.call( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			return ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	// A counter to specify which element is currently being matched
	var matcherCachedRuns = 0,
		bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, expandContext ) {
			var elem, j, matcher,
				setMatched = [],
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				outermost = expandContext != null,
				contextBackup = outermostContext,
				// We must always have either seed elements or context
				elems = seed || byElement && Expr.find["TAG"]( "*", expandContext && context.parentNode || context ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1);

			if ( outermost ) {
				outermostContext = context !== document && context;
				cachedruns = matcherCachedRuns;
			}

			// Add elements passing elementMatchers directly to results
			// Keep `i` a string if there are no elements so `matchedCount` will be "00" below
			for ( ; (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
						cachedruns = ++matcherCachedRuns;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// Apply set filters to unmatched elements
			matchedCount += i;
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !group ) {
			group = tokenize( selector );
		}
		i = group.length;
		while ( i-- ) {
			cached = matcherFromTokens( group[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );
	}
	return cached;
};

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function select( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		match = tokenize( selector );

	if ( !seed ) {
		// Try to minimize operations if there is only one group
		if ( match.length === 1 ) {

			// Take a shortcut and set the context if the root selector is an ID
			tokens = match[0] = match[0].slice( 0 );
			if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
					support.getById && context.nodeType === 9 && documentIsHTML &&
					Expr.relative[ tokens[1].type ] ) {

				context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
				if ( !context ) {
					return results;
				}
				selector = selector.slice( tokens.shift().value.length );
			}

			// Fetch a seed set for right-to-left matching
			i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
			while ( i-- ) {
				token = tokens[i];

				// Abort if we hit a combinator
				if ( Expr.relative[ (type = token.type) ] ) {
					break;
				}
				if ( (find = Expr.find[ type ]) ) {
					// Search, expanding context for leading sibling combinators
					if ( (seed = find(
						token.matches[0].replace( runescape, funescape ),
						rsibling.test( tokens[0].type ) && context.parentNode || context
					)) ) {

						// If seed is empty or no tokens remain, we can return early
						tokens.splice( i, 1 );
						selector = seed.length && toSelector( tokens );
						if ( !selector ) {
							push.apply( results, seed );
							return results;
						}

						break;
					}
				}
			}
		}
	}

	// Compile and execute a filtering function
	// Provide `match` to avoid retokenization if we modified the selector above
	compile( selector, match )(
		seed,
		context,
		!documentIsHTML,
		results,
		rsibling.test( selector )
	);
	return results;
}

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome<14
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( div1 ) {
	// Should return 1, but returns 4 (following)
	return div1.compareDocumentPosition( document.createElement("div") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( div ) {
	div.innerHTML = "<a href='#'></a>";
	return div.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( div ) {
	div.innerHTML = "<input/>";
	div.firstChild.setAttribute( "value", "" );
	return div.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( div ) {
	return div.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return (val = elem.getAttributeNode( name )) && val.specified ?
				val.value :
				elem[ name ] === true ? name.toLowerCase() : null;
		}
	});
}

jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.pseudos;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;


})( window );
// String to Object options format cache
var optionsCache = {};

// Convert String-formatted options into Object-formatted ones and store in cache
function createOptions( options ) {
	var object = optionsCache[ options ] = {};
	jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	});
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		( optionsCache[ options ] || createOptions( options ) ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,
		// Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list was already fired
		fired,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = !options.once && [],
		// Fire callbacks
		fire = function( data ) {
			memory = options.memory && data;
			fired = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			firing = true;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
					memory = false; // To prevent further calls using add
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( stack ) {
					if ( stack.length ) {
						fire( stack.shift() );
					}
				} else if ( memory ) {
					list = [];
				} else {
					self.disable();
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					// First, we save the current length
					var start = list.length;
					(function add( args ) {
						jQuery.each( args, function( _, arg ) {
							var type = jQuery.type( arg );
							if ( type === "function" ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && type !== "string" ) {
								// Inspect recursively
								add( arg );
							}
						});
					})( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away
					} else if ( memory ) {
						firingStart = start;
						fire( memory );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );
							// Handle firing indexes
							if ( firing ) {
								if ( index <= firingLength ) {
									firingLength--;
								}
								if ( index <= firingIndex ) {
									firingIndex--;
								}
							}
						}
					});
				}
				return this;
			},
			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				firingLength = 0;
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( list && ( !fired || stack ) ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					if ( firing ) {
						stack.push( args );
					} else {
						fire( args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};
jQuery.extend({

	Deferred: function( func ) {
		var tuples = [
				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks("memory") ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var action = tuple[ 0 ],
								fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[1] ](function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.done( newDefer.resolve )
										.fail( newDefer.reject )
										.progress( newDefer.notify );
								} else {
									newDefer[ action + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );
								}
							});
						});
						fns = null;
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[1] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(function() {
					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ]
			deferred[ tuple[0] ] = function() {
				deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );
				return this;
			};
			deferred[ tuple[0] + "With" ] = list.fireWith;
		});

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = core_slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;
					if( values === progressValues ) {
						deferred.notifyWith( contexts, values );
					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject )
						.progress( updateFunc( i, progressContexts, progressValues ) );
				} else {
					--remaining;
				}
			}
		}

		// if we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
});
jQuery.support = (function( support ) {

	var all, a, input, select, fragment, opt, eventName, isSupported, i,
		div = document.createElement("div");

	// Setup
	div.setAttribute( "className", "t" );
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";

	// Finish early in limited (non-browser) environments
	all = div.getElementsByTagName("*") || [];
	a = div.getElementsByTagName("a")[ 0 ];
	if ( !a || !a.style || !all.length ) {
		return support;
	}

	// First batch of tests
	select = document.createElement("select");
	opt = select.appendChild( document.createElement("option") );
	input = div.getElementsByTagName("input")[ 0 ];

	a.style.cssText = "top:1px;float:left;opacity:.5";

	// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)
	support.getSetAttribute = div.className !== "t";

	// IE strips leading whitespace when .innerHTML is used
	support.leadingWhitespace = div.firstChild.nodeType === 3;

	// Make sure that tbody elements aren't automatically inserted
	// IE will insert them into empty tables
	support.tbody = !div.getElementsByTagName("tbody").length;

	// Make sure that link elements get serialized correctly by innerHTML
	// This requires a wrapper element in IE
	support.htmlSerialize = !!div.getElementsByTagName("link").length;

	// Get the style information from getAttribute
	// (IE uses .cssText instead)
	support.style = /top/.test( a.getAttribute("style") );

	// Make sure that URLs aren't manipulated
	// (IE normalizes it by default)
	support.hrefNormalized = a.getAttribute("href") === "/a";

	// Make sure that element opacity exists
	// (IE uses filter instead)
	// Use a regex to work around a WebKit issue. See #5145
	support.opacity = /^0.5/.test( a.style.opacity );

	// Verify style float existence
	// (IE uses styleFloat instead of cssFloat)
	support.cssFloat = !!a.style.cssFloat;

	// Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)
	support.checkOn = !!input.value;

	// Make sure that a selected-by-default option has a working selected property.
	// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
	support.optSelected = opt.selected;

	// Tests for enctype support on a form (#6743)
	support.enctype = !!document.createElement("form").enctype;

	// Makes sure cloning an html5 element does not cause problems
	// Where outerHTML is undefined, this still works
	support.html5Clone = document.createElement("nav").cloneNode( true ).outerHTML !== "<:nav></:nav>";

	// Will be defined later
	support.inlineBlockNeedsLayout = false;
	support.shrinkWrapBlocks = false;
	support.pixelPosition = false;
	support.deleteExpando = true;
	support.noCloneEvent = true;
	support.reliableMarginRight = true;
	support.boxSizingReliable = true;

	// Make sure checked status is properly cloned
	input.checked = true;
	support.noCloneChecked = input.cloneNode( true ).checked;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Support: IE<9
	try {
		delete div.test;
	} catch( e ) {
		support.deleteExpando = false;
	}

	// Check if we can trust getAttribute("value")
	input = document.createElement("input");
	input.setAttribute( "value", "" );
	support.input = input.getAttribute( "value" ) === "";

	// Check if an input maintains its value after becoming a radio
	input.value = "t";
	input.setAttribute( "type", "radio" );
	support.radioValue = input.value === "t";

	// #11217 - WebKit loses check when the name is after the checked attribute
	input.setAttribute( "checked", "t" );
	input.setAttribute( "name", "t" );

	fragment = document.createDocumentFragment();
	fragment.appendChild( input );

	// Check if a disconnected checkbox will retain its checked
	// value of true after appended to the DOM (IE6/7)
	support.appendChecked = input.checked;

	// WebKit doesn't clone checked state correctly in fragments
	support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE<9
	// Opera does not clone events (and typeof div.attachEvent === undefined).
	// IE9-10 clones events bound via attachEvent, but they don't trigger with .click()
	if ( div.attachEvent ) {
		div.attachEvent( "onclick", function() {
			support.noCloneEvent = false;
		});

		div.cloneNode( true ).click();
	}

	// Support: IE<9 (lack submit/change bubble), Firefox 17+ (lack focusin event)
	// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)
	for ( i in { submit: true, change: true, focusin: true }) {
		div.setAttribute( eventName = "on" + i, "t" );

		support[ i + "Bubbles" ] = eventName in window || div.attributes[ eventName ].expando === false;
	}

	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	// Support: IE<9
	// Iteration over object's inherited properties before its own.
	for ( i in jQuery( support ) ) {
		break;
	}
	support.ownLast = i !== "0";

	// Run tests that need a body at doc ready
	jQuery(function() {
		var container, marginDiv, tds,
			divReset = "padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;",
			body = document.getElementsByTagName("body")[0];

		if ( !body ) {
			// Return for frameset docs that don't have a body
			return;
		}

		container = document.createElement("div");
		container.style.cssText = "border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px";

		body.appendChild( container ).appendChild( div );

		// Support: IE8
		// Check if table cells still have offsetWidth/Height when they are set
		// to display:none and there are still other visible table cells in a
		// table row; if so, offsetWidth/Height are not reliable for use when
		// determining if an element has been hidden directly using
		// display:none (it is still safe to use offsets if a parent element is
		// hidden; don safety goggles and see bug #4512 for more information).
		div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
		tds = div.getElementsByTagName("td");
		tds[ 0 ].style.cssText = "padding:0;margin:0;border:0;display:none";
		isSupported = ( tds[ 0 ].offsetHeight === 0 );

		tds[ 0 ].style.display = "";
		tds[ 1 ].style.display = "none";

		// Support: IE8
		// Check if empty table cells still have offsetWidth/Height
		support.reliableHiddenOffsets = isSupported && ( tds[ 0 ].offsetHeight === 0 );

		// Check box-sizing and margin behavior.
		div.innerHTML = "";
		div.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;";

		// Workaround failing boxSizing test due to offsetWidth returning wrong value
		// with some non-1 values of body zoom, ticket #13543
		jQuery.swap( body, body.style.zoom != null ? { zoom: 1 } : {}, function() {
			support.boxSizing = div.offsetWidth === 4;
		});

		// Use window.getComputedStyle because jsdom on node.js will break without it.
		if ( window.getComputedStyle ) {
			support.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== "1%";
			support.boxSizingReliable = ( window.getComputedStyle( div, null ) || { width: "4px" } ).width === "4px";

			// Check if div with explicit width and no margin-right incorrectly
			// gets computed margin-right based on width of container. (#3333)
			// Fails in WebKit before Feb 2011 nightlies
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			marginDiv = div.appendChild( document.createElement("div") );
			marginDiv.style.cssText = div.style.cssText = divReset;
			marginDiv.style.marginRight = marginDiv.style.width = "0";
			div.style.width = "1px";

			support.reliableMarginRight =
				!parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );
		}

		if ( typeof div.style.zoom !== core_strundefined ) {
			// Support: IE<8
			// Check if natively block-level elements act like inline-block
			// elements when setting their display to 'inline' and giving
			// them layout
			div.innerHTML = "";
			div.style.cssText = divReset + "width:1px;padding:1px;display:inline;zoom:1";
			support.inlineBlockNeedsLayout = ( div.offsetWidth === 3 );

			// Support: IE6
			// Check if elements with layout shrink-wrap their children
			div.style.display = "block";
			div.innerHTML = "<div></div>";
			div.firstChild.style.width = "5px";
			support.shrinkWrapBlocks = ( div.offsetWidth !== 3 );

			if ( support.inlineBlockNeedsLayout ) {
				// Prevent IE 6 from affecting layout for positioned elements #11048
				// Prevent IE from shrinking the body in IE 7 mode #12869
				// Support: IE<8
				body.style.zoom = 1;
			}
		}

		body.removeChild( container );

		// Null elements to avoid leaks in IE
		container = div = tds = marginDiv = null;
	});

	// Null elements to avoid leaks in IE
	all = select = fragment = opt = a = input = null;

	return support;
})({});

var rbrace = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/,
	rmultiDash = /([A-Z])/g;

function internalData( elem, name, data, pvt /* Internal Use Only */ ){
	if ( !jQuery.acceptData( elem ) ) {
		return;
	}

	var ret, thisCache,
		internalKey = jQuery.expando,

		// We have to handle DOM nodes and JS objects differently because IE6-7
		// can't GC object references properly across the DOM-JS boundary
		isNode = elem.nodeType,

		// Only DOM nodes need the global jQuery cache; JS object data is
		// attached directly to the object so GC can occur automatically
		cache = isNode ? jQuery.cache : elem,

		// Only defining an ID for JS objects if its cache already exists allows
		// the code to shortcut on the same path as a DOM node with no cache
		id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;

	// Avoid doing any more work than we need to when trying to get data on an
	// object that has no data at all
	if ( (!id || !cache[id] || (!pvt && !cache[id].data)) && data === undefined && typeof name === "string" ) {
		return;
	}

	if ( !id ) {
		// Only DOM nodes need a new unique ID for each element since their data
		// ends up in the global cache
		if ( isNode ) {
			id = elem[ internalKey ] = core_deletedIds.pop() || jQuery.guid++;
		} else {
			id = internalKey;
		}
	}

	if ( !cache[ id ] ) {
		// Avoid exposing jQuery metadata on plain JS objects when the object
		// is serialized using JSON.stringify
		cache[ id ] = isNode ? {} : { toJSON: jQuery.noop };
	}

	// An object can be passed to jQuery.data instead of a key/value pair; this gets
	// shallow copied over onto the existing cache
	if ( typeof name === "object" || typeof name === "function" ) {
		if ( pvt ) {
			cache[ id ] = jQuery.extend( cache[ id ], name );
		} else {
			cache[ id ].data = jQuery.extend( cache[ id ].data, name );
		}
	}

	thisCache = cache[ id ];

	// jQuery data() is stored in a separate object inside the object's internal data
	// cache in order to avoid key collisions between internal data and user-defined
	// data.
	if ( !pvt ) {
		if ( !thisCache.data ) {
			thisCache.data = {};
		}

		thisCache = thisCache.data;
	}

	if ( data !== undefined ) {
		thisCache[ jQuery.camelCase( name ) ] = data;
	}

	// Check for both converted-to-camel and non-converted data property names
	// If a data property was specified
	if ( typeof name === "string" ) {

		// First Try to find as-is property data
		ret = thisCache[ name ];

		// Test for null|undefined property data
		if ( ret == null ) {

			// Try to find the camelCased property
			ret = thisCache[ jQuery.camelCase( name ) ];
		}
	} else {
		ret = thisCache;
	}

	return ret;
}

function internalRemoveData( elem, name, pvt ) {
	if ( !jQuery.acceptData( elem ) ) {
		return;
	}

	var thisCache, i,
		isNode = elem.nodeType,

		// See jQuery.data for more information
		cache = isNode ? jQuery.cache : elem,
		id = isNode ? elem[ jQuery.expando ] : jQuery.expando;

	// If there is already no cache entry for this object, there is no
	// purpose in continuing
	if ( !cache[ id ] ) {
		return;
	}

	if ( name ) {

		thisCache = pvt ? cache[ id ] : cache[ id ].data;

		if ( thisCache ) {

			// Support array or space separated string names for data keys
			if ( !jQuery.isArray( name ) ) {

				// try the string as a key before any manipulation
				if ( name in thisCache ) {
					name = [ name ];
				} else {

					// split the camel cased version by spaces unless a key with the spaces exists
					name = jQuery.camelCase( name );
					if ( name in thisCache ) {
						name = [ name ];
					} else {
						name = name.split(" ");
					}
				}
			} else {
				// If "name" is an array of keys...
				// When data is initially created, via ("key", "val") signature,
				// keys will be converted to camelCase.
				// Since there is no way to tell _how_ a key was added, remove
				// both plain key and camelCase key. #12786
				// This will only penalize the array argument path.
				name = name.concat( jQuery.map( name, jQuery.camelCase ) );
			}

			i = name.length;
			while ( i-- ) {
				delete thisCache[ name[i] ];
			}

			// If there is no data left in the cache, we want to continue
			// and let the cache object itself get destroyed
			if ( pvt ? !isEmptyDataObject(thisCache) : !jQuery.isEmptyObject(thisCache) ) {
				return;
			}
		}
	}

	// See jQuery.data for more information
	if ( !pvt ) {
		delete cache[ id ].data;

		// Don't destroy the parent cache unless the internal data object
		// had been the only thing left in it
		if ( !isEmptyDataObject( cache[ id ] ) ) {
			return;
		}
	}

	// Destroy the cache
	if ( isNode ) {
		jQuery.cleanData( [ elem ], true );

	// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)
	/* jshint eqeqeq: false */
	} else if ( jQuery.support.deleteExpando || cache != cache.window ) {
		/* jshint eqeqeq: true */
		delete cache[ id ];

	// When all else fails, null
	} else {
		cache[ id ] = null;
	}
}

jQuery.extend({
	cache: {},

	// The following elements throw uncatchable exceptions if you
	// attempt to add expando properties to them.
	noData: {
		"applet": true,
		"embed": true,
		// Ban all objects except for Flash (which handle expandos)
		"object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
	},

	hasData: function( elem ) {
		elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];
		return !!elem && !isEmptyDataObject( elem );
	},

	data: function( elem, name, data ) {
		return internalData( elem, name, data );
	},

	removeData: function( elem, name ) {
		return internalRemoveData( elem, name );
	},

	// For internal use only.
	_data: function( elem, name, data ) {
		return internalData( elem, name, data, true );
	},

	_removeData: function( elem, name ) {
		return internalRemoveData( elem, name, true );
	},

	// A method for determining if a DOM node can handle the data expando
	acceptData: function( elem ) {
		// Do not set data on non-element because it will not be cleared (#8335).
		if ( elem.nodeType && elem.nodeType !== 1 && elem.nodeType !== 9 ) {
			return false;
		}

		var noData = elem.nodeName && jQuery.noData[ elem.nodeName.toLowerCase() ];

		// nodes accept data unless otherwise specified; rejection can be conditional
		return !noData || noData !== true && elem.getAttribute("classid") === noData;
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var attrs, name,
			data = null,
			i = 0,
			elem = this[0];

		// Special expections of .data basically thwart jQuery.access,
		// so implement the relevant behavior ourselves

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = jQuery.data( elem );

				if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
					attrs = elem.attributes;
					for ( ; i < attrs.length; i++ ) {
						name = attrs[i].name;

						if ( name.indexOf("data-") === 0 ) {
							name = jQuery.camelCase( name.slice(5) );

							dataAttr( elem, name, data[ name ] );
						}
					}
					jQuery._data( elem, "parsedAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each(function() {
				jQuery.data( this, key );
			});
		}

		return arguments.length > 1 ?

			// Sets one value
			this.each(function() {
				jQuery.data( this, key, value );
			}) :

			// Gets one value
			// Try to fetch any internally stored data first
			elem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : null;
	},

	removeData: function( key ) {
		return this.each(function() {
			jQuery.removeData( this, key );
		});
	}
});

function dataAttr( elem, key, data ) {
	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {

		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
					data === "false" ? false :
					data === "null" ? null :
					// Only convert to a number if it doesn't change the string
					+data + "" === data ? +data :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
						data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			jQuery.data( elem, key, data );

		} else {
			data = undefined;
		}
	}

	return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
	var name;
	for ( name in obj ) {

		// if the public data object is empty, the private is still empty
		if ( name === "data" && jQuery.isEmptyObject( obj[name] ) ) {
			continue;
		}
		if ( name !== "toJSON" ) {
			return false;
		}
	}

	return true;
}
jQuery.extend({
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = jQuery._data( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray(data) ) {
					queue = jQuery._data( elem, type, jQuery.makeArray(data) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// not intended for public consumption - generates a queueHooks object, or returns the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return jQuery._data( elem, key ) || jQuery._data( elem, key, {
			empty: jQuery.Callbacks("once memory").add(function() {
				jQuery._removeData( elem, type + "queue" );
				jQuery._removeData( elem, key );
			})
		});
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[0], type );
		}

		return data === undefined ?
			this :
			this.each(function() {
				var queue = jQuery.queue( this, type, data );

				// ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[0] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	// Based off of the plugin by Clint Helfers, with permission.
	// http://blindsignals.com/index.php/2009/07/jquery-delay/
	delay: function( time, type ) {
		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
		type = type || "fx";

		return this.queue( type, function( next, hooks ) {
			var timeout = setTimeout( next, time );
			hooks.stop = function() {
				clearTimeout( timeout );
			};
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while( i-- ) {
			tmp = jQuery._data( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
});
var nodeHook, boolHook,
	rclass = /[\t\r\n\f]/g,
	rreturn = /\r/g,
	rfocusable = /^(?:input|select|textarea|button|object)$/i,
	rclickable = /^(?:a|area)$/i,
	ruseDefault = /^(?:checked|selected)$/i,
	getSetAttribute = jQuery.support.getSetAttribute,
	getSetInput = jQuery.support.input;

jQuery.fn.extend({
	attr: function( name, value ) {
		return jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	},

	prop: function( name, value ) {
		return jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		name = jQuery.propFix[ name ] || name;
		return this.each(function() {
			// try/catch handles cases where IE balks (such as removing a property on window)
			try {
				this[ name ] = undefined;
				delete this[ name ];
			} catch( e ) {}
		});
	},

	addClass: function( value ) {
		var classes, elem, cur, clazz, j,
			i = 0,
			len = this.length,
			proceed = typeof value === "string" && value;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call( this, j, this.className ) );
			});
		}

		if ( proceed ) {
			// The disjunction here is for better compressibility (see removeClass)
			classes = ( value || "" ).match( core_rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					" "
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}
					elem.className = jQuery.trim( cur );

				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, clazz, j,
			i = 0,
			len = this.length,
			proceed = arguments.length === 0 || typeof value === "string" && value;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call( this, j, this.className ) );
			});
		}
		if ( proceed ) {
			classes = ( value || "" ).match( core_rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					""
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) >= 0 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}
					elem.className = value ? jQuery.trim( cur ) : "";
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					classNames = value.match( core_rnotwhite ) || [];

				while ( (className = classNames[ i++ ]) ) {
					// check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( type === core_strundefined || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					jQuery._data( this, "__className__", this.className );
				}

				// If the element has a class name or if we're passed "false",
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ",
			i = 0,
			l = this.length;
		for ( ; i < l; i++ ) {
			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
				return true;
			}
		}

		return false;
	},

	val: function( value ) {
		var ret, hooks, isFunction,
			elem = this[0];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?
					// handle most common string cases
					ret.replace(rreturn, "") :
					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map(val, function ( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				// Use proper attribute retrieval(#6932, #12072)
				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :
					elem.text;
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// oldIE doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&
							// Don't return options that are disabled or in a disabled optgroup
							( jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null ) &&
							( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];
					if ( (option.selected = jQuery.inArray( jQuery(option).val(), values ) >= 0) ) {
						optionSet = true;
					}
				}

				// force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	},

	attr: function( elem, name, value ) {
		var hooks, ret,
			nType = elem.nodeType;

		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === core_strundefined ) {
			return jQuery.prop( elem, name, value );
		}

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );

			} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, value + "" );
				return value;
			}

		} else if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {
			ret = jQuery.find.attr( elem, name );

			// Non-existent attributes return null, we normalize to undefined
			return ret == null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, value ) {
		var name, propName,
			i = 0,
			attrNames = value && value.match( core_rnotwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( (name = attrNames[i++]) ) {
				propName = jQuery.propFix[ name ] || name;

				// Boolean attributes get special treatment (#10870)
				if ( jQuery.expr.match.bool.test( name ) ) {
					// Set corresponding property to false
					if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
						elem[ propName ] = false;
					// Support: IE<9
					// Also clear defaultChecked/defaultSelected (if appropriate)
					} else {
						elem[ jQuery.camelCase( "default-" + name ) ] =
							elem[ propName ] = false;
					}

				// See #9699 for explanation of this approach (setting first, then removal)
				} else {
					jQuery.attr( elem, name, "" );
				}

				elem.removeAttribute( getSetAttribute ? name : propName );
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
					// Setting the type on a radio button after the value resets the value in IE6-9
					// Reset value to default in case type is set after value during creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	},

	prop: function( elem, name, value ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
				ret :
				( elem[ name ] = value );

		} else {
			return hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ?
				ret :
				elem[ name ];
		}
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {
				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				return tabindex ?
					parseInt( tabindex, 10 ) :
					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
						0 :
						-1;
			}
		}
	}
});

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
			// IE<8 needs the *property* name
			elem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || name, name );

		// Use defaultChecked and defaultSelected for oldIE
		} else {
			elem[ jQuery.camelCase( "default-" + name ) ] = elem[ name ] = true;
		}

		return name;
	}
};
jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = jQuery.expr.attrHandle[ name ] || jQuery.find.attr;

	jQuery.expr.attrHandle[ name ] = getSetInput && getSetAttribute || !ruseDefault.test( name ) ?
		function( elem, name, isXML ) {
			var fn = jQuery.expr.attrHandle[ name ],
				ret = isXML ?
					undefined :
					/* jshint eqeqeq: false */
					(jQuery.expr.attrHandle[ name ] = undefined) !=
						getter( elem, name, isXML ) ?

						name.toLowerCase() :
						null;
			jQuery.expr.attrHandle[ name ] = fn;
			return ret;
		} :
		function( elem, name, isXML ) {
			return isXML ?
				undefined :
				elem[ jQuery.camelCase( "default-" + name ) ] ?
					name.toLowerCase() :
					null;
		};
});

// fix oldIE attroperties
if ( !getSetInput || !getSetAttribute ) {
	jQuery.attrHooks.value = {
		set: function( elem, value, name ) {
			if ( jQuery.nodeName( elem, "input" ) ) {
				// Does not return so that setAttribute is also used
				elem.defaultValue = value;
			} else {
				// Use nodeHook if defined (#1954); otherwise setAttribute is fine
				return nodeHook && nodeHook.set( elem, value, name );
			}
		}
	};
}

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

	// Use this for any attribute in IE6/7
	// This fixes almost every IE6/7 issue
	nodeHook = {
		set: function( elem, value, name ) {
			// Set the existing or create a new attribute node
			var ret = elem.getAttributeNode( name );
			if ( !ret ) {
				elem.setAttributeNode(
					(ret = elem.ownerDocument.createAttribute( name ))
				);
			}

			ret.value = value += "";

			// Break association with cloned elements by also using setAttribute (#9646)
			return name === "value" || value === elem.getAttribute( name ) ?
				value :
				undefined;
		}
	};
	jQuery.expr.attrHandle.id = jQuery.expr.attrHandle.name = jQuery.expr.attrHandle.coords =
		// Some attributes are constructed with empty-string values when not defined
		function( elem, name, isXML ) {
			var ret;
			return isXML ?
				undefined :
				(ret = elem.getAttributeNode( name )) && ret.value !== "" ?
					ret.value :
					null;
		};
	jQuery.valHooks.button = {
		get: function( elem, name ) {
			var ret = elem.getAttributeNode( name );
			return ret && ret.specified ?
				ret.value :
				undefined;
		},
		set: nodeHook.set
	};

	// Set contenteditable to false on removals(#10429)
	// Setting to empty string throws an error as an invalid value
	jQuery.attrHooks.contenteditable = {
		set: function( elem, value, name ) {
			nodeHook.set( elem, value === "" ? false : value, name );
		}
	};

	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
	// This is for removals
	jQuery.each([ "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = {
			set: function( elem, value ) {
				if ( value === "" ) {
					elem.setAttribute( name, "auto" );
					return value;
				}
			}
		};
	});
}


// Some attributes require a special call on IE
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !jQuery.support.hrefNormalized ) {
	// href/src property should get the full normalized URL (#10299/#12915)
	jQuery.each([ "href", "src" ], function( i, name ) {
		jQuery.propHooks[ name ] = {
			get: function( elem ) {
				return elem.getAttribute( name, 4 );
			}
		};
	});
}

if ( !jQuery.support.style ) {
	jQuery.attrHooks.style = {
		get: function( elem ) {
			// Return undefined in the case of empty string
			// Note: IE uppercases css property names, but if we were to .toLowerCase()
			// .cssText, that would destroy case senstitivity in URL's, like in "background"
			return elem.style.cssText || undefined;
		},
		set: function( elem, value ) {
			return ( elem.style.cssText = value + "" );
		}
	};
}

// Safari mis-reports the default selected property of an option
// Accessing the parent's selectedIndex property fixes it
if ( !jQuery.support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			var parent = elem.parentNode;

			if ( parent ) {
				parent.selectedIndex;

				// Make sure that it also works with optgroups, see #5701
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
			return null;
		}
	};
}

jQuery.each([
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
});

// IE6/7 call enctype encoding
if ( !jQuery.support.enctype ) {
	jQuery.propFix.enctype = "encoding";
}

// Radios and checkboxes getter/setter
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
			}
		}
	};
	if ( !jQuery.support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			// Support: Webkit
			// "" is returned instead of "on" if a value isn't specified
			return elem.getAttribute("value") === null ? "on" : elem.value;
		};
	}
});
var rformElems = /^(?:input|select|textarea)$/i,
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|contextmenu)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {
		var tmp, events, t, handleObjIn,
			special, eventHandle, handleObj,
			handlers, type, namespaces, origType,
			elemData = jQuery._data( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !(events = elemData.events) ) {
			events = elemData.events = {};
		}
		if ( !(eventHandle = elemData.handle) ) {
			eventHandle = elemData.handle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== core_strundefined && (!e || jQuery.event.triggered !== e.type) ?
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
					undefined;
			};
			// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
			eventHandle.elem = elem;
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( core_rnotwhite ) || [""];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend({
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join(".")
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !(handlers = events[ type ]) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener/attachEvent if the special events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {
		var j, handleObj, tmp,
			origCount, t, events,
			special, handlers, type,
			namespaces, origType,
			elemData = jQuery.hasData( elem ) && jQuery._data( elem );

		if ( !elemData || !(events = elemData.events) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( core_rnotwhite ) || [""];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[2] && new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;

			// removeData also checks for emptiness and clears the expando if empty
			// so use it instead of delete
			jQuery._removeData( elem, "events" );
		}
	},

	trigger: function( event, data, elem, onlyHandlers ) {
		var handle, ontype, cur,
			bubbleType, special, tmp, i,
			eventPath = [ elem || document ],
			type = core_hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = core_hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf(".") >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf(":") < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join(".");
		event.namespace_re = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === (elem.ownerDocument || document) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] && jQuery._data( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && jQuery.acceptData( cur ) && handle.apply && handle.apply( cur, data ) === false ) {
				event.preventDefault();
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&
				jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Can't use an .isFunction() check here because IE6/7 fails that test.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					try {
						elem[ type ]();
					} catch ( e ) {
						// IE<9 dies on focus/blur to hidden element (#1486,#12518)
						// only reproducible on winXP IE8 native, not IE9 in IE8 mode
					}
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event );

		var i, ret, handleObj, matched, j,
			handlerQueue = [],
			args = core_slice.call( arguments ),
			handlers = ( jQuery._data( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[0] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or
				// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
							.apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( (event.result = ret) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var sel, handleObj, matches, i,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		// Black-hole SVG <use> instance trees (#13180)
		// Avoid non-left-click bubbling in Firefox (#3861)
		if ( delegateCount && cur.nodeType && (!event.button || event.type !== "click") ) {

			/* jshint eqeqeq: false */
			for ( ; cur != this; cur = cur.parentNode || this ) {
				/* jshint eqeqeq: true */

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && (cur.disabled !== true || event.type !== "click") ) {
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matches[ sel ] === undefined ) {
							matches[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) >= 0 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matches[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push({ elem: cur, handlers: matches });
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( delegateCount < handlers.length ) {
			handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });
		}

		return handlerQueue;
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop, copy,
			type = event.type,
			originalEvent = event,
			fixHook = this.fixHooks[ type ];

		if ( !fixHook ) {
			this.fixHooks[ type ] = fixHook =
				rmouseEvent.test( type ) ? this.mouseHooks :
				rkeyEvent.test( type ) ? this.keyHooks :
				{};
		}
		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = new jQuery.Event( originalEvent );

		i = copy.length;
		while ( i-- ) {
			prop = copy[ i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Support: IE<9
		// Fix target property (#1925)
		if ( !event.target ) {
			event.target = originalEvent.srcElement || document;
		}

		// Support: Chrome 23+, Safari?
		// Target should not be a text node (#504, #13143)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		// Support: IE<9
		// For mouse/key events, metaKey==false if it's undefined (#3368, #11328)
		event.metaKey = !!event.metaKey;

		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split(" "),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
		filter: function( event, original ) {
			var body, eventDoc, doc,
				button = original.button,
				fromElement = original.fromElement;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add relatedTarget, if necessary
			if ( !event.relatedTarget && fromElement ) {
				event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	special: {
		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {
			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					try {
						this.focus();
						return false;
					} catch ( e ) {
						// Support: IE<9
						// If we error on focus to hidden element (#1486, #12518),
						// let .trigger() run the handlers
					}
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {
			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( jQuery.nodeName( this, "input" ) && this.type === "checkbox" && this.click ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Even when returnValue equals to undefined Firefox will still show alert
				if ( event.result !== undefined ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	},

	simulate: function( type, elem, event, bubble ) {
		// Piggyback on a donor event to simulate a different one.
		// Fake originalEvent to avoid donor's stopPropagation, but if the
		// simulated event prevents default then we do the same on the donor.
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true,
				originalEvent: {}
			}
		);
		if ( bubble ) {
			jQuery.event.trigger( e, null, elem );
		} else {
			jQuery.event.dispatch.call( elem, e );
		}
		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

jQuery.removeEvent = document.removeEventListener ?
	function( elem, type, handle ) {
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle, false );
		}
	} :
	function( elem, type, handle ) {
		var name = "on" + type;

		if ( elem.detachEvent ) {

			// #8545, #7054, preventing memory leaks for custom events in IE6-8
			// detachEvent needed property on element, by name of that event, to properly expose it to GC
			if ( typeof elem[ name ] === core_strundefined ) {
				elem[ name ] = null;
			}

			elem.detachEvent( name, handle );
		}
	};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !(this instanceof jQuery.Event) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||
			src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;
		if ( !e ) {
			return;
		}

		// If preventDefault exists, run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();

		// Support: IE
		// Otherwise set the returnValue property of the original event to false
		} else {
			e.returnValue = false;
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;
		if ( !e ) {
			return;
		}
		// If stopPropagation exists, run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}

		// Support: IE
		// Set the cancelBubble property of the original event to true
		e.cancelBubble = true;
	},
	stopImmediatePropagation: function() {
		this.isImmediatePropagationStopped = returnTrue;
		this.stopPropagation();
	}
};

// Create mouseenter/leave events using mouseover/out and event-time checks
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mousenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
});

// IE submit delegation
if ( !jQuery.support.submitBubbles ) {

	jQuery.event.special.submit = {
		setup: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Lazy-add a submit handler when a descendant form may potentially be submitted
			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
				// Node name check avoids a VML-related crash in IE (#9807)
				var elem = e.target,
					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? elem.form : undefined;
				if ( form && !jQuery._data( form, "submitBubbles" ) ) {
					jQuery.event.add( form, "submit._submit", function( event ) {
						event._submit_bubble = true;
					});
					jQuery._data( form, "submitBubbles", true );
				}
			});
			// return undefined since we don't need an event listener
		},

		postDispatch: function( event ) {
			// If form was submitted by the user, bubble the event up the tree
			if ( event._submit_bubble ) {
				delete event._submit_bubble;
				if ( this.parentNode && !event.isTrigger ) {
					jQuery.event.simulate( "submit", this.parentNode, event, true );
				}
			}
		},

		teardown: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
			jQuery.event.remove( this, "._submit" );
		}
	};
}

// IE change delegation and checkbox/radio fix
if ( !jQuery.support.changeBubbles ) {

	jQuery.event.special.change = {

		setup: function() {

			if ( rformElems.test( this.nodeName ) ) {
				// IE doesn't fire change on a check/radio until blur; trigger it on click
				// after a propertychange. Eat the blur-change in special.change.handle.
				// This still fires onchange a second time for check/radio after blur.
				if ( this.type === "checkbox" || this.type === "radio" ) {
					jQuery.event.add( this, "propertychange._change", function( event ) {
						if ( event.originalEvent.propertyName === "checked" ) {
							this._just_changed = true;
						}
					});
					jQuery.event.add( this, "click._change", function( event ) {
						if ( this._just_changed && !event.isTrigger ) {
							this._just_changed = false;
						}
						// Allow triggered, simulated change events (#11500)
						jQuery.event.simulate( "change", this, event, true );
					});
				}
				return false;
			}
			// Delegated event; lazy-add a change handler on descendant inputs
			jQuery.event.add( this, "beforeactivate._change", function( e ) {
				var elem = e.target;

				if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "changeBubbles" ) ) {
					jQuery.event.add( elem, "change._change", function( event ) {
						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
							jQuery.event.simulate( "change", this.parentNode, event, true );
						}
					});
					jQuery._data( elem, "changeBubbles", true );
				}
			});
		},

		handle: function( event ) {
			var elem = event.target;

			// Swallow native change events from checkbox/radio, we already triggered them above
			if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" && elem.type !== "checkbox") ) {
				return event.handleObj.handler.apply( this, arguments );
			}
		},

		teardown: function() {
			jQuery.event.remove( this, "._change" );

			return !rformElems.test( this.nodeName );
		}
	};
}

// Create "bubbling" focus and blur events
if ( !jQuery.support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler while someone wants focusin/focusout
		var attaches = 0,
			handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
			};

		jQuery.event.special[ fix ] = {
			setup: function() {
				if ( attaches++ === 0 ) {
					document.addEventListener( orig, handler, true );
				}
			},
			teardown: function() {
				if ( --attaches === 0 ) {
					document.removeEventListener( orig, handler, true );
				}
			}
		};
	});
}

jQuery.fn.extend({

	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
		var type, origFn;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {
			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) {
				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				this.on( type, selector, data, types[ type ], one );
			}
			return this;
		}

		if ( data == null && fn == null ) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return this;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {
				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};
			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return this.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		});
	},
	one: function( types, selector, data, fn ) {
		return this.on( types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each(function() {
			jQuery.event.remove( this, types, fn, selector );
		});
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},
	triggerHandler: function( type, data ) {
		var elem = this[0];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
});
var isSimple = /^.[^:#\[\.,]*$/,
	rparentsprev = /^(?:parents|prev(?:Until|All))/,
	rneedsContext = jQuery.expr.match.needsContext,
	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend({
	find: function( selector ) {
		var i,
			ret = [],
			self = this,
			len = self.length;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter(function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			}) );
		}

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		// Needed because $( selector, context ) becomes $( context ).find( selector )
		ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
		ret.selector = this.selector ? this.selector + " " + selector : selector;
		return ret;
	},

	has: function( target ) {
		var i,
			targets = jQuery( target, this ),
			len = targets.length;

		return this.filter(function() {
			for ( i = 0; i < len; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	not: function( selector ) {
		return this.pushStack( winnow(this, selector || [], true) );
	},

	filter: function( selector ) {
		return this.pushStack( winnow(this, selector || [], false) );
	},

	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			ret = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			for ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {
				// Always skip document fragments
				if ( cur.nodeType < 11 && (pos ?
					pos.index(cur) > -1 :

					// Don't pass non-elements to Sizzle
					cur.nodeType === 1 &&
						jQuery.find.matchesSelector(cur, selectors)) ) {

					cur = ret.push( cur );
					break;
				}
			}
		}

		return this.pushStack( ret.length > 1 ? jQuery.unique( ret ) : ret );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[0] && this[0].parentNode ) ? this.first().prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return jQuery.inArray( this[0], jQuery( elem ) );
		}

		// Locate the position of the desired element
		return jQuery.inArray(
			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[0] : elem, this );
	},

	add: function( selector, context ) {
		var set = typeof selector === "string" ?
				jQuery( selector, context ) :
				jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),
			all = jQuery.merge( this.get(), set );

		return this.pushStack( jQuery.unique(all) );
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter(selector)
		);
	}
});

function sibling( cur, dir ) {
	do {
		cur = cur[ dir ];
	} while ( cur && cur.nodeType !== 1 );

	return cur;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var ret = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			ret = jQuery.filter( selector, ret );
		}

		if ( this.length > 1 ) {
			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				ret = jQuery.unique( ret );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				ret = ret.reverse();
			}
		}

		return this.pushStack( ret );
	};
});

jQuery.extend({
	filter: function( expr, elems, not ) {
		var elem = elems[ 0 ];

		if ( not ) {
			expr = ":not(" + expr + ")";
		}

		return elems.length === 1 && elem.nodeType === 1 ?
			jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
			jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
				return elem.nodeType === 1;
			}));
	},

	dir: function( elem, dir, until ) {
		var matched = [],
			cur = elem[ dir ];

		while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {
			if ( cur.nodeType === 1 ) {
				matched.push( cur );
			}
			cur = cur[dir];
		}
		return matched;
	},

	sibling: function( n, elem ) {
		var r = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				r.push( n );
			}
		}

		return r;
	}
});

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			/* jshint -W018 */
			return !!qualifier.call( elem, i, elem ) !== not;
		});

	}

	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		});

	}

	if ( typeof qualifier === "string" ) {
		if ( isSimple.test( qualifier ) ) {
			return jQuery.filter( qualifier, elements, not );
		}

		qualifier = jQuery.filter( qualifier, elements );
	}

	return jQuery.grep( elements, function( elem ) {
		return ( jQuery.inArray( elem, qualifier ) >= 0 ) !== not;
	});
}
function createSafeFragment( document ) {
	var list = nodeNames.split( "|" ),
		safeFrag = document.createDocumentFragment();

	if ( safeFrag.createElement ) {
		while ( list.length ) {
			safeFrag.createElement(
				list.pop()
			);
		}
	}
	return safeFrag;
}

var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|" +
		"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
	rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
	rnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"),
	rleadingWhitespace = /^\s+/,
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
	rtagName = /<([\w:]+)/,
	rtbody = /<tbody/i,
	rhtml = /<|&#?\w+;/,
	rnoInnerhtml = /<(?:script|style|link)/i,
	manipulation_rcheckableType = /^(?:checkbox|radio)$/i,
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /^$|\/(?:java|ecma)script/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,

	// We have to close these tags to support XHTML (#13200)
	wrapMap = {
		option: [ 1, "<select multiple='multiple'>", "</select>" ],
		legend: [ 1, "<fieldset>", "</fieldset>" ],
		area: [ 1, "<map>", "</map>" ],
		param: [ 1, "<object>", "</object>" ],
		thead: [ 1, "<table>", "</table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

		// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,
		// unless wrapped in a div with non-breaking characters in front of it.
		_default: jQuery.support.htmlSerialize ? [ 0, "", "" ] : [ 1, "X<div>", "</div>"  ]
	},
	safeFragment = createSafeFragment( document ),
	fragmentDiv = safeFragment.appendChild( document.createElement("div") );

wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

jQuery.fn.extend({
	text: function( value ) {
		return jQuery.access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );
		}, null, value, arguments.length );
	},

	append: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		});
	},

	before: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		});
	},

	after: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		});
	},

	// keepData is for internal use only--do not document
	remove: function( selector, keepData ) {
		var elem,
			elems = selector ? jQuery.filter( selector, this ) : this,
			i = 0;

		for ( ; (elem = elems[i]) != null; i++ ) {

			if ( !keepData && elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem ) );
			}

			if ( elem.parentNode ) {
				if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {
					setGlobalEval( getAll( elem, "script" ) );
				}
				elem.parentNode.removeChild( elem );
			}
		}

		return this;
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem, false ) );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}

			// If this is a select, ensure that it displays empty (#12336)
			// Support: IE<9
			if ( elem.options && jQuery.nodeName( elem, "select" ) ) {
				elem.options.length = 0;
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function () {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		return jQuery.access( this, function( value ) {
			var elem = this[0] || {},
				i = 0,
				l = this.length;

			if ( value === undefined ) {
				return elem.nodeType === 1 ?
					elem.innerHTML.replace( rinlinejQuery, "" ) :
					undefined;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				( jQuery.support.htmlSerialize || !rnoshimcache.test( value )  ) &&
				( jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
				!wrapMap[ ( rtagName.exec( value ) || ["", ""] )[1].toLowerCase() ] ) {

				value = value.replace( rxhtmlTag, "<$1></$2>" );

				try {
					for (; i < l; i++ ) {
						// Remove element nodes and prevent memory leaks
						elem = this[i] || {};
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch(e) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var
			// Snapshot the DOM in case .domManip sweeps something relevant into its fragment
			args = jQuery.map( this, function( elem ) {
				return [ elem.nextSibling, elem.parentNode ];
			}),
			i = 0;

		// Make the changes, replacing each context element with the new content
		this.domManip( arguments, function( elem ) {
			var next = args[ i++ ],
				parent = args[ i++ ];

			if ( parent ) {
				// Don't use the snapshot next if it has moved (#13810)
				if ( next && next.parentNode !== parent ) {
					next = this.nextSibling;
				}
				jQuery( this ).remove();
				parent.insertBefore( elem, next );
			}
		// Allow new content to include elements from the context set
		}, true );

		// Force removal if there was no new content (e.g., from empty arguments)
		return i ? this : this.remove();
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, callback, allowIntersection ) {

		// Flatten any nested arrays
		args = core_concat.apply( [], args );

		var first, node, hasScripts,
			scripts, doc, fragment,
			i = 0,
			l = this.length,
			set = this,
			iNoClone = l - 1,
			value = args[0],
			isFunction = jQuery.isFunction( value );

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( isFunction || !( l <= 1 || typeof value !== "string" || jQuery.support.checkClone || !rchecked.test( value ) ) ) {
			return this.each(function( index ) {
				var self = set.eq( index );
				if ( isFunction ) {
					args[0] = value.call( this, index, self.html() );
				}
				self.domManip( args, callback, allowIntersection );
			});
		}

		if ( l ) {
			fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, !allowIntersection && this );
			first = fragment.firstChild;

			if ( fragment.childNodes.length === 1 ) {
				fragment = first;
			}

			if ( first ) {
				scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
				hasScripts = scripts.length;

				// Use the original fragment for the last item instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				for ( ; i < l; i++ ) {
					node = fragment;

					if ( i !== iNoClone ) {
						node = jQuery.clone( node, true, true );

						// Keep references to cloned scripts for later restoration
						if ( hasScripts ) {
							jQuery.merge( scripts, getAll( node, "script" ) );
						}
					}

					callback.call( this[i], node, i );
				}

				if ( hasScripts ) {
					doc = scripts[ scripts.length - 1 ].ownerDocument;

					// Reenable scripts
					jQuery.map( scripts, restoreScript );

					// Evaluate executable scripts on first document insertion
					for ( i = 0; i < hasScripts; i++ ) {
						node = scripts[ i ];
						if ( rscriptType.test( node.type || "" ) &&
							!jQuery._data( node, "globalEval" ) && jQuery.contains( doc, node ) ) {

							if ( node.src ) {
								// Hope ajax is available...
								jQuery._evalUrl( node.src );
							} else {
								jQuery.globalEval( ( node.text || node.textContent || node.innerHTML || "" ).replace( rcleanScript, "" ) );
							}
						}
					}
				}

				// Fix #11809: Avoid leaking memory
				fragment = first = null;
			}
		}

		return this;
	}
});

// Support: IE<8
// Manipulating tables requires a tbody
function manipulationTarget( elem, content ) {
	return jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType === 1 ? content : content.firstChild, "tr" ) ?

		elem.getElementsByTagName("tbody")[0] ||
			elem.appendChild( elem.ownerDocument.createElement("tbody") ) :
		elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = (jQuery.find.attr( elem, "type" ) !== null) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );
	if ( match ) {
		elem.type = match[1];
	} else {
		elem.removeAttribute("type");
	}
	return elem;
}

// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var elem,
		i = 0;
	for ( ; (elem = elems[i]) != null; i++ ) {
		jQuery._data( elem, "globalEval", !refElements || jQuery._data( refElements[i], "globalEval" ) );
	}
}

function cloneCopyEvent( src, dest ) {

	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
		return;
	}

	var type, i, l,
		oldData = jQuery._data( src ),
		curData = jQuery._data( dest, oldData ),
		events = oldData.events;

	if ( events ) {
		delete curData.handle;
		curData.events = {};

		for ( type in events ) {
			for ( i = 0, l = events[ type ].length; i < l; i++ ) {
				jQuery.event.add( dest, type, events[ type ][ i ] );
			}
		}
	}

	// make the cloned public data object a copy from the original
	if ( curData.data ) {
		curData.data = jQuery.extend( {}, curData.data );
	}
}

function fixCloneNodeIssues( src, dest ) {
	var nodeName, e, data;

	// We do not need to do anything for non-Elements
	if ( dest.nodeType !== 1 ) {
		return;
	}

	nodeName = dest.nodeName.toLowerCase();

	// IE6-8 copies events bound via attachEvent when using cloneNode.
	if ( !jQuery.support.noCloneEvent && dest[ jQuery.expando ] ) {
		data = jQuery._data( dest );

		for ( e in data.events ) {
			jQuery.removeEvent( dest, e, data.handle );
		}

		// Event data gets referenced instead of copied if the expando gets copied too
		dest.removeAttribute( jQuery.expando );
	}

	// IE blanks contents when cloning scripts, and tries to evaluate newly-set text
	if ( nodeName === "script" && dest.text !== src.text ) {
		disableScript( dest ).text = src.text;
		restoreScript( dest );

	// IE6-10 improperly clones children of object elements using classid.
	// IE10 throws NoModificationAllowedError if parent is null, #12132.
	} else if ( nodeName === "object" ) {
		if ( dest.parentNode ) {
			dest.outerHTML = src.outerHTML;
		}

		// This path appears unavoidable for IE9. When cloning an object
		// element in IE9, the outerHTML strategy above is not sufficient.
		// If the src has innerHTML and the destination does not,
		// copy the src.innerHTML into the dest.innerHTML. #10324
		if ( jQuery.support.html5Clone && ( src.innerHTML && !jQuery.trim(dest.innerHTML) ) ) {
			dest.innerHTML = src.innerHTML;
		}

	} else if ( nodeName === "input" && manipulation_rcheckableType.test( src.type ) ) {
		// IE6-8 fails to persist the checked state of a cloned checkbox
		// or radio button. Worse, IE6-7 fail to give the cloned element
		// a checked appearance if the defaultChecked value isn't also set

		dest.defaultChecked = dest.checked = src.checked;

		// IE6-7 get confused and end up setting the value of a cloned
		// checkbox/radio button to an empty string instead of "on"
		if ( dest.value !== src.value ) {
			dest.value = src.value;
		}

	// IE6-8 fails to return the selected option to the default selected
	// state when cloning options
	} else if ( nodeName === "option" ) {
		dest.defaultSelected = dest.selected = src.defaultSelected;

	// IE6-8 fails to set the defaultValue to the correct value when
	// cloning other types of input fields
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			i = 0,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone(true);
			jQuery( insert[i] )[ original ]( elems );

			// Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()
			core_push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
});

function getAll( context, tag ) {
	var elems, elem,
		i = 0,
		found = typeof context.getElementsByTagName !== core_strundefined ? context.getElementsByTagName( tag || "*" ) :
			typeof context.querySelectorAll !== core_strundefined ? context.querySelectorAll( tag || "*" ) :
			undefined;

	if ( !found ) {
		for ( found = [], elems = context.childNodes || context; (elem = elems[i]) != null; i++ ) {
			if ( !tag || jQuery.nodeName( elem, tag ) ) {
				found.push( elem );
			} else {
				jQuery.merge( found, getAll( elem, tag ) );
			}
		}
	}

	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
		jQuery.merge( [ context ], found ) :
		found;
}

// Used in buildFragment, fixes the defaultChecked property
function fixDefaultChecked( elem ) {
	if ( manipulation_rcheckableType.test( elem.type ) ) {
		elem.defaultChecked = elem.checked;
	}
}

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var destElements, node, clone, i, srcElements,
			inPage = jQuery.contains( elem.ownerDocument, elem );

		if ( jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {
			clone = elem.cloneNode( true );

		// IE<=8 does not properly clone detached, unknown element nodes
		} else {
			fragmentDiv.innerHTML = elem.outerHTML;
			fragmentDiv.removeChild( clone = fragmentDiv.firstChild );
		}

		if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&
				(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {

			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			// Fix all IE cloning issues
			for ( i = 0; (node = srcElements[i]) != null; ++i ) {
				// Ensure that the destination node is not null; Fixes #9587
				if ( destElements[i] ) {
					fixCloneNodeIssues( node, destElements[i] );
				}
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0; (node = srcElements[i]) != null; i++ ) {
					cloneCopyEvent( node, destElements[i] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		destElements = srcElements = node = null;

		// Return the cloned set
		return clone;
	},

	buildFragment: function( elems, context, scripts, selection ) {
		var j, elem, contains,
			tmp, tag, tbody, wrap,
			l = elems.length,

			// Ensure a safe fragment
			safe = createSafeFragment( context ),

			nodes = [],
			i = 0;

		for ( ; i < l; i++ ) {
			elem = elems[ i ];

			if ( elem || elem === 0 ) {

				// Add nodes directly
				if ( jQuery.type( elem ) === "object" ) {
					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

				// Convert non-html into a text node
				} else if ( !rhtml.test( elem ) ) {
					nodes.push( context.createTextNode( elem ) );

				// Convert html into DOM nodes
				} else {
					tmp = tmp || safe.appendChild( context.createElement("div") );

					// Deserialize a standard representation
					tag = ( rtagName.exec( elem ) || ["", ""] )[1].toLowerCase();
					wrap = wrapMap[ tag ] || wrapMap._default;

					tmp.innerHTML = wrap[1] + elem.replace( rxhtmlTag, "<$1></$2>" ) + wrap[2];

					// Descend through wrappers to the right content
					j = wrap[0];
					while ( j-- ) {
						tmp = tmp.lastChild;
					}

					// Manually add leading whitespace removed by IE
					if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
						nodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[0] ) );
					}

					// Remove IE's autoinserted <tbody> from table fragments
					if ( !jQuery.support.tbody ) {

						// String was a <table>, *may* have spurious <tbody>
						elem = tag === "table" && !rtbody.test( elem ) ?
							tmp.firstChild :

							// String was a bare <thead> or <tfoot>
							wrap[1] === "<table>" && !rtbody.test( elem ) ?
								tmp :
								0;

						j = elem && elem.childNodes.length;
						while ( j-- ) {
							if ( jQuery.nodeName( (tbody = elem.childNodes[j]), "tbody" ) && !tbody.childNodes.length ) {
								elem.removeChild( tbody );
							}
						}
					}

					jQuery.merge( nodes, tmp.childNodes );

					// Fix #12392 for WebKit and IE > 9
					tmp.textContent = "";

					// Fix #12392 for oldIE
					while ( tmp.firstChild ) {
						tmp.removeChild( tmp.firstChild );
					}

					// Remember the top-level container for proper cleanup
					tmp = safe.lastChild;
				}
			}
		}

		// Fix #11356: Clear elements from fragment
		if ( tmp ) {
			safe.removeChild( tmp );
		}

		// Reset defaultChecked for any radios and checkboxes
		// about to be appended to the DOM in IE 6/7 (#8060)
		if ( !jQuery.support.appendChecked ) {
			jQuery.grep( getAll( nodes, "input" ), fixDefaultChecked );
		}

		i = 0;
		while ( (elem = nodes[ i++ ]) ) {

			// #4087 - If origin and destination elements are the same, and this is
			// that element, do not do anything
			if ( selection && jQuery.inArray( elem, selection ) !== -1 ) {
				continue;
			}

			contains = jQuery.contains( elem.ownerDocument, elem );

			// Append to fragment
			tmp = getAll( safe.appendChild( elem ), "script" );

			// Preserve script evaluation history
			if ( contains ) {
				setGlobalEval( tmp );
			}

			// Capture executables
			if ( scripts ) {
				j = 0;
				while ( (elem = tmp[ j++ ]) ) {
					if ( rscriptType.test( elem.type || "" ) ) {
						scripts.push( elem );
					}
				}
			}
		}

		tmp = null;

		return safe;
	},

	cleanData: function( elems, /* internal */ acceptData ) {
		var elem, type, id, data,
			i = 0,
			internalKey = jQuery.expando,
			cache = jQuery.cache,
			deleteExpando = jQuery.support.deleteExpando,
			special = jQuery.event.special;

		for ( ; (elem = elems[i]) != null; i++ ) {

			if ( acceptData || jQuery.acceptData( elem ) ) {

				id = elem[ internalKey ];
				data = id && cache[ id ];

				if ( data ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Remove cache only if it was not already removed by jQuery.event.remove
					if ( cache[ id ] ) {

						delete cache[ id ];

						// IE does not allow us to delete expando properties from nodes,
						// nor does it have a removeAttribute function on Document nodes;
						// we must handle all of these cases
						if ( deleteExpando ) {
							delete elem[ internalKey ];

						} else if ( typeof elem.removeAttribute !== core_strundefined ) {
							elem.removeAttribute( internalKey );

						} else {
							elem[ internalKey ] = null;
						}

						core_deletedIds.push( id );
					}
				}
			}
		}
	},

	_evalUrl: function( url ) {
		return jQuery.ajax({
			url: url,
			type: "GET",
			dataType: "script",
			async: false,
			global: false,
			"throws": true
		});
	}
});
jQuery.fn.extend({
	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapAll( html.call(this, i) );
			});
		}

		if ( this[0] ) {
			// The elements to wrap the target around
			var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

			if ( this[0].parentNode ) {
				wrap.insertBefore( this[0] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
					elem = elem.firstChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each(function(i) {
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	}
});
var iframe, getStyles, curCSS,
	ralpha = /alpha\([^)]*\)/i,
	ropacity = /opacity\s*=\s*([^)]*)/,
	rposition = /^(top|right|bottom|left)$/,
	// swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
	// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rmargin = /^margin/,
	rnumsplit = new RegExp( "^(" + core_pnum + ")(.*)$", "i" ),
	rnumnonpx = new RegExp( "^(" + core_pnum + ")(?!px)[a-z%]+$", "i" ),
	rrelNum = new RegExp( "^([+-])=(" + core_pnum + ")", "i" ),
	elemdisplay = { BODY: "block" },

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: 0,
		fontWeight: 400
	},

	cssExpand = [ "Top", "Right", "Bottom", "Left" ],
	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];

// return a css property mapped to a potentially vendor prefixed property
function vendorPropName( style, name ) {

	// shortcut for names that are not vendor prefixed
	if ( name in style ) {
		return name;
	}

	// check for vendor prefixed names
	var capName = name.charAt(0).toUpperCase() + name.slice(1),
		origName = name,
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in style ) {
			return name;
		}
	}

	return origName;
}

function isHidden( elem, el ) {
	// isHidden might be called from jQuery#filter function;
	// in that case, element will be second argument
	elem = el || elem;
	return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
}

function showHide( elements, show ) {
	var display, elem, hidden,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		values[ index ] = jQuery._data( elem, "olddisplay" );
		display = elem.style.display;
		if ( show ) {
			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] = jQuery._data( elem, "olddisplay", css_defaultDisplay(elem.nodeName) );
			}
		} else {

			if ( !values[ index ] ) {
				hidden = isHidden( elem );

				if ( display && display !== "none" || !hidden ) {
					jQuery._data( elem, "olddisplay", hidden ? display : jQuery.css( elem, "display" ) );
				}
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

jQuery.fn.extend({
	css: function( name, value ) {
		return jQuery.access( this, function( elem, name, value ) {
			var len, styles,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each(function() {
			if ( isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		});
	}
});

jQuery.extend({
	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {
					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"columnCount": true,
		"fillOpacity": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		// normalize float css property
		"float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {
		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// convert relative number strings (+= or -=) to relative numbers. #7345
			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// Make sure that NaN and null values aren't set. See: #7116
			if ( value == null || type === "number" && isNaN( value ) ) {
				return;
			}

			// If a number was passed in, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// Fixes #8908, it can be done more correctly by specifing setters in cssHooks,
			// but it would mean to define eight (for every problematic property) identical functions
			if ( !jQuery.support.clearCloneStyle && value === "" && name.indexOf("background") === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {

				// Wrapped to prevent IE from throwing errors when 'invalid' values are provided
				// Fixes bug #5509
				try {
					style[ name ] = value;
				} catch(e) {}
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var num, val, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		//convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Return, converting to number if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;
		}
		return val;
	}
});

// NOTE: we've included the "window" in window.getComputedStyle
// because jsdom on node.js will break without it.
if ( window.getComputedStyle ) {
	getStyles = function( elem ) {
		return window.getComputedStyle( elem, null );
	};

	curCSS = function( elem, name, _computed ) {
		var width, minWidth, maxWidth,
			computed = _computed || getStyles( elem ),

			// getPropertyValue is only needed for .css('filter') in IE9, see #12537
			ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined,
			style = elem.style;

		if ( computed ) {

			if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
				ret = jQuery.style( elem, name );
			}

			// A tribute to the "awesome hack by Dean Edwards"
			// Chrome < 17 and Safari 5.0 uses "computed value" instead of "used value" for margin-right
			// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
			if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {

				// Remember the original values
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				// Put in the new values to get a computed value out
				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				// Revert the changed values
				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		return ret;
	};
} else if ( document.documentElement.currentStyle ) {
	getStyles = function( elem ) {
		return elem.currentStyle;
	};

	curCSS = function( elem, name, _computed ) {
		var left, rs, rsLeft,
			computed = _computed || getStyles( elem ),
			ret = computed ? computed[ name ] : undefined,
			style = elem.style;

		// Avoid setting ret to empty string here
		// so we don't default to auto
		if ( ret == null && style && style[ name ] ) {
			ret = style[ name ];
		}

		// From the awesome hack by Dean Edwards
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

		// If we're not dealing with a regular pixel number
		// but a number that has a weird ending, we need to convert it to pixels
		// but not position css attributes, as those are proportional to the parent element instead
		// and we can't measure the parent instead because it might trigger a "stacking dolls" problem
		if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {

			// Remember the original values
			left = style.left;
			rs = elem.runtimeStyle;
			rsLeft = rs && rs.left;

			// Put in the new values to get a computed value out
			if ( rsLeft ) {
				rs.left = elem.currentStyle.left;
			}
			style.left = name === "fontSize" ? "1em" : ret;
			ret = style.pixelLeft + "px";

			// Revert the changed values
			style.left = left;
			if ( rsLeft ) {
				rs.left = rsLeft;
			}
		}

		return ret === "" ? "auto" : ret;
	};
}

function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?
		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?
		// If we already have the right measurement, avoid augmentation
		4 :
		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {
		// both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {
			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// at this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {
			// at this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// at this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var valueIsBorderBox = true,
		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		styles = getStyles( elem ),
		isBorderBox = jQuery.support.boxSizing && jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {
		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test(val) ) {
			return val;
		}

		// we need the check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

// Try to determine the default display value of an element
function css_defaultDisplay( nodeName ) {
	var doc = document,
		display = elemdisplay[ nodeName ];

	if ( !display ) {
		display = actualDisplay( nodeName, doc );

		// If the simple way fails, read from inside an iframe
		if ( display === "none" || !display ) {
			// Use the already-created iframe if possible
			iframe = ( iframe ||
				jQuery("<iframe frameborder='0' width='0' height='0'/>")
				.css( "cssText", "display:block !important" )
			).appendTo( doc.documentElement );

			// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
			doc = ( iframe[0].contentWindow || iframe[0].contentDocument ).document;
			doc.write("<!doctype html><html><body>");
			doc.close();

			display = actualDisplay( nodeName, doc );
			iframe.detach();
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return display;
}

// Called ONLY from within css_defaultDisplay
function actualDisplay( name, doc ) {
	var elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),
		display = jQuery.css( elem[0], "display" );
	elem.remove();
	return display;
}

jQuery.each([ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {
				// certain elements can have dimension info if we invisibly show them
				// however, it must have a current display style that would benefit from this
				return elem.offsetWidth === 0 && rdisplayswap.test( jQuery.css( elem, "display" ) ) ?
					jQuery.swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, name, extra );
					}) :
					getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var styles = extra && getStyles( elem );
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.support.boxSizing && jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				) : 0
			);
		}
	};
});

if ( !jQuery.support.opacity ) {
	jQuery.cssHooks.opacity = {
		get: function( elem, computed ) {
			// IE uses filters for opacity
			return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?
				( 0.01 * parseFloat( RegExp.$1 ) ) + "" :
				computed ? "1" : "";
		},

		set: function( elem, value ) {
			var style = elem.style,
				currentStyle = elem.currentStyle,
				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
				filter = currentStyle && currentStyle.filter || style.filter || "";

			// IE has trouble with opacity if it does not have layout
			// Force it by setting the zoom level
			style.zoom = 1;

			// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652
			// if value === "", then remove inline opacity #12685
			if ( ( value >= 1 || value === "" ) &&
					jQuery.trim( filter.replace( ralpha, "" ) ) === "" &&
					style.removeAttribute ) {

				// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
				// if "filter:" is present at all, clearType is disabled, we want to avoid this
				// style.removeAttribute is IE Only, but so apparently is this code path...
				style.removeAttribute( "filter" );

				// if there is no filter style applied in a css rule or unset inline opacity, we are done
				if ( value === "" || currentStyle && !currentStyle.filter ) {
					return;
				}
			}

			// otherwise, set new filter values
			style.filter = ralpha.test( filter ) ?
				filter.replace( ralpha, opacity ) :
				filter + " " + opacity;
		}
	};
}

// These hooks cannot be added until DOM ready because the support test
// for it is not run until after DOM ready
jQuery(function() {
	if ( !jQuery.support.reliableMarginRight ) {
		jQuery.cssHooks.marginRight = {
			get: function( elem, computed ) {
				if ( computed ) {
					// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
					// Work around by temporarily setting element display to inline-block
					return jQuery.swap( elem, { "display": "inline-block" },
						curCSS, [ elem, "marginRight" ] );
				}
			}
		};
	}

	// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
	// getComputedStyle returns percent when specified for top/left/bottom/right
	// rather than make the css module depend on the offset module, we just check for it here
	if ( !jQuery.support.pixelPosition && jQuery.fn.position ) {
		jQuery.each( [ "top", "left" ], function( i, prop ) {
			jQuery.cssHooks[ prop ] = {
				get: function( elem, computed ) {
					if ( computed ) {
						computed = curCSS( elem, prop );
						// if curCSS returns percentage, fallback to offset
						return rnumnonpx.test( computed ) ?
							jQuery( elem ).position()[ prop ] + "px" :
							computed;
					}
				}
			};
		});
	}

});

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.hidden = function( elem ) {
		// Support: Opera <= 12.12
		// Opera reports offsetWidths and offsetHeights less than zero on some elements
		return elem.offsetWidth <= 0 && elem.offsetHeight <= 0 ||
			(!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || jQuery.css( elem, "display" )) === "none");
	};

	jQuery.expr.filters.visible = function( elem ) {
		return !jQuery.expr.filters.hidden( elem );
	};
}

// These hooks are used by animate to expand properties
jQuery.each({
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// assumes a single number if not a string
				parts = typeof value === "string" ? value.split(" ") : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
});
var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

jQuery.fn.extend({
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map(function(){
			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		})
		.filter(function(){
			var type = this.type;
			// Use .is(":disabled") so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !manipulation_rcheckableType.test( type ) );
		})
		.map(function( i, elem ){
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val ){
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});

//Serialize an array of form elements or a set of
//key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {
			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		});

	} else {
		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// Item is non-scalar (array or object), encode its numeric index.
				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {
		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}
jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
});

jQuery.fn.extend({
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	},

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
	}
});
var
	// Document location
	ajaxLocParts,
	ajaxLocation,
	ajax_nonce = jQuery.now(),

	ajax_rquery = /\?/,
	rhash = /#.*$/,
	rts = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rurl = /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,

	// Keep a copy of the old load method
	_load = jQuery.fn.load,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat("*");

// #8138, IE may throw an exception when accessing
// a field from window.location if document.domain has been set
try {
	ajaxLocation = location.href;
} catch( e ) {
	// Use the href attribute of an A element
	// since IE will modify it given document.location
	ajaxLocation = document.createElement( "a" );
	ajaxLocation.href = "";
	ajaxLocation = ajaxLocation.href;
}

// Segment location into parts
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( core_rnotwhite ) || [];

		if ( jQuery.isFunction( func ) ) {
			// For each dataType in the dataTypeExpression
			while ( (dataType = dataTypes[i++]) ) {
				// Prepend if requested
				if ( dataType[0] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					(structure[ dataType ] = structure[ dataType ] || []).unshift( func );

				// Otherwise append
				} else {
					(structure[ dataType ] = structure[ dataType ] || []).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if( typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {
				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		});
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var deep, key,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	var selector, response, type,
		self = this,
		off = url.indexOf(" ");

	if ( off >= 0 ) {
		selector = url.slice( off, url.length );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax({
			url: url,

			// if "type" variable is undefined, then "GET" method will be used
			type: type,
			dataType: "html",
			data: params
		}).done(function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		}).complete( callback && function( jqXHR, status ) {
			self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
		});
	}

	return this;
};

// Attach a bunch of functions for handling common AJAX events
jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
	jQuery.fn[ type ] = function( fn ){
		return this.on( type, fn );
	};
});

jQuery.extend({

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: ajaxLocation,
		type: "GET",
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var // Cross-domain detection vars
			parts,
			// Loop variable
			i,
			// URL without anti-cache param
			cacheURL,
			// Response headers as string
			responseHeadersString,
			// timeout handle
			timeoutTimer,

			// To know if global events are to be dispatched
			fireGlobals,

			transport,
			// Response headers
			responseHeaders,
			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks("once memory"),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// The jqXHR state
			state = 0,
			// Default abort message
			strAbort = "canceled",
			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( (match = rheaders.exec( responseHeadersString )) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					var lname = name.toLowerCase();
					if ( !state ) {
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( state < 2 ) {
							for ( code in map ) {
								// Lazy-add the new callback in a way that preserves old ones
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						} else {
							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR ).complete = completeDeferred.add;
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( core_rnotwhite ) || [""];

		// A cross-domain request is in order when we have a protocol:host:port mismatch
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		fireGlobals = s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger("ajaxStart");
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		cacheURL = s.url;

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL = ( s.url += ( ajax_rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add anti-cache in url if needed
			if ( s.cache === false ) {
				s.url = rts.test( cacheURL ) ?

					// If there is already a '_' parameter, set its value
					cacheURL.replace( rts, "$1_=" + ajax_nonce++ ) :

					// Otherwise add one to the end
					cacheURL + ( ajax_rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ajax_nonce++;
			}
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
			// Abort if not done already and return
			return jqXHR.abort();
		}

		// aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout(function() {
					jqXHR.abort("timeout");
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch ( e ) {
				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader("Last-Modified");
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader("etag");
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {
				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger("ajaxStop");
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		});
	};
});

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {
	var firstDataType, ct, finalDataType, type,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},
		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {
								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s[ "throws" ] ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}
// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /(?:java|ecma)script/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
		s.global = false;
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function(s) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {

		var script,
			head = document.head || jQuery("head")[0] || document.documentElement;

		return {

			send: function( _, callback ) {

				script = document.createElement("script");

				script.async = true;

				if ( s.scriptCharset ) {
					script.charset = s.scriptCharset;
				}

				script.src = s.url;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function( _, isAbort ) {

					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;

						// Remove the script
						if ( script.parentNode ) {
							script.parentNode.removeChild( script );
						}

						// Dereference the script
						script = null;

						// Callback if not abort
						if ( !isAbort ) {
							callback( 200, "success" );
						}
					}
				};

				// Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending
				// Use native DOM manipulation to avoid our domManip AJAX trickery
				head.insertBefore( script, head.firstChild );
			},

			abort: function() {
				if ( script ) {
					script.onload( undefined, true );
				}
			}
		};
	}
});
var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( ajax_nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( ajax_rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always(function() {
			// Restore preexisting value
			window[ callbackName ] = overwritten;

			// Save back as free
			if ( s[ callbackName ] ) {
				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		});

		// Delegate to script
		return "script";
	}
});
var xhrCallbacks, xhrSupported,
	xhrId = 0,
	// #5280: Internet Explorer will keep connections alive if we don't abort on unload
	xhrOnUnloadAbort = window.ActiveXObject && function() {
		// Abort all pending requests
		var key;
		for ( key in xhrCallbacks ) {
			xhrCallbacks[ key ]( undefined, true );
		}
	};

// Functions to create xhrs
function createStandardXHR() {
	try {
		return new window.XMLHttpRequest();
	} catch( e ) {}
}

function createActiveXHR() {
	try {
		return new window.ActiveXObject("Microsoft.XMLHTTP");
	} catch( e ) {}
}

// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject ?
	/* Microsoft failed to properly
	 * implement the XMLHttpRequest in IE7 (can't request local files),
	 * so we use the ActiveXObject when it is available
	 * Additionally XMLHttpRequest can be disabled in IE7/IE8 so
	 * we need a fallback.
	 */
	function() {
		return !this.isLocal && createStandardXHR() || createActiveXHR();
	} :
	// For all other browsers, use the standard XMLHttpRequest object
	createStandardXHR;

// Determine support properties
xhrSupported = jQuery.ajaxSettings.xhr();
jQuery.support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
xhrSupported = jQuery.support.ajax = !!xhrSupported;

// Create transport if the browser can provide an xhr
if ( xhrSupported ) {

	jQuery.ajaxTransport(function( s ) {
		// Cross domain only allowed if supported through XMLHttpRequest
		if ( !s.crossDomain || jQuery.support.cors ) {

			var callback;

			return {
				send: function( headers, complete ) {

					// Get a new xhr
					var handle, i,
						xhr = s.xhr();

					// Open the socket
					// Passing null username, generates a login popup on Opera (#2865)
					if ( s.username ) {
						xhr.open( s.type, s.url, s.async, s.username, s.password );
					} else {
						xhr.open( s.type, s.url, s.async );
					}

					// Apply custom fields if provided
					if ( s.xhrFields ) {
						for ( i in s.xhrFields ) {
							xhr[ i ] = s.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( s.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( s.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !s.crossDomain && !headers["X-Requested-With"] ) {
						headers["X-Requested-With"] = "XMLHttpRequest";
					}

					// Need an extra try/catch for cross domain requests in Firefox 3
					try {
						for ( i in headers ) {
							xhr.setRequestHeader( i, headers[ i ] );
						}
					} catch( err ) {}

					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( ( s.hasContent && s.data ) || null );

					// Listener
					callback = function( _, isAbort ) {
						var status, responseHeaders, statusText, responses;

						// Firefox throws exceptions when accessing properties
						// of an xhr when a network error occurred
						// http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)
						try {

							// Was never called and is aborted or complete
							if ( callback && ( isAbort || xhr.readyState === 4 ) ) {

								// Only called once
								callback = undefined;

								// Do not keep as active anymore
								if ( handle ) {
									xhr.onreadystatechange = jQuery.noop;
									if ( xhrOnUnloadAbort ) {
										delete xhrCallbacks[ handle ];
									}
								}

								// If it's an abort
								if ( isAbort ) {
									// Abort it manually if needed
									if ( xhr.readyState !== 4 ) {
										xhr.abort();
									}
								} else {
									responses = {};
									status = xhr.status;
									responseHeaders = xhr.getAllResponseHeaders();

									// When requesting binary data, IE6-9 will throw an exception
									// on any attempt to access responseText (#11426)
									if ( typeof xhr.responseText === "string" ) {
										responses.text = xhr.responseText;
									}

									// Firefox throws an exception when accessing
									// statusText for faulty cross-domain requests
									try {
										statusText = xhr.statusText;
									} catch( e ) {
										// We normalize with Webkit giving an empty statusText
										statusText = "";
									}

									// Filter status for non standard behaviors

									// If the request is local and we have data: assume a success
									// (success with no data won't get notified, that's the best we
									// can do given current implementations)
									if ( !status && s.isLocal && !s.crossDomain ) {
										status = responses.text ? 200 : 404;
									// IE - #1450: sometimes returns 1223 when it should be 204
									} else if ( status === 1223 ) {
										status = 204;
									}
								}
							}
						} catch( firefoxAccessException ) {
							if ( !isAbort ) {
								complete( -1, firefoxAccessException );
							}
						}

						// Call complete if needed
						if ( responses ) {
							complete( status, statusText, responses, responseHeaders );
						}
					};

					if ( !s.async ) {
						// if we're in sync mode we fire the callback
						callback();
					} else if ( xhr.readyState === 4 ) {
						// (IE6 & IE7) if it's in cache and has been
						// retrieved directly we need to fire the callback
						setTimeout( callback );
					} else {
						handle = ++xhrId;
						if ( xhrOnUnloadAbort ) {
							// Create the active xhrs callbacks list if needed
							// and attach the unload handler
							if ( !xhrCallbacks ) {
								xhrCallbacks = {};
								jQuery( window ).unload( xhrOnUnloadAbort );
							}
							// Add to list of active xhrs callbacks
							xhrCallbacks[ handle ] = callback;
						}
						xhr.onreadystatechange = callback;
					}
				},

				abort: function() {
					if ( callback ) {
						callback( undefined, true );
					}
				}
			};
		}
	});
}
var fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = new RegExp( "^(?:([+-])=|)(" + core_pnum + ")([a-z%]*)$", "i" ),
	rrun = /queueHooks$/,
	animationPrefilters = [ defaultPrefilter ],
	tweeners = {
		"*": [function( prop, value ) {
			var tween = this.createTween( prop, value ),
				target = tween.cur(),
				parts = rfxnum.exec( value ),
				unit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

				// Starting value computation is required for potential unit mismatches
				start = ( jQuery.cssNumber[ prop ] || unit !== "px" && +target ) &&
					rfxnum.exec( jQuery.css( tween.elem, prop ) ),
				scale = 1,
				maxIterations = 20;

			if ( start && start[ 3 ] !== unit ) {
				// Trust units reported by jQuery.css
				unit = unit || start[ 3 ];

				// Make sure we update the tween properties later on
				parts = parts || [];

				// Iteratively approximate from a nonzero starting point
				start = +target || 1;

				do {
					// If previous iteration zeroed out, double until we get *something*
					// Use a string for doubling factor so we don't accidentally see scale as unchanged below
					scale = scale || ".5";

					// Adjust and apply
					start = start / scale;
					jQuery.style( tween.elem, prop, start + unit );

				// Update scale, tolerating zero or NaN from tween.cur()
				// And breaking the loop if scale is unchanged or perfect, or if we've just had enough
				} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
			}

			// Update tween properties
			if ( parts ) {
				start = tween.start = +start || +target || 0;
				tween.unit = unit;
				// If a +=/-= token was provided, we're doing a relative animation
				tween.end = parts[ 1 ] ?
					start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :
					+parts[ 2 ];
			}

			return tween;
		}]
	};

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout(function() {
		fxNow = undefined;
	});
	return ( fxNow = jQuery.now() );
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( (tween = collection[ index ].call( animation, prop, value )) ) {

			// we're done with this property
			return tween;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = animationPrefilters.length,
		deferred = jQuery.Deferred().always( function() {
			// don't match elem in the :animated selector
			delete tick.elem;
		}),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
				// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ]);

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise({
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, { specialEasing: {} }, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,
					// if we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// resolve when we played the last frame
				// otherwise, reject
				if ( gotoEnd ) {
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		}),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		})
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// not quite $.extend, this wont overwrite keys already present.
			// also - reusing 'index' from above because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

jQuery.Animation = jQuery.extend( Animation, {

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.split(" ");
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			tweeners[ prop ] = tweeners[ prop ] || [];
			tweeners[ prop ].unshift( callback );
		}
	},

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			animationPrefilters.unshift( callback );
		} else {
			animationPrefilters.push( callback );
		}
	}
});

function defaultPrefilter( elem, props, opts ) {
	/* jshint validthis: true */
	var prop, value, toggle, tween, hooks, oldfire,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHidden( elem ),
		dataShow = jQuery._data( elem, "fxshow" );

	// handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always(function() {
			// doing this makes sure that the complete handler will be called
			// before this completes
			anim.always(function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			});
		});
	}

	// height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE does not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		if ( jQuery.css( elem, "display" ) === "inline" &&
				jQuery.css( elem, "float" ) === "none" ) {

			// inline-level elements accept inline-block;
			// block-level elements need to be inline with layout
			if ( !jQuery.support.inlineBlockNeedsLayout || css_defaultDisplay( elem.nodeName ) === "inline" ) {
				style.display = "inline-block";

			} else {
				style.zoom = 1;
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		if ( !jQuery.support.shrinkWrapBlocks ) {
			anim.always(function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			});
		}
	}


	// show/hide pass
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {
				continue;
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	if ( !jQuery.isEmptyObject( orig ) ) {
		if ( dataShow ) {
			if ( "hidden" in dataShow ) {
				hidden = dataShow.hidden;
			}
		} else {
			dataShow = jQuery._data( elem, "fxshow", {} );
		}

		// store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done(function() {
				jQuery( elem ).hide();
			});
		}
		anim.done(function() {
			var prop;
			jQuery._removeData( elem, "fxshow" );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		});
		for ( prop in orig ) {
			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}
	}
}

function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || "swing";
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			if ( tween.elem[ tween.prop ] != null &&
				(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
				return tween.elem[ tween.prop ];
			}

			// passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails
			// so, simple values such as "10px" are parsed to Float.
			// complex values such as "rotate(1rad)" are returned as is.
			result = jQuery.css( tween.elem, tween.prop, "" );
			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {
			// use step hook for back compat - use cssHook if its there - use .style if its
			// available and use plain properties where available
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9
// Panic based approach to setting things on disconnected nodes

Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
});

jQuery.fn.extend({
	fadeTo: function( speed, to, easing, callback ) {

		// show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// animate to the value specified
			.end().animate({ opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {
				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || jQuery._data( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each(function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = jQuery._data( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		});
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each(function() {
			var index,
				data = jQuery._data( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// enable finishing flag on private data
			data.finish = true;

			// empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// turn off finishing flag
			delete data.finish;
		});
	}
});

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		attrs = { height: type },
		i = 0;

	// if we include width, step value is 1 to do all cssExpand values,
	// if we don't include width, step value is 2 to skip over Left and Right
	includeWidth = includeWidth? 1 : 0;
	for( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show"),
	slideUp: genFx("hide"),
	slideToggle: genFx("toggle"),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p*Math.PI ) / 2;
	}
};

jQuery.timers = [];
jQuery.fx = Tween.prototype.init;
jQuery.fx.tick = function() {
	var timer,
		timers = jQuery.timers,
		i = 0;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];
		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	if ( timer() && jQuery.timers.push( timer ) ) {
		jQuery.fx.start();
	}
};

jQuery.fx.interval = 13;

jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,
	// Default speed
	_default: 400
};

// Back Compat <1.8 extension point
jQuery.fx.step = {};

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.animated = function( elem ) {
		return jQuery.grep(jQuery.timers, function( fn ) {
			return elem === fn.elem;
		}).length;
	};
}
jQuery.fn.offset = function( options ) {
	if ( arguments.length ) {
		return options === undefined ?
			this :
			this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
	}

	var docElem, win,
		box = { top: 0, left: 0 },
		elem = this[ 0 ],
		doc = elem && elem.ownerDocument;

	if ( !doc ) {
		return;
	}

	docElem = doc.documentElement;

	// Make sure it's not a disconnected DOM node
	if ( !jQuery.contains( docElem, elem ) ) {
		return box;
	}

	// If we don't have gBCR, just use 0,0 rather than error
	// BlackBerry 5, iOS 3 (original iPhone)
	if ( typeof elem.getBoundingClientRect !== core_strundefined ) {
		box = elem.getBoundingClientRect();
	}
	win = getWindow( doc );
	return {
		top: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 ),
		left: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 )
	};
};

jQuery.offset = {

	setOffset: function( elem, options, i ) {
		var position = jQuery.css( elem, "position" );

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		var curElem = jQuery( elem ),
			curOffset = curElem.offset(),
			curCSSTop = jQuery.css( elem, "top" ),
			curCSSLeft = jQuery.css( elem, "left" ),
			calculatePosition = ( position === "absolute" || position === "fixed" ) && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1,
			props = {}, curPosition = {}, curTop, curLeft;

		// need to be able to calculate position if either top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};


jQuery.fn.extend({

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			parentOffset = { top: 0, left: 0 },
			elem = this[ 0 ];

		// fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {
			// we assume that getBoundingClientRect is available when computed position is fixed
			offset = elem.getBoundingClientRect();
		} else {
			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset.top  += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
		}

		// Subtract parent offsets and element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		return {
			top:  offset.top  - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true)
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || docElem;
			while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && jQuery.css( offsetParent, "position") === "static" ) ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent || docElem;
		});
	}
});


// Create scrollLeft and scrollTop methods
jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
	var top = /Y/.test( prop );

	jQuery.fn[ method ] = function( val ) {
		return jQuery.access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? (prop in win) ? win[ prop ] :
					win.document.documentElement[ method ] :
					elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : jQuery( win ).scrollLeft(),
					top ? val : jQuery( win ).scrollTop()
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
});

function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}
// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
		// margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return jQuery.access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {
					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest
					// unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?
					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	});
});
// Limit scope pollution from any deprecated API
// (function() {

// The number of elements contained in the matched element set
jQuery.fn.size = function() {
	return this.length;
};

jQuery.fn.andSelf = jQuery.fn.addBack;

// })();
if ( typeof module === "object" && module && typeof module.exports === "object" ) {
	// Expose jQuery as module.exports in loaders that implement the Node
	// module pattern (including browserify). Do not create the global, since
	// the user will be storing it themselves locally, and globals are frowned
	// upon in the Node module world.
	module.exports = jQuery;
} else {
	// Otherwise expose jQuery to the global object as usual
	window.jQuery = window.$ = jQuery;

	// Register as a named AMD module, since jQuery can be concatenated with other
	// files that may use define, but not via a proper concatenation script that
	// understands anonymous AMD modules. A named AMD is safest and most robust
	// way to register. Lowercase jquery is used because AMD module names are
	// derived from file names, and jQuery is normally delivered in a lowercase
	// file name. Do this after creating the global so that if an AMD module wants
	// to call noConflict to hide this version of jQuery, it will work.
	if ( typeof define === "function" && define.amd ) {
		define( "jquery", [], function () { return jQuery; } );
	}
}

})( window );


------------

 <body>

 <input type="button"  value="匹配其父元素下的第N个子或奇偶元素" id="son" ></input><br>
 <input type="text"  value="attr" id="name" ></input><br>
  <div id="dddd" class ="name">
 
    <div id="dddd" class ="name12">123</div>
   <div id="dddd" class ="name11">12</div>

  </div>


    
 
  </body>
  <script type="text/javascript"> 

  var $phone =$("<input></input>");
  $phone.attr("id","phone");
  $phone.attr("type","text");
  $phone.attr("disabled","disabled");
  $phone.attr("value","15028949491");
  $("#name").after($phone);
  alert($("#phone").val());
  alert($("#phone").attr("type"));
  //从每一个匹配的元素中删除一个属性
   $phone.removeAttr("disabled");
  //删除节点 返回值是呗删除的节点，被删除的节点的后代节点将同时被删除。
 var name=  $phone.remove();
  alert(name.attr("type"));
  //empty删除所有的子节点，清空元素的后代节点
    $("#dddd").empty();
   alert($("#dddd").attr("id"));

  </script>

------------

$("#tablename").children().eq(0).append(emement);

children():获取table下所有的子元素；
eq(0);获取table下第一个子元素；
append方法是在元素 结尾处增加；


实例-------------------------------------------------------------------------------

<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
<%
String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
%>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
     <base href="<%=basePath%>">
    
    <title>My JSP 'context.jsp' starting page</title>
    
	<meta http-equiv="pragma" content="no-cache">
	<meta http-equiv="cache-control" content="no-cache">
	<meta http-equiv="expires" content="0">    
	<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
	<meta http-equiv="description" content="This is my page">
  <script type="text/javascript" src="jQuery/jquery-1.10.2.js"></script>
	<!--
	<link rel="stylesheet" type="text/css" href="styles.css">
	-->

  </head>
  
  <body>
 <form>
  <input type="text" name="name"  id="name" value="ccc"/>
  <input type="text" name="age"  id="age" value="ccc"/>
  <input type="text" name="sex"  id="sex" value="ccc"/><br>
   <input type="button" name="button" value="tijiao" id="button"/>
</form>
 <table id="city" border="1" cellspacing="1">
    <tbody>
    <tr id ="name1" > <td >Value1</td><td >Value1</td> <td >Value1</td><td><a href="delete?id=Value1">Delete</a></td></tr>
    <tr id ="name2"><td >Value2</td><td >Value2</td> <td >Value2</td> <td><a href="delete?id=Value2">Delete</a></td ></tr>
    </tbody>
  </table>
  </body>
  <script type="text/javascript">
  $("#button").click(function(){
  //获取输入的值
       var name=$("#name").val();
       var age=$("#age").val();
       var sex=$("#sex").val();
   //创建空的td    
       var $name =$("<td></td>");
       var $age =$("<td></td>");
       var $sex =$("<td></td>");
       var $delete =$("<td></td>");
       var $a =$("<a></a>");
    //将获取的值分别放到对应的td下
       $name.text(name);
       $age.text(age);
       $sex.text(sex);
       
       $a.text("Delete");
       $a.attr("href","delete?id="+name);
       
       ($delete).append($a);
      //创建一个空的tr
       var $tr =$("<tr></tr>");
     //在这个tr下增加td
       $tr.append($name);
       $tr.append($age);
       $tr.append($sex);
       $tr.append($sex);
       $tr.append($delete);
    //将tr添加到对应的table下
      $("#city").children().eq(0).append($tr); 
      
       $("a").click(function(){
          return  dele($a);
      });
 });
 
 function dele($a){
//  var name = $a.attr("href");
//  alert(name);
    var name= $a.parent().parent().children().eq(0).text();
    var bl = window.confirm("确认要删除用户"+name+"吗?");
    if(!bl){
        return false;
    }else{
	    $a.parent().parent().remove();
	    return false;
    }
  }
 
  </script>
</html>


























------------

增加样式
$("#one").attr("class","mini");
$("#one").addClass("mini");
移除样式
$("#one").removeClass("mini");
样式翻转
$("#one").toggleClass("mini");
判断是否含有某个样式
$("#one").hasClass("mini");

------------

<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
<%
String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
%>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
     <base href="<%=basePath%>">
    
    <title>My JSP 'context.jsp' starting page</title>
    
	<meta http-equiv="pragma" content="no-cache">
	<meta http-equiv="cache-control" content="no-cache">
	<meta http-equiv="expires" content="0">    
	<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
	<meta http-equiv="description" content="This is my page">
  <script type="text/javascript" src="jQuery/jquery-1.10.2.js"></script>
	<!--
	<link rel="stylesheet" type="text/css" href="styles.css">
	-->

  </head>
  
  <body>
 
<form>

    <input type="text"  id="name" value="邮箱/电话/用户名"/><br>
    <input type="password"  id ="password" value=""/><br>
    <input type="submit" value="submit" /><br>

</form>

  </body>
  <script type="text/javascript"> 
     $("#name").focus(function(){
		   var name= $(this).val();
		  if(name==this.defaultValue){
		     $(this).val("");
		   }
    });
     $("#name").blur(function(){
		   var name= $(this).val();
		  if($.trim(name)==""){
		     $(this).val(this.defaultValue);
		   }
    });
 
  </script>
</html>


------------



------------

全选反选
判断子节点，然后判断父节点是否选择

------------

<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
<%
String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
%>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
     <base href="<%=basePath%>">
    
    <title>My JSP 'context.jsp' starting page</title>
    
	<meta http-equiv="pragma" content="no-cache">
	<meta http-equiv="cache-control" content="no-cache">
	<meta http-equiv="expires" content="0">    
	<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
	<meta http-equiv="description" content="This is my page">
  <script type="text/javascript" src="jQuery/jquery-1.10.2.js"></script>
	<!--
	<link rel="stylesheet" type="text/css" href="styles.css">
	-->

  </head>
  
  <body>

  
<form>
    <input type="checkbox"  id="all" value="Input checkbox1"/>全选/全部选<br>
    <input type="checkbox"  name="hao" value="Input checkbox1"/>checkbox1
    <input type="checkbox" name="hao" value="Input checkbox2"/>checkbox2
    <input type="checkbox" name="hao" value="Input checkbox3"/>checkbox3
    <input type="checkbox" name="hao" value="Input checkbox4"/>checkbox4
  <input type="button"  value="checkAll" id="checkAll" ></input>
  <input type="button"  value="checkNo" id="checkNo" ></input>
  <input type="button"  value="checkRev" id="checkRev" ></input>


 <input type="button"  value="提交" id="send" ></input><br>
</form>
 
 
  </body>
  <script type="text/javascript"> 
  //设置复选框的全选
//   $("#form2").click( function () {
//     $("input[type=checkbox]:checked").each(function(index,domElm){
//       alert(  $(domElm).val()); }); }); 
  
  $("#checkAll").click( function () {
//     $("input[name=hao]").attr("checked","checked");
      $("input[name=hao]").each(function(index,domElm){
       $(domElm).attr("checked","checked");
       
      });
    });
    
  $("#checkNo").click( function () {
//     $("input[name=hao]").attr("checked",null);
      $("input[name=hao]").each(function(index,domElm){
       $(domElm).attr("checked",null);
      });
    });
    
  $("#checkRev").click( function () {
//     $("input[name=hao]").attr("checked",null);
	      $("input[name=hao]").each(function(index,domElm){
	      if(this.checked){
	          $(domElm).attr("checked",null);
	      }else{
	       $(domElm).attr("checked","checked");
	      }
	      });
   });
   
   $("#all").click( function () {
		if(this.checked){
		 $("input[name=hao]").attr("checked","checked");
		}else{
		$("input[name=hao]").attr("checked",null);
		}
    });
  
  </script>
</html>


------------

<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
<%
String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
%>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
     <base href="<%=basePath%>">
    
    <title>My JSP 'context.jsp' starting page</title>
    
	<meta http-equiv="pragma" content="no-cache">
	<meta http-equiv="cache-control" content="no-cache">
	<meta http-equiv="expires" content="0">    
	<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
	<meta http-equiv="description" content="This is my page">
  <script type="text/javascript" src="jQuery/jquery-1.10.2.js"></script>
	<!--
	<link rel="stylesheet" type="text/css" href="styles.css">
	-->

  </head>
  
<body>
  <form>
    <input type="checkbox"  id="checkbox_checkbox" value="checkbox_checkbox"   onclick='getselect(this.id)' />全选/全部选<br>
    <input type="checkbox"  id="checkbox_checkbox1" value="checkbox_checkbox1" onclick='getselect(this.id)'/>checkbox1
    <input type="checkbox"  id="checkbox_checkbox2" value="checkbox_checkbox2"  onclick='getselect(this.id)'/>checkbox2
    <input type="checkbox"  id="checkbox_checkbox3" value="checkbox_checkbox3"  onclick='getselect(this.id)'/>checkbox3
    <input type="checkbox"  id="checkbox_checkbox4" value="checkbox_checkbox4"  onclick='getselect(this.id)'/>checkbox4
	<input type="button"  value="checkAll" id="checkAll" ></input>
	<input type="button"  value="checkNo" id="checkNo" ></input>
	<input type="button"  value="checkRev" id="checkRev" ></input>
	<input type="button"  value="提交" id="send" ></input><br>
  </form>
</body>
<script type="text/javascript"> 
 function getselect(value){
    var list =value.split("_");
   // 如果点击的是父类的复选框
   if(list[0]==list[1]){
	   //全选
	        if(($("#"+value)[0]).checked){
	         $("input[type=checkbox][id^="+list[0]+"]").attr("checked","checked");
	        }else{
	    //全部选
	        $("input[type=checkbox][id^="+list[0]+"]").attr("checked",null);
	       }
   }
     // 如果点击的子类的复选框
     if(list[0]!=list[1]){
       var flag= false;
      //如果子类为选中状态，那么直接给他的父类也为选中状态
       if(($("#"+value)[0]).checked){
           $("input[type=checkbox][id^="+list[0]+"][id$="+list[0]+"]").attr("checked","checked");
       }else{
       //如果子类为非选中状态，那么判断其余的子类有选中状态的话那么父类为选中状态，
       //var ccc= $("input[type=checkbox][id^="+list[0]+"]:not([id$="+list[0]+"])");
        $("input[type=checkbox][id^="+list[0]+"]:not([id$="+list[0]+"])").each(function(){
           if(this.checked){
               flag=true;
               return;
     }
   });
      if(!flag){
        $("input[type=checkbox][id^="+list[0]+"][id$="+list[0]+"]").attr("checked",null);
       }
     }
   }
}
  $("#checkAll").click( function () {
//     $("input[name=hao]").attr("checked","checked");
      $("input[type=checkbox]").each(function(index,domElm){
       $(domElm).attr("checked","checked");
       
      });
    });
    
  $("#checkNo").click( function () {
//     $("input[name=hao]").attr("checked",null);
      $("input[type=checkbox]").each(function(index,domElm){
       $(domElm).attr("checked",null);
      });
    });
    
     $("#checkRev").click( function () {
//     $("input[name=hao]").attr("checked",null);
	      $("input[type=checkbox]").each(function(index,domElm){
	      if(this.checked){
	          $(domElm).attr("checked",null);
	      }else{
	       $(domElm).attr("checked","checked");
	      }
	      });
   });
    
 
   
//    $("#checkbox_checkbox").click( function () {
// 		if(this.checked){
// 		 $("input[type=checkbox]").attr("checked","checked");
// 		}else{
// 		$("input[type=checkbox]").attr("checked",null);
// 		}
//     });
  
  </script>
</html>


------------

  <div  class ="name1" >
   <h1>收缩展开</h1>
      <div> 1<br>2<br>3<br>4<br></div>
   </div>

  </body>
  <script type="text/javascript">
   $("h1").each(function(){
    $(this).click(function(){
    $(this).next().slideToggle("1000");
   });
 });

------------

jquery.validate.js
jquery.js
页面验证
自定义函数

------------

/*
 * jQuery validation plug-in 1.5.5
 *
 * http://bassistance.de/jquery-plugins/jquery-plugin-validation/
 * http://docs.jquery.com/Plugins/Validation
 *
 * Copyright (c) 2006 - 2008 Jörn Zaefferer
 *
 * $Id: jquery.validate.js 6403 2009-06-17 14:27:16Z joern.zaefferer $
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 */

(function($) {

$.extend($.fn, {
	// http://docs.jquery.com/Plugins/Validation/validate
	validate: function( options ) {

		// if nothing is selected, return nothing; can't chain anyway
		if (!this.length) {
			options && options.debug && window.console && console.warn( "nothing selected, can't validate, returning nothing" );
			return;
		}

		// check if a validator for this form was already created
		var validator = $.data(this[0], 'validator');
		if ( validator ) {
			return validator;
		}
		
		validator = new $.validator( options, this[0] );
		$.data(this[0], 'validator', validator); 
		
		if ( validator.settings.onsubmit ) {
		
			// allow suppresing validation by adding a cancel class to the submit button
			this.find("input, button").filter(".cancel").click(function() {
				validator.cancelSubmit = true;
			});
			
			// when a submitHandler is used, capture the submitting button
			if (validator.settings.submitHandler) {
				this.find("input, button").filter(":submit").click(function() {
					validator.submitButton = this;
				});
			}
		
			// validate the form on submit
			this.submit( function( event ) {
				if ( validator.settings.debug )
					// prevent form submit to be able to see console output
					event.preventDefault();
					
				function handle() {
					if ( validator.settings.submitHandler ) {
						if (validator.submitButton) {
							// insert a hidden input as a replacement for the missing submit button
							var hidden = $("<input type='hidden'/>").attr("name", validator.submitButton.name).val(validator.submitButton.value).appendTo(validator.currentForm);
						}
						validator.settings.submitHandler.call( validator, validator.currentForm );
						if (validator.submitButton) {
							// and clean up afterwards; thanks to no-block-scope, hidden can be referenced
							hidden.remove();
						}
						return false;
					}
					return true;
				}
					
				// prevent submit for invalid forms or custom submit handlers
				if ( validator.cancelSubmit ) {
					validator.cancelSubmit = false;
					return handle();
				}
				if ( validator.form() ) {
					if ( validator.pendingRequest ) {
						validator.formSubmitted = true;
						return false;
					}
					return handle();
				} else {
					validator.focusInvalid();
					return false;
				}
			});
		}
		
		return validator;
	},
	// http://docs.jquery.com/Plugins/Validation/valid
	valid: function() {
        if ( $(this[0]).is('form')) {
            return this.validate().form();
        } else {
            var valid = true;
            var validator = $(this[0].form).validate();
            this.each(function() {
				valid &= validator.element(this);
            });
            return valid;
        }
    },
	// attributes: space seperated list of attributes to retrieve and remove
	removeAttrs: function(attributes) {
		var result = {},
			$element = this;
		$.each(attributes.split(/\s/), function(index, value) {
			result[value] = $element.attr(value);
			$element.removeAttr(value);
		});
		return result;
	},
	// http://docs.jquery.com/Plugins/Validation/rules
	rules: function(command, argument) {
		var element = this[0];
		
		if (command) {
			var settings = $.data(element.form, 'validator').settings;
			var staticRules = settings.rules;
			var existingRules = $.validator.staticRules(element);
			switch(command) {
			case "add":
				$.extend(existingRules, $.validator.normalizeRule(argument));
				staticRules[element.name] = existingRules;
				if (argument.messages)
					settings.messages[element.name] = $.extend( settings.messages[element.name], argument.messages );
				break;
			case "remove":
				if (!argument) {
					delete staticRules[element.name];
					return existingRules;
				}
				var filtered = {};
				$.each(argument.split(/\s/), function(index, method) {
					filtered[method] = existingRules[method];
					delete existingRules[method];
				});
				return filtered;
			}
		}
		
		var data = $.validator.normalizeRules(
		$.extend(
			{},
			$.validator.metadataRules(element),
			$.validator.classRules(element),
			$.validator.attributeRules(element),
			$.validator.staticRules(element)
		), element);
		
		// make sure required is at front
		if (data.required) {
			var param = data.required;
			delete data.required;
			data = $.extend({required: param}, data);
		}
		
		return data;
	}
});

// Custom selectors
$.extend($.expr[":"], {
	// http://docs.jquery.com/Plugins/Validation/blank
	blank: function(a) {return !$.trim(a.value);},
	// http://docs.jquery.com/Plugins/Validation/filled
	filled: function(a) {return !!$.trim(a.value);},
	// http://docs.jquery.com/Plugins/Validation/unchecked
	unchecked: function(a) {return !a.checked;}
});

// constructor for validator
$.validator = function( options, form ) {
	this.settings = $.extend( {}, $.validator.defaults, options );
	this.currentForm = form;
	this.init();
};

$.validator.format = function(source, params) {
	if ( arguments.length == 1 ) 
		return function() {
			var args = $.makeArray(arguments);
			args.unshift(source);
			return $.validator.format.apply( this, args );
		};
	if ( arguments.length > 2 && params.constructor != Array  ) {
		params = $.makeArray(arguments).slice(1);
	}
	if ( params.constructor != Array ) {
		params = [ params ];
	}
	$.each(params, function(i, n) {
		source = source.replace(new RegExp("\\{" + i + "\\}", "g"), n);
	});
	return source;
};

$.extend($.validator, {
	
	defaults: {
		messages: {},
		groups: {},
		rules: {},
		errorClass: "error",
		validClass: "valid",
		errorElement: "label",
		focusInvalid: true,
		errorContainer: $( [] ),
		errorLabelContainer: $( [] ),
		onsubmit: true,
		ignore: [],
		ignoreTitle: false,
		onfocusin: function(element) {
			this.lastActive = element;
				
			// hide error label and remove error class on focus if enabled
			if ( this.settings.focusCleanup && !this.blockFocusCleanup ) {
				this.settings.unhighlight && this.settings.unhighlight.call( this, element, this.settings.errorClass, this.settings.validClass );
				this.errorsFor(element).hide();
			}
		},
		onfocusout: function(element) {
			if ( !this.checkable(element) && (element.name in this.submitted || !this.optional(element)) ) {
				this.element(element);
			}
		},
		onkeyup: function(element) {
			if ( element.name in this.submitted || element == this.lastElement ) {
				this.element(element);
			}
		},
		onclick: function(element) {
			if ( element.name in this.submitted )
				this.element(element);
		},
		highlight: function( element, errorClass, validClass ) {
			$(element).addClass(errorClass).removeClass(validClass);
		},
		unhighlight: function( element, errorClass, validClass ) {
			$(element).removeClass(errorClass).addClass(validClass);
		}
	},

	// http://docs.jquery.com/Plugins/Validation/Validator/setDefaults
	setDefaults: function(settings) {
		$.extend( $.validator.defaults, settings );
	},

	messages: {
		required: "This field is required.",
		remote: "Please fix this field.",
		email: "Please enter a valid email address.",
		url: "Please enter a valid URL.",
		date: "Please enter a valid date.",
		dateISO: "Please enter a valid date (ISO).",
		dateDE: "Bitte geben Sie ein gültiges Datum ein.",
		number: "Please enter a valid number.",
		numberDE: "Bitte geben Sie eine Nummer ein.",
		digits: "Please enter only digits",
		creditcard: "Please enter a valid credit card number.",
		equalTo: "Please enter the same value again.",
		accept: "Please enter a value with a valid extension.",
		maxlength: $.validator.format("Please enter no more than {0} characters."),
		minlength: $.validator.format("Please enter at least {0} characters."),
		rangelength: $.validator.format("Please enter a value between {0} and {1} characters long."),
		range: $.validator.format("Please enter a value between {0} and {1}."),
		max: $.validator.format("Please enter a value less than or equal to {0}."),
		min: $.validator.format("Please enter a value greater than or equal to {0}.")
	},
	
	autoCreateRanges: false,
	
	prototype: {
		
		init: function() {
			this.labelContainer = $(this.settings.errorLabelContainer);
			this.errorContext = this.labelContainer.length && this.labelContainer || $(this.currentForm);
			this.containers = $(this.settings.errorContainer).add( this.settings.errorLabelContainer );
			this.submitted = {};
			this.valueCache = {};
			this.pendingRequest = 0;
			this.pending = {};
			this.invalid = {};
			this.reset();
			
			var groups = (this.groups = {});
			$.each(this.settings.groups, function(key, value) {
				$.each(value.split(/\s/), function(index, name) {
					groups[name] = key;
				});
			});
			var rules = this.settings.rules;
			$.each(rules, function(key, value) {
				rules[key] = $.validator.normalizeRule(value);
			});
			
			function delegate(event) {
				var validator = $.data(this[0].form, "validator");
				validator.settings["on" + event.type] && validator.settings["on" + event.type].call(validator, this[0] );
			}
			$(this.currentForm)
				.delegate("focusin focusout keyup", ":text, :password, :file, select, textarea", delegate)
				.delegate("click", ":radio, :checkbox", delegate);

			if (this.settings.invalidHandler)
				$(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler);
		},

		// http://docs.jquery.com/Plugins/Validation/Validator/form
		form: function() {
			this.checkForm();
			$.extend(this.submitted, this.errorMap);
			this.invalid = $.extend({}, this.errorMap);
			if (!this.valid())
				$(this.currentForm).triggerHandler("invalid-form", [this]);
			this.showErrors();
			return this.valid();
		},
		
		checkForm: function() {
			this.prepareForm();
			for ( var i = 0, elements = (this.currentElements = this.elements()); elements[i]; i++ ) {
				this.check( elements[i] );
			}
			return this.valid(); 
		},
		
		// http://docs.jquery.com/Plugins/Validation/Validator/element
		element: function( element ) {
			element = this.clean( element );
			this.lastElement = element;
			this.prepareElement( element );
			this.currentElements = $(element);
			var result = this.check( element );
			if ( result ) {
				delete this.invalid[element.name];
			} else {
				this.invalid[element.name] = true;
			}
			if ( !this.numberOfInvalids() ) {
				// Hide error containers on last error
				this.toHide = this.toHide.add( this.containers );
			}
			this.showErrors();
			return result;
		},

		// http://docs.jquery.com/Plugins/Validation/Validator/showErrors
		showErrors: function(errors) {
			if(errors) {
				// add items to error list and map
				$.extend( this.errorMap, errors );
				this.errorList = [];
				for ( var name in errors ) {
					this.errorList.push({
						message: errors[name],
						element: this.findByName(name)[0]
					});
				}
				// remove items from success list
				this.successList = $.grep( this.successList, function(element) {
					return !(element.name in errors);
				});
			}
			this.settings.showErrors
				? this.settings.showErrors.call( this, this.errorMap, this.errorList )
				: this.defaultShowErrors();
		},
		
		// http://docs.jquery.com/Plugins/Validation/Validator/resetForm
		resetForm: function() {
			if ( $.fn.resetForm )
				$( this.currentForm ).resetForm();
			this.submitted = {};
			this.prepareForm();
			this.hideErrors();
			this.elements().removeClass( this.settings.errorClass );
		},
		
		numberOfInvalids: function() {
			return this.objectLength(this.invalid);
		},
		
		objectLength: function( obj ) {
			var count = 0;
			for ( var i in obj )
				count++;
			return count;
		},
		
		hideErrors: function() {
			this.addWrapper( this.toHide ).hide();
		},
		
		valid: function() {
			return this.size() == 0;
		},
		
		size: function() {
			return this.errorList.length;
		},
		
		focusInvalid: function() {
			if( this.settings.focusInvalid ) {
				try {
					$(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").focus();
				} catch(e) {
					// ignore IE throwing errors when focusing hidden elements
				}
			}
		},
		
		findLastActive: function() {
			var lastActive = this.lastActive;
			return lastActive && $.grep(this.errorList, function(n) {
				return n.element.name == lastActive.name;
			}).length == 1 && lastActive;
		},
		
		elements: function() {
			var validator = this,
				rulesCache = {};
			
			// select all valid inputs inside the form (no submit or reset buttons)
			// workaround $Query([]).add until http://dev.jquery.com/ticket/2114 is solved
			return $([]).add(this.currentForm.elements)
			.filter(":input")
			.not(":submit, :reset, :image, [disabled]")
			.not( this.settings.ignore )
			.filter(function() {
				!this.name && validator.settings.debug && window.console && console.error( "%o has no name assigned", this);
			
				// select only the first element for each name, and only those with rules specified
				if ( this.name in rulesCache || !validator.objectLength($(this).rules()) )
					return false;
				
				rulesCache[this.name] = true;
				return true;
			});
		},
		
		clean: function( selector ) {
			return $( selector )[0];
		},
		
		errors: function() {
			return $( this.settings.errorElement + "." + this.settings.errorClass, this.errorContext );
		},
		
		reset: function() {
			this.successList = [];
			this.errorList = [];
			this.errorMap = {};
			this.toShow = $([]);
			this.toHide = $([]);
			this.formSubmitted = false;
			this.currentElements = $([]);
		},
		
		prepareForm: function() {
			this.reset();
			this.toHide = this.errors().add( this.containers );
		},
		
		prepareElement: function( element ) {
			this.reset();
			this.toHide = this.errorsFor(element);
		},
	
		check: function( element ) {
			element = this.clean( element );
			
			// if radio/checkbox, validate first element in group instead
			if (this.checkable(element)) {
				element = this.findByName( element.name )[0];
			}
			
			var rules = $(element).rules();
			var dependencyMismatch = false;
			for( method in rules ) {
				var rule = { method: method, parameters: rules[method] };
				try {
					var result = $.validator.methods[method].call( this, element.value.replace(/\r/g, ""), element, rule.parameters );
					
					// if a method indicates that the field is optional and therefore valid,
					// don't mark it as valid when there are no other rules
					if ( result == "dependency-mismatch" ) {
						dependencyMismatch = true;
						continue;
					}
					dependencyMismatch = false;
					
					if ( result == "pending" ) {
						this.toHide = this.toHide.not( this.errorsFor(element) );
						return;
					}
					
					if( !result ) {
						this.formatAndAdd( element, rule );
						return false;
					}
				} catch(e) {
					this.settings.debug && window.console && console.log("exception occured when checking element " + element.id
						 + ", check the '" + rule.method + "' method");
					throw e;
				}
			}
			if (dependencyMismatch)
				return;
			if ( this.objectLength(rules) )
				this.successList.push(element);
			return true;
		},
		
		// return the custom message for the given element and validation method
		// specified in the element's "messages" metadata
		customMetaMessage: function(element, method) {
			if (!$.metadata)
				return;
			
			var meta = this.settings.meta
				? $(element).metadata()[this.settings.meta]
				: $(element).metadata();
			
			return meta && meta.messages && meta.messages[method];
		},
		
		// return the custom message for the given element name and validation method
		customMessage: function( name, method ) {
			var m = this.settings.messages[name];
			return m && (m.constructor == String
				? m
				: m[method]);
		},
		
		// return the first defined argument, allowing empty strings
		findDefined: function() {
			for(var i = 0; i < arguments.length; i++) {
				if (arguments[i] !== undefined)
					return arguments[i];
			}
			return undefined;
		},
		
		defaultMessage: function( element, method) {
			return this.findDefined(
				this.customMessage( element.name, method ),
				this.customMetaMessage( element, method ),
				// title is never undefined, so handle empty string as undefined
				!this.settings.ignoreTitle && element.title || undefined,
				$.validator.messages[method],
				"<strong>Warning: No message defined for " + element.name + "</strong>"
			);
		},
		
		formatAndAdd: function( element, rule ) {
			var message = this.defaultMessage( element, rule.method );
			if ( typeof message == "function" ) 
				message = message.call(this, rule.parameters, element);
			this.errorList.push({
				message: message,
				element: element
			});
			this.errorMap[element.name] = message;
			this.submitted[element.name] = message;
		},
		
		addWrapper: function(toToggle) {
			if ( this.settings.wrapper )
				toToggle = toToggle.add( toToggle.parent( this.settings.wrapper ) );
			return toToggle;
		},
		
		defaultShowErrors: function() {
			for ( var i = 0; this.errorList[i]; i++ ) {
				var error = this.errorList[i];
				this.settings.highlight && this.settings.highlight.call( this, error.element, this.settings.errorClass, this.settings.validClass );
				this.showLabel( error.element, error.message );
			}
			if( this.errorList.length ) {
				this.toShow = this.toShow.add( this.containers );
			}
			if (this.settings.success) {
				for ( var i = 0; this.successList[i]; i++ ) {
					this.showLabel( this.successList[i] );
				}
			}
			if (this.settings.unhighlight) {
				for ( var i = 0, elements = this.validElements(); elements[i]; i++ ) {
					this.settings.unhighlight.call( this, elements[i], this.settings.errorClass, this.settings.validClass );
				}
			}
			this.toHide = this.toHide.not( this.toShow );
			this.hideErrors();
			this.addWrapper( this.toShow ).show();
		},
		
		validElements: function() {
			return this.currentElements.not(this.invalidElements());
		},
		
		invalidElements: function() {
			return $(this.errorList).map(function() {
				return this.element;
			});
		},
		
		showLabel: function(element, message) {
			var label = this.errorsFor( element );
			if ( label.length ) {
				// refresh error/success class
				label.removeClass().addClass( this.settings.errorClass );
			
				// check if we have a generated label, replace the message then
				label.attr("generated") && label.html(message);
			} else {
				// create label
				label = $("<" + this.settings.errorElement + "/>")
					.attr({"for":  this.idOrName(element), generated: true})
					.addClass(this.settings.errorClass)
					.html(message || "");
				if ( this.settings.wrapper ) {
					// make sure the element is visible, even in IE
					// actually showing the wrapped element is handled elsewhere
					label = label.hide().show().wrap("<" + this.settings.wrapper + "/>").parent();
				}
				if ( !this.labelContainer.append(label).length )
					this.settings.errorPlacement
						? this.settings.errorPlacement(label, $(element) )
						: label.insertAfter(element);
			}
			if ( !message && this.settings.success ) {
				label.text("");
				typeof this.settings.success == "string"
					? label.addClass( this.settings.success )
					: this.settings.success( label );
			}
			this.toShow = this.toShow.add(label);
		},
		
		errorsFor: function(element) {
			return this.errors().filter("[for='" + this.idOrName(element) + "']");
		},
		
		idOrName: function(element) {
			return this.groups[element.name] || (this.checkable(element) ? element.name : element.id || element.name);
		},

		checkable: function( element ) {
			return /radio|checkbox/i.test(element.type);
		},
		
		findByName: function( name ) {
			// select by name and filter by form for performance over form.find("[name=...]")
			var form = this.currentForm;
			return $(document.getElementsByName(name)).map(function(index, element) {
				return element.form == form && element.name == name && element  || null;
			});
		},
		
		getLength: function(value, element) {
			switch( element.nodeName.toLowerCase() ) {
			case 'select':
				return $("option:selected", element).length;
			case 'input':
				if( this.checkable( element) )
					return this.findByName(element.name).filter(':checked').length;
			}
			return value.length;
		},
	
		depend: function(param, element) {
			return this.dependTypes[typeof param]
				? this.dependTypes[typeof param](param, element)
				: true;
		},
	
		dependTypes: {
			"boolean": function(param, element) {
				return param;
			},
			"string": function(param, element) {
				return !!$(param, element.form).length;
			},
			"function": function(param, element) {
				return param(element);
			}
		},
		
		optional: function(element) {
			return !$.validator.methods.required.call(this, $.trim(element.value), element) && "dependency-mismatch";
		},
		
		startRequest: function(element) {
			if (!this.pending[element.name]) {
				this.pendingRequest++;
				this.pending[element.name] = true;
			}
		},
		
		stopRequest: function(element, valid) {
			this.pendingRequest--;
			// sometimes synchronization fails, make sure pendingRequest is never < 0
			if (this.pendingRequest < 0)
				this.pendingRequest = 0;
			delete this.pending[element.name];
			if ( valid && this.pendingRequest == 0 && this.formSubmitted && this.form() ) {
				$(this.currentForm).submit();
			} else if (!valid && this.pendingRequest == 0 && this.formSubmitted) {
				$(this.currentForm).triggerHandler("invalid-form", [this]);
			}
		},
		
		previousValue: function(element) {
			return $.data(element, "previousValue") || $.data(element, "previousValue", previous = {
				old: null,
				valid: true,
				message: this.defaultMessage( element, "remote" )
			});
		}
		
	},
	
	classRuleSettings: {
		required: {required: true},
		email: {email: true},
		url: {url: true},
		date: {date: true},
		dateISO: {dateISO: true},
		dateDE: {dateDE: true},
		number: {number: true},
		numberDE: {numberDE: true},
		digits: {digits: true},
		creditcard: {creditcard: true}
	},
	
	addClassRules: function(className, rules) {
		className.constructor == String ?
			this.classRuleSettings[className] = rules :
			$.extend(this.classRuleSettings, className);
	},
	
	classRules: function(element) {
		var rules = {};
		var classes = $(element).attr('class');
		classes && $.each(classes.split(' '), function() {
			if (this in $.validator.classRuleSettings) {
				$.extend(rules, $.validator.classRuleSettings[this]);
			}
		});
		return rules;
	},
	
	attributeRules: function(element) {
		var rules = {};
		var $element = $(element);
		
		for (method in $.validator.methods) {
			var value = $element.attr(method);
			if (value) {
				rules[method] = value;
			}
		}
		
		// maxlength may be returned as -1, 2147483647 (IE) and 524288 (safari) for text inputs
		if (rules.maxlength && /-1|2147483647|524288/.test(rules.maxlength)) {
			delete rules.maxlength;
		}
		
		return rules;
	},
	
	metadataRules: function(element) {
		if (!$.metadata) return {};
		
		var meta = $.data(element.form, 'validator').settings.meta;
		return meta ?
			$(element).metadata()[meta] :
			$(element).metadata();
	},
	
	staticRules: function(element) {
		var rules = {};
		var validator = $.data(element.form, 'validator');
		if (validator.settings.rules) {
			rules = $.validator.normalizeRule(validator.settings.rules[element.name]) || {};
		}
		return rules;
	},
	
	normalizeRules: function(rules, element) {
		// handle dependency check
		$.each(rules, function(prop, val) {
			// ignore rule when param is explicitly false, eg. required:false
			if (val === false) {
				delete rules[prop];
				return;
			}
			if (val.param || val.depends) {
				var keepRule = true;
				switch (typeof val.depends) {
					case "string":
						keepRule = !!$(val.depends, element.form).length;
						break;
					case "function":
						keepRule = val.depends.call(element, element);
						break;
				}
				if (keepRule) {
					rules[prop] = val.param !== undefined ? val.param : true;
				} else {
					delete rules[prop];
				}
			}
		});
		
		// evaluate parameters
		$.each(rules, function(rule, parameter) {
			rules[rule] = $.isFunction(parameter) ? parameter(element) : parameter;
		});
		
		// clean number parameters
		$.each(['minlength', 'maxlength', 'min', 'max'], function() {
			if (rules[this]) {
				rules[this] = Number(rules[this]);
			}
		});
		$.each(['rangelength', 'range'], function() {
			if (rules[this]) {
				rules[this] = [Number(rules[this][0]), Number(rules[this][1])];
			}
		});
		
		if ($.validator.autoCreateRanges) {
			// auto-create ranges
			if (rules.min && rules.max) {
				rules.range = [rules.min, rules.max];
				delete rules.min;
				delete rules.max;
			}
			if (rules.minlength && rules.maxlength) {
				rules.rangelength = [rules.minlength, rules.maxlength];
				delete rules.minlength;
				delete rules.maxlength;
			}
		}
		
		// To support custom messages in metadata ignore rule methods titled "messages"
		if (rules.messages) {
			delete rules.messages
		}
		
		return rules;
	},
	
	// Converts a simple string to a {string: true} rule, e.g., "required" to {required:true}
	normalizeRule: function(data) {
		if( typeof data == "string" ) {
			var transformed = {};
			$.each(data.split(/\s/), function() {
				transformed[this] = true;
			});
			data = transformed;
		}
		return data;
	},
	
	// http://docs.jquery.com/Plugins/Validation/Validator/addMethod
	addMethod: function(name, method, message) {
		$.validator.methods[name] = method;
		$.validator.messages[name] = message || $.validator.messages[name];
		if (method.length < 3) {
			$.validator.addClassRules(name, $.validator.normalizeRule(name));
		}
	},

	methods: {

		// http://docs.jquery.com/Plugins/Validation/Methods/required
		required: function(value, element, param) {
			// check if dependency is met
			if ( !this.depend(param, element) )
				return "dependency-mismatch";
			switch( element.nodeName.toLowerCase() ) {
			case 'select':
				var options = $("option:selected", element);
				return options.length > 0 && ( element.type == "select-multiple" || ($.browser.msie && !(options[0].attributes['value'].specified) ? options[0].text : options[0].value).length > 0);
			case 'input':
				if ( this.checkable(element) )
					return this.getLength(value, element) > 0;
			default:
				return $.trim(value).length > 0;
			}
		},
		
		// http://docs.jquery.com/Plugins/Validation/Methods/remote
		remote: function(value, element, param) {
			if ( this.optional(element) )
				return "dependency-mismatch";
			
			var previous = this.previousValue(element);
			
			if (!this.settings.messages[element.name] )
				this.settings.messages[element.name] = {};
			this.settings.messages[element.name].remote = typeof previous.message == "function" ? previous.message(value) : previous.message;
			
			param = typeof param == "string" && {url:param} || param; 
			
			if ( previous.old !== value ) {
				previous.old = value;
				var validator = this;
				this.startRequest(element);
				var data = {};
				data[element.name] = value;
				$.ajax($.extend(true, {
					url: param,
					mode: "abort",
					port: "validate" + element.name,
					dataType: "json",
					data: data,
					success: function(response) {
						var valid = response === true;
						if ( valid ) {
							var submitted = validator.formSubmitted;
							validator.prepareElement(element);
							validator.formSubmitted = submitted;
							validator.successList.push(element);
							validator.showErrors();
						} else {
							var errors = {};
							errors[element.name] = previous.message = response || validator.defaultMessage( element, "remote" );
							validator.showErrors(errors);
						}
						previous.valid = valid;
						validator.stopRequest(element, valid);
					}
				}, param));
				return "pending";
			} else if( this.pending[element.name] ) {
				return "pending";
			}
			return previous.valid;
		},

		// http://docs.jquery.com/Plugins/Validation/Methods/minlength
		minlength: function(value, element, param) {
			return this.optional(element) || this.getLength($.trim(value), element) >= param;
		},
		
		// http://docs.jquery.com/Plugins/Validation/Methods/maxlength
		maxlength: function(value, element, param) {
			return this.optional(element) || this.getLength($.trim(value), element) <= param;
		},
		
		// http://docs.jquery.com/Plugins/Validation/Methods/rangelength
		rangelength: function(value, element, param) {
			var length = this.getLength($.trim(value), element);
			return this.optional(element) || ( length >= param[0] && length <= param[1] );
		},
		
		// http://docs.jquery.com/Plugins/Validation/Methods/min
		min: function( value, element, param ) {
			return this.optional(element) || value >= param;
		},
		
		// http://docs.jquery.com/Plugins/Validation/Methods/max
		max: function( value, element, param ) {
			return this.optional(element) || value <= param;
		},
		
		// http://docs.jquery.com/Plugins/Validation/Methods/range
		range: function( value, element, param ) {
			return this.optional(element) || ( value >= param[0] && value <= param[1] );
		},
		
		// http://docs.jquery.com/Plugins/Validation/Methods/email
		email: function(value, element) {
			// contributed by Scott Gonzalez: http://projects.scottsplayground.com/email_address_validation/
			return this.optional(element) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i.test(value);
		},
	
		// http://docs.jquery.com/Plugins/Validation/Methods/url
		url: function(value, element) {
			// contributed by Scott Gonzalez: http://projects.scottsplayground.com/iri/
			return this.optional(element) || /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(value);
		},
        
		// http://docs.jquery.com/Plugins/Validation/Methods/date
		date: function(value, element) {
			return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
		},
	
		// http://docs.jquery.com/Plugins/Validation/Methods/dateISO
		dateISO: function(value, element) {
			return this.optional(element) || /^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(value);
		},
	
		// http://docs.jquery.com/Plugins/Validation/Methods/dateDE
		dateDE: function(value, element) {
			return this.optional(element) || /^\d\d?\.\d\d?\.\d\d\d?\d?$/.test(value);
		},
	
		// http://docs.jquery.com/Plugins/Validation/Methods/number
		number: function(value, element) {
			return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)(?:\.\d+)?$/.test(value);
		},
	
		// http://docs.jquery.com/Plugins/Validation/Methods/numberDE
		numberDE: function(value, element) {
			return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:\.\d{3})+)(?:,\d+)?$/.test(value);
		},
		
		// http://docs.jquery.com/Plugins/Validation/Methods/digits
		digits: function(value, element) {
			return this.optional(element) || /^\d+$/.test(value);
		},
		
		// http://docs.jquery.com/Plugins/Validation/Methods/creditcard
		// based on http://en.wikipedia.org/wiki/Luhn
		creditcard: function(value, element) {
			if ( this.optional(element) )
				return "dependency-mismatch";
			// accept only digits and dashes
			if (/[^0-9-]+/.test(value))
				return false;
			var nCheck = 0,
				nDigit = 0,
				bEven = false;

			value = value.replace(/\D/g, "");

			for (n = value.length - 1; n >= 0; n--) {
				var cDigit = value.charAt(n);
				var nDigit = parseInt(cDigit, 10);
				if (bEven) {
					if ((nDigit *= 2) > 9)
						nDigit -= 9;
				}
				nCheck += nDigit;
				bEven = !bEven;
			}

			return (nCheck % 10) == 0;
		},
		
		// http://docs.jquery.com/Plugins/Validation/Methods/accept
		accept: function(value, element, param) {
			param = typeof param == "string" ? param.replace(/,/g, '|') : "png|jpe?g|gif";
			return this.optional(element) || value.match(new RegExp(".(" + param + ")$", "i")); 
		},
		
		// http://docs.jquery.com/Plugins/Validation/Methods/equalTo
		equalTo: function(value, element, param) {
			return value == $(param).val();
		}
		
	}
	
});

// deprecated, use $.validator.format instead
$.format = $.validator.format;

})(jQuery);

// ajax mode: abort
// usage: $.ajax({ mode: "abort"[, port: "uniqueport"]});
// if mode:"abort" is used, the previous request on that port (port can be undefined) is aborted via XMLHttpRequest.abort() 
;(function($) {
	var ajax = $.ajax;
	var pendingRequests = {};
	$.ajax = function(settings) {
		// create settings for compatibility with ajaxSetup
		settings = $.extend(settings, $.extend({}, $.ajaxSettings, settings));
		var port = settings.port;
		if (settings.mode == "abort") {
			if ( pendingRequests[port] ) {
				pendingRequests[port].abort();
			}
			return (pendingRequests[port] = ajax.apply(this, arguments));
		}
		return ajax.apply(this, arguments);
	};
})(jQuery);

// provides cross-browser focusin and focusout events
// IE has native support, in other browsers, use event caputuring (neither bubbles)

// provides delegate(type: String, delegate: Selector, handler: Callback) plugin for easier event delegation
// handler is only called when $(event.target).is(delegate), in the scope of the jquery-object for event.target 

// provides triggerEvent(type: String, target: Element) to trigger delegated events
;(function($) {
	$.each({
		focus: 'focusin',
		blur: 'focusout'	
	}, function( original, fix ){
		$.event.special[fix] = {
			setup:function() {
				if ( $.browser.msie ) return false;
				this.addEventListener( original, $.event.special[fix].handler, true );
			},
			teardown:function() {
				if ( $.browser.msie ) return false;
				this.removeEventListener( original,
				$.event.special[fix].handler, true );
			},
			handler: function(e) {
				arguments[0] = $.event.fix(e);
				arguments[0].type = fix;
				return $.event.handle.apply(this, arguments);
			}
		};
	});
	$.extend($.fn, {
		delegate: function(type, delegate, handler) {
			return this.bind(type, function(event) {
				var target = $(event.target);
				if (target.is(delegate)) {
					return handler.apply(target, arguments);
				}
			});
		},
		triggerEvent: function(type, target) {
			return this.triggerHandler(type, [$.event.fix({ type: type, target: target })]);
		}
	})
})(jQuery);


------------

/*!
 * jQuery JavaScript Library v1.3
 * http://jquery.com/
 *
 * Copyright (c) 2009 John Resig
 * Dual licensed under the MIT and GPL licenses.
 * http://docs.jquery.com/License
 *
 * Date: 2009-01-13 12:50:31 -0500 (Tue, 13 Jan 2009)
 * Revision: 6104
 */
(function(){

var 
	// Will speed up references to window, and allows munging its name.
	window = this,
	// Will speed up references to undefined, and allows munging its name.
	undefined,
	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,
	// Map over the $ in case of overwrite
	_$ = window.$,

	jQuery = window.jQuery = window.$ = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		return new jQuery.fn.init( selector, context );
	},

	// A simple way to check for HTML strings or ID strings
	// (both of which we optimize for)
	quickExpr = /^[^<]*(<(.|\s)+>)[^>]*$|^#([\w-]+)$/,
	// Is it a simple selector
	isSimple = /^.[^:#\[\.,]*$/;

jQuery.fn = jQuery.prototype = {
	init: function( selector, context ) {
		// Make sure that a selection was provided
		selector = selector || document;

		// Handle $(DOMElement)
		if ( selector.nodeType ) {
			this[0] = selector;
			this.length = 1;
			this.context = selector;
			return this;
		}
		// Handle HTML strings
		if ( typeof selector === "string" ) {
			// Are we dealing with HTML string or an ID?
			var match = quickExpr.exec( selector );

			// Verify a match, and that no context was specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] )
					selector = jQuery.clean( [ match[1] ], context );

				// HANDLE: $("#id")
				else {
					var elem = document.getElementById( match[3] );

					// Make sure an element was located
					if ( elem ){
						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id != match[3] )
							return jQuery().find( selector );

						// Otherwise, we inject the element directly into the jQuery object
						var ret = jQuery( elem );
						ret.context = document;
						ret.selector = selector;
						return ret;
					}
					selector = [];
				}

			// HANDLE: $(expr, [context])
			// (which is just equivalent to: $(content).find(expr)
			} else
				return jQuery( context ).find( selector );

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) )
			return jQuery( document ).ready( selector );

		// Make sure that old selector state is passed along
		if ( selector.selector && selector.context ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return this.setArray(jQuery.makeArray(selector));
	},

	// Start with an empty selector
	selector: "",

	// The current version of jQuery being used
	jquery: "1.3",

	// The number of elements contained in the matched element set
	size: function() {
		return this.length;
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num === undefined ?

			// Return a 'clean' array
			jQuery.makeArray( this ) :

			// Return just the object
			this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems, name, selector ) {
		// Build a new jQuery matched element set
		var ret = jQuery( elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		ret.context = this.context;

		if ( name === "find" )
			ret.selector = this.selector + (this.selector ? " " : "") + selector;
		else if ( name )
			ret.selector = this.selector + "." + name + "(" + selector + ")";

		// Return the newly-formed element set
		return ret;
	},

	// Force the current matched set of elements to become
	// the specified array of elements (destroying the stack in the process)
	// You should use pushStack() in order to do this, but maintain the stack
	setArray: function( elems ) {
		// Resetting the length to 0, then using the native Array push
		// is a super-fast way to populate an object with array-like properties
		this.length = 0;
		Array.prototype.push.apply( this, elems );

		return this;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {
		// Locate the position of the desired element
		return jQuery.inArray(
			// If it receives a jQuery object, the first element is used
			elem && elem.jquery ? elem[0] : elem
		, this );
	},

	attr: function( name, value, type ) {
		var options = name;

		// Look for the case where we're accessing a style value
		if ( typeof name === "string" )
			if ( value === undefined )
				return this[0] && jQuery[ type || "attr" ]( this[0], name );

			else {
				options = {};
				options[ name ] = value;
			}

		// Check to see if we're setting style values
		return this.each(function(i){
			// Set all the styles
			for ( name in options )
				jQuery.attr(
					type ?
						this.style :
						this,
					name, jQuery.prop( this, options[ name ], type, i, name )
				);
		});
	},

	css: function( key, value ) {
		// ignore negative width and height values
		if ( (key == 'width' || key == 'height') && parseFloat(value) < 0 )
			value = undefined;
		return this.attr( key, value, "curCSS" );
	},

	text: function( text ) {
		if ( typeof text !== "object" && text != null )
			return this.empty().append( (this[0] && this[0].ownerDocument || document).createTextNode( text ) );

		var ret = "";

		jQuery.each( text || this, function(){
			jQuery.each( this.childNodes, function(){
				if ( this.nodeType != 8 )
					ret += this.nodeType != 1 ?
						this.nodeValue :
						jQuery.fn.text( [ this ] );
			});
		});

		return ret;
	},

	wrapAll: function( html ) {
		if ( this[0] ) {
			// The elements to wrap the target around
			var wrap = jQuery( html, this[0].ownerDocument ).clone();

			if ( this[0].parentNode )
				wrap.insertBefore( this[0] );

			wrap.map(function(){
				var elem = this;

				while ( elem.firstChild )
					elem = elem.firstChild;

				return elem;
			}).append(this);
		}

		return this;
	},

	wrapInner: function( html ) {
		return this.each(function(){
			jQuery( this ).contents().wrapAll( html );
		});
	},

	wrap: function( html ) {
		return this.each(function(){
			jQuery( this ).wrapAll( html );
		});
	},

	append: function() {
		return this.domManip(arguments, true, function(elem){
			if (this.nodeType == 1)
				this.appendChild( elem );
		});
	},

	prepend: function() {
		return this.domManip(arguments, true, function(elem){
			if (this.nodeType == 1)
				this.insertBefore( elem, this.firstChild );
		});
	},

	before: function() {
		return this.domManip(arguments, false, function(elem){
			this.parentNode.insertBefore( elem, this );
		});
	},

	after: function() {
		return this.domManip(arguments, false, function(elem){
			this.parentNode.insertBefore( elem, this.nextSibling );
		});
	},

	end: function() {
		return this.prevObject || jQuery( [] );
	},

	// For internal use only.
	// Behaves like an Array's .push method, not like a jQuery method.
	push: [].push,

	find: function( selector ) {
		if ( this.length === 1 && !/,/.test(selector) ) {
			var ret = this.pushStack( [], "find", selector );
			ret.length = 0;
			jQuery.find( selector, this[0], ret );
			return ret;
		} else {
			var elems = jQuery.map(this, function(elem){
				return jQuery.find( selector, elem );
			});

			return this.pushStack( /[^+>] [^+>]/.test( selector ) ?
				jQuery.unique( elems ) :
				elems, "find", selector );
		}
	},

	clone: function( events ) {
		// Do the clone
		var ret = this.map(function(){
			if ( !jQuery.support.noCloneEvent && !jQuery.isXMLDoc(this) ) {
				// IE copies events bound via attachEvent when
				// using cloneNode. Calling detachEvent on the
				// clone will also remove the events from the orignal
				// In order to get around this, we use innerHTML.
				// Unfortunately, this means some modifications to
				// attributes in IE that are actually only stored
				// as properties will not be copied (such as the
				// the name attribute on an input).
				var clone = this.cloneNode(true),
					container = document.createElement("div");
				container.appendChild(clone);
				return jQuery.clean([container.innerHTML])[0];
			} else
				return this.cloneNode(true);
		});

		// Need to set the expando to null on the cloned set if it exists
		// removeData doesn't work here, IE removes it from the original as well
		// this is primarily for IE but the data expando shouldn't be copied over in any browser
		var clone = ret.find("*").andSelf().each(function(){
			if ( this[ expando ] !== undefined )
				this[ expando ] = null;
		});

		// Copy the events from the original to the clone
		if ( events === true )
			this.find("*").andSelf().each(function(i){
				if (this.nodeType == 3)
					return;
				var events = jQuery.data( this, "events" );

				for ( var type in events )
					for ( var handler in events[ type ] )
						jQuery.event.add( clone[ i ], type, events[ type ][ handler ], events[ type ][ handler ].data );
			});

		// Return the cloned set
		return ret;
	},

	filter: function( selector ) {
		return this.pushStack(
			jQuery.isFunction( selector ) &&
			jQuery.grep(this, function(elem, i){
				return selector.call( elem, i );
			}) ||

			jQuery.multiFilter( selector, jQuery.grep(this, function(elem){
				return elem.nodeType === 1;
			}) ), "filter", selector );
	},

	closest: function( selector ) {
		var pos = jQuery.expr.match.POS.test( selector ) ? jQuery(selector) : null;

		return this.map(function(){
			var cur = this;
			while ( cur && cur.ownerDocument ) {
				if ( pos ? pos.index(cur) > -1 : jQuery(cur).is(selector) )
					return cur;
				cur = cur.parentNode;
			}
		});
	},

	not: function( selector ) {
		if ( typeof selector === "string" )
			// test special case where just one selector is passed in
			if ( isSimple.test( selector ) )
				return this.pushStack( jQuery.multiFilter( selector, this, true ), "not", selector );
			else
				selector = jQuery.multiFilter( selector, this );

		var isArrayLike = selector.length && selector[selector.length - 1] !== undefined && !selector.nodeType;
		return this.filter(function() {
			return isArrayLike ? jQuery.inArray( this, selector ) < 0 : this != selector;
		});
	},

	add: function( selector ) {
		return this.pushStack( jQuery.unique( jQuery.merge(
			this.get(),
			typeof selector === "string" ?
				jQuery( selector ) :
				jQuery.makeArray( selector )
		)));
	},

	is: function( selector ) {
		return !!selector && jQuery.multiFilter( selector, this ).length > 0;
	},

	hasClass: function( selector ) {
		return !!selector && this.is( "." + selector );
	},

	val: function( value ) {
		if ( value === undefined ) {			
			var elem = this[0];

			if ( elem ) {
				if( jQuery.nodeName( elem, 'option' ) )
					return (elem.attributes.value || {}).specified ? elem.value : elem.text;
				
				// We need to handle select boxes special
				if ( jQuery.nodeName( elem, "select" ) ) {
					var index = elem.selectedIndex,
						values = [],
						options = elem.options,
						one = elem.type == "select-one";

					// Nothing was selected
					if ( index < 0 )
						return null;

					// Loop through all the selected options
					for ( var i = one ? index : 0, max = one ? index + 1 : options.length; i < max; i++ ) {
						var option = options[ i ];

						if ( option.selected ) {
							// Get the specifc value for the option
							value = jQuery(option).val();

							// We don't need an array for one selects
							if ( one )
								return value;

							// Multi-Selects return an array
							values.push( value );
						}
					}

					return values;				
				}

				// Everything else, we just grab the value
				return (elem.value || "").replace(/\r/g, "");

			}

			return undefined;
		}

		if ( typeof value === "number" )
			value += '';

		return this.each(function(){
			if ( this.nodeType != 1 )
				return;

			if ( jQuery.isArray(value) && /radio|checkbox/.test( this.type ) )
				this.checked = (jQuery.inArray(this.value, value) >= 0 ||
					jQuery.inArray(this.name, value) >= 0);

			else if ( jQuery.nodeName( this, "select" ) ) {
				var values = jQuery.makeArray(value);

				jQuery( "option", this ).each(function(){
					this.selected = (jQuery.inArray( this.value, values ) >= 0 ||
						jQuery.inArray( this.text, values ) >= 0);
				});

				if ( !values.length )
					this.selectedIndex = -1;

			} else
				this.value = value;
		});
	},

	html: function( value ) {
		return value === undefined ?
			(this[0] ?
				this[0].innerHTML :
				null) :
			this.empty().append( value );
	},

	replaceWith: function( value ) {
		return this.after( value ).remove();
	},

	eq: function( i ) {
		return this.slice( i, +i + 1 );
	},

	slice: function() {
		return this.pushStack( Array.prototype.slice.apply( this, arguments ),
			"slice", Array.prototype.slice.call(arguments).join(",") );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function(elem, i){
			return callback.call( elem, i, elem );
		}));
	},

	andSelf: function() {
		return this.add( this.prevObject );
	},

	domManip: function( args, table, callback ) {
		if ( this[0] ) {
			var fragment = (this[0].ownerDocument || this[0]).createDocumentFragment(),
				scripts = jQuery.clean( args, (this[0].ownerDocument || this[0]), fragment ),
				first = fragment.firstChild,
				extra = this.length > 1 ? fragment.cloneNode(true) : fragment;

			if ( first )
				for ( var i = 0, l = this.length; i < l; i++ )
					callback.call( root(this[i], first), i > 0 ? extra.cloneNode(true) : fragment );
			
			if ( scripts )
				jQuery.each( scripts, evalScript );
		}

		return this;
		
		function root( elem, cur ) {
			return table && jQuery.nodeName(elem, "table") && jQuery.nodeName(cur, "tr") ?
				(elem.getElementsByTagName("tbody")[0] ||
				elem.appendChild(elem.ownerDocument.createElement("tbody"))) :
				elem;
		}
	}
};

// Give the init function the jQuery prototype for later instantiation
jQuery.fn.init.prototype = jQuery.fn;

function evalScript( i, elem ) {
	if ( elem.src )
		jQuery.ajax({
			url: elem.src,
			async: false,
			dataType: "script"
		});

	else
		jQuery.globalEval( elem.text || elem.textContent || elem.innerHTML || "" );

	if ( elem.parentNode )
		elem.parentNode.removeChild( elem );
}

function now(){
	return +new Date;
}

jQuery.extend = jQuery.fn.extend = function() {
	// copy reference to target object
	var target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) )
		target = {};

	// extend jQuery itself if only one argument is passed
	if ( length == i ) {
		target = this;
		--i;
	}

	for ( ; i < length; i++ )
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null )
			// Extend the base object
			for ( var name in options ) {
				var src = target[ name ], copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy )
					continue;

				// Recurse if we're merging object values
				if ( deep && copy && typeof copy === "object" && !copy.nodeType )
					target[ name ] = jQuery.extend( deep, 
						// Never move original objects, clone them
						src || ( copy.length != null ? [ ] : { } )
					, copy );

				// Don't bring in undefined values
				else if ( copy !== undefined )
					target[ name ] = copy;

			}

	// Return the modified object
	return target;
};

// exclude the following css properties to add px
var	exclude = /z-?index|font-?weight|opacity|zoom|line-?height/i,
	// cache defaultView
	defaultView = document.defaultView || {},
	toString = Object.prototype.toString;

jQuery.extend({
	noConflict: function( deep ) {
		window.$ = _$;

		if ( deep )
			window.jQuery = _jQuery;

		return jQuery;
	},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return toString.call(obj) === "[object Function]";
	},

	isArray: function( obj ) {
		return toString.call(obj) === "[object Array]";
	},

	// check if an element is in a (or is an) XML document
	isXMLDoc: function( elem ) {
		return elem.documentElement && !elem.body ||
			elem.tagName && elem.ownerDocument && !elem.ownerDocument.body;
	},

	// Evalulates a script in a global context
	globalEval: function( data ) {
		data = jQuery.trim( data );

		if ( data ) {
			// Inspired by code by Andrea Giammarchi
			// http://webreflection.blogspot.com/2007/08/global-scope-evaluation-and-dom.html
			var head = document.getElementsByTagName("head")[0] || document.documentElement,
				script = document.createElement("script");

			script.type = "text/javascript";
			if ( jQuery.support.scriptEval )
				script.appendChild( document.createTextNode( data ) );
			else
				script.text = data;

			// Use insertBefore instead of appendChild  to circumvent an IE6 bug.
			// This arises when a base node is used (#2709).
			head.insertBefore( script, head.firstChild );
			head.removeChild( script );
		}
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toUpperCase() == name.toUpperCase();
	},

	// args is for internal usage only
	each: function( object, callback, args ) {
		var name, i = 0, length = object.length;

		if ( args ) {
			if ( length === undefined ) {
				for ( name in object )
					if ( callback.apply( object[ name ], args ) === false )
						break;
			} else
				for ( ; i < length; )
					if ( callback.apply( object[ i++ ], args ) === false )
						break;

		// A special, fast, case for the most common use of each
		} else {
			if ( length === undefined ) {
				for ( name in object )
					if ( callback.call( object[ name ], name, object[ name ] ) === false )
						break;
			} else
				for ( var value = object[0];
					i < length && callback.call( value, i, value ) !== false; value = object[++i] ){}
		}

		return object;
	},

	prop: function( elem, value, type, i, name ) {
		// Handle executable functions
		if ( jQuery.isFunction( value ) )
			value = value.call( elem, i );

		// Handle passing in a number to a CSS property
		return typeof value === "number" && type == "curCSS" && !exclude.test( name ) ?
			value + "px" :
			value;
	},

	className: {
		// internal only, use addClass("class")
		add: function( elem, classNames ) {
			jQuery.each((classNames || "").split(/\s+/), function(i, className){
				if ( elem.nodeType == 1 && !jQuery.className.has( elem.className, className ) )
					elem.className += (elem.className ? " " : "") + className;
			});
		},

		// internal only, use removeClass("class")
		remove: function( elem, classNames ) {
			if (elem.nodeType == 1)
				elem.className = classNames !== undefined ?
					jQuery.grep(elem.className.split(/\s+/), function(className){
						return !jQuery.className.has( classNames, className );
					}).join(" ") :
					"";
		},

		// internal only, use hasClass("class")
		has: function( elem, className ) {
			return jQuery.inArray( className, (elem.className || elem).toString().split(/\s+/) ) > -1;
		}
	},

	// A method for quickly swapping in/out CSS properties to get correct calculations
	swap: function( elem, options, callback ) {
		var old = {};
		// Remember the old values, and insert the new ones
		for ( var name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}

		callback.call( elem );

		// Revert the old values
		for ( var name in options )
			elem.style[ name ] = old[ name ];
	},

	css: function( elem, name, force ) {
		if ( name == "width" || name == "height" ) {
			var val, props = { position: "absolute", visibility: "hidden", display:"block" }, which = name == "width" ? [ "Left", "Right" ] : [ "Top", "Bottom" ];

			function getWH() {
				val = name == "width" ? elem.offsetWidth : elem.offsetHeight;
				var padding = 0, border = 0;
				jQuery.each( which, function() {
					padding += parseFloat(jQuery.curCSS( elem, "padding" + this, true)) || 0;
					border += parseFloat(jQuery.curCSS( elem, "border" + this + "Width", true)) || 0;
				});
				val -= Math.round(padding + border);
			}

			if ( jQuery(elem).is(":visible") )
				getWH();
			else
				jQuery.swap( elem, props, getWH );

			return Math.max(0, val);
		}

		return jQuery.curCSS( elem, name, force );
	},

	curCSS: function( elem, name, force ) {
		var ret, style = elem.style;

		// We need to handle opacity special in IE
		if ( name == "opacity" && !jQuery.support.opacity ) {
			ret = jQuery.attr( style, "opacity" );

			return ret == "" ?
				"1" :
				ret;
		}

		// Make sure we're using the right name for getting the float value
		if ( name.match( /float/i ) )
			name = styleFloat;

		if ( !force && style && style[ name ] )
			ret = style[ name ];

		else if ( defaultView.getComputedStyle ) {

			// Only "float" is needed here
			if ( name.match( /float/i ) )
				name = "float";

			name = name.replace( /([A-Z])/g, "-$1" ).toLowerCase();

			var computedStyle = defaultView.getComputedStyle( elem, null );

			if ( computedStyle )
				ret = computedStyle.getPropertyValue( name );

			// We should always get a number back from opacity
			if ( name == "opacity" && ret == "" )
				ret = "1";

		} else if ( elem.currentStyle ) {
			var camelCase = name.replace(/\-(\w)/g, function(all, letter){
				return letter.toUpperCase();
			});

			ret = elem.currentStyle[ name ] || elem.currentStyle[ camelCase ];

			// From the awesome hack by Dean Edwards
			// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

			// If we're not dealing with a regular pixel number
			// but a number that has a weird ending, we need to convert it to pixels
			if ( !/^\d+(px)?$/i.test( ret ) && /^\d/.test( ret ) ) {
				// Remember the original values
				var left = style.left, rsLeft = elem.runtimeStyle.left;

				// Put in the new values to get a computed value out
				elem.runtimeStyle.left = elem.currentStyle.left;
				style.left = ret || 0;
				ret = style.pixelLeft + "px";

				// Revert the changed values
				style.left = left;
				elem.runtimeStyle.left = rsLeft;
			}
		}

		return ret;
	},

	clean: function( elems, context, fragment ) {
		context = context || document;

		// !context.createElement fails in IE with an error but returns typeof 'object'
		if ( typeof context.createElement === "undefined" )
			context = context.ownerDocument || context[0] && context[0].ownerDocument || document;

		// If a single string is passed in and it's a single tag
		// just do a createElement and skip the rest
		if ( !fragment && elems.length === 1 && typeof elems[0] === "string" ) {
			var match = /^<(\w+)\s*\/?>$/.exec(elems[0]);
			if ( match )
				return [ context.createElement( match[1] ) ];
		}

		var ret = [], scripts = [], div = context.createElement("div");

		jQuery.each(elems, function(i, elem){
			if ( typeof elem === "number" )
				elem += '';

			if ( !elem )
				return;

			// Convert html string into DOM nodes
			if ( typeof elem === "string" ) {
				// Fix "XHTML"-style tags in all browsers
				elem = elem.replace(/(<(\w+)[^>]*?)\/>/g, function(all, front, tag){
					return tag.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i) ?
						all :
						front + "></" + tag + ">";
				});

				// Trim whitespace, otherwise indexOf won't work as expected
				var tags = jQuery.trim( elem ).toLowerCase();

				var wrap =
					// option or optgroup
					!tags.indexOf("<opt") &&
					[ 1, "<select multiple='multiple'>", "</select>" ] ||

					!tags.indexOf("<leg") &&
					[ 1, "<fieldset>", "</fieldset>" ] ||

					tags.match(/^<(thead|tbody|tfoot|colg|cap)/) &&
					[ 1, "<table>", "</table>" ] ||

					!tags.indexOf("<tr") &&
					[ 2, "<table><tbody>", "</tbody></table>" ] ||

				 	// <thead> matched above
					(!tags.indexOf("<td") || !tags.indexOf("<th")) &&
					[ 3, "<table><tbody><tr>", "</tr></tbody></table>" ] ||

					!tags.indexOf("<col") &&
					[ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ] ||

					// IE can't serialize <link> and <script> tags normally
					!jQuery.support.htmlSerialize &&
					[ 1, "div<div>", "</div>" ] ||

					[ 0, "", "" ];

				// Go to html and back, then peel off extra wrappers
				div.innerHTML = wrap[1] + elem + wrap[2];

				// Move to the right depth
				while ( wrap[0]-- )
					div = div.lastChild;

				// Remove IE's autoinserted <tbody> from table fragments
				if ( !jQuery.support.tbody ) {

					// String was a <table>, *may* have spurious <tbody>
					var tbody = !tags.indexOf("<table") && tags.indexOf("<tbody") < 0 ?
						div.firstChild && div.firstChild.childNodes :

						// String was a bare <thead> or <tfoot>
						wrap[1] == "<table>" && tags.indexOf("<tbody") < 0 ?
							div.childNodes :
							[];

					for ( var j = tbody.length - 1; j >= 0 ; --j )
						if ( jQuery.nodeName( tbody[ j ], "tbody" ) && !tbody[ j ].childNodes.length )
							tbody[ j ].parentNode.removeChild( tbody[ j ] );

					}

				// IE completely kills leading whitespace when innerHTML is used
				if ( !jQuery.support.leadingWhitespace && /^\s/.test( elem ) )
					div.insertBefore( context.createTextNode( elem.match(/^\s*/)[0] ), div.firstChild );
				
				elem = jQuery.makeArray( div.childNodes );
			}

			if ( elem.nodeType )
				ret.push( elem );
			else
				ret = jQuery.merge( ret, elem );

		});

		if ( fragment ) {
			for ( var i = 0; ret[i]; i++ ) {
				if ( jQuery.nodeName( ret[i], "script" ) && (!ret[i].type || ret[i].type.toLowerCase() === "text/javascript") ) {
					scripts.push( ret[i].parentNode ? ret[i].parentNode.removeChild( ret[i] ) : ret[i] );
				} else {
					if ( ret[i].nodeType === 1 )
						ret.splice.apply( ret, [i + 1, 0].concat(jQuery.makeArray(ret[i].getElementsByTagName("script"))) );
					fragment.appendChild( ret[i] );
				}
			}
			
			return scripts;
		}

		return ret;
	},

	attr: function( elem, name, value ) {
		// don't set attributes on text and comment nodes
		if (!elem || elem.nodeType == 3 || elem.nodeType == 8)
			return undefined;

		var notxml = !jQuery.isXMLDoc( elem ),
			// Whether we are setting (or getting)
			set = value !== undefined;

		// Try to normalize/fix the name
		name = notxml && jQuery.props[ name ] || name;

		// Only do all the following if this is a node (faster for style)
		// IE elem.getAttribute passes even for style
		if ( elem.tagName ) {

			// These attributes require special treatment
			var special = /href|src|style/.test( name );

			// Safari mis-reports the default selected property of a hidden option
			// Accessing the parent's selectedIndex property fixes it
			if ( name == "selected" && elem.parentNode )
				elem.parentNode.selectedIndex;

			// If applicable, access the attribute via the DOM 0 way
			if ( name in elem && notxml && !special ) {
				if ( set ){
					// We can't allow the type property to be changed (since it causes problems in IE)
					if ( name == "type" && jQuery.nodeName( elem, "input" ) && elem.parentNode )
						throw "type property can't be changed";

					elem[ name ] = value;
				}

				// browsers index elements by id/name on forms, give priority to attributes.
				if( jQuery.nodeName( elem, "form" ) && elem.getAttributeNode(name) )
					return elem.getAttributeNode( name ).nodeValue;

				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				if ( name == "tabIndex" ) {
					var attributeNode = elem.getAttributeNode( "tabIndex" );
					return attributeNode && attributeNode.specified
						? attributeNode.value
						: elem.nodeName.match(/^(a|area|button|input|object|select|textarea)$/i)
							? 0
							: undefined;
				}

				return elem[ name ];
			}

			if ( !jQuery.support.style && notxml &&  name == "style" )
				return jQuery.attr( elem.style, "cssText", value );

			if ( set )
				// convert the value to a string (all browsers do this but IE) see #1070
				elem.setAttribute( name, "" + value );

			var attr = !jQuery.support.hrefNormalized && notxml && special
					// Some attributes require a special call on IE
					? elem.getAttribute( name, 2 )
					: elem.getAttribute( name );

			// Non-existent attributes return null, we normalize to undefined
			return attr === null ? undefined : attr;
		}

		// elem is actually elem.style ... set the style

		// IE uses filters for opacity
		if ( !jQuery.support.opacity && name == "opacity" ) {
			if ( set ) {
				// IE has trouble with opacity if it does not have layout
				// Force it by setting the zoom level
				elem.zoom = 1;

				// Set the alpha filter to set the opacity
				elem.filter = (elem.filter || "").replace( /alpha\([^)]*\)/, "" ) +
					(parseInt( value ) + '' == "NaN" ? "" : "alpha(opacity=" + value * 100 + ")");
			}

			return elem.filter && elem.filter.indexOf("opacity=") >= 0 ?
				(parseFloat( elem.filter.match(/opacity=([^)]*)/)[1] ) / 100) + '':
				"";
		}

		name = name.replace(/-([a-z])/ig, function(all, letter){
			return letter.toUpperCase();
		});

		if ( set )
			elem[ name ] = value;

		return elem[ name ];
	},

	trim: function( text ) {
		return (text || "").replace( /^\s+|\s+$/g, "" );
	},

	makeArray: function( array ) {
		var ret = [];

		if( array != null ){
			var i = array.length;
			// The window, strings (and functions) also have 'length'
			if( i == null || typeof array === "string" || jQuery.isFunction(array) || array.setInterval )
				ret[0] = array;
			else
				while( i )
					ret[--i] = array[i];
		}

		return ret;
	},

	inArray: function( elem, array ) {
		for ( var i = 0, length = array.length; i < length; i++ )
		// Use === because on IE, window == document
			if ( array[ i ] === elem )
				return i;

		return -1;
	},

	merge: function( first, second ) {
		// We have to loop this way because IE & Opera overwrite the length
		// expando of getElementsByTagName
		var i = 0, elem, pos = first.length;
		// Also, we need to make sure that the correct elements are being returned
		// (IE returns comment nodes in a '*' query)
		if ( !jQuery.support.getAll ) {
			while ( (elem = second[ i++ ]) != null )
				if ( elem.nodeType != 8 )
					first[ pos++ ] = elem;

		} else
			while ( (elem = second[ i++ ]) != null )
				first[ pos++ ] = elem;

		return first;
	},

	unique: function( array ) {
		var ret = [], done = {};

		try {

			for ( var i = 0, length = array.length; i < length; i++ ) {
				var id = jQuery.data( array[ i ] );

				if ( !done[ id ] ) {
					done[ id ] = true;
					ret.push( array[ i ] );
				}
			}

		} catch( e ) {
			ret = array;
		}

		return ret;
	},

	grep: function( elems, callback, inv ) {
		var ret = [];

		// Go through the array, only saving the items
		// that pass the validator function
		for ( var i = 0, length = elems.length; i < length; i++ )
			if ( !inv != !callback( elems[ i ], i ) )
				ret.push( elems[ i ] );

		return ret;
	},

	map: function( elems, callback ) {
		var ret = [];

		// Go through the array, translating each of the items to their
		// new value (or values).
		for ( var i = 0, length = elems.length; i < length; i++ ) {
			var value = callback( elems[ i ], i );

			if ( value != null )
				ret[ ret.length ] = value;
		}

		return ret.concat.apply( [], ret );
	}
});

// Use of jQuery.browser is deprecated.
// It's included for backwards compatibility and plugins,
// although they should work to migrate away.

var userAgent = navigator.userAgent.toLowerCase();

// Figure out what browser is being used
jQuery.browser = {
	version: (userAgent.match( /.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/ ) || [0,'0'])[1],
	safari: /webkit/.test( userAgent ),
	opera: /opera/.test( userAgent ),
	msie: /msie/.test( userAgent ) && !/opera/.test( userAgent ),
	mozilla: /mozilla/.test( userAgent ) && !/(compatible|webkit)/.test( userAgent )
};

jQuery.each({
	parent: function(elem){return elem.parentNode;},
	parents: function(elem){return jQuery.dir(elem,"parentNode");},
	next: function(elem){return jQuery.nth(elem,2,"nextSibling");},
	prev: function(elem){return jQuery.nth(elem,2,"previousSibling");},
	nextAll: function(elem){return jQuery.dir(elem,"nextSibling");},
	prevAll: function(elem){return jQuery.dir(elem,"previousSibling");},
	siblings: function(elem){return jQuery.sibling(elem.parentNode.firstChild,elem);},
	children: function(elem){return jQuery.sibling(elem.firstChild);},
	contents: function(elem){return jQuery.nodeName(elem,"iframe")?elem.contentDocument||elem.contentWindow.document:jQuery.makeArray(elem.childNodes);}
}, function(name, fn){
	jQuery.fn[ name ] = function( selector ) {
		var ret = jQuery.map( this, fn );

		if ( selector && typeof selector == "string" )
			ret = jQuery.multiFilter( selector, ret );

		return this.pushStack( jQuery.unique( ret ), name, selector );
	};
});

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function(name, original){
	jQuery.fn[ name ] = function() {
		var args = arguments;

		return this.each(function(){
			for ( var i = 0, length = args.length; i < length; i++ )
				jQuery( args[ i ] )[ original ]( this );
		});
	};
});

jQuery.each({
	removeAttr: function( name ) {
		jQuery.attr( this, name, "" );
		if (this.nodeType == 1)
			this.removeAttribute( name );
	},

	addClass: function( classNames ) {
		jQuery.className.add( this, classNames );
	},

	removeClass: function( classNames ) {
		jQuery.className.remove( this, classNames );
	},

	toggleClass: function( classNames, state ) {
		if( typeof state !== "boolean" )
			state = !jQuery.className.has( this, classNames );
		jQuery.className[ state ? "add" : "remove" ]( this, classNames );
	},

	remove: function( selector ) {
		if ( !selector || jQuery.filter( selector, [ this ] ).length ) {
			// Prevent memory leaks
			jQuery( "*", this ).add([this]).each(function(){
				jQuery.event.remove(this);
				jQuery.removeData(this);
			});
			if (this.parentNode)
				this.parentNode.removeChild( this );
		}
	},

	empty: function() {
		// Remove element nodes and prevent memory leaks
		jQuery( ">*", this ).remove();

		// Remove any remaining nodes
		while ( this.firstChild )
			this.removeChild( this.firstChild );
	}
}, function(name, fn){
	jQuery.fn[ name ] = function(){
		return this.each( fn, arguments );
	};
});

// Helper function used by the dimensions and offset modules
function num(elem, prop) {
	return elem[0] && parseInt( jQuery.curCSS(elem[0], prop, true), 10 ) || 0;
}
var expando = "jQuery" + now(), uuid = 0, windowData = {};

jQuery.extend({
	cache: {},

	data: function( elem, name, data ) {
		elem = elem == window ?
			windowData :
			elem;

		var id = elem[ expando ];

		// Compute a unique ID for the element
		if ( !id )
			id = elem[ expando ] = ++uuid;

		// Only generate the data cache if we're
		// trying to access or manipulate it
		if ( name && !jQuery.cache[ id ] )
			jQuery.cache[ id ] = {};

		// Prevent overriding the named cache with undefined values
		if ( data !== undefined )
			jQuery.cache[ id ][ name ] = data;

		// Return the named cache data, or the ID for the element
		return name ?
			jQuery.cache[ id ][ name ] :
			id;
	},

	removeData: function( elem, name ) {
		elem = elem == window ?
			windowData :
			elem;

		var id = elem[ expando ];

		// If we want to remove a specific section of the element's data
		if ( name ) {
			if ( jQuery.cache[ id ] ) {
				// Remove the section of cache data
				delete jQuery.cache[ id ][ name ];

				// If we've removed all the data, remove the element's cache
				name = "";

				for ( name in jQuery.cache[ id ] )
					break;

				if ( !name )
					jQuery.removeData( elem );
			}

		// Otherwise, we want to remove all of the element's data
		} else {
			// Clean up the element expando
			try {
				delete elem[ expando ];
			} catch(e){
				// IE has trouble directly removing the expando
				// but it's ok with using removeAttribute
				if ( elem.removeAttribute )
					elem.removeAttribute( expando );
			}

			// Completely remove the data cache
			delete jQuery.cache[ id ];
		}
	},
	queue: function( elem, type, data ) {
		if ( elem ){
	
			type = (type || "fx") + "queue";
	
			var q = jQuery.data( elem, type );
	
			if ( !q || jQuery.isArray(data) )
				q = jQuery.data( elem, type, jQuery.makeArray(data) );
			else if( data )
				q.push( data );
	
		}
		return q;
	},

	dequeue: function( elem, type ){
		var queue = jQuery.queue( elem, type ),
			fn = queue.shift();
		
		if( !type || type === "fx" )
			fn = queue[0];
			
		if( fn !== undefined )
			fn.call(elem);
	}
});

jQuery.fn.extend({
	data: function( key, value ){
		var parts = key.split(".");
		parts[1] = parts[1] ? "." + parts[1] : "";

		if ( value === undefined ) {
			var data = this.triggerHandler("getData" + parts[1] + "!", [parts[0]]);

			if ( data === undefined && this.length )
				data = jQuery.data( this[0], key );

			return data === undefined && parts[1] ?
				this.data( parts[0] ) :
				data;
		} else
			return this.trigger("setData" + parts[1] + "!", [parts[0], value]).each(function(){
				jQuery.data( this, key, value );
			});
	},

	removeData: function( key ){
		return this.each(function(){
			jQuery.removeData( this, key );
		});
	},
	queue: function(type, data){
		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
		}

		if ( data === undefined )
			return jQuery.queue( this[0], type );

		return this.each(function(){
			var queue = jQuery.queue( this, type, data );
			
			 if( type == "fx" && queue.length == 1 )
				queue[0].call(this);
		});
	},
	dequeue: function(type){
		return this.each(function(){
			jQuery.dequeue( this, type );
		});
	}
});/*!
 * Sizzle CSS Selector Engine - v0.9.1
 *  Copyright 2009, The Dojo Foundation
 *  Released under the MIT, BSD, and GPL Licenses.
 *  More information: http://sizzlejs.com/
 */
(function(){

var chunker = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|[^[\]]+)+\]|\\.|[^ >+~,(\[]+)+|[>+~])(\s*,\s*)?/g,
	done = 0,
	toString = Object.prototype.toString;

var Sizzle = function(selector, context, results, seed) {
	results = results || [];
	context = context || document;

	if ( context.nodeType !== 1 && context.nodeType !== 9 )
		return [];
	
	if ( !selector || typeof selector !== "string" ) {
		return results;
	}

	var parts = [], m, set, checkSet, check, mode, extra, prune = true;
	
	// Reset the position of the chunker regexp (start from head)
	chunker.lastIndex = 0;
	
	while ( (m = chunker.exec(selector)) !== null ) {
		parts.push( m[1] );
		
		if ( m[2] ) {
			extra = RegExp.rightContext;
			break;
		}
	}

	if ( parts.length > 1 && Expr.match.POS.exec( selector ) ) {
		if ( parts.length === 2 && Expr.relative[ parts[0] ] ) {
			var later = "", match;

			// Position selectors must be done after the filter
			while ( (match = Expr.match.POS.exec( selector )) ) {
				later += match[0];
				selector = selector.replace( Expr.match.POS, "" );
			}

			set = Sizzle.filter( later, Sizzle( /\s$/.test(selector) ? selector + "*" : selector, context ) );
		} else {
			set = Expr.relative[ parts[0] ] ?
				[ context ] :
				Sizzle( parts.shift(), context );

			while ( parts.length ) {
				var tmpSet = [];

				selector = parts.shift();
				if ( Expr.relative[ selector ] )
					selector += parts.shift();

				for ( var i = 0, l = set.length; i < l; i++ ) {
					Sizzle( selector, set[i], tmpSet );
				}

				set = tmpSet;
			}
		}
	} else {
		var ret = seed ?
			{ expr: parts.pop(), set: makeArray(seed) } :
			Sizzle.find( parts.pop(), parts.length === 1 && context.parentNode ? context.parentNode : context );
		set = Sizzle.filter( ret.expr, ret.set );

		if ( parts.length > 0 ) {
			checkSet = makeArray(set);
		} else {
			prune = false;
		}

		while ( parts.length ) {
			var cur = parts.pop(), pop = cur;

			if ( !Expr.relative[ cur ] ) {
				cur = "";
			} else {
				pop = parts.pop();
			}

			if ( pop == null ) {
				pop = context;
			}

			Expr.relative[ cur ]( checkSet, pop, isXML(context) );
		}
	}

	if ( !checkSet ) {
		checkSet = set;
	}

	if ( !checkSet ) {
		throw "Syntax error, unrecognized expression: " + (cur || selector);
	}

	if ( toString.call(checkSet) === "[object Array]" ) {
		if ( !prune ) {
			results.push.apply( results, checkSet );
		} else if ( context.nodeType === 1 ) {
			for ( var i = 0; checkSet[i] != null; i++ ) {
				if ( checkSet[i] && (checkSet[i] === true || checkSet[i].nodeType === 1 && contains(context, checkSet[i])) ) {
					results.push( set[i] );
				}
			}
		} else {
			for ( var i = 0; checkSet[i] != null; i++ ) {
				if ( checkSet[i] && checkSet[i].nodeType === 1 ) {
					results.push( set[i] );
				}
			}
		}
	} else {
		makeArray( checkSet, results );
	}

	if ( extra ) {
		Sizzle( extra, context, results, seed );
	}

	return results;
};

Sizzle.matches = function(expr, set){
	return Sizzle(expr, null, null, set);
};

Sizzle.find = function(expr, context){
	var set, match;

	if ( !expr ) {
		return [];
	}

	for ( var i = 0, l = Expr.order.length; i < l; i++ ) {
		var type = Expr.order[i], match;
		
		if ( (match = Expr.match[ type ].exec( expr )) ) {
			var left = RegExp.leftContext;

			if ( left.substr( left.length - 1 ) !== "\\" ) {
				match[1] = (match[1] || "").replace(/\\/g, "");
				set = Expr.find[ type ]( match, context );
				if ( set != null ) {
					expr = expr.replace( Expr.match[ type ], "" );
					break;
				}
			}
		}
	}

	if ( !set ) {
		set = context.getElementsByTagName("*");
	}

	return {set: set, expr: expr};
};

Sizzle.filter = function(expr, set, inplace, not){
	var old = expr, result = [], curLoop = set, match, anyFound;

	while ( expr && set.length ) {
		for ( var type in Expr.filter ) {
			if ( (match = Expr.match[ type ].exec( expr )) != null ) {
				var filter = Expr.filter[ type ], goodArray = null, goodPos = 0, found, item;
				anyFound = false;

				if ( curLoop == result ) {
					result = [];
				}

				if ( Expr.preFilter[ type ] ) {
					match = Expr.preFilter[ type ]( match, curLoop, inplace, result, not );

					if ( !match ) {
						anyFound = found = true;
					} else if ( match === true ) {
						continue;
					} else if ( match[0] === true ) {
						goodArray = [];
						var last = null, elem;
						for ( var i = 0; (elem = curLoop[i]) !== undefined; i++ ) {
							if ( elem && last !== elem ) {
								goodArray.push( elem );
								last = elem;
							}
						}
					}
				}

				if ( match ) {
					for ( var i = 0; (item = curLoop[i]) !== undefined; i++ ) {
						if ( item ) {
							if ( goodArray && item != goodArray[goodPos] ) {
								goodPos++;
							}
	
							found = filter( item, match, goodPos, goodArray );
							var pass = not ^ !!found;

							if ( inplace && found != null ) {
								if ( pass ) {
									anyFound = true;
								} else {
									curLoop[i] = false;
								}
							} else if ( pass ) {
								result.push( item );
								anyFound = true;
							}
						}
					}
				}

				if ( found !== undefined ) {
					if ( !inplace ) {
						curLoop = result;
					}

					expr = expr.replace( Expr.match[ type ], "" );

					if ( !anyFound ) {
						return [];
					}

					break;
				}
			}
		}

		expr = expr.replace(/\s*,\s*/, "");

		// Improper expression
		if ( expr == old ) {
			if ( anyFound == null ) {
				throw "Syntax error, unrecognized expression: " + expr;
			} else {
				break;
			}
		}

		old = expr;
	}

	return curLoop;
};

var Expr = Sizzle.selectors = {
	order: [ "ID", "NAME", "TAG" ],
	match: {
		ID: /#((?:[\w\u00c0-\uFFFF_-]|\\.)+)/,
		CLASS: /\.((?:[\w\u00c0-\uFFFF_-]|\\.)+)/,
		NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF_-]|\\.)+)['"]*\]/,
		ATTR: /\[\s*((?:[\w\u00c0-\uFFFF_-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/,
		TAG: /^((?:[\w\u00c0-\uFFFF\*_-]|\\.)+)/,
		CHILD: /:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/,
		POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^-]|$)/,
		PSEUDO: /:((?:[\w\u00c0-\uFFFF_-]|\\.)+)(?:\((['"]*)((?:\([^\)]+\)|[^\2\(\)]*)+)\2\))?/
	},
	attrMap: {
		"class": "className",
		"for": "htmlFor"
	},
	attrHandle: {
		href: function(elem){
			return elem.getAttribute("href");
		}
	},
	relative: {
		"+": function(checkSet, part){
			for ( var i = 0, l = checkSet.length; i < l; i++ ) {
				var elem = checkSet[i];
				if ( elem ) {
					var cur = elem.previousSibling;
					while ( cur && cur.nodeType !== 1 ) {
						cur = cur.previousSibling;
					}
					checkSet[i] = typeof part === "string" ?
						cur || false :
						cur === part;
				}
			}

			if ( typeof part === "string" ) {
				Sizzle.filter( part, checkSet, true );
			}
		},
		">": function(checkSet, part, isXML){
			if ( typeof part === "string" && !/\W/.test(part) ) {
				part = isXML ? part : part.toUpperCase();

				for ( var i = 0, l = checkSet.length; i < l; i++ ) {
					var elem = checkSet[i];
					if ( elem ) {
						var parent = elem.parentNode;
						checkSet[i] = parent.nodeName === part ? parent : false;
					}
				}
			} else {
				for ( var i = 0, l = checkSet.length; i < l; i++ ) {
					var elem = checkSet[i];
					if ( elem ) {
						checkSet[i] = typeof part === "string" ?
							elem.parentNode :
							elem.parentNode === part;
					}
				}

				if ( typeof part === "string" ) {
					Sizzle.filter( part, checkSet, true );
				}
			}
		},
		"": function(checkSet, part, isXML){
			var doneName = "done" + (done++), checkFn = dirCheck;

			if ( !part.match(/\W/) ) {
				var nodeCheck = part = isXML ? part : part.toUpperCase();
				checkFn = dirNodeCheck;
			}

			checkFn("parentNode", part, doneName, checkSet, nodeCheck, isXML);
		},
		"~": function(checkSet, part, isXML){
			var doneName = "done" + (done++), checkFn = dirCheck;

			if ( typeof part === "string" && !part.match(/\W/) ) {
				var nodeCheck = part = isXML ? part : part.toUpperCase();
				checkFn = dirNodeCheck;
			}

			checkFn("previousSibling", part, doneName, checkSet, nodeCheck, isXML);
		}
	},
	find: {
		ID: function(match, context){
			if ( context.getElementById ) {
				var m = context.getElementById(match[1]);
				return m ? [m] : [];
			}
		},
		NAME: function(match, context){
			return context.getElementsByName ? context.getElementsByName(match[1]) : null;
		},
		TAG: function(match, context){
			return context.getElementsByTagName(match[1]);
		}
	},
	preFilter: {
		CLASS: function(match, curLoop, inplace, result, not){
			match = " " + match[1].replace(/\\/g, "") + " ";

			for ( var i = 0; curLoop[i]; i++ ) {
				if ( not ^ (" " + curLoop[i].className + " ").indexOf(match) >= 0 ) {
					if ( !inplace )
						result.push( curLoop[i] );
				} else if ( inplace ) {
					curLoop[i] = false;
				}
			}

			return false;
		},
		ID: function(match){
			return match[1].replace(/\\/g, "");
		},
		TAG: function(match, curLoop){
			for ( var i = 0; !curLoop[i]; i++ ){}
			return isXML(curLoop[i]) ? match[1] : match[1].toUpperCase();
		},
		CHILD: function(match){
			if ( match[1] == "nth" ) {
				// parse equations like 'even', 'odd', '5', '2n', '3n+2', '4n-1', '-n+6'
				var test = /(-?)(\d*)n((?:\+|-)?\d*)/.exec(
					match[2] == "even" && "2n" || match[2] == "odd" && "2n+1" ||
					!/\D/.test( match[2] ) && "0n+" + match[2] || match[2]);

				// calculate the numbers (first)n+(last) including if they are negative
				match[2] = (test[1] + (test[2] || 1)) - 0;
				match[3] = test[3] - 0;
			}

			// TODO: Move to normal caching system
			match[0] = "done" + (done++);

			return match;
		},
		ATTR: function(match){
			var name = match[1];
			
			if ( Expr.attrMap[name] ) {
				match[1] = Expr.attrMap[name];
			}

			if ( match[2] === "~=" ) {
				match[4] = " " + match[4] + " ";
			}

			return match;
		},
		PSEUDO: function(match, curLoop, inplace, result, not){
			if ( match[1] === "not" ) {
				// If we're dealing with a complex expression, or a simple one
				if ( match[3].match(chunker).length > 1 ) {
					match[3] = Sizzle(match[3], null, null, curLoop);
				} else {
					var ret = Sizzle.filter(match[3], curLoop, inplace, true ^ not);
					if ( !inplace ) {
						result.push.apply( result, ret );
					}
					return false;
				}
			} else if ( Expr.match.POS.test( match[0] ) ) {
				return true;
			}
			
			return match;
		},
		POS: function(match){
			match.unshift( true );
			return match;
		}
	},
	filters: {
		enabled: function(elem){
			return elem.disabled === false && elem.type !== "hidden";
		},
		disabled: function(elem){
			return elem.disabled === true;
		},
		checked: function(elem){
			return elem.checked === true;
		},
		selected: function(elem){
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			elem.parentNode.selectedIndex;
			return elem.selected === true;
		},
		parent: function(elem){
			return !!elem.firstChild;
		},
		empty: function(elem){
			return !elem.firstChild;
		},
		has: function(elem, i, match){
			return !!Sizzle( match[3], elem ).length;
		},
		header: function(elem){
			return /h\d/i.test( elem.nodeName );
		},
		text: function(elem){
			return "text" === elem.type;
		},
		radio: function(elem){
			return "radio" === elem.type;
		},
		checkbox: function(elem){
			return "checkbox" === elem.type;
		},
		file: function(elem){
			return "file" === elem.type;
		},
		password: function(elem){
			return "password" === elem.type;
		},
		submit: function(elem){
			return "submit" === elem.type;
		},
		image: function(elem){
			return "image" === elem.type;
		},
		reset: function(elem){
			return "reset" === elem.type;
		},
		button: function(elem){
			return "button" === elem.type || elem.nodeName.toUpperCase() === "BUTTON";
		},
		input: function(elem){
			return /input|select|textarea|button/i.test(elem.nodeName);
		}
	},
	setFilters: {
		first: function(elem, i){
			return i === 0;
		},
		last: function(elem, i, match, array){
			return i === array.length - 1;
		},
		even: function(elem, i){
			return i % 2 === 0;
		},
		odd: function(elem, i){
			return i % 2 === 1;
		},
		lt: function(elem, i, match){
			return i < match[3] - 0;
		},
		gt: function(elem, i, match){
			return i > match[3] - 0;
		},
		nth: function(elem, i, match){
			return match[3] - 0 == i;
		},
		eq: function(elem, i, match){
			return match[3] - 0 == i;
		}
	},
	filter: {
		CHILD: function(elem, match){
			var type = match[1], parent = elem.parentNode;

			var doneName = "child" + parent.childNodes.length;
			
			if ( parent && (!parent[ doneName ] || !elem.nodeIndex) ) {
				var count = 1;

				for ( var node = parent.firstChild; node; node = node.nextSibling ) {
					if ( node.nodeType == 1 ) {
						node.nodeIndex = count++;
					}
				}

				parent[ doneName ] = count - 1;
			}

			if ( type == "first" ) {
				return elem.nodeIndex == 1;
			} else if ( type == "last" ) {
				return elem.nodeIndex == parent[ doneName ];
			} else if ( type == "only" ) {
				return parent[ doneName ] == 1;
			} else if ( type == "nth" ) {
				var add = false, first = match[2], last = match[3];

				if ( first == 1 && last == 0 ) {
					return true;
				}

				if ( first == 0 ) {
					if ( elem.nodeIndex == last ) {
						add = true;
					}
				} else if ( (elem.nodeIndex - last) % first == 0 && (elem.nodeIndex - last) / first >= 0 ) {
					add = true;
				}

				return add;
			}
		},
		PSEUDO: function(elem, match, i, array){
			var name = match[1], filter = Expr.filters[ name ];

			if ( filter ) {
				return filter( elem, i, match, array );
			} else if ( name === "contains" ) {
				return (elem.textContent || elem.innerText || "").indexOf(match[3]) >= 0;
			} else if ( name === "not" ) {
				var not = match[3];

				for ( var i = 0, l = not.length; i < l; i++ ) {
					if ( not[i] === elem ) {
						return false;
					}
				}

				return true;
			}
		},
		ID: function(elem, match){
			return elem.nodeType === 1 && elem.getAttribute("id") === match;
		},
		TAG: function(elem, match){
			return (match === "*" && elem.nodeType === 1) || elem.nodeName === match;
		},
		CLASS: function(elem, match){
			return match.test( elem.className );
		},
		ATTR: function(elem, match){
			var result = Expr.attrHandle[ match[1] ] ? Expr.attrHandle[ match[1] ]( elem ) : elem[ match[1] ] || elem.getAttribute( match[1] ), value = result + "", type = match[2], check = match[4];
			return result == null ?
				false :
				type === "=" ?
				value === check :
				type === "*=" ?
				value.indexOf(check) >= 0 :
				type === "~=" ?
				(" " + value + " ").indexOf(check) >= 0 :
				!match[4] ?
				result :
				type === "!=" ?
				value != check :
				type === "^=" ?
				value.indexOf(check) === 0 :
				type === "$=" ?
				value.substr(value.length - check.length) === check :
				type === "|=" ?
				value === check || value.substr(0, check.length + 1) === check + "-" :
				false;
		},
		POS: function(elem, match, i, array){
			var name = match[2], filter = Expr.setFilters[ name ];

			if ( filter ) {
				return filter( elem, i, match, array );
			}
		}
	}
};

for ( var type in Expr.match ) {
	Expr.match[ type ] = RegExp( Expr.match[ type ].source + /(?![^\[]*\])(?![^\(]*\))/.source );
}

var makeArray = function(array, results) {
	array = Array.prototype.slice.call( array );

	if ( results ) {
		results.push.apply( results, array );
		return results;
	}
	
	return array;
};

// Perform a simple check to determine if the browser is capable of
// converting a NodeList to an array using builtin methods.
try {
	Array.prototype.slice.call( document.documentElement.childNodes );

// Provide a fallback method if it does not work
} catch(e){
	makeArray = function(array, results) {
		var ret = results || [];

		if ( toString.call(array) === "[object Array]" ) {
			Array.prototype.push.apply( ret, array );
		} else {
			if ( typeof array.length === "number" ) {
				for ( var i = 0, l = array.length; i < l; i++ ) {
					ret.push( array[i] );
				}
			} else {
				for ( var i = 0; array[i]; i++ ) {
					ret.push( array[i] );
				}
			}
		}

		return ret;
	};
}

// Check to see if the browser returns elements by name when
// querying by getElementById (and provide a workaround)
(function(){
	// We're going to inject a fake input element with a specified name
	var form = document.createElement("form"),
		id = "script" + (new Date).getTime();
	form.innerHTML = "<input name='" + id + "'/>";

	// Inject it into the root element, check its status, and remove it quickly
	var root = document.documentElement;
	root.insertBefore( form, root.firstChild );

	// The workaround has to do additional checks after a getElementById
	// Which slows things down for other browsers (hence the branching)
	if ( !!document.getElementById( id ) ) {
		Expr.find.ID = function(match, context){
			if ( context.getElementById ) {
				var m = context.getElementById(match[1]);
				return m ? m.id === match[1] || m.getAttributeNode && m.getAttributeNode("id").nodeValue === match[1] ? [m] : undefined : [];
			}
		};

		Expr.filter.ID = function(elem, match){
			var node = elem.getAttributeNode && elem.getAttributeNode("id");
			return elem.nodeType === 1 && node && node.nodeValue === match;
		};
	}

	root.removeChild( form );
})();

(function(){
	// Check to see if the browser returns only elements
	// when doing getElementsByTagName("*")

	// Create a fake element
	var div = document.createElement("div");
	div.appendChild( document.createComment("") );

	// Make sure no comments are found
	if ( div.getElementsByTagName("*").length > 0 ) {
		Expr.find.TAG = function(match, context){
			var results = context.getElementsByTagName(match[1]);

			// Filter out possible comments
			if ( match[1] === "*" ) {
				var tmp = [];

				for ( var i = 0; results[i]; i++ ) {
					if ( results[i].nodeType === 1 ) {
						tmp.push( results[i] );
					}
				}

				results = tmp;
			}

			return results;
		};
	}

	// Check to see if an attribute returns normalized href attributes
	div.innerHTML = "<a href='#'></a>";
	if ( div.firstChild.getAttribute("href") !== "#" ) {
		Expr.attrHandle.href = function(elem){
			return elem.getAttribute("href", 2);
		};
	}
})();

if ( document.querySelectorAll ) (function(){
	var oldSizzle = Sizzle;
	
	Sizzle = function(query, context, extra, seed){
		context = context || document;

		if ( !seed && context.nodeType === 9 ) {
			try {
				return makeArray( context.querySelectorAll(query), extra );
			} catch(e){}
		}
		
		return oldSizzle(query, context, extra, seed);
	};

	Sizzle.find = oldSizzle.find;
	Sizzle.filter = oldSizzle.filter;
	Sizzle.selectors = oldSizzle.selectors;
	Sizzle.matches = oldSizzle.matches;
})();

if ( document.documentElement.getElementsByClassName ) {
	Expr.order.splice(1, 0, "CLASS");
	Expr.find.CLASS = function(match, context) {
		return context.getElementsByClassName(match[1]);
	};
}

function dirNodeCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
	for ( var i = 0, l = checkSet.length; i < l; i++ ) {
		var elem = checkSet[i];
		if ( elem ) {
			elem = elem[dir];
			var match = false;

			while ( elem && elem.nodeType ) {
				var done = elem[doneName];
				if ( done ) {
					match = checkSet[ done ];
					break;
				}

				if ( elem.nodeType === 1 && !isXML )
					elem[doneName] = i;

				if ( elem.nodeName === cur ) {
					match = elem;
					break;
				}

				elem = elem[dir];
			}

			checkSet[i] = match;
		}
	}
}

function dirCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
	for ( var i = 0, l = checkSet.length; i < l; i++ ) {
		var elem = checkSet[i];
		if ( elem ) {
			elem = elem[dir];
			var match = false;

			while ( elem && elem.nodeType ) {
				if ( elem[doneName] ) {
					match = checkSet[ elem[doneName] ];
					break;
				}

				if ( elem.nodeType === 1 ) {
					if ( !isXML )
						elem[doneName] = i;

					if ( typeof cur !== "string" ) {
						if ( elem === cur ) {
							match = true;
							break;
						}

					} else if ( Sizzle.filter( cur, [elem] ).length > 0 ) {
						match = elem;
						break;
					}
				}

				elem = elem[dir];
			}

			checkSet[i] = match;
		}
	}
}

var contains = document.compareDocumentPosition ?  function(a, b){
	return a.compareDocumentPosition(b) & 16;
} : function(a, b){
	return a !== b && (a.contains ? a.contains(b) : true);
};

var isXML = function(elem){
	return elem.documentElement && !elem.body ||
		elem.tagName && elem.ownerDocument && !elem.ownerDocument.body;
};

// EXPOSE
jQuery.find = Sizzle;
jQuery.filter = Sizzle.filter;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.filters;

Sizzle.selectors.filters.hidden = function(elem){
	return "hidden" === elem.type ||
		jQuery.css(elem, "display") === "none" ||
		jQuery.css(elem, "visibility") === "hidden";
};

Sizzle.selectors.filters.visible = function(elem){
	return "hidden" !== elem.type &&
		jQuery.css(elem, "display") !== "none" &&
		jQuery.css(elem, "visibility") !== "hidden";
};

Sizzle.selectors.filters.animated = function(elem){
	return jQuery.grep(jQuery.timers, function(fn){
		return elem === fn.elem;
	}).length;
};

jQuery.multiFilter = function( expr, elems, not ) {
	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	return Sizzle.matches(expr, elems);
};

jQuery.dir = function( elem, dir ){
	var matched = [], cur = elem[dir];
	while ( cur && cur != document ) {
		if ( cur.nodeType == 1 )
			matched.push( cur );
		cur = cur[dir];
	}
	return matched;
};

jQuery.nth = function(cur, result, dir, elem){
	result = result || 1;
	var num = 0;

	for ( ; cur; cur = cur[dir] )
		if ( cur.nodeType == 1 && ++num == result )
			break;

	return cur;
};

jQuery.sibling = function(n, elem){
	var r = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType == 1 && n != elem )
			r.push( n );
	}

	return r;
};

return;

window.Sizzle = Sizzle;

})();
/*
 * A number of helper functions used for managing events.
 * Many of the ideas behind this code originated from
 * Dean Edwards' addEvent library.
 */
jQuery.event = {

	// Bind an event to an element
	// Original by Dean Edwards
	add: function(elem, types, handler, data) {
		if ( elem.nodeType == 3 || elem.nodeType == 8 )
			return;

		// For whatever reason, IE has trouble passing the window object
		// around, causing it to be cloned in the process
		if ( elem.setInterval && elem != window )
			elem = window;

		// Make sure that the function being executed has a unique ID
		if ( !handler.guid )
			handler.guid = this.guid++;

		// if data is passed, bind to handler
		if ( data !== undefined ) {
			// Create temporary function pointer to original handler
			var fn = handler;

			// Create unique handler function, wrapped around original handler
			handler = this.proxy( fn );

			// Store data in unique handler
			handler.data = data;
		}

		// Init the element's event structure
		var events = jQuery.data(elem, "events") || jQuery.data(elem, "events", {}),
			handle = jQuery.data(elem, "handle") || jQuery.data(elem, "handle", function(){
				// Handle the second event of a trigger and when
				// an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && !jQuery.event.triggered ?
					jQuery.event.handle.apply(arguments.callee.elem, arguments) :
					undefined;
			});
		// Add elem as a property of the handle function
		// This is to prevent a memory leak with non-native
		// event in IE.
		handle.elem = elem;

		// Handle multiple events separated by a space
		// jQuery(...).bind("mouseover mouseout", fn);
		jQuery.each(types.split(/\s+/), function(index, type) {
			// Namespaced event handlers
			var namespaces = type.split(".");
			type = namespaces.shift();
			handler.type = namespaces.slice().sort().join(".");

			// Get the current list of functions bound to this event
			var handlers = events[type];
			
			if ( jQuery.event.specialAll[type] )
				jQuery.event.specialAll[type].setup.call(elem, data, namespaces);

			// Init the event handler queue
			if (!handlers) {
				handlers = events[type] = {};

				// Check for a special event handler
				// Only use addEventListener/attachEvent if the special
				// events handler returns false
				if ( !jQuery.event.special[type] || jQuery.event.special[type].setup.call(elem, data, namespaces) === false ) {
					// Bind the global event handler to the element
					if (elem.addEventListener)
						elem.addEventListener(type, handle, false);
					else if (elem.attachEvent)
						elem.attachEvent("on" + type, handle);
				}
			}

			// Add the function to the element's handler list
			handlers[handler.guid] = handler;

			// Keep track of which events have been used, for global triggering
			jQuery.event.global[type] = true;
		});

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	guid: 1,
	global: {},

	// Detach an event or set of events from an element
	remove: function(elem, types, handler) {
		// don't do events on text and comment nodes
		if ( elem.nodeType == 3 || elem.nodeType == 8 )
			return;

		var events = jQuery.data(elem, "events"), ret, index;

		if ( events ) {
			// Unbind all events for the element
			if ( types === undefined || (typeof types === "string" && types.charAt(0) == ".") )
				for ( var type in events )
					this.remove( elem, type + (types || "") );
			else {
				// types is actually an event object here
				if ( types.type ) {
					handler = types.handler;
					types = types.type;
				}

				// Handle multiple events seperated by a space
				// jQuery(...).unbind("mouseover mouseout", fn);
				jQuery.each(types.split(/\s+/), function(index, type){
					// Namespaced event handlers
					var namespaces = type.split(".");
					type = namespaces.shift();
					var namespace = RegExp("(^|\\.)" + namespaces.slice().sort().join(".*\\.") + "(\\.|$)");

					if ( events[type] ) {
						// remove the given handler for the given type
						if ( handler )
							delete events[type][handler.guid];

						// remove all handlers for the given type
						else
							for ( var handle in events[type] )
								// Handle the removal of namespaced events
								if ( namespace.test(events[type][handle].type) )
									delete events[type][handle];
									
						if ( jQuery.event.specialAll[type] )
							jQuery.event.specialAll[type].teardown.call(elem, namespaces);

						// remove generic event handler if no more handlers exist
						for ( ret in events[type] ) break;
						if ( !ret ) {
							if ( !jQuery.event.special[type] || jQuery.event.special[type].teardown.call(elem, namespaces) === false ) {
								if (elem.removeEventListener)
									elem.removeEventListener(type, jQuery.data(elem, "handle"), false);
								else if (elem.detachEvent)
									elem.detachEvent("on" + type, jQuery.data(elem, "handle"));
							}
							ret = null;
							delete events[type];
						}
					}
				});
			}

			// Remove the expando if it's no longer used
			for ( ret in events ) break;
			if ( !ret ) {
				var handle = jQuery.data( elem, "handle" );
				if ( handle ) handle.elem = null;
				jQuery.removeData( elem, "events" );
				jQuery.removeData( elem, "handle" );
			}
		}
	},

	// bubbling is internal
	trigger: function( event, data, elem, bubbling ) {
		// Event object or event type
		var type = event.type || event;

		if( !bubbling ){
			event = typeof event === "object" ?
				// jQuery.Event object
				event[expando] ? event :
				// Object literal
				jQuery.extend( jQuery.Event(type), event ) :
				// Just the event type (string)
				jQuery.Event(type);

			if ( type.indexOf("!") >= 0 ) {
				event.type = type = type.slice(0, -1);
				event.exclusive = true;
			}

			// Handle a global trigger
			if ( !elem ) {
				// Don't bubble custom events when global (to avoid too much overhead)
				event.stopPropagation();
				// Only trigger if we've ever bound an event for it
				if ( this.global[type] )
					jQuery.each( jQuery.cache, function(){
						if ( this.events && this.events[type] )
							jQuery.event.trigger( event, data, this.handle.elem );
					});
			}

			// Handle triggering a single element

			// don't do events on text and comment nodes
			if ( !elem || elem.nodeType == 3 || elem.nodeType == 8 )
				return undefined;
			
			// Clean up in case it is reused
			event.result = undefined;
			event.target = elem;
			
			// Clone the incoming data, if any
			data = jQuery.makeArray(data);
			data.unshift( event );
		}

		event.currentTarget = elem;

		// Trigger the event, it is assumed that "handle" is a function
		var handle = jQuery.data(elem, "handle");
		if ( handle )
			handle.apply( elem, data );

		// Handle triggering native .onfoo handlers (and on links since we don't call .click() for links)
		if ( (!elem[type] || (jQuery.nodeName(elem, 'a') && type == "click")) && elem["on"+type] && elem["on"+type].apply( elem, data ) === false )
			event.result = false;

		// Trigger the native events (except for clicks on links)
		if ( !bubbling && elem[type] && !event.isDefaultPrevented() && !(jQuery.nodeName(elem, 'a') && type == "click") ) {
			this.triggered = true;
			try {
				elem[ type ]();
			// prevent IE from throwing an error for some hidden elements
			} catch (e) {}
		}

		this.triggered = false;

		if ( !event.isPropagationStopped() ) {
			var parent = elem.parentNode || elem.ownerDocument;
			if ( parent )
				jQuery.event.trigger(event, data, parent, true);
		}
	},

	handle: function(event) {
		// returned undefined or false
		var all, handlers;

		event = arguments[0] = jQuery.event.fix( event || window.event );

		// Namespaced event handlers
		var namespaces = event.type.split(".");
		event.type = namespaces.shift();

		// Cache this now, all = true means, any handler
		all = !namespaces.length && !event.exclusive;
		
		var namespace = RegExp("(^|\\.)" + namespaces.slice().sort().join(".*\\.") + "(\\.|$)");

		handlers = ( jQuery.data(this, "events") || {} )[event.type];

		for ( var j in handlers ) {
			var handler = handlers[j];

			// Filter the functions by class
			if ( all || namespace.test(handler.type) ) {
				// Pass in a reference to the handler function itself
				// So that we can later remove it
				event.handler = handler;
				event.data = handler.data;

				var ret = handler.apply(this, arguments);

				if( ret !== undefined ){
					event.result = ret;
					if ( ret === false ) {
						event.preventDefault();
						event.stopPropagation();
					}
				}

				if( event.isImmediatePropagationStopped() )
					break;

			}
		}
	},

	props: "altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode metaKey newValue originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),

	fix: function(event) {
		if ( event[expando] )
			return event;

		// store a copy of the original event object
		// and "clone" to set read-only properties
		var originalEvent = event;
		event = jQuery.Event( originalEvent );

		for ( var i = this.props.length, prop; i; ){
			prop = this.props[ --i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Fix target property, if necessary
		if ( !event.target )
			event.target = event.srcElement || document; // Fixes #1925 where srcElement might not be defined either

		// check if target is a textnode (safari)
		if ( event.target.nodeType == 3 )
			event.target = event.target.parentNode;

		// Add relatedTarget, if necessary
		if ( !event.relatedTarget && event.fromElement )
			event.relatedTarget = event.fromElement == event.target ? event.toElement : event.fromElement;

		// Calculate pageX/Y if missing and clientX/Y available
		if ( event.pageX == null && event.clientX != null ) {
			var doc = document.documentElement, body = document.body;
			event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc.clientLeft || 0);
			event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc.clientTop || 0);
		}

		// Add which for key events
		if ( !event.which && ((event.charCode || event.charCode === 0) ? event.charCode : event.keyCode) )
			event.which = event.charCode || event.keyCode;

		// Add metaKey to non-Mac browsers (use ctrl for PC's and Meta for Macs)
		if ( !event.metaKey && event.ctrlKey )
			event.metaKey = event.ctrlKey;

		// Add which for click: 1 == left; 2 == middle; 3 == right
		// Note: button is not normalized, so don't use it
		if ( !event.which && event.button )
			event.which = (event.button & 1 ? 1 : ( event.button & 2 ? 3 : ( event.button & 4 ? 2 : 0 ) ));

		return event;
	},

	proxy: function( fn, proxy ){
		proxy = proxy || function(){ return fn.apply(this, arguments); };
		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || proxy.guid || this.guid++;
		// So proxy can be declared as an argument
		return proxy;
	},

	special: {
		ready: {
			// Make sure the ready event is setup
			setup: bindReady,
			teardown: function() {}
		}
	},
	
	specialAll: {
		live: {
			setup: function( selector, namespaces ){
				jQuery.event.add( this, namespaces[0], liveHandler );
			},
			teardown:  function( namespaces ){
				if ( namespaces.length ) {
					var remove = 0, name = RegExp("(^|\\.)" + namespaces[0] + "(\\.|$)");
					
					jQuery.each( (jQuery.data(this, "events").live || {}), function(){
						if ( name.test(this.type) )
							remove++;
					});
					
					if ( remove < 1 )
						jQuery.event.remove( this, namespaces[0], liveHandler );
				}
			}
		}
	}
};

jQuery.Event = function( src ){
	// Allow instantiation without the 'new' keyword
	if( !this.preventDefault )
		return new jQuery.Event(src);
	
	// Event object
	if( src && src.type ){
		this.originalEvent = src;
		this.type = src.type;
		this.timeStamp = src.timeStamp;
	// Event type
	}else
		this.type = src;

	if( !this.timeStamp )
		this.timeStamp = now();
	
	// Mark it as fixed
	this[expando] = true;
};

function returnFalse(){
	return false;
}
function returnTrue(){
	return true;
}

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	preventDefault: function() {
		this.isDefaultPrevented = returnTrue;

		var e = this.originalEvent;
		if( !e )
			return;
		// if preventDefault exists run it on the original event
		if (e.preventDefault)
			e.preventDefault();
		// otherwise set the returnValue property of the original event to false (IE)
		e.returnValue = false;
	},
	stopPropagation: function() {
		this.isPropagationStopped = returnTrue;

		var e = this.originalEvent;
		if( !e )
			return;
		// if stopPropagation exists run it on the original event
		if (e.stopPropagation)
			e.stopPropagation();
		// otherwise set the cancelBubble property of the original event to true (IE)
		e.cancelBubble = true;
	},
	stopImmediatePropagation:function(){
		this.isImmediatePropagationStopped = returnTrue;
		this.stopPropagation();
	},
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse
};
// Checks if an event happened on an element within another element
// Used in jQuery.event.special.mouseenter and mouseleave handlers
var withinElement = function(event) {
	// Check if mouse(over|out) are still within the same parent element
	var parent = event.relatedTarget;
	// Traverse up the tree
	while ( parent && parent != this )
		try { parent = parent.parentNode; }
		catch(e) { parent = this; }
	
	if( parent != this ){
		// set the correct event type
		event.type = event.data;
		// handle event if we actually just moused on to a non sub-element
		jQuery.event.handle.apply( this, arguments );
	}
};
	
jQuery.each({ 
	mouseover: 'mouseenter', 
	mouseout: 'mouseleave'
}, function( orig, fix ){
	jQuery.event.special[ fix ] = {
		setup: function(){
			jQuery.event.add( this, orig, withinElement, fix );
		},
		teardown: function(){
			jQuery.event.remove( this, orig, withinElement );
		}
	};			   
});

jQuery.fn.extend({
	bind: function( type, data, fn ) {
		return type == "unload" ? this.one(type, data, fn) : this.each(function(){
			jQuery.event.add( this, type, fn || data, fn && data );
		});
	},

	one: function( type, data, fn ) {
		var one = jQuery.event.proxy( fn || data, function(event) {
			jQuery(this).unbind(event, one);
			return (fn || data).apply( this, arguments );
		});
		return this.each(function(){
			jQuery.event.add( this, type, one, fn && data);
		});
	},

	unbind: function( type, fn ) {
		return this.each(function(){
			jQuery.event.remove( this, type, fn );
		});
	},

	trigger: function( type, data ) {
		return this.each(function(){
			jQuery.event.trigger( type, data, this );
		});
	},

	triggerHandler: function( type, data ) {
		if( this[0] ){
			var event = jQuery.Event(type);
			event.preventDefault();
			event.stopPropagation();
			jQuery.event.trigger( event, data, this[0] );
			return event.result;
		}		
	},

	toggle: function( fn ) {
		// Save reference to arguments for access in closure
		var args = arguments, i = 1;

		// link all the functions, so any of them can unbind this click handler
		while( i < args.length )
			jQuery.event.proxy( fn, args[i++] );

		return this.click( jQuery.event.proxy( fn, function(event) {
			// Figure out which function to execute
			this.lastToggle = ( this.lastToggle || 0 ) % i;

			// Make sure that clicks stop
			event.preventDefault();

			// and execute the function
			return args[ this.lastToggle++ ].apply( this, arguments ) || false;
		}));
	},

	hover: function(fnOver, fnOut) {
		return this.mouseenter(fnOver).mouseleave(fnOut);
	},

	ready: function(fn) {
		// Attach the listeners
		bindReady();

		// If the DOM is already ready
		if ( jQuery.isReady )
			// Execute the function immediately
			fn.call( document, jQuery );

		// Otherwise, remember the function for later
		else
			// Add the function to the wait list
			jQuery.readyList.push( fn );

		return this;
	},
	
	live: function( type, fn ){
		var proxy = jQuery.event.proxy( fn );
		proxy.guid += this.selector + type;

		jQuery(document).bind( liveConvert(type, this.selector), this.selector, proxy );

		return this;
	},
	
	die: function( type, fn ){
		jQuery(document).unbind( liveConvert(type, this.selector), fn ? { guid: fn.guid + this.selector + type } : null );
		return this;
	}
});

function liveHandler( event ){
	var check = RegExp("(^|\\.)" + event.type + "(\\.|$)"),
		stop = true,
		elems = [];

	jQuery.each(jQuery.data(this, "events").live || [], function(i, fn){
		if ( check.test(fn.type) ) {
			var elem = jQuery(event.target).closest(fn.data)[0];
			if ( elem )
				elems.push({ elem: elem, fn: fn });
		}
	});

	jQuery.each(elems, function(){
		if ( !event.isImmediatePropagationStopped() &&
			this.fn.call(this.elem, event, this.fn.data) === false )
				stop = false;
	});

	return stop;
}

function liveConvert(type, selector){
	return ["live", type, selector.replace(/\./g, "`").replace(/ /g, "|")].join(".");
}

jQuery.extend({
	isReady: false,
	readyList: [],
	// Handle when the DOM is ready
	ready: function() {
		// Make sure that the DOM is not already loaded
		if ( !jQuery.isReady ) {
			// Remember that the DOM is ready
			jQuery.isReady = true;

			// If there are functions bound, to execute
			if ( jQuery.readyList ) {
				// Execute all of them
				jQuery.each( jQuery.readyList, function(){
					this.call( document, jQuery );
				});

				// Reset the list of functions
				jQuery.readyList = null;
			}

			// Trigger any bound ready events
			jQuery(document).triggerHandler("ready");
		}
	}
});

var readyBound = false;

function bindReady(){
	if ( readyBound ) return;
	readyBound = true;

	// Mozilla, Opera and webkit nightlies currently support this event
	if ( document.addEventListener ) {
		// Use the handy event callback
		document.addEventListener( "DOMContentLoaded", function(){
			document.removeEventListener( "DOMContentLoaded", arguments.callee, false );
			jQuery.ready();
		}, false );

	// If IE event model is used
	} else if ( document.attachEvent ) {
		// ensure firing before onload,
		// maybe late but safe also for iframes
		document.attachEvent("onreadystatechange", function(){
			if ( document.readyState === "complete" ) {
				document.detachEvent( "onreadystatechange", arguments.callee );
				jQuery.ready();
			}
		});

		// If IE and not an iframe
		// continually check to see if the document is ready
		if ( document.documentElement.doScroll && !window.frameElement ) (function(){
			if ( jQuery.isReady ) return;

			try {
				// If IE is used, use the trick by Diego Perini
				// http://javascript.nwbox.com/IEContentLoaded/
				document.documentElement.doScroll("left");
			} catch( error ) {
				setTimeout( arguments.callee, 0 );
				return;
			}

			// and execute any waiting functions
			jQuery.ready();
		})();
	}

	// A fallback to window.onload, that will always work
	jQuery.event.add( window, "load", jQuery.ready );
}

jQuery.each( ("blur,focus,load,resize,scroll,unload,click,dblclick," +
	"mousedown,mouseup,mousemove,mouseover,mouseout,mouseenter,mouseleave," +
	"change,select,submit,keydown,keypress,keyup,error").split(","), function(i, name){

	// Handle event binding
	jQuery.fn[name] = function(fn){
		return fn ? this.bind(name, fn) : this.trigger(name);
	};
});

// Prevent memory leaks in IE
// And prevent errors on refresh with events like mouseover in other browsers
// Window isn't included so as not to unbind existing unload events
jQuery( window ).bind( 'unload', function(){ 
	for ( var id in jQuery.cache )
		// Skip the window
		if ( id != 1 && jQuery.cache[ id ].handle )
			jQuery.event.remove( jQuery.cache[ id ].handle.elem );
}); 
(function(){

	jQuery.support = {};

	var root = document.documentElement,
		script = document.createElement("script"),
		div = document.createElement("div"),
		id = "script" + (new Date).getTime();

	div.style.display = "none";
	div.innerHTML = '   <link/><table></table><a href="/a" style="color:red;float:left;opacity:.5;">a</a><select><option>text</option></select><object><param/></object>';

	var all = div.getElementsByTagName("*"),
		a = div.getElementsByTagName("a")[0];

	// Can't get basic test support
	if ( !all || !all.length || !a ) {
		return;
	}

	jQuery.support = {
		// IE strips leading whitespace when .innerHTML is used
		leadingWhitespace: div.firstChild.nodeType == 3,
		
		// Make sure that tbody elements aren't automatically inserted
		// IE will insert them into empty tables
		tbody: !div.getElementsByTagName("tbody").length,
		
		// Make sure that you can get all elements in an <object> element
		// IE 7 always returns no results
		objectAll: !!div.getElementsByTagName("object")[0]
			.getElementsByTagName("*").length,
		
		// Make sure that link elements get serialized correctly by innerHTML
		// This requires a wrapper element in IE
		htmlSerialize: !!div.getElementsByTagName("link").length,
		
		// Get the style information from getAttribute
		// (IE uses .cssText insted)
		style: /red/.test( a.getAttribute("style") ),
		
		// Make sure that URLs aren't manipulated
		// (IE normalizes it by default)
		hrefNormalized: a.getAttribute("href") === "/a",
		
		// Make sure that element opacity exists
		// (IE uses filter instead)
		opacity: a.style.opacity === "0.5",
		
		// Verify style float existence
		// (IE uses styleFloat instead of cssFloat)
		cssFloat: !!a.style.cssFloat,

		// Will be defined later
		scriptEval: false,
		noCloneEvent: true,
		boxModel: null
	};
	
	script.type = "text/javascript";
	try {
		script.appendChild( document.createTextNode( "window." + id + "=1;" ) );
	} catch(e){}

	root.insertBefore( script, root.firstChild );
	
	// Make sure that the execution of code works by injecting a script
	// tag with appendChild/createTextNode
	// (IE doesn't support this, fails, and uses .text instead)
	if ( window[ id ] ) {
		jQuery.support.scriptEval = true;
		delete window[ id ];
	}

	root.removeChild( script );

	if ( div.attachEvent && div.fireEvent ) {
		div.attachEvent("onclick", function(){
			// Cloning a node shouldn't copy over any
			// bound event handlers (IE does this)
			jQuery.support.noCloneEvent = false;
			div.detachEvent("onclick", arguments.callee);
		});
		div.cloneNode(true).fireEvent("onclick");
	}

	// Figure out if the W3C box model works as expected
	// document.body must exist before we can do this
	jQuery(function(){
		var div = document.createElement("div");
		div.style.width = "1px";
		div.style.paddingLeft = "1px";

		document.body.appendChild( div );
		jQuery.boxModel = jQuery.support.boxModel = div.offsetWidth === 2;
		document.body.removeChild( div );
	});
})();

var styleFloat = jQuery.support.cssFloat ? "cssFloat" : "styleFloat";

jQuery.props = {
	"for": "htmlFor",
	"class": "className",
	"float": styleFloat,
	cssFloat: styleFloat,
	styleFloat: styleFloat,
	readonly: "readOnly",
	maxlength: "maxLength",
	cellspacing: "cellSpacing",
	rowspan: "rowSpan",
	tabindex: "tabIndex"
};
jQuery.fn.extend({
	// Keep a copy of the old load
	_load: jQuery.fn.load,

	load: function( url, params, callback ) {
		if ( typeof url !== "string" )
			return this._load( url );

		var off = url.indexOf(" ");
		if ( off >= 0 ) {
			var selector = url.slice(off, url.length);
			url = url.slice(0, off);
		}

		// Default to a GET request
		var type = "GET";

		// If the second parameter was provided
		if ( params )
			// If it's a function
			if ( jQuery.isFunction( params ) ) {
				// We assume that it's the callback
				callback = params;
				params = null;

			// Otherwise, build a param string
			} else if( typeof params === "object" ) {
				params = jQuery.param( params );
				type = "POST";
			}

		var self = this;

		// Request the remote document
		jQuery.ajax({
			url: url,
			type: type,
			dataType: "html",
			data: params,
			complete: function(res, status){
				// If successful, inject the HTML into all the matched elements
				if ( status == "success" || status == "notmodified" )
					// See if a selector was specified
					self.html( selector ?
						// Create a dummy div to hold the results
						jQuery("<div/>")
							// inject the contents of the document in, removing the scripts
							// to avoid any 'Permission Denied' errors in IE
							.append(res.responseText.replace(/<script(.|\s)*?\/script>/g, ""))

							// Locate the specified elements
							.find(selector) :

						// If not, just inject the full result
						res.responseText );

				if( callback )
					self.each( callback, [res.responseText, status, res] );
			}
		});
		return this;
	},

	serialize: function() {
		return jQuery.param(this.serializeArray());
	},
	serializeArray: function() {
		return this.map(function(){
			return this.elements ? jQuery.makeArray(this.elements) : this;
		})
		.filter(function(){
			return this.name && !this.disabled &&
				(this.checked || /select|textarea/i.test(this.nodeName) ||
					/text|hidden|password/i.test(this.type));
		})
		.map(function(i, elem){
			var val = jQuery(this).val();
			return val == null ? null :
				jQuery.isArray(val) ?
					jQuery.map( val, function(val, i){
						return {name: elem.name, value: val};
					}) :
					{name: elem.name, value: val};
		}).get();
	}
});

// Attach a bunch of functions for handling common AJAX events
jQuery.each( "ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend".split(","), function(i,o){
	jQuery.fn[o] = function(f){
		return this.bind(o, f);
	};
});

var jsc = now();

jQuery.extend({
  
	get: function( url, data, callback, type ) {
		// shift arguments if data argument was ommited
		if ( jQuery.isFunction( data ) ) {
			callback = data;
			data = null;
		}

		return jQuery.ajax({
			type: "GET",
			url: url,
			data: data,
			success: callback,
			dataType: type
		});
	},

	getScript: function( url, callback ) {
		return jQuery.get(url, null, callback, "script");
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get(url, data, callback, "json");
	},

	post: function( url, data, callback, type ) {
		if ( jQuery.isFunction( data ) ) {
			callback = data;
			data = {};
		}

		return jQuery.ajax({
			type: "POST",
			url: url,
			data: data,
			success: callback,
			dataType: type
		});
	},

	ajaxSetup: function( settings ) {
		jQuery.extend( jQuery.ajaxSettings, settings );
	},

	ajaxSettings: {
		url: location.href,
		global: true,
		type: "GET",
		contentType: "application/x-www-form-urlencoded",
		processData: true,
		async: true,
		/*
		timeout: 0,
		data: null,
		username: null,
		password: null,
		*/
		// Create the request object; Microsoft failed to properly
		// implement the XMLHttpRequest in IE7, so we use the ActiveXObject when it is available
		// This function can be overriden by calling jQuery.ajaxSetup
		xhr:function(){
			return window.ActiveXObject ? new ActiveXObject("Microsoft.XMLHTTP") : new XMLHttpRequest();
		},
		accepts: {
			xml: "application/xml, text/xml",
			html: "text/html",
			script: "text/javascript, application/javascript",
			json: "application/json, text/javascript",
			text: "text/plain",
			_default: "*/*"
		}
	},

	// Last-Modified header cache for next request
	lastModified: {},

	ajax: function( s ) {
		// Extend the settings, but re-extend 's' so that it can be
		// checked again later (in the test suite, specifically)
		s = jQuery.extend(true, s, jQuery.extend(true, {}, jQuery.ajaxSettings, s));

		var jsonp, jsre = /=\?(&|$)/g, status, data,
			type = s.type.toUpperCase();

		// convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" )
			s.data = jQuery.param(s.data);

		// Handle JSONP Parameter Callbacks
		if ( s.dataType == "jsonp" ) {
			if ( type == "GET" ) {
				if ( !s.url.match(jsre) )
					s.url += (s.url.match(/\?/) ? "&" : "?") + (s.jsonp || "callback") + "=?";
			} else if ( !s.data || !s.data.match(jsre) )
				s.data = (s.data ? s.data + "&" : "") + (s.jsonp || "callback") + "=?";
			s.dataType = "json";
		}

		// Build temporary JSONP function
		if ( s.dataType == "json" && (s.data && s.data.match(jsre) || s.url.match(jsre)) ) {
			jsonp = "jsonp" + jsc++;

			// Replace the =? sequence both in the query string and the data
			if ( s.data )
				s.data = (s.data + "").replace(jsre, "=" + jsonp + "$1");
			s.url = s.url.replace(jsre, "=" + jsonp + "$1");

			// We need to make sure
			// that a JSONP style response is executed properly
			s.dataType = "script";

			// Handle JSONP-style loading
			window[ jsonp ] = function(tmp){
				data = tmp;
				success();
				complete();
				// Garbage collect
				window[ jsonp ] = undefined;
				try{ delete window[ jsonp ]; } catch(e){}
				if ( head )
					head.removeChild( script );
			};
		}

		if ( s.dataType == "script" && s.cache == null )
			s.cache = false;

		if ( s.cache === false && type == "GET" ) {
			var ts = now();
			// try replacing _= if it is there
			var ret = s.url.replace(/(\?|&)_=.*?(&|$)/, "$1_=" + ts + "$2");
			// if nothing was replaced, add timestamp to the end
			s.url = ret + ((ret == s.url) ? (s.url.match(/\?/) ? "&" : "?") + "_=" + ts : "");
		}

		// If data is available, append data to url for get requests
		if ( s.data && type == "GET" ) {
			s.url += (s.url.match(/\?/) ? "&" : "?") + s.data;

			// IE likes to send both get and post data, prevent this
			s.data = null;
		}

		// Watch for a new set of requests
		if ( s.global && ! jQuery.active++ )
			jQuery.event.trigger( "ajaxStart" );

		// Matches an absolute URL, and saves the domain
		var parts = /^(\w+:)?\/\/([^\/?#]+)/.exec( s.url );

		// If we're requesting a remote document
		// and trying to load JSON or Script with a GET
		if ( s.dataType == "script" && type == "GET" && parts
			&& ( parts[1] && parts[1] != location.protocol || parts[2] != location.host )){

			var head = document.getElementsByTagName("head")[0];
			var script = document.createElement("script");
			script.src = s.url;
			if (s.scriptCharset)
				script.charset = s.scriptCharset;

			// Handle Script loading
			if ( !jsonp ) {
				var done = false;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function(){
					if ( !done && (!this.readyState ||
							this.readyState == "loaded" || this.readyState == "complete") ) {
						done = true;
						success();
						complete();
						head.removeChild( script );
					}
				};
			}

			head.appendChild(script);

			// We handle everything using the script element injection
			return undefined;
		}

		var requestDone = false;

		// Create the request object
		var xhr = s.xhr();

		// Open the socket
		// Passing null username, generates a login popup on Opera (#2865)
		if( s.username )
			xhr.open(type, s.url, s.async, s.username, s.password);
		else
			xhr.open(type, s.url, s.async);

		// Need an extra try/catch for cross domain requests in Firefox 3
		try {
			// Set the correct header, if data is being sent
			if ( s.data )
				xhr.setRequestHeader("Content-Type", s.contentType);

			// Set the If-Modified-Since header, if ifModified mode.
			if ( s.ifModified )
				xhr.setRequestHeader("If-Modified-Since",
					jQuery.lastModified[s.url] || "Thu, 01 Jan 1970 00:00:00 GMT" );

			// Set header so the called script knows that it's an XMLHttpRequest
			xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");

			// Set the Accepts header for the server, depending on the dataType
			xhr.setRequestHeader("Accept", s.dataType && s.accepts[ s.dataType ] ?
				s.accepts[ s.dataType ] + ", */*" :
				s.accepts._default );
		} catch(e){}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && s.beforeSend(xhr, s) === false ) {
			// Handle the global AJAX counter
			if ( s.global && ! --jQuery.active )
				jQuery.event.trigger( "ajaxStop" );
			// close opended socket
			xhr.abort();
			return false;
		}

		if ( s.global )
			jQuery.event.trigger("ajaxSend", [xhr, s]);

		// Wait for a response to come back
		var onreadystatechange = function(isTimeout){
			// The request was aborted, clear the interval and decrement jQuery.active
			if (xhr.readyState == 0) {
				if (ival) {
					// clear poll interval
					clearInterval(ival);
					ival = null;
					// Handle the global AJAX counter
					if ( s.global && ! --jQuery.active )
						jQuery.event.trigger( "ajaxStop" );
				}
			// The transfer is complete and the data is available, or the request timed out
			} else if ( !requestDone && xhr && (xhr.readyState == 4 || isTimeout == "timeout") ) {
				requestDone = true;

				// clear poll interval
				if (ival) {
					clearInterval(ival);
					ival = null;
				}

				status = isTimeout == "timeout" ? "timeout" :
					!jQuery.httpSuccess( xhr ) ? "error" :
					s.ifModified && jQuery.httpNotModified( xhr, s.url ) ? "notmodified" :
					"success";

				if ( status == "success" ) {
					// Watch for, and catch, XML document parse errors
					try {
						// process the data (runs the xml through httpData regardless of callback)
						data = jQuery.httpData( xhr, s.dataType, s );
					} catch(e) {
						status = "parsererror";
					}
				}

				// Make sure that the request was successful or notmodified
				if ( status == "success" ) {
					// Cache Last-Modified header, if ifModified mode.
					var modRes;
					try {
						modRes = xhr.getResponseHeader("Last-Modified");
					} catch(e) {} // swallow exception thrown by FF if header is not available

					if ( s.ifModified && modRes )
						jQuery.lastModified[s.url] = modRes;

					// JSONP handles its own success callback
					if ( !jsonp )
						success();
				} else
					jQuery.handleError(s, xhr, status);

				// Fire the complete handlers
				complete();

				// Stop memory leaks
				if ( s.async )
					xhr = null;
			}
		};

		if ( s.async ) {
			// don't attach the handler to the request, just poll it instead
			var ival = setInterval(onreadystatechange, 13);

			// Timeout checker
			if ( s.timeout > 0 )
				setTimeout(function(){
					// Check to see if the request is still happening
					if ( xhr ) {
						if( !requestDone )
							onreadystatechange( "timeout" );

						// Cancel the request
						if ( xhr )
							xhr.abort();
					}
				}, s.timeout);
		}

		// Send the data
		try {
			xhr.send(s.data);
		} catch(e) {
			jQuery.handleError(s, xhr, null, e);
		}

		// firefox 1.5 doesn't fire statechange for sync requests
		if ( !s.async )
			onreadystatechange();

		function success(){
			// If a local callback was specified, fire it and pass it the data
			if ( s.success )
				s.success( data, status );

			// Fire the global callback
			if ( s.global )
				jQuery.event.trigger( "ajaxSuccess", [xhr, s] );
		}

		function complete(){
			// Process result
			if ( s.complete )
				s.complete(xhr, status);

			// The request was completed
			if ( s.global )
				jQuery.event.trigger( "ajaxComplete", [xhr, s] );

			// Handle the global AJAX counter
			if ( s.global && ! --jQuery.active )
				jQuery.event.trigger( "ajaxStop" );
		}

		// return XMLHttpRequest to allow aborting the request etc.
		return xhr;
	},

	handleError: function( s, xhr, status, e ) {
		// If a local callback was specified, fire it
		if ( s.error ) s.error( xhr, status, e );

		// Fire the global callback
		if ( s.global )
			jQuery.event.trigger( "ajaxError", [xhr, s, e] );
	},

	// Counter for holding the number of active queries
	active: 0,

	// Determines if an XMLHttpRequest was successful or not
	httpSuccess: function( xhr ) {
		try {
			// IE error sometimes returns 1223 when it should be 204 so treat it as success, see #1450
			return !xhr.status && location.protocol == "file:" ||
				( xhr.status >= 200 && xhr.status < 300 ) || xhr.status == 304 || xhr.status == 1223;
		} catch(e){}
		return false;
	},

	// Determines if an XMLHttpRequest returns NotModified
	httpNotModified: function( xhr, url ) {
		try {
			var xhrRes = xhr.getResponseHeader("Last-Modified");

			// Firefox always returns 200. check Last-Modified date
			return xhr.status == 304 || xhrRes == jQuery.lastModified[url];
		} catch(e){}
		return false;
	},

	httpData: function( xhr, type, s ) {
		var ct = xhr.getResponseHeader("content-type"),
			xml = type == "xml" || !type && ct && ct.indexOf("xml") >= 0,
			data = xml ? xhr.responseXML : xhr.responseText;

		if ( xml && data.documentElement.tagName == "parsererror" )
			throw "parsererror";
			
		// Allow a pre-filtering function to sanitize the response
		// s != null is checked to keep backwards compatibility
		if( s && s.dataFilter )
			data = s.dataFilter( data, type );

		// The filter can actually parse the response
		if( typeof data === "string" ){

			// If the type is "script", eval it in global context
			if ( type == "script" )
				jQuery.globalEval( data );

			// Get the JavaScript object, if JSON is used.
			if ( type == "json" )
				data = window["eval"]("(" + data + ")");
		}
		
		return data;
	},

	// Serialize an array of form elements or a set of
	// key/values into a query string
	param: function( a ) {
		var s = [ ];

		function add( key, value ){
			s[ s.length ] = encodeURIComponent(key) + '=' + encodeURIComponent(value);
		};

		// If an array was passed in, assume that it is an array
		// of form elements
		if ( jQuery.isArray(a) || a.jquery )
			// Serialize the form elements
			jQuery.each( a, function(){
				add( this.name, this.value );
			});

		// Otherwise, assume that it's an object of key/value pairs
		else
			// Serialize the key/values
			for ( var j in a )
				// If the value is an array then the key names need to be repeated
				if ( jQuery.isArray(a[j]) )
					jQuery.each( a[j], function(){
						add( j, this );
					});
				else
					add( j, jQuery.isFunction(a[j]) ? a[j]() : a[j] );

		// Return the resulting serialization
		return s.join("&").replace(/%20/g, "+");
	}

});
var elemdisplay = {},
	fxAttrs = [
		// height animations
		[ "height", "marginTop", "marginBottom", "paddingTop", "paddingBottom" ],
		// width animations
		[ "width", "marginLeft", "marginRight", "paddingLeft", "paddingRight" ],
		// opacity animations
		[ "opacity" ]
	];

function genFx( type, num ){
	var obj = {};
	jQuery.each( fxAttrs.concat.apply([], fxAttrs.slice(0,num)), function(){
		obj[ this ] = type;
	});
	return obj;
}

jQuery.fn.extend({
	show: function(speed,callback){
		if ( speed ) {
			return this.animate( genFx("show", 3), speed, callback);
		} else {
			for ( var i = 0, l = this.length; i < l; i++ ){
				var old = jQuery.data(this[i], "olddisplay");
				
				this[i].style.display = old || "";
				
				if ( jQuery.css(this[i], "display") === "none" ) {
					var tagName = this[i].tagName, display;
					
					if ( elemdisplay[ tagName ] ) {
						display = elemdisplay[ tagName ];
					} else {
						var elem = jQuery("<" + tagName + " />").appendTo("body");
						
						display = elem.css("display");
						if ( display === "none" )
							display = "block";
						
						elem.remove();
						
						elemdisplay[ tagName ] = display;
					}
					
					this[i].style.display = jQuery.data(this[i], "olddisplay", display);
				}
			}
			
			return this;
		}
	},

	hide: function(speed,callback){
		if ( speed ) {
			return this.animate( genFx("hide", 3), speed, callback);
		} else {
			for ( var i = 0, l = this.length; i < l; i++ ){
				var old = jQuery.data(this[i], "olddisplay");
				if ( !old && old !== "none" )
					jQuery.data(this[i], "olddisplay", jQuery.css(this[i], "display"));
				this[i].style.display = "none";
			}
			return this;
		}
	},

	// Save the old toggle function
	_toggle: jQuery.fn.toggle,

	toggle: function( fn, fn2 ){
		var bool = typeof fn === "boolean";

		return jQuery.isFunction(fn) && jQuery.isFunction(fn2) ?
			this._toggle.apply( this, arguments ) :
			fn == null || bool ?
				this.each(function(){
					var state = bool ? fn : jQuery(this).is(":hidden");
					jQuery(this)[ state ? "show" : "hide" ]();
				}) :
				this.animate(genFx("toggle", 3), fn, fn2);
	},

	fadeTo: function(speed,to,callback){
		return this.animate({opacity: to}, speed, callback);
	},

	animate: function( prop, speed, easing, callback ) {
		var optall = jQuery.speed(speed, easing, callback);

		return this[ optall.queue === false ? "each" : "queue" ](function(){
		
			var opt = jQuery.extend({}, optall), p,
				hidden = this.nodeType == 1 && jQuery(this).is(":hidden"),
				self = this;
	
			for ( p in prop ) {
				if ( prop[p] == "hide" && hidden || prop[p] == "show" && !hidden )
					return opt.complete.call(this);

				if ( ( p == "height" || p == "width" ) && this.style ) {
					// Store display property
					opt.display = jQuery.css(this, "display");

					// Make sure that nothing sneaks out
					opt.overflow = this.style.overflow;
				}
			}

			if ( opt.overflow != null )
				this.style.overflow = "hidden";

			opt.curAnim = jQuery.extend({}, prop);

			jQuery.each( prop, function(name, val){
				var e = new jQuery.fx( self, opt, name );

				if ( /toggle|show|hide/.test(val) )
					e[ val == "toggle" ? hidden ? "show" : "hide" : val ]( prop );
				else {
					var parts = val.toString().match(/^([+-]=)?([\d+-.]+)(.*)$/),
						start = e.cur(true) || 0;

					if ( parts ) {
						var end = parseFloat(parts[2]),
							unit = parts[3] || "px";

						// We need to compute starting value
						if ( unit != "px" ) {
							self.style[ name ] = (end || 1) + unit;
							start = ((end || 1) / e.cur(true)) * start;
							self.style[ name ] = start + unit;
						}

						// If a +=/-= token was provided, we're doing a relative animation
						if ( parts[1] )
							end = ((parts[1] == "-=" ? -1 : 1) * end) + start;

						e.custom( start, end, unit );
					} else
						e.custom( start, val, "" );
				}
			});

			// For JS strict compliance
			return true;
		});
	},

	stop: function(clearQueue, gotoEnd){
		var timers = jQuery.timers;

		if (clearQueue)
			this.queue([]);

		this.each(function(){
			// go in reverse order so anything added to the queue during the loop is ignored
			for ( var i = timers.length - 1; i >= 0; i-- )
				if ( timers[i].elem == this ) {
					if (gotoEnd)
						// force the next step to be the last
						timers[i](true);
					timers.splice(i, 1);
				}
		});

		// start the next in the queue if the last step wasn't forced
		if (!gotoEnd)
			this.dequeue();

		return this;
	}

});

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show", 1),
	slideUp: genFx("hide", 1),
	slideToggle: genFx("toggle", 1),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" }
}, function( name, props ){
	jQuery.fn[ name ] = function( speed, callback ){
		return this.animate( props, speed, callback );
	};
});

jQuery.extend({

	speed: function(speed, easing, fn) {
		var opt = typeof speed === "object" ? speed : {
			complete: fn || !fn && easing ||
				jQuery.isFunction( speed ) && speed,
			duration: speed,
			easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
		};

		opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
			jQuery.fx.speeds[opt.duration] || jQuery.fx.speeds._default;

		// Queueing
		opt.old = opt.complete;
		opt.complete = function(){
			if ( opt.queue !== false )
				jQuery(this).dequeue();
			if ( jQuery.isFunction( opt.old ) )
				opt.old.call( this );
		};

		return opt;
	},

	easing: {
		linear: function( p, n, firstNum, diff ) {
			return firstNum + diff * p;
		},
		swing: function( p, n, firstNum, diff ) {
			return ((-Math.cos(p*Math.PI)/2) + 0.5) * diff + firstNum;
		}
	},

	timers: [],
	timerId: null,

	fx: function( elem, options, prop ){
		this.options = options;
		this.elem = elem;
		this.prop = prop;

		if ( !options.orig )
			options.orig = {};
	}

});

jQuery.fx.prototype = {

	// Simple function for setting a style value
	update: function(){
		if ( this.options.step )
			this.options.step.call( this.elem, this.now, this );

		(jQuery.fx.step[this.prop] || jQuery.fx.step._default)( this );

		// Set display property to block for height/width animations
		if ( ( this.prop == "height" || this.prop == "width" ) && this.elem.style )
			this.elem.style.display = "block";
	},

	// Get the current size
	cur: function(force){
		if ( this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null) )
			return this.elem[ this.prop ];

		var r = parseFloat(jQuery.css(this.elem, this.prop, force));
		return r && r > -10000 ? r : parseFloat(jQuery.curCSS(this.elem, this.prop)) || 0;
	},

	// Start an animation from one number to another
	custom: function(from, to, unit){
		this.startTime = now();
		this.start = from;
		this.end = to;
		this.unit = unit || this.unit || "px";
		this.now = this.start;
		this.pos = this.state = 0;

		var self = this;
		function t(gotoEnd){
			return self.step(gotoEnd);
		}

		t.elem = this.elem;

		jQuery.timers.push(t);

		if ( t() && jQuery.timerId == null ) {
			jQuery.timerId = setInterval(function(){
				var timers = jQuery.timers;

				for ( var i = 0; i < timers.length; i++ )
					if ( !timers[i]() )
						timers.splice(i--, 1);

				if ( !timers.length ) {
					clearInterval( jQuery.timerId );
					jQuery.timerId = null;
				}
			}, 13);
		}
	},

	// Simple 'show' function
	show: function(){
		// Remember where we started, so that we can go back to it later
		this.options.orig[this.prop] = jQuery.attr( this.elem.style, this.prop );
		this.options.show = true;

		// Begin the animation
		// Make sure that we start at a small width/height to avoid any
		// flash of content
		this.custom(this.prop == "width" || this.prop == "height" ? 1 : 0, this.cur());

		// Start by showing the element
		jQuery(this.elem).show();
	},

	// Simple 'hide' function
	hide: function(){
		// Remember where we started, so that we can go back to it later
		this.options.orig[this.prop] = jQuery.attr( this.elem.style, this.prop );
		this.options.hide = true;

		// Begin the animation
		this.custom(this.cur(), 0);
	},

	// Each step of an animation
	step: function(gotoEnd){
		var t = now();

		if ( gotoEnd || t >= this.options.duration + this.startTime ) {
			this.now = this.end;
			this.pos = this.state = 1;
			this.update();

			this.options.curAnim[ this.prop ] = true;

			var done = true;
			for ( var i in this.options.curAnim )
				if ( this.options.curAnim[i] !== true )
					done = false;

			if ( done ) {
				if ( this.options.display != null ) {
					// Reset the overflow
					this.elem.style.overflow = this.options.overflow;

					// Reset the display
					this.elem.style.display = this.options.display;
					if ( jQuery.css(this.elem, "display") == "none" )
						this.elem.style.display = "block";
				}

				// Hide the element if the "hide" operation was done
				if ( this.options.hide )
					jQuery(this.elem).hide();

				// Reset the properties, if the item has been hidden or shown
				if ( this.options.hide || this.options.show )
					for ( var p in this.options.curAnim )
						jQuery.attr(this.elem.style, p, this.options.orig[p]);
			}

			if ( done )
				// Execute the complete function
				this.options.complete.call( this.elem );

			return false;
		} else {
			var n = t - this.startTime;
			this.state = n / this.options.duration;

			// Perform the easing function, defaults to swing
			this.pos = jQuery.easing[this.options.easing || (jQuery.easing.swing ? "swing" : "linear")](this.state, n, 0, 1, this.options.duration);
			this.now = this.start + ((this.end - this.start) * this.pos);

			// Perform the next step of the animation
			this.update();
		}

		return true;
	}

};

jQuery.extend( jQuery.fx, {
	speeds:{
		slow: 600,
 		fast: 200,
 		// Default speed
 		_default: 400
	},
	step: {

		opacity: function(fx){
			jQuery.attr(fx.elem.style, "opacity", fx.now);
		},

		_default: function(fx){
			if ( fx.elem.style && fx.elem.style[ fx.prop ] != null )
				fx.elem.style[ fx.prop ] = fx.now + fx.unit;
			else
				fx.elem[ fx.prop ] = fx.now;
		}
	}
});
if ( document.documentElement["getBoundingClientRect"] )
	jQuery.fn.offset = function() {
		if ( !this[0] ) return { top: 0, left: 0 };
		if ( this[0] === this[0].ownerDocument.body ) return jQuery.offset.bodyOffset( this[0] );
		var box  = this[0].getBoundingClientRect(), doc = this[0].ownerDocument, body = doc.body, docElem = doc.documentElement,
			clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,
			top  = box.top  + (self.pageYOffset || jQuery.boxModel && docElem.scrollTop  || body.scrollTop ) - clientTop,
			left = box.left + (self.pageXOffset || jQuery.boxModel && docElem.scrollLeft || body.scrollLeft) - clientLeft;
		return { top: top, left: left };
	};
else 
	jQuery.fn.offset = function() {
		if ( !this[0] ) return { top: 0, left: 0 };
		if ( this[0] === this[0].ownerDocument.body ) return jQuery.offset.bodyOffset( this[0] );
		jQuery.offset.initialized || jQuery.offset.initialize();

		var elem = this[0], offsetParent = elem.offsetParent, prevOffsetParent = elem,
			doc = elem.ownerDocument, computedStyle, docElem = doc.documentElement,
			body = doc.body, defaultView = doc.defaultView,
			prevComputedStyle = defaultView.getComputedStyle(elem, null),
			top = elem.offsetTop, left = elem.offsetLeft;

		while ( (elem = elem.parentNode) && elem !== body && elem !== docElem ) {
			computedStyle = defaultView.getComputedStyle(elem, null);
			top -= elem.scrollTop, left -= elem.scrollLeft;
			if ( elem === offsetParent ) {
				top += elem.offsetTop, left += elem.offsetLeft;
				if ( jQuery.offset.doesNotAddBorder && !(jQuery.offset.doesAddBorderForTableAndCells && /^t(able|d|h)$/i.test(elem.tagName)) )
					top  += parseInt( computedStyle.borderTopWidth,  10) || 0,
					left += parseInt( computedStyle.borderLeftWidth, 10) || 0;
				prevOffsetParent = offsetParent, offsetParent = elem.offsetParent;
			}
			if ( jQuery.offset.subtractsBorderForOverflowNotVisible && computedStyle.overflow !== "visible" )
				top  += parseInt( computedStyle.borderTopWidth,  10) || 0,
				left += parseInt( computedStyle.borderLeftWidth, 10) || 0;
			prevComputedStyle = computedStyle;
		}

		if ( prevComputedStyle.position === "relative" || prevComputedStyle.position === "static" )
			top  += body.offsetTop,
			left += body.offsetLeft;

		if ( prevComputedStyle.position === "fixed" )
			top  += Math.max(docElem.scrollTop, body.scrollTop),
			left += Math.max(docElem.scrollLeft, body.scrollLeft);

		return { top: top, left: left };
	};

jQuery.offset = {
	initialize: function() {
		if ( this.initialized ) return;
		var body = document.body, container = document.createElement('div'), innerDiv, checkDiv, table, td, rules, prop, bodyMarginTop = body.style.marginTop,
			html = '<div style="position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;"><div></div></div><table style="position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;"cellpadding="0"cellspacing="0"><tr><td></td></tr></table>';

		rules = { position: 'absolute', top: 0, left: 0, margin: 0, border: 0, width: '1px', height: '1px', visibility: 'hidden' };
		for ( prop in rules ) container.style[prop] = rules[prop];

		container.innerHTML = html;
		body.insertBefore(container, body.firstChild);
		innerDiv = container.firstChild, checkDiv = innerDiv.firstChild, td = innerDiv.nextSibling.firstChild.firstChild;

		this.doesNotAddBorder = (checkDiv.offsetTop !== 5);
		this.doesAddBorderForTableAndCells = (td.offsetTop === 5);

		innerDiv.style.overflow = 'hidden', innerDiv.style.position = 'relative';
		this.subtractsBorderForOverflowNotVisible = (checkDiv.offsetTop === -5);

		body.style.marginTop = '1px';
		this.doesNotIncludeMarginInBodyOffset = (body.offsetTop === 0);
		body.style.marginTop = bodyMarginTop;

		body.removeChild(container);
		this.initialized = true;
	},

	bodyOffset: function(body) {
		jQuery.offset.initialized || jQuery.offset.initialize();
		var top = body.offsetTop, left = body.offsetLeft;
		if ( jQuery.offset.doesNotIncludeMarginInBodyOffset )
			top  += parseInt( jQuery.curCSS(body, 'marginTop',  true), 10 ) || 0,
			left += parseInt( jQuery.curCSS(body, 'marginLeft', true), 10 ) || 0;
		return { top: top, left: left };
	}
};


jQuery.fn.extend({
	position: function() {
		var left = 0, top = 0, results;

		if ( this[0] ) {
			// Get *real* offsetParent
			var offsetParent = this.offsetParent(),

			// Get correct offsets
			offset       = this.offset(),
			parentOffset = /^body|html$/i.test(offsetParent[0].tagName) ? { top: 0, left: 0 } : offsetParent.offset();

			// Subtract element margins
			// note: when an element has margin: auto the offsetLeft and marginLeft 
			// are the same in Safari causing offset.left to incorrectly be 0
			offset.top  -= num( this, 'marginTop'  );
			offset.left -= num( this, 'marginLeft' );

			// Add offsetParent borders
			parentOffset.top  += num( offsetParent, 'borderTopWidth'  );
			parentOffset.left += num( offsetParent, 'borderLeftWidth' );

			// Subtract the two offsets
			results = {
				top:  offset.top  - parentOffset.top,
				left: offset.left - parentOffset.left
			};
		}

		return results;
	},

	offsetParent: function() {
		var offsetParent = this[0].offsetParent || document.body;
		while ( offsetParent && (!/^body|html$/i.test(offsetParent.tagName) && jQuery.css(offsetParent, 'position') == 'static') )
			offsetParent = offsetParent.offsetParent;
		return jQuery(offsetParent);
	}
});


// Create scrollLeft and scrollTop methods
jQuery.each( ['Left', 'Top'], function(i, name) {
	var method = 'scroll' + name;
	
	jQuery.fn[ method ] = function(val) {
		if (!this[0]) return null;

		return val !== undefined ?

			// Set the scroll offset
			this.each(function() {
				this == window || this == document ?
					window.scrollTo(
						!i ? val : jQuery(window).scrollLeft(),
						 i ? val : jQuery(window).scrollTop()
					) :
					this[ method ] = val;
			}) :

			// Return the scroll offset
			this[0] == window || this[0] == document ?
				self[ i ? 'pageYOffset' : 'pageXOffset' ] ||
					jQuery.boxModel && document.documentElement[ method ] ||
					document.body[ method ] :
				this[0][ method ];
	};
});
// Create innerHeight, innerWidth, outerHeight and outerWidth methods
jQuery.each([ "Height", "Width" ], function(i, name){

	var tl = i ? "Left"  : "Top",  // top or left
		br = i ? "Right" : "Bottom"; // bottom or right

	// innerHeight and innerWidth
	jQuery.fn["inner" + name] = function(){
		return this[ name.toLowerCase() ]() +
			num(this, "padding" + tl) +
			num(this, "padding" + br);
	};

	// outerHeight and outerWidth
	jQuery.fn["outer" + name] = function(margin) {
		return this["inner" + name]() +
			num(this, "border" + tl + "Width") +
			num(this, "border" + br + "Width") +
			(margin ?
				num(this, "margin" + tl) + num(this, "margin" + br) : 0);
	};
	
	var type = name.toLowerCase();

	jQuery.fn[ type ] = function( size ) {
		// Get window width or height
		return this[0] == window ?
			// Everyone else use document.documentElement or document.body depending on Quirks vs Standards mode
			document.compatMode == "CSS1Compat" && document.documentElement[ "client" + name ] ||
			document.body[ "client" + name ] :

			// Get document width or height
			this[0] == document ?
				// Either scroll[Width/Height] or offset[Width/Height], whichever is greater
				Math.max(
					document.documentElement["client" + name],
					document.body["scroll" + name], document.documentElement["scroll" + name],
					document.body["offset" + name], document.documentElement["offset" + name]
				) :

				// Get or set width or height on the element
				size === undefined ?
					// Get width or height on the element
					(this.length ? jQuery.css( this[0], type ) : null) :

					// Set the width or height on the element (default to pixels if value is unitless)
					this.css( type, typeof size === "string" ? size : size + "px" );
	};

});})();


------------

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>jQuery validation plug-in - main demo</title>

<link rel="stylesheet" type="text/css" media="screen" href="css/screen.css" />

<script src="jQuery/jquery.js" type="text/javascript"></script>
<script src="jQuery/jquery.validate.js" type="text/javascript"></script>
<!-- <script type="text/javascript" src="jQuery/jquery-1.10.2.js"></script> -->

<script type="text/javascript">
//     $(document).ready(function() {
//         $("#commentForm").validate({
//         	rules:{
//         		name:"required"
//         	},
//         	messages:{
//         		name:"buneng weikong ",
//         	}
//         });
//     });  
//自定义函数：
 $.validator.addMethod("cartLength" ,function(value,name,params){
    var len=value.length;
	if(len!=15&&len!=18){
		return false;
	}
	return true;
});


 $(document).ready(function() {
        $("#commentForm").validate({
        	rules:{
        		name:{
        			required:true,
        			minlength:3,
        			maxlength:8
        		},
                password:{
         			required:true,
        			minlength:3,
        			maxlength:8
        		},
                password1:{
         			required:true,
        			minlength:3,
        			maxlength:8,
        			equalTo:"#password"
        		},
        		mails:{
         			required:true,
         			email:true,

        		},
        		sex:{
         			required:true,

        		},
        		cart:{
         			required:true,
         			cartLength:"参数"
        		}
        	},
        	messages:{
        		name:{
        			required:"不能为空",
        			minlength:"不能少于三个字符",
        			maxlength:"不能大于8个字符"
        		},
        		password:{
        			required:"不能为空",
        			minlength:"不能少于三个字符",
        			maxlength:"不能大于8个字符"
        		},
        		password1:{
        			required:"不能为空",
        			minlength:"不能少于三个字符",
        			maxlength:"不能大于8个字符",
        			equalTo:"两次密码不一致"
        		},
        	mails:{
         			required:"buengnweikong",
         			email:"邮箱格式不对",

        		},
        	sex:{
         			required:"请选择性别",

        		},
        	cart:{
         			required:"身份证输入框不能为空",
         			cartLength:"身份证必须为15或者18位"
        		}
        	}
        });
    });   
</script>
</head>
<body>
     <form class="cmxform" id="commentForm" method="post" action="" >
  Name<input id="cname" name="name"  class="required"  /><br/>
  身份证（15或者18位）<input id="cart" name="cart"  class="required"  /><br/>
   password<input id="password" name="password" class="required"  /><br/>
   password<input id="password1" name="password1" class="required"  /><br/>
   mails<input id="mails" name="mails" class="required"  /><br/>
   性别： <input type="radio" id="sex" name="sex" value="Input radio1" />男
    <input type="radio" id="sex1" name="sex" value="Input radio2" />女
   <label for="sex" class="error" style="display: none">请选择性别</label> 
  <input class="submit" type="submit" value="Submit" />
</form>
</body>
</html>

------------

 $.validator.addMethod("cartLength" ,function(value,name,params){
    var len=value.length;
	if(len!=15&&len!=18){
		return false;
	}
	return true;
});


value:要验证的输入框的输入值
name:这个输入框的对象
params：为要传递的参数
cartLength:自定义的对象，可以直接引入到
cart:{
         			required:"身份证输入框不能为空",
         			cartLength:"身份证必须为15或者18位"
        		}

------------

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> 
<html xmlns="http://www.w3.org/1999/xhtml"> 
<head id="Head1" runat="server"> 
<title>密码强度测试</title> 
</head> 
<script language="javascript" type="text/javascript"> 
//CharMode函数 
//测试某个字符是属于哪一类. 
function CharMode(iN){ 
if (iN>=48 && iN <=57) //数字 
return 1; 
if (iN>=65 && iN <=90) //大写字母 
return 2; 
if (iN>=97 && iN <=122) //小写 
return 4; 
else 
return 8; //特殊字符 
} 
//bitTotal函数 
//计算出当前密码当中一共有多少种模式 
function bitTotal(num){ 
modes=0; 
for (i=0;i<4;i++){ 
if (num & 1) modes++; 
num>>>=1; 
} 
return modes; 
} 
//checkStrong函数 
//返回密码的强度级别 
function checkStrong(sPW){ 
if (sPW.length<=4) 
return 0; //密码太短 
Modes=0; 
for (i=0;i<sPW.length;i++){ 
//测试每一个字符的类别并统计一共有多少种模式. 
Modes|=CharMode(sPW.charCodeAt(i)); 
} 
return bitTotal(Modes); 
} 
//pwStrength函数 
//当用户放开键盘或密码输入框失去焦点时,根据不同的级别显示不同的颜色 
function pwStrength(pwd){ 
O_color="#e0f0ff"; 
L_color="#FF0000"; 
M_color="#FF9900"; 
H_color="#33CC00"; 
if (pwd==null||pwd==''){ 
Lcolor=Mcolor=Hcolor=O_color; 
} 
else 
{ 
S_level=checkStrong(pwd); 
//alert(S_level); 
switch(S_level) 
{ 
case 0: 
Lcolor=Mcolor=Hcolor=O_color; 
case 1: 
Lcolor=L_color; 
Mcolor=Hcolor=O_color; 
break; 
case 2: 
Lcolor=Mcolor=M_color; 
Hcolor=O_color; 
break; 
default: 
Lcolor=Mcolor=Hcolor=H_color; 
} 
} 
document.getElementById("strength_L").style.background=Lcolor; 
document.getElementById("strength_M").style.background=Mcolor; 
document.getElementById("strength_H").style.background=Hcolor; 
return; 
} 
</script> 
<body> 
<form id="form1"> 
<div> 
输入密码:<input type="text" id="TextBox1" onkeyup="pwStrength(this.value)" onblur="pwStrength(this.value)"><br> 
密码强度: 
<table border="1" cellpadding="1" bordercolordark="#fdfeff" bordercolorlight="#99ccff" 
cellspacing="1" style="width: 200px; display: inline; background-color: #e0f0ff"> 
<tr> 
<td id="strength_L" style="width: 100px; height: 19px;" align="center"> 
弱 
</td> 
<td id="strength_M" style="width: 100px; height: 19px;" align="center"> 
中 
</td> 
<td id="strength_H" style="width: 100px; height: 19px;" align="center"> 
强 
</td> 
</tr> 
</table> 
</div> 
</form> 
</body> 
</html>


------------

annotation
基础配置
核心开发接口
约束Criteria
约束Restrictions
batchsize
缓存配置

------------

主要
列属性
联合主键
主键关联
注解排序

------------

1.声明实体：@Entity

声明表名：@Table(name="tbl_sky")

声明表键：@Table(name="tbl_sky",
		    uniqueConstraints = {@UniqueConstraint(columnNames={"month", "day"})}
		)
------------------------------------------------------------------------
声明主键：@Id
	          public String getId() {
		   return id;}
-------------------------------------------------------------------		   
不想展示某个属性：@Transient
                                 public String getId() {
		              return id;}
-------------------------------------------------------------------		              
声明时间类型：@Temporal(TemporalType.DATE)
                	        public Date getTime() {
		                return time;
				}
---------------------创建一个枚举类型------------------------
package com.gdb.entity;

public enum Position {
	A,B,C
}
---------------------------------------------------------------------
声明枚举类型@Enumerated(EnumType.STRING)
				public Position getPosition() {
					return position;
				}
  			
  --------------------------------------------------------------------------------
sequence自增加
        @Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	public int getNumbers() {
		return numbers;
	}  
 ------------------------------------------------------------------------------- 
  这个是放在类上（用途不大）
 @javax.persistence.TableGenerator(
    name="EMP_GEN",
    table="GENERATOR_TABLE",-------------标名字
    pkColumnName = "key", 表中字段
    valueColumnName = "hi" ,表中字段
    pkColumnValue="EMP", 
    allocationSize=20                       -------------字段增加的幅度
)

--------------------------------------------------------------------------------------------------------     
      
        
  
@Entity
@Table(name="tbl_sky")
public class Flight implements Serializable {
...
    @Version
    @Column(name="OPTLOCK")
    public Integer getVersion() { ... }
}    

2.声明列属性:@Column






































------------

@Entity
public class Flight implements Serializable {
...
@Column(updatable = false, name = "flight_name", nullable = false, length=50)
public String getName() { ... }
            
在上面这个例子中,name属性映射到flight_name列. 该字段不允许为空,长度为50,并且是不可更新的(也就是属性值是不变的).

上面这些注解可以被应用到正规属性上例如@Id 或@Version属性.

@Column(
    name="columnName";                                (1)
    boolean unique() default false;                   (2)
    boolean nullable() default true;                  (3)
    boolean insertable() default true;                (4)
    boolean updatable() default true;                 (5)-------列不参加update
    String columnDefinition() default "";             (6)
    String table() default "";                        (7)
    int length() default 255;                         (8)
    int precision() default 0; // decimal precision   (9)
    int scale() default 0; // decimal scale
(1)	name 可选,列名(默认值是属性名)
(2)	unique 可选,是否在该列上设置唯一约束(默认值false)
(3)	nullable 可选,是否设置该列的值可以为空(默认值false)
(4)	insertable 可选,该列是否作为生成的insert语句中的一个列(默认值true)
(5)	updatable 可选,该列是否作为生成的update语句中的一个列(默认值true)
(6)	columnDefinition 可选: 为这个特定列覆盖SQL DDL片段 (这可能导致无法在不同数据库间移植)
(7)	table 可选,定义对应的表(默认为主表)
(8)	length 可选,列长度(默认值255)
(8)	precision 可选,列十进制精度(decimal precision)(默认值0)
(10)	scale 可选,如果列十进制数值范围(decimal scale)可用,在此设置(默认值0)
-------------------------------------------------------------------------------------------------------------------------
在xml中<class name="Student" table="student1" dynamic-update="true">后，只更新做过修改的


------------

xml形式联合主键
annotation

------------

  1.在student.hbm.xml中配置联合主键
  
  <composite-id name="studentpk" class="com.gdb.entity.StudentPK">
		            <key-property name="id"/>
		            <key-property name="username"/>
		    </composite-id>
-------------------------------------------------------------------
2.新建一个studentPK类实现implements Serializable接口。并重写equles和hashcode方法
@Override
	public boolean equals(Object object){
		if(object instanceof StudentPK){
			StudentPK spk = new StudentPK();
			if(this.id==spk.getId()&&this.username.equals(spk.getUsername())){
				return true;
			}
		}
		return false;
	}
	@Override 
	public int hashCode(){
		return this.username.hashCode();
	}
----------------------------------------------------------------------------------------------------------------
3.在student类中加入studentPk类
4.action
              Date now = new Date(); 
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");//可以方便地修改日期格式
		String createTime = dateFormat.format( now ); 
         Student s= new Student();
         StudentPK pk= new StudentPK();
         pk.setId("1");
         pk.setUsername("zhangsan");
         s.setAge(1);s.setCreatetime(createTime);s.setSex("男");
         s.setStudentpk(pk);
         Configuration  cfg = new Configuration();
        SessionFactory sf=   cfg.configure().buildSessionFactory();
        Session session =sf.openSession();
        session.beginTransaction();
         session.save(s);
         session.getTransaction().commit();
         session.close();
         sf.close();
  ----------------------------------------------------------------------------------------------------------------------------------------       
         
         
         
         
         
         

------------

@Embeddable
@EmbeddedId
@IdClass(TeacherPK.class)

------------

1.新建类TeacherPK，在类上增加注解@Embeddable
             public class TeacherPK  implements Serializable{}；
-----------------------------------------------------------------------
2.让其实现接口类，并重写equals和hashcode方法
@Override
	public boolean equals(Object object){
		if(object instanceof StudentPK){
			StudentPK spk = new StudentPK();
			if(this.id==spk.getId()&&this.username.equals(spk.getUsername())){
				return true;
			}
		}
		return false;
	}
	@Override 
	public int hashCode(){
		return this.username.hashCode();
	}
	--------------------------------------------------------------
3.在teacher类中增加private TeacherPK teacherpk;并在get方法上增加@Id
----------------------------------------------------------------
4.调用
package com.gdb.action;
import java.text.SimpleDateFormat;
import java.util.Date;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.AnnotationConfiguration;
import org.hibernate.cfg.Configuration;
import com.gdb.entity.Position;
import com.gdb.entity.Student;
import com.gdb.entity.Teacher;
import com.gdb.entity.TeacherPK;

public class TeacherAction {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		 Date now = new Date(); 
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");//可以方便地修改日期格式
	 	String createTime = dateFormat.format( now ); 
         Teacher s= new Teacher();
         TeacherPK pk= new TeacherPK();
         int id=(int) ((Math.random())*1000);
          pk.setId(id+"");
          s.setTitle("中级");s.setCreatetime(createTime);
          pk.setUsername("zhangsan");
          s.setPosition(Position.A);
          s.setTeacherpk(pk);
         Configuration  cfg = new AnnotationConfiguration();
        SessionFactory sf=   cfg.configure().buildSessionFactory();
        Session session =sf.openSession();
        session.beginTransaction();
         session.save(s);
         session.getTransaction().commit();
         session.close();
         sf.close();
         
		  
		
	}

}


------------

直接在teacher中的teachePk上面增加此注解，不需要在TeacherPk类中增加任何注解

------------

直接在teacher的联合主键的字段上增加@Id
在类上面增加@IdClass(TeacherPK.class)；

------------

one_2_one双向外键关联
one_2_one单项外键关联
one_2_one联合外键关联
映射
many_2_one
one_2_many
many_2_many

------------

在设置双向的时候必须设置mappedBy


在wife类上面增加@entity
之后在id上面增加 @Id
				@GeneratedValue
				public int getWife_id() {
					return wife_id;
				}
private Husband husband;				
				@OneToOne(mappedBy="wife")
				
				在mappedBy来告诉系统这个不是主导，只生成一次
                              @JoinColumn(name="husband")
				public Husband getHusband() {
					return husband;
				}
----------------------------------------------
在husband类上面增加@entity
在husband的id上增加@Id
				   @GeneratedValue
				   public int getHus_id() {
					return hus_id;
				  }
				  
在private Wife wife;上面增加
       @OneToOne
	public Wife getWife() {
		return wife;
	}
			  
-------------------------------------------------------
在save的时候要先save wife在save  husband

------------

在wife类上面增加@entity
之后在id上面增加 @Id
				@GeneratedValue
				public int getWife_id() {
					return wife_id;
				}
----------------------------------------------
在husband类上面增加@entity
在husband的id上增加@Id
				   @GeneratedValue
				   public int getHus_id() {
					return hus_id;
				  }
在private Wife wife;上面增加
       @OneToOne
	public Wife getWife() {
		return wife;
	}
			  
-------------------------------------------
在save的时候要先save wife在save  husband

------------

除了以上内容外，还需要在husband中增加
  @OneToOne
  @JoinColumns( 
    		{ 
    			@JoinColumn(name="wife_id",referencedColumnName="wife_id"),
    			@JoinColumn(name="wife_name",referencedColumnName="wife_name"),
    		}
    		
    		)
	public Wife getWife() {
		return wife;
	}
	来确定关联的内容。
	
	
	
	
	wife类
	----------------------------------------------------
	package com.gdb.entity;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;

@Entity
@IdClass(WifePK.class)
public class Wife {
	private int wife_id;
	private String wife_name;
//	private Husband husband;
	@Id
	@GeneratedValue
	public int getWife_id() {
		return wife_id;
	}

	public void setWife_id(int wife_id) {
		this.wife_id = wife_id;
	}
    @Id
	public String getWife_name() {
		return wife_name;
	}

	public void setWife_name(String wife_name) {
		this.wife_name = wife_name;
	} 

}

wifePk类
--------------------------------------------
package com.gdb.entity;

import java.io.Serializable;

public class WifePK implements Serializable {
	private int wife_id;
	private String wife_name;
	
	public int getWife_id() {
		return wife_id;
	}

	public void setWife_id(int wife_id) {
		this.wife_id = wife_id;
	}

	public String getWife_name() {
		return wife_name;
	}

	public void setWife_name(String wife_name) {
		this.wife_name = wife_name;
	}  

}

husband类
----------------------------------------------------
package com.gdb.entity;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.OneToOne;

@Entity
public class Husband {
	private int hus_id;
	private String hus_name;
	private Wife wife;
	@Id
	@GeneratedValue
	public int getHus_id() {
		return hus_id;
	}

	public void setHus_id(int hus_id) {
		this.hus_id = hus_id;
	}

	public String getHus_name() {
		return hus_name;
	}

	public void setHus_name(String hus_name) {
		this.hus_name = hus_name;
	}
    @OneToOne
    @JoinColumns( 
    		{ 
    			@JoinColumn(name="wife_id",referencedColumnName="wife_id"),
    			@JoinColumn(name="wife_name",referencedColumnName="wife_name"),
    		}
    		
    		)
	public Wife getWife() {
		return wife;
	}

	public void setWife(Wife wife) {
		this.wife = wife;
	}
}


------------

annotation映射
xml映射

------------

--------@Embedded注解----------------------------
此种情况下wife不作为一个entity，而是作为husband表的一部分存在。
create table Husband (hus_id number(10,0) not null, hus_name varchar2(255 char), wife_id number(10,0) not null, wife_name varchar2(255 char), primary key (hus_id))

-----------------------------------------------------------------------------------------------------------------------
package com.gdb.entity;

import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;


@Entity
public class Husband {
	private int hus_id;
	private String hus_name;
	private Wife wife;
	@Id
	@GeneratedValue
	public int getHus_id() {
		return hus_id;
	}

	public void setHus_id(int hus_id) {
		this.hus_id = hus_id;
	}

	public String getHus_name() {
		return hus_name;
	}

	public void setHus_name(String hus_name) {
		this.hus_name = hus_name;
	}
	@Embedded
	public Wife getWife() {
		return wife;
	}

	public void setWife(Wife wife) {
		this.wife = wife;
}
-------------------------------------------------------------------------------
package com.gdb.entity;


public class Wife {
	private int wife_id;
	private String wife_name;
	public int getWife_id() {
		return wife_id;
	}

	public void setWife_id(int wife_id) {
		this.wife_id = wife_id;
	}//    @Id
	public String getWife_name() {
		return wife_name;
	}

	public void setWife_name(String wife_name) {
		this.wife_name = wife_name;
	} 



}


------------


映射的关系。直接把一个类映射到husband类中，字段配置为property 属性。
<component name="wife"> 
	<property name="wifeName"/> 
	<property name="age"/> 
</component>

------------

在多的一方定义
       @ManyToOne
       @JoinColumn(name="t_id")
	public Teacher getTeacher() {
		return teacher;
	}
---------------------------------------------------------
这种情况下，会在student表中生成一个t_id字段来映射到teacher表
mappedBy="teacher",    --------------mappedBy属性设置时只 考虑对面的关联，不用考虑本侧的关联，只需要指定一边的关联就ok
			   cascade={CascadeType.ALL}，  -------------如果有关联的表，那么增加此属性后，直接就可以关联，不需要在save（Student）负责 -------------增删改
			    fetch=FetchType.EAGER /LAZY  负责get和load  前者是直接去取，积极的。EAGER 是默认的
			 
			)    
			
			
			
与one_2_many整好相反			
	

------------

在teacher中private Set<Student> student =new HashSet<Student>();

       @OneToMany(mappedBy="teacher",    --------------mappedBy属性设置时只 考虑对面的关联，不用考虑本侧的关联，只需要指定一边的关联就ok
			   cascade={CascadeType.ALL}，  -------------如果有关联的表，那么增加此属性后，直接就可以关联，不需要在save（Student）负责 -------------增删改
			    fetch=FetchType.EAGER /LAZY  负责get和load  前者是直接去取，积极的。LAZY  是默认的
			)    
	@JoinColumn(name="teacher_student") ---------------必须指定，否则会生成一张中间表
	public Set<Student> getStudent() {
		return student;
	}
---------------------------------------------	
         在action中直接配置set
         Set<Student> s = new HashSet<Student>();
		s.add(s1);
		s.add(s2);
		t.setStudent(s);

------------

        
     在teacher表中，多对多，会创建一张中间表，中间表的名字就是“S_T”    
           @ManyToMany
	@JoinTable(name="s_t",
		     joinColumns={@JoinColumn(name="teacher_id"),}, ------------------------------------teacher 表的主键名字
	             inverseJoinColumns=@JoinColumn(name="student_id")          ---------------------------------student表的主键名字
			)
	public Set<Student> getStudent() {
		return student;
	}
--------------------------------------------------------
teacher.class

package com.gdb.entity;


import java.util.HashSet;
import java.util.Set;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;


@Entity
public class Teacher {
	
	private int id ;
	private String name;
	private Set<Student> student =new HashSet<Student>();
	@Id
	@GeneratedValue
	@JoinColumn(name="teacher_id")
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
//	@OneToMany(mappedBy="teacher")
//	@JoinColumn(name="teacher_student")
	@ManyToMany
	@JoinTable(name="s_t")
	public Set<Student> getStudent() {
		return student;
	}
	public void setStudent(Set<Student> student) {
		this.student = student;
	}
	
	
	
	
	

}


------------

@OrderBy("name ASC,id ASC")
----------------------------------------------------
@OneToMany(mappedBy="teacher",
			   cascade={CascadeType.ALL},
			   fetch=FetchType.LAZY
			)
	@JoinColumn(name="teacher_student")
	@OrderBy("name ASC,id ASC")
		public Set<Student> getStudent() {
		return student;
	}
	
	
	
	
	
	
	
	
	
	C:\Program Files\AMD APP\bin\x86;C:\Program Files\Java\jdk1.6.0_10\bin;D:\oracle\product\10.2.0\db_1\bin;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;C:\Program Files\ATI Technologies\ATI.ACE\Core-Static;D:\Informatica\PowerCenter8.6.1\server\bin;E:\activeMQ\apache-ant-1.9.2-bin\apache-ant-1.9.2\bin

------------

hibernate.cfg.xml
文档

------------

<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">

<hibernate-configuration>

    <session-factory>

        <!-- Database connection settings -->
        <property name="connection.driver_class">oracle.jdbc.driver.OracleDriver</property>
        <property name="connection.url">jdbc:oracle:thin:@localhost:1521:gaodebao</property>
        <property name="connection.username">gaodebao</property>
        <property name="connection.password">gaodebao</property>

        <!-- JDBC connection pool (use the built-in) -->
        <property name="connection.pool_size">1</property>

        <!-- SQL dialect -->
        <property name="dialect">org.hibernate.dialect.Oracle10gDialect</property>

        <!-- Enable Hibernate's automatic session context management -->
        <property name="current_session_context_class">thread</property>

        <!-- Disable the second-level cache  -->
        <property name="cache.provider_class">org.hibernate.cache.NoCacheProvider</property>

        <!-- Echo all executed SQL to stdout -->
        <property name="show_sql">true</property>

        <!-- Drop and re-create the database schema on startup -->
        <property name="hbm2ddl.auto">update</property>

          <mapping resource="com/lq/gdb/model/Cat.hbm.xml"/>

    </session-factory>

</hibernate-configuration>

------------

<file://E:\Java\Hibernate\hibernate.html>  hibernate文档
<file://E:\Java\Hibernate\annotation.html>annotation文档

------------

核心幵发接口介绍
1	hibernate_0500_CoreAPI
2	Hibernate API文档需要单独下载
3	Configuration
a)	AnnotationConfiguration
b)	进行配置信息的管理
c)	用来产生SessionFactory
d)	可以在configure方法中指定hibernate配置文件
e)	只气关注一个方法即：buildSessionFactory
---------------------------------------------------------------------------------------------
4	SessoinFactor
a)	用来产生和管理Session
b)	通常情况下每个应用只需要一个SessionFactory
c)	除非要访间多个数据库的情况
d)	关注两个方法即：openSession getCurrentsession
i.	open session每次都是新的，需要close
ii.	getCurrentsession从上下文找，如果有，用旧的，如果没有，建新的
1.	用途，界定事务边界
2.	事务提交自动close
3.	上下文配置可参见xml文件中
	    <property name="current_session_context_classs">thread</property>
4.	current_session_context_class (jta、thread常用 managed、custom.Class少用) 
	a) thread 使用connection 但数据库连接管理事务
	b）jta （全称java transaction api）-java分布式事务管理（多数据库访问）
		jta由中间件提供（jboss WebLogic等，tomcat不支持）
5	Session
a)	管理一个数据库的任务单元（简单说就是增 删 改 查）
b)	方法(CRUD)
---------------------------------------------------------------------------------------------
i.	Save()		session.save(对象);
ii.	Delete		session.delete(对象);
iii.	Load		Student s1=(Student)session.load(Student.class, 1);
iv.	Get			Student s1=(Student)session.get(Student.class, 1);
v.	get与load的区别（面试重点，原理）
1.	不存在对应记录时表现不一样
2.	load返回的是代理对象，等到真正用到对象的内容时才发出sql语句
3.	get直接从数据库加载，不会延迟
---------------------------------------------------------------------------------------------
vi.	updates		
session.update(对象);
1.	用来更新detached对象，更新完成后转为persistent状态
2.	更新transient对象会报错
3.	更新自己设定id的transient对象可以（数据库有对应记录）
4.	persistent状态的对象只要设定（如:t.setName…）不同字段就会发生更新
5.	更新部分更改的字段
a)	xml 设定 property 标签的 update 属性，annotation 设定@Column 的 updatable
	属性，不过这种方式很少用，因为不灵活（忘记）
b)	使用xml中的dynamic-update，JPA1.0 Annotation 没有对应的属性，hibernate 扩
	展？ 
i. 同一个session可以，跨session不行，不过可以用merge()(不重要）
c)	使用 HQL(EjBQL)(建议）
---------------------------------------------------------------------------------------------
vii.	saveOrUpdate()	
	session.saveOrUpdate(对象);
	---------------------------------------------------------------------------------------------
viii.	clear方法			session.clear();
1.无论是load还是get,都会首先査找缓存（一级缓存)，如果没有，才会去数据库査找，调用
clear()方法可以强制清除session缓存
---------------------------------------------------------------------------------------------
ix.	flush()方法		session.flush();
1.	当session的事务提交后,会强制将内存(session缓存)与数据库同步.默认情况下是session的事务提交(commit)时才同步!
2.	session的FlushMode设置,可以设定在什么时候同步缓存与数据库(很少用)
	例如: session.setFlushMode(FlushMode.AUTO)
x.	find方法已经过时！
6	SchemaExport (自动建表)
	new SchemaExport(new AnnotationConfiguration().configure()).create(false, true);
7	Query 接口
a)	参考Hibernate査询(HQLEJBQL)的内容
8	Note：
a)	Hibernate中涉及很多非常非常细节的区别,但在实际应用中用得极少,请大家先享受写项目的乐
		趣，再来探讨这些细节问题
i.	比如save和persist的区别
ii.	merge、evict 等方法
iii.	比如 refresh、lock 等
b)	建议的学习方法，动手实验
c)	细节问题参考补充视频


------------

@Test
	public void testQBC() {
		Session session = sf.openSession();
		session.beginTransaction();
		//criterion 标准/准则/约束
		Criteria c = session.createCriteria(Topic.class) //from Topic
					 
					 .add(Restrictions.gt("id", 2)) //greater than = id > 2   
					 .add(Restrictions.lt("id", 8)) //little than = id < 8
					 .add(Restrictions.like("title", "t_"))
					 .createCriteria("category")
					 .add(Restrictions.between("id", 3, 5)) //category.id >= 3 and category.id <=5
					 ;
		//DetachedCriterea
		for(Object o : c.list()) {
			Topic t = (Topic)o;
			System.out.println(t.getId() + "-" + t.getTitle());
		}
		session.getTransaction().commit();
		session.close();
		
	}

------------

方法

说明

Restrictions.eq

＝

Restrictions.allEq

利用Map来进行多个等于的限制

Restrictions.gt

＞

Restrictions.ge

＞＝

Restrictions.lt

＜

Restrictions.le

＜＝

Restrictions.between

BETWEEN

Restrictions.like

LIKE

Restrictions.in

in

Restrictions.and

and

Restrictions.or

or

Restrictions.sqlRestriction

用SQL限定查询

有空再添加上，代码示例。

QBC常用限定方法 

Restrictions.eq --> equal,等于.

Restrictions.allEq --> 参数为Map对象,使用key/value进行多个等于的比对,相当于多个Restrictions.eq的效果

Restrictions.gt --> great-than > 大于

Restrictions.ge --> great-equal >= 大于等于

Restrictions.lt --> less-than, < 小于

Restrictions.le --> less-equal <= 小于等于

Restrictions.between --> 对应SQL的between子句

Restrictions.like --> 对应SQL的LIKE子句

Restrictions.in --> 对应SQL的in子句

Restrictions.and --> and 关系

Restrictions.or --> or 关系

Restrictions.isNull --> 判断属性是否为空,为空则返回true

Restrictions.isNotNull --> 与isNull相反

Restrictions.sqlRestriction --> SQL限定的查询

Order.asc --> 根据传入的字段进行升序排序

Order.desc --> 根据传入的字段进行降序排序

MatchMode.EXACT --> 字符串精确匹配.相当于"like 'value'"

MatchMode.ANYWHERE --> 字符串在中间匹配.相当于"like '%value%'"

MatchMode.START --> 字符串在最前面的位置.相当于"like 'value%'"

MatchMode.END --> 字符串在最后面的位置.相当于"like '%value'"

例子
查询年龄在20-30岁之间的所有学生对象
List list = session.createCriteria(Student.class)
.add(Restrictions.between("age",new Integer(20),new Integer(30)).list();
查询学生姓名在AAA,BBB,CCC之间的学生对象
String[] names = {"AAA","BBB","CCC"};
List list = session.createCriteria(Student.class)
.add(Restrictions.in("name",names)).list();
查询年龄为空的学生对象
List list = session.createCriteria(Student.class)
.add(Restrictions.isNull("age")).list();
查询年龄等于20或者年龄为空的学生对象
List list = session.createCriteria(Student.class)
.add(Restrictions.or(Restrictions.eq("age",new Integer(20)),
Restrictions.isNull("age")).list();

--------------------------------------------------------------------
使用QBC实现动态查询 
public List findStudents(String name,int age){

Criteria criteria = session.createCriteria(Student.class);
if(name != null){
criteria.add(Restrictions.liek("name",name,MatchMode.ANYWHERE));
}
if(age != 0){
criteria.add(Restrictions.eq("age",new Integer(age)));
}
criteria.addOrder(Order.asc("name"));//根据名字升序排列
return criteria.list();
}

-----------------------------------------------------------------------------------

今天用了写hibernate高级查询时用了Restrictions(当然Expression也是可以以的)这个类.感觉不错.
下面的代码写的不易读.其实核心就是一句
Restrictions.or(Restrictions.like(),Restrictions.or(Restrictions.like,........))
里面的or可以无限加的.还是比较好用

Session session = getHibernateTemplate().getSessionFactory()
.openSession();
Criteria criteria = session.createCriteria(Film.class);
List<Film> list = criteria.add(
Restrictions.or(Restrictions.like("description", key,MatchMode.ANYWHERE),
Restrictions.or(Restrictions.like("name", key,MatchMode.ANYWHERE),
Restrictions.or(    Restrictions.like("direct", key,MatchMode.ANYWHERE),
Restrictions.or(Restrictions.like("mainplay",key,MatchMode.ANYWHERE),
Restrictions.like("filearea", key,MatchMode.ANYWHERE)))))).list();

session.close();
return list;

文件下载地址：http://dl.dbank.com/c01810oobb

------------

设置缓存。
设置在实体类上
Batchsize(size=5);

------------

ehcache.xml
缓存

------------


<?xml version="1.0"?>
-<ehcache> 
<!-- Sets the path to the directory where cache .data files are created. If the path is a Java System Property it is replaced by its value in the running VM. The following properties are translated: user.home - User's home directory user.dir - User's current working directory java.io.tmpdir - Default temp file path -->
 <diskStore path="java.io.tmpdir"/> 
<!--Default Cache configuration. These will applied to caches programmatically created through the CacheManager. The following attributes are required for defaultCache: maxInMemory - Sets the maximum number of objects that will be created in memory eternal - Sets whether elements are eternal. If eternal, timeouts are ignored and the element is never expired. timeToIdleSeconds - Sets the time to idle for an element before it expires. Is only used if the element is not eternal. Idle time is now - last accessed time timeToLiveSeconds - Sets the time to live for an element before it expires. Is only used if the element is not eternal. TTL is now - creation time overflowToDisk - Sets whether elements can overflow to disk when the in-memory cache has reached the maxInMemory limit. -->
 <defaultCache overflowToDisk="true" timeToLiveSeconds="1200" timeToIdleSeconds="120" eternal="false" maxElementsInMemory="10000"/> 
<!--Predefined caches. Add your cache configuration settings here. If you do not have a configuration for your cache a WARNING will be issued when the CacheManager starts The following attributes are required for defaultCache: name - Sets the name of the cache. This is used to identify the cache. It must be unique. maxInMemory - Sets the maximum number of objects that will be created in memory eternal - Sets whether elements are eternal. If eternal, timeouts are ignored and the element is never expired. timeToIdleSeconds - Sets the time to idle for an element before it expires. Is only used if the element is not eternal. Idle time is now - last accessed time timeToLiveSeconds - Sets the time to live for an element before it expires. Is only used if the element is not eternal. TTL is now - creation time overflowToDisk - Sets whether elements can overflow to disk when the in-memory cache has reached the maxInMemory limit. -->
 
<!-- Sample cache named sampleCache1 This cache contains a maximum in memory of 10000 elements, and will expire an element if it is idle for more than 5 minutes and lives for more than 10 minutes. If there are more than 10000 elements it will overflow to the disk cache, which in this configuration will go to wherever java.io.tmp is defined on your system. On a standard Linux system this will be /tmp" -->
 <cache overflowToDisk="true" timeToLiveSeconds="600" timeToIdleSeconds="300" eternal="false" maxElementsInMemory="10000" name="sampleCache1"/> 
<!-- Sample cache named sampleCache2 This cache contains 1000 elements. Elements will always be held in memory. They are not expired. -->
 <cache overflowToDisk="false" timeToLiveSeconds="0" timeToIdleSeconds="0" eternal="true" maxElementsInMemory="1000" name="sampleCache2"/> --> 
<!-- Place configuration for your caches following -->
 </ehcache>

------------

4	一级缓存和二级缓存和査询缓存（面试题）(详见hibernate_3000_Hibernate_3KindsOf_Cache)
a)	什么是缓存
b)	什么是一级缓存，session级别的缓存
c)	I什么是二级缓存，SessionFactory级别的缓存，可以跨越session存在
i.	经常被访间
ii.	改动不大不会经常改动
iii.	数重有限
d)	打开二级缓存
i.	hibernate.cfg.xml 设定：
<property
name= "cache.use_second_level_cache">true</property>
<property
name="cache.provider_class">org.hibernate.cache.EhCacheProvider</property>
ii.	@Cache注解(由hibernate扩展提供)
@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)

注：使用EhCache二级缓存 需要导入ehcache-1.2.3.jar及commons-logging-1.0.4.jar包
e)	load默认使用二级缓存，iterate默认使用二级缓存
f)	list默认往二级缓存加数据，但是查询的时候不使用
g)	如果要query用二级缓存，需打开查询缓存
<property name="cache.use_query_cache">true</property>
调用Query的setCachable (true)方法指明使用二级缓存
例如：session.createQuery("from Category").setCacheable(true).list();
h)	缓存算法：（纯为了面试）
i.	LRU  LFU  FIFO
1.	Least Recently Used –最近很少被使用
2.	Least Frequently Used (命中率高低)
3.	First In First Out 按顺序替换
ii.	memoryStoreEvictionPolicy = "LRU" (ehcache.xml中配置) 



---------------------------------------------------------------------------------------
2.4.7. 缓存

为了优化数据库访问,你可以激活所谓的Hibernate二级缓存.该缓存是可以按每个实体和集合进行配置的.

@org.hibernate.annotations.Cache定义了缓存策略及给定的二级缓存的范围. 此注解适用于根实体(非子实体),还有集合.

@Entity
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class Forest { ... }
    @OneToMany(cascade=CascadeType.ALL, fetch=FetchType.EAGER)
    @JoinColumn(name="CUST_ID")
    @Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
    public SortedSet<Ticket> getTickets() {
        return tickets;
    }
@Cache(
    CacheConcurrencyStrategy usage();                 (1)
    String region() default "";                       (2)
    String include() default "all";                   (3)
)
(1)	
usage: 给定缓存的并发策略(NONE, READ_ONLY, NONSTRICT_READ_WRITE, READ_WRITE, TRANSACTIONAL)

(2)	
region (可选的)：缓存范围(默认为类的全限定类名或是集合的全限定角色名)

(3)	
include (可选的)：值为all时包括了所有的属性(proterty), 为non-lazy时仅含非延迟属性(默认值为all)



------------

命名规则
easyloader
dialog
panel
常用的属性
常用方法
获取组件中的值
刷新页面
josn添加空白行
解决url乱码问题
改变grid颜色
校验

------------

class的属性都是以 “easyui-”开始，然后加上标签名字
console.info($('#id'));做调试用

------------

 
 单个的时候是不用数组
easyloader.load可以用using代替
 
   <script type="text/javascript" charset="UTF-8">
 $(function(){
	 easyloader.load('dialog',function(){
		 $("#dd").dialog({title: 'My Dialog',    
				    width: 400,    
				    height: 200,    
				    closed: false,    
				    cache: false, 
				    minimizable:true,
				    collapsible:true,
				    maximizable:true,
				    modal: true } );
	 });
 });
 
 </script >
 ---------------------------------------------------------------
 引入
     <script type="text/javascript" src="easyui/jquery-1.7.2.min.js"></script>   
     <script type="text/javascript" src="easyui/easyloader.js"></script>
     
     -----------------------body----------------------------------------
     
     <div id="dd" title="My Dialog" style="width:400px;height:200px;" >sssssssssssssss</div>
     
     ---------------------------------------------------------------
    如果是加载多个的时候用数组['dialog','messager']，后面是个回调函数
      $(function(){
	 easyloader.load(['dialog','messager'],function(){
		 $("#dd").dialog({title: 'My Dialog',    
				    width: 400,    
				    height: 200,    
				    closed: false,    
				    cache: false, 
				    minimizable:true,
				    collapsible:true,
				    maximizable:true,
				    modal: true } );
		 $.messager.alert("title","load ok");
	 });
});

------------

引入------------------------------------
      <script type="text/javascript" src="easyui/jquery-1.7.2.min.js"></script>   
     <script type="text/javascript" src="easyui/jquery.easyui.min.js"></script> 
     <script type="text/javascript" src="easyui/locale/easyui-lang-zh_CN.js"></script></head> 
     <link rel="stylesheet" type="text/css" href="easyui/themes/default/easyui.css">   
     <link rel="stylesheet" type="text/css" href="easyui/themes/icon.css">  
  
   ------------------------------------------------------------------------------
   <script type="text/javascript" charset="UTF-8">
 $(function(){ $('#dd').dialog({    
    title: 'My Dialog',    
    width: 400,    
    height: 200,    
    closed: false,    
    cache: false, 
    minimizable:true,
    collapsible:true,
    maximizable:true,
    modal: true  
});    

 });
</script> 

------------

属性
属性名 属性值类型 描述 默认值 
id string 面板的ID属性。 null 
title string 在面板头部显示的标题文本。 null 
iconCls string 设置一个16x16图标的CSS类ID显示在面板左上角。 null 
width number 设置面板宽度。 auto 
height number 设置面板高度。 auto 
left number 设置面板距离左边的位置（即X轴位置）。 null 
top number 设置面板距离顶部的位置（即Y轴位置）。 null 
cls string 添加一个CSS类ID到面板。 null 
headerCls string 添加一个CSS类ID到面板头部。 null 
bodyCls string 添加一个CSS类ID到面板正文部分。 null 
style object 添加一个当前指定样式到面板。 
如下代码示例更改面板边框宽度：

<div class="easyui-panel" style="width:200px;height:100px"
        data-options="style:{borderWidth:2}">
</div>
 {} 
fit boolean 当设置为true的时候面板大小将自适应父容器。下面的例子显示了一个面板，可以自动在父容器的最大范围内调整大小。 
<div style="width:200px;height:100px;padding:5px">
	<div class="easyui-panel" style="width:200px;height:100px"
			data-options="fit:true,border:false">
		Embedded Panel
	</div>
</div>

 false 
border boolean 定义是否显示面板边框。 true 
doSize boolean 如果设置为true，在面板被创建的时候将重置大小和重新布局。 true 
noheader boolean 如果设置为true，那么将不会创建面板标题。 false 
content string 面板主体内容。 null 
collapsible boolean 定义是否显示可折叠按钮。 false 
minimizable boolean 定义是否显示最小化按钮。 false 
maximizable boolean 定义是否显示最大化按钮。 false 
closable boolean 定义是否显示关闭按钮。 false 
tools array,selector 自定义工具菜单，可用值：
1) 数组，每个元素都包含'iconCls'和'handler'属性。
2) 指向工具菜单的选择器。

面板工具菜单可以声明在已经存在的<div>标签上：

<div class="easyui-panel" style="width:300px;height:200px"
		title="My Panel" data-options="iconCls:'icon-ok',tools:'#tt'">
</div>
<div id="tt">
	<a href="#" class="icon-add" onclick="javascript:alert('add')"></a>
	<a href="#" class="icon-edit" onclick="javascript:alert('edit')"></a>
</div>

面板工具菜单也可以通过数组定义：

<div class="easyui-panel" style="width:300px;height:200px"
		title="My Panel" data-options="iconCls:'icon-ok',tools:[
				{
					iconCls:'icon-add',
					handler:function(){alert('add')}
				},{
					iconCls:'icon-edit',
					handler:function(){alert('edit')}
				}]">
</div>

 [] 
collapsed boolean 定义是否在初始化的时候折叠面板。 false 
minimized boolean 定义是否在初始化的时候最小化面板。 false 
maximized boolean 定义是否在初始化的时候最大化面板。 false 
closed boolean 定义是否在初始化的时候关闭面板。 false 
href string 从URL读取远程数据并且显示到面板。注意：内容将不会被载入，直到面板打开或扩大，在创建延迟加载面板时是非常有用的： 
<div id="pp" class="easyui-panel" style="width:300px;height:200px"
		data-options="href='get_content.php',closed:true">
</div>
<a href="#" onclick="javascript:$('#pp').panel('open')">Open</a>

 null 
cache boolean 如果为true，在超链接载入时缓存面板内容。 true 
loadingMessage string 在加载远程数据的时候在面板内显示一条消息。 Loading… 
extractor function 定义如何从ajax应答数据中提取内容，返回提取数据。
extractor: function(data){
	var pattern = /<body[^>]*>((.|[\n\r])*)<\/body>/im;
	var matches = pattern.exec(data);
	if (matches){
		return matches[1];	// 仅提取主体内容
	} else {
		return data;
	}
}

  


 
事件
事件名 事件参数 描述 
onLoad none 在加载远程数据时触发。 
onBeforeOpen none 在打开面板之前触发，返回false可以取消打开操作。 
onOpen none 在打开面板之后触发。 
onBeforeClose none 在关闭面板之前触发，返回false可以取消关闭操作。下列的面板将不能关闭。
<div class="easyui-panel" style="width:300px;height:200px;"
		title="My Panel" data-options="onBeforeClose:function(){return false}">
    面板将不能关闭
</div>

 
onClose none 在面板关闭之后触发。 
onBeforeDestroy none 在面板销毁之前触发，返回false可以取消销毁操作。 
onDestroy none 在面板销毁之后触发。 
onBeforeCollapse none 在面板折叠之前触发，返回false可以终止折叠操作。 
onCollapse none 在面板折叠之后触发。 
onBeforeExpand none 在面板展开之前触发，返回false可以终止展开操作。 
onExpand none 在面板展开之后触发。 
onResize width, height 在面板改变大小之后触发。
width：新的宽度。
height：新的高度。 
onMove left,top 在面板移动之后触发。
left：新的左边距位置。
top：新的上边距位置。 
onMaximize none 在窗口最大化之后触发。 
onRestore none 在窗口恢复到原始大小以后触发。 
onMinimize none 在窗口最小化之后触发。 


 
方法
方法名 方法参数 描述 
options none 返回属性对象。 
panel none 返回面板对象。 
header none 返回面板头对象。 
body none 返回面板主体对象。 
setTitle title 设置面板头的标题文本。 
open forceOpen 在'forceOpen'参数设置为true的时候，打开面板时将跳过'onBeforeOpen'回调函数。 
close forceClose 在'forceClose'参数设置为true的时候，关闭面板时将跳过'onBeforeClose'回调函数。 
destroy forceDestroy 在'forceDestroy'参数设置为true的时候，销毁面板时将跳过'onBeforeDestory'回调函数。 
refresh href 刷新面板来装载远程数据。如果'href'属性有了新配置，它将重写旧的'href'属性。 
代码示例：

// 打开面板且刷新其内容。
$('#pp').panel('open').panel('refresh');
// 刷新一个新的URL内容$('#pp').panel('open').panel('refresh','new_content.php');

 
resize options 设置面板大小和布局。参数对象包含下列属性：
width：新的面板宽度。
height：新的面板高度。
left：新的面板左边距位置。
top：新的面板上边距位置。 
代码示例：

$('#pp').panel('resize',{
	width: 600,
	height: 400
});

 
move options 移动面板到一个新位置。参数对象包含下列属性：
left：新的左边距位置。
top：新的上边距位置。 
maximize none 最大化面板到容器大小。 
minimize none 最小化面板。 
restore none 恢复最大化面板回到原来的大小和位置。 
collapse animate 折叠面板主题。 
expand animate 展开面板主体。 



------------

iconCls='icon-save'  图标
 closable=true     定义是否显示关闭按钮。
  collapsible=true   定义是否显示可折叠按钮。
   minimizable=true  最小化
    maximizable=true  最大化
    
    closed 关闭的，初始化不显示，
    
    
     $('#searchPanel').panel("collapse",true);
    
    

------------

弹出提示

------------

在屏幕右下角显示一条消息窗口。该选项参数是一个可配置的对象：
showType：定义将如何显示该消息。可用值有：null,slide,fade,show。默认：slide。
showSpeed：定义窗口显示的过度时间。默认：600毫秒。
width：定义消息窗口的宽度。默认：250px。
height：定义消息窗口的高度。默认：100px。
title：在头部面板显示的标题文本。
msg：显示的消息文本。
style：定义消息窗体的自定义样式。
timeout：如果定义为0，消息窗体将不会自动关闭，除非用户关闭他。如果定义成非0的树，消息窗体将在超时后自动关闭。默认：4秒。 
代码示例：

$.messager.show({
	title:'我的消息',
	msg:'消息将在5秒后关闭。',
	timeout:5000,
	showType:'slide'
});
// 消息将显示在顶部中间
$.messager.show({
	title:'我的消息',
	msg:'消息将在4秒后关闭。',
	showType:'show',
	style:{
		right:'',
		top:document.body.scrollTop+document.documentElement.scrollTop,
		bottom:''
	}
});



------------

 var isPartitionTb =$("#isPartitionTb").combobox('getValue');
var hisTbStartDate =$("#hisTbStartDate").datebox('getValue');

------------

// 		 document.URL=location.href   ;
// 		window.location.reload();
		grid.reload();
		
		
		
		
		
$(function(){
$(".datagrid-toolbar").append("<input type='checkbox'  id='re_fresh'  style='position:absolute;top:5px;right:500px;'  onclick=myrefresh(); /><span style='position:absolute;top:3px;right:444px;'>自动刷新</span>");
});
        
function myrefresh(){
	if($("#re_fresh")){
		if($("#re_fresh").attr("checked")){
		 grid.reload(); 
		 setTimeout('myrefresh()',5000); //指定5秒刷新一次 
		}
	}
}


------------

	public void getDataDtList(){
		String checkCode = this.getHttpRequest().getParameter("checkCode");// checkCode
		List<DqLogicCheckResult>  list = this.dqLogicCheckResultService.findDataDtListByCheckCode(checkCode);
		
		List<Map> ret = new ArrayList();
		Map<String, Object> map;
		for(DqLogicCheckResult  dqBasic : list){
			map = new HashMap();
			Date dataDt =  dqBasic.getDataDt();
			SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
			String s=formater.format(dataDt);
			map.put("dataDtId", s);
			map.put("dataDtText", s);
			ret.add(map);
		}
		String json = JSONArray.fromObject(ret).toString();
		json = json.replace("[{", "[{\"dataDtId\":\"\",\"dataDtText\":\"\"},{");// 添加一个空选项
		writeContent(json);
		
	}

------------

function query(formId){
    var tableName = $("#tableName").val();
    var dcId  = $("#dcId").val();
    if(tableName=='表名'){
    	tableName="";
    }
	var url="dcClearTable_query.action?tableName="+tableName+"&dcId="+dcId;
	var location  = encodeURI(url);
	var opt = grid.getOptions();
	opt.url=location;
    grid.load();	
}


然后在页面中，转化一下
-------------------------------------------------------------------
@Override
	public void query() {
	
		try {
			if((super.getHttpRequest().getParameter("tableName")==null)){
				String dcId = super.getHttpRequest().getParameter("dcId");
				Pageable pageable = this.getPager();
				Page<DcClearTable> page = this.dcClearTableService.queryForPage(pageable, dcId,null);
				writeContent(convertToJson(page, null));
			}else{
				String  tableName = new String(super.getHttpRequest().getParameter("tableName").getBytes("ISO-8859-1"),"utf-8");
				String dcId = super.getHttpRequest().getParameter("dcId");
				Pageable pageable = this.getPager();
				Page<DcClearTable> page = this.dcClearTableService.queryForPage(pageable, dcId,tableName);
				writeContent(convertToJson(page, null));
			}
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
	}

------------

$('#tt').datagrid({   
    rowStyler:function(index,row){   
        if (row.isexception==1){   
            return 'background-color:red;';   
        }   
    }   
});

------------

拓展1 
$.extend($.fn.validatebox.defaults.rules,
 
{    //验证中文  
 
CHS:{
 
validator:function(value){
 
return /^[\u0391-\uFFE5]+$/.test(value);
 
},
 
message:"只能输入汉字."
 
},
 
//字符验证
 
stringCheck:{
 
validator:function(value){
 
return /^[\u0391-\uFFE5\w]+$/.test(value);
 
},
 
message:"只能包括中文字、英文字母、数字和下划线."
 
},
 
//验证中文,英文,数字
 
stringCheckSub:{
 
validator:function(value){
 
return /^[a-zA-Z0-9\u4E00-\u9FA5]+$/.test(value);
 
},
 
message:"只能包括中文字、英文字母、数字."
 
},
 
englishCheckSub:{
 
validator:function(value){
 
return /^[a-zA-Z0-9]+$/.test(value);
 
},
 
message:"只能包括英文字母、数字."
 
},
 
numberCheckSub:{
 
validator:function(value){
 
return /^[0-9]+$/.test(value);
 
},
 
message:"只能输入数字."
 
},
 
//手机号码验证
 
mobile:{
 
validator:function(value){
 
var reg = /^(((13[0-9]{1})|(14[0-9]{1})|(15[0-9]{1})|(18[0-9]{1}))+\d{8})$/;
 
 
 
return value.length == 11 && reg.test(value);
 
},
 
message:"请正确填写您的手机号码."
 
},
 
//电话号码验证
 
telephone:{
 
validator:function(value){
 
//电话号码格式010-12345678
 
var reg = /^\d{3,4}?\d{7,8}$/;
 
 
 
return reg.test(value);
 
},
 
message:"请正确填写您的电话号码."
 
},
 
//联系电话(手机/电话皆可)验证 
 
mobileTelephone:{
 
validator:function(value){
 
var cmccMobile = /^(((13[0-9]{1})|(14[0-9]{1})|(15[0-9]{1})|(18[0-9]{1}))+\d{8})$/;
 
var tel = /^\d{3,4}?\d{7,8}$/;
 
return tel.test(value) || (value.length == 11 && cmccMobile.test(value));
 
},
 
message:"请正确填写您的联系电话."
 
},
 
//验证国内邮编验证
 
zipCode:{
 
validator:function(value){
 
var reg = /^[1-9]\d{5}$/;
 
return reg.test(value);
 
},
 
message:"邮编必须长短0开端的6位数字."
 
},
 
//身份证号码验证 
 
idCardNo:{
 
validator:function(value){
 
return isIdCardNo(value); 
 
},
 
message:"请正确输入您的身份证号码."
 
},
 
 
 
//验证两个不同时为空
 
//可以自定义提示信息
 
 
 
  allNotNull:{
 
validator:function(toValue,fromValue){
 
if(fromValue ==null || fromValue.length ==0 || fromValue[0]==null || fromValue[0]==""){
 
if(toValue ==null || toValue.length ==0 || toValue[0]==null || toValue[0]==""){
 
$.fn.validatebox.defaults.rules.compareDigit.message="中，英.文名不可同时为空 ";
 
return false;
 
}else{
 
return true;
 
}
 
}else
 
{return true;}
 
},
 
message:""
 
},
 
 
 
 
 
 
 
 
 
//数字验证大小，结束值应该大于开始值
 
//可以自定义提示信息
 
compareDigit:{
 
validator:function(toValue,fromValue){
 
if(fromValue ==null || fromValue.length ==0 || fromValue[0]==null || fromValue[0]==""){
 
return true;
 
}
 
if(parseFloat(toValue) > parseFloat(fromValue[0])){
 
return true;
 
}else{
 
if(fromValue.length >= 2){
 
$.fn.validatebox.defaults.rules.compareDigit.message = fromValue[1];
 
}else{
 
$.fn.validatebox.defaults.rules.compareDigit.message = '结束值应该大于开始值';
 
}
 
return false
 
}
 
},
 
message:""
 
},
 
//日期、时间验证大小，结束日期应该大于开始日期
 
//可以自定义提示信息
 
compareDate:{
 
validator:function(toDate,param){
 
if(param ==null || param.length ==0 || param[0]==null || param[0]==""){
 
return true;
 
}
 
if(toDate > param[0]){
 
return true;
 
}else{
 
if(param.length >= 2){
 
$.fn.validatebox.defaults.rules.compareDate.message = param[1];
 
}
 
else {
 
$.fn.validatebox.defaults.rules.compareDate.message = '结束日期应该大于开始日期';
 
}
 
return false
 
}
 
},
 
message:''
 
}
 
//到服务器端验证
 
/*remote:{
 
validator:function(value,param){
 
var params = {};
 
params[param[1]] = value;
 
$.post(param[0],params,function(data){
 
if(!data.msg){
 
$.fn.validatebox.defaults.rules.account.message = param[2];
 
} 
 
return data.msg;
 
});
 
},
 
message:""
 
}*/
 
}
 
)
 
 
 
 
 
//--身份证号码验证-支持新的带x身份证
 
function isIdCardNo(num) 
 
{
 
    var factorArr = new Array(7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2,1);
 
    var error;
 
    var varArray = new Array();
 
    var intValue;
 
    var lngProduct = 0;
 
    var intCheckDigit;
 
    var intStrLen = num.length;
 
    var idNumber = num;    
 
    // initialize
 
    if ((intStrLen != 15) && (intStrLen != 18)) {
 
        //error = "输入身份证号码长度不对！";
 
        //alert(error);
 
        //frmAddUser.txtIDCard.focus();
 
        return false;
 
    }    
 
    // check and set value
 
    for(i=0;i<intStrLen;i++) {
 
        varArray[i] = idNumber.charAt(i);
 
        if ((varArray[i] < '0' || varArray[i] > '9') && (i != 17)) {
 
            //error = "错误的身份证号码！.";
 
            //alert(error);
 
            //frmAddUser.txtIDCard.focus();
 
            return false;
 
        } else if (i < 17) {
 
            varArray[i] = varArray[i]*factorArr[i];
 
        }
 
    }
 
    if (intStrLen == 18) {
 
        //check date
 
        var date8 = idNumber.substring(6,14);
 
        if (isDate8(date8) == false) {
 
            //error = "身份证中日期信息不正确！.";
 
            //alert(error);
 
            return false;
 
        }        
 
        // calculate the sum of the products
 
        for(i=0;i<17;i++) {
 
            lngProduct = lngProduct + varArray[i];
 
        }        
 
        // calculate the check digit
 
        intCheckDigit = 12 - lngProduct % 11;
 
        switch (intCheckDigit) {
 
            case 10:
 
                intCheckDigit = 'X';
 
                break;
 
            case 11:
 
                intCheckDigit = 0;
 
                break;
 
            case 12:
 
                intCheckDigit = 1;
 
                break;
 
        }        
 
        // check last digit
 
        if (varArray[17].toUpperCase() != intCheckDigit) {
 
            //error = "身份证效验位错误!...正确为： " + intCheckDigit + ".";
 
            //alert(error);
 
            return false;
 
        }
 
    } 
 
    else{        //length is 15
 
        //check date
 
        var date6 = idNumber.substring(6,12);
 
        if (isDate6(date6) == false) {
 
            //alert("身份证日期信息有误！.");
 
            return false;
 
        }
 
    }
 
    //alert ("Correct.");
 
    return true;
 
}
 
 
 
 
 
/**
 
 * 判断是否为“YYYYMM”式的时期
 
 *
 
 */
 
function isDate6(sDate) {
 
   if(!/^[0-9]{6}$/.test(sDate)) {
 
      return false;
 
   }
 
   var year, month, day;
 
   year = sDate.substring(0, 4);
 
   month = sDate.substring(4, 6);
 
   if (year < 1700 || year > 2500) return false
 
   if (month < 1 || month > 12) return false
 
   return true
 
}
 
/**
 
 * 判断是否为“YYYYMMDD”式的时期
 
 *
 
 */
 
function isDate8(sDate) {
 
   if(!/^[0-9]{8}$/.test(sDate)) {
 
      return false;
 
   }
 
   var year, month, day;
 
   year = sDate.substring(0, 4);
 
   month = sDate.substring(4, 6);
 
   day = sDate.substring(6, 8);
 
   var iaMonthDays = [31,28,31,30,31,30,31,31,30,31,30,31]
 
   if (year < 1700 || year > 2500) return false
 
   if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) iaMonthDays[1]=29;
 
   if (month < 1 || month > 12) return false
 
   if (day < 1 || day > iaMonthDays[month - 1]) return false
 
   return true
 
}
 
拓展2
 
$.extend($.fn.validatebox.defaults.rules,{
 
   idcard : {// 验证身份证 
 
       validator : function(value) { 
 
           return/^\d{15}(\d{2}[A-Za-z0-9])?$/i.test(value); 
 
       }, 
 
       message : '身份证号码格式不正确' 
 
   },
 
     minLength: {
 
       validator: function(value, param){
 
           return value.length >= param[0];
 
       },
 
       message: '请输入至少（2）个字符.'
 
   },
 
   length:{validator:function(value,param){ 
 
       var len=$.trim(value).length; 
 
           return len>=param[0]&&len<=param[1]; 
 
       }, 
 
           message:"输入内容长度必须介于{0}和{1}之间." 
 
       }, 
 
   phone : {// 验证电话号码 
 
       validator : function(value) { 
 
           return/^((\(\d{2,3}\))|(\d{3}\-))?(\(0\d{2,3}\)|0\d{2,3}-)?[1-9]\d{6,7}(\-\d{1,4})?$/i.test(value); 
 
       }, 
 
       message : '格式不正确,请使用下面格式:020-88888888' 
 
   }, 
 
   mobile : {// 验证手机号码 
 
       validator : function(value) { 
 
           return/^(13|15|18)\d{9}$/i.test(value); 
 
       }, 
 
       message : '手机号码格式不正确' 
 
}, 
 
phoneNum: {// 验证手机号码+固定电话 
 
       validator : function(value) { 
 
           return /^(((((010)|(02\d)))[2-8]\d{7})|(0[3-9]\d{2}[2-8]\d{6,7})|(0?(?:147|1[358]\d)\d{8}))$/i.test(value); 
 
       }, 
 
       message : '手机号码格式不正确' 
 
}, 
 
 
 
   intOrFloat : {// 验证整数或小数 
 
       validator : function(value) { 
 
           return /^\d+(\.\d+)?$/i.test(value); 
 
       }, 
 
       message : '请输入数字，并确保格式正确' 
 
   }, 
 
   currency : {// 验证货币 
 
       validator : function(value) { 
 
           return /^\d+(\.\d+)?$/i.test(value); 
 
       }, 
 
       message : '货币格式不正确' 
 
   }, 
 
   qq : {// 验证QQ,从10000开始 
 
       validator : function(value) { 
 
           return /^[1-9]\d{4,9}$/i.test(value); 
 
       }, 
 
       message : 'QQ号码格式不正确' 
 
   }, 
 
   integer : {// 验证整数 
 
       validator : function(value) { 
 
           return /^[+]?[1-9]+\d*$/i.test(value); 
 
       }, 
 
       message : '请输入整数' 
 
   }, 
 
   age : {// 验证年龄
 
       validator : function(value) { 
 
           return /^(?:[1-9][0-9]?|1[01][0-9]|120)$/i.test(value); 
 
       }, 
 
       message : '年龄必须是0到120之间的整数' 
 
   }, 
 
   
 
   chinese : {// 验证中文 
 
       validator : function(value) { 
 
           return /^[\Α-\￥]+$/i.test(value); 
 
       }, 
 
       message : '请输入中文' 
 
   }, 
 
   english : {// 验证英语 
 
       validator : function(value) { 
 
           return /^[A-Za-z]+$/i.test(value); 
 
       }, 
 
       message : '请输入英文' 
 
   }, 
 
   unnormal : {// 验证是否包含空格和非法字符 
 
       validator : function(value) { 
 
           return /.+/i.test(value); 
 
       }, 
 
       message : '输入值不能为空和包含其他非法字符' 
 
   }, 
 
   username : {// 验证用户名 
 
       validator : function(value) { 
 
           return/^[a-zA-Z][a-zA-Z0-9_]{5,15}$/i.test(value); 
 
       }, 
 
       message : '用户名不合法（字母开头，允许6-16字节，允许字母数字下划线）' 
 
   }, 
 
   faxno : {// 验证传真 
 
       validator : function(value) { 
 
//           return /^[+]{0,1}(\d){1,3}[]?([-]?((\d)|[ ]){1,12})+$/i.test(value); 
 
           return /^((\(\d{2,3}\))|(\d{3}\-))?(\(0\d{2,3}\)|0\d{2,3}-)?[1-9]\d{6,7}(\-\d{1,4})?$/i.test(value); 
 
       }, 
 
       message : '传真号码不正确' 
 
   }, 
 
   zip : {// 验证邮政编码 
 
       validator : function(value) { 
 
           return /^[1-9]\d{5}$/i.test(value); 
 
       }, 
 
       message : '邮政编码格式不正确' 
 
   }, 
 
   ip : {// 验证IP地址 
 
       validator : function(value) { 
 
           return /d+.d+.d+.d+/i.test(value); 
 
       }, 
 
       message : 'IP地址格式不正确' 
 
   }, 
 
   name : {// 验证姓名，可以是中文或英文 
 
           validator : function(value) { 
 
               return /^[\Α-\￥]+$/i.test(value)|/^\w+[\w\s]+\w+$/i.test(value); 
 
           }, 
 
           message : '请输入姓名' 
 
   },
 
   date : {// 验证姓名，可以是中文或英文 
 
       validator : function(value) { 
 
        //格式yyyy-MM-dd或yyyy-M-d
 
           return/^(?:(?!0000)[0-9]{4}([-]?)(?:(?:0?[1-9]|1[0-2])\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\1(?:29|30)|(?:0?[13578]|1[02])\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-]?)0?2\2(?:29))$/i.test(value); 
 
       },
 
       message : '清输入合适的日期格式'
 
   },
 
   msn:{ 
 
       validator : function(value){ 
 
       return/^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/.test(value); 
 
   }, 
 
   message : '请输入有效的msn账号(例：abc@hotnail(msn/live).com)' 
 
   },
 
   same:{ 
 
       validator : function(value, param){ 
 
           if($("#"+param[0]).val() !="" && value != ""){ 
 
               return$("#"+param[0]).val() == value; 
 
           }else{ 
 
               return true; 
 
           } 
 
       }, 
 
       message : '两次输入的密码不一致！'   
 
   } 
 
});
 
 应用实例：
 
<td align="right"><label style="color: red">*</label>移动电话：</td>
 
<td colspan="2"> 
 
<input id="mobile" type="text" class="easyui-validatebox" validType="mobile" name="mobile" required="true"  maxlength

------------

安装redis
配置redis
数据类型

------------

redis学习地址：
http://www.runoob.com/redis/redis-tutorial.html；

Window 下安装
下载地址：https://github.com/dmajkic/redis/downloads。
下载到的Redis支持32bit和64bit。根据自己实际情况选择，将64bit的内容cp到自定义盘符安装目录取名redis。 如 C:\reids
打开一个cmd窗口 使用cd命令切换目录到 C:\redis 运行 redis-server.exe redis.conf 。
如果想方便的话，可以把redis的路径加到系统的环境变量里，这样就省得再输路径了，后面的那个redis.conf可以省略，如果省略，会启用默认的。

这时候另启一个cmd窗口，原来的不要关闭，不然就无法访问服务端了。
切换到redis目录下运行 redis-cli.exe -h 127.0.0.1 -p 6379 。
设置键值对 set myKey abc
取出键值对 get myKey



Linux 下安装
下载地址：http://redis.io/download，下载最新文档版本。
本教程使用的最新文档版本为 2.8.17，下载并安装：
$ wget http://download.redis.io/releases/redis-2.8.17.tar.gz
$ tar xzf redis-2.8.17.tar.gz
$ cd redis-2.8.17
$ make
make完后 redis-2.8.17目录下会出现编译后的redis服务程序redis-server,还有用于测试的客户端程序redis-cli,两个程序位于安装目录 src 目录下：
下面启动redis服务.
$ cd src
$ ./redis-server
注意这种方式启动redis 使用的是默认配置。也可以通过启动参数告诉redis使用指定配置文件使用下面命令启动。
$ cd src
$ ./redis-server redis.conf
redis.conf是一个默认的配置文件。我们可以根据需要使用自己的配置文件。
启动redis服务进程后，就可以使用测试客户端程序redis-cli和redis服务交互了。 比如：
$ cd src
$ ./redis-cli
redis> set foo bar
OK
redis> get foo
"bar"




Ubuntu 下安装
在 Ubuntu 系统安装 Redi 可以使用以下命令:
$sudo apt-get update
$sudo apt-get install redis-server
启动 Redis
$ redis-server
查看 redis 是否启动？
$ redis-cli
以上命令将打开以下终端：
redis 127.0.0.1:6379>
127.0.0.1 是本机 IP ，6379 是 redis 服务端口。现在我们输入 PING 命令。
redis 127.0.0.1:6379> ping
PONG
以上说明我们已经成功安装了redis。

------------

Redis 配置
Redis 的配置文件位于 Redis 安装目录下，文件名为 redis.conf。
你可以通过 CONFIG 命令查看或设置配置项。
语法
Redis CONFIG 命令格式如下：
redis 127.0.0.1:6379> CONFIG GET CONFIG_SETTING_NAME
实例
redis 127.0.0.1:6379> CONFIG GET loglevel

1) "loglevel"
2) "notice"
使用 * 号获取所有配置项：
实例
redis 127.0.0.1:6379> CONFIG GET *

  1) "dbfilename"
  2) "dump.rdb"
  3) "requirepass"
  4) ""
  5) "masterauth"
  6) ""
  7) "unixsocket"
  8) ""
  9) "logfile"
 10) ""
 11) "pidfile"
 12) "/var/run/redis.pid"
 13) "maxmemory"
 14) "0"
 15) "maxmemory-samples"
 16) "3"
 17) "timeout"
 18) "0"
 19) "tcp-keepalive"
 20) "0"
 21) "auto-aof-rewrite-percentage"
 22) "100"
 23) "auto-aof-rewrite-min-size"
 24) "67108864"
 25) "hash-max-ziplist-entries"
 26) "512"
 27) "hash-max-ziplist-value"
 28) "64"
 29) "list-max-ziplist-entries"
 30) "512"
 31) "list-max-ziplist-value"
 32) "64"
 33) "set-max-intset-entries"
 34) "512"
 35) "zset-max-ziplist-entries"
 36) "128"
 37) "zset-max-ziplist-value"
 38) "64"
 39) "hll-sparse-max-bytes"
 40) "3000"
 41) "lua-time-limit"
 42) "5000"
 43) "slowlog-log-slower-than"
 44) "10000"
 45) "latency-monitor-threshold"
 46) "0"
 47) "slowlog-max-len"
 48) "128"
 49) "port"
 50) "6379"
 51) "tcp-backlog"
 52) "511"
 53) "databases"
 54) "16"
 55) "repl-ping-slave-period"
 56) "10"
 57) "repl-timeout"
 58) "60"
 59) "repl-backlog-size"
 60) "1048576"
 61) "repl-backlog-ttl"
 62) "3600"
 63) "maxclients"
 64) "4064"
 65) "watchdog-period"
 66) "0"
 67) "slave-priority"
 68) "100"
 69) "min-slaves-to-write"
 70) "0"
 71) "min-slaves-max-lag"
 72) "10"
 73) "hz"
 74) "10"
 75) "no-appendfsync-on-rewrite"
 76) "no"
 77) "slave-serve-stale-data"
 78) "yes"
 79) "slave-read-only"
 80) "yes"
 81) "stop-writes-on-bgsave-error"
 82) "yes"
 83) "daemonize"
 84) "no"
 85) "rdbcompression"
 86) "yes"
 87) "rdbchecksum"
 88) "yes"
 89) "activerehashing"
 90) "yes"
 91) "repl-disable-tcp-nodelay"
 92) "no"
 93) "aof-rewrite-incremental-fsync"
 94) "yes"
 95) "appendonly"
 96) "no"
 97) "dir"
 98) "/home/deepak/Downloads/redis-2.8.13/src"
 99) "maxmemory-policy"
100) "volatile-lru"
101) "appendfsync"
102) "everysec"
103) "save"
104) "3600 1 300 100 60 10000"
105) "loglevel"
106) "notice"
107) "client-output-buffer-limit"
108) "normal 0 0 0 slave 268435456 67108864 60 pubsub 33554432 8388608 60"
109) "unixsocketperm"
110) "0"
111) "slaveof"
112) ""
113) "notify-keyspace-events"
114) ""
115) "bind"
116) ""
编辑配置
你可以通过修改 redis.conf 文件或使用 CONFIG set 命令来修改配置。
语法
CONFIG SET 命令基本语法：
redis 127.0.0.1:6379> CONFIG SET CONFIG_SETTING_NAME NEW_CONFIG_VALUE
实例
redis 127.0.0.1:6379> CONFIG SET loglevel "notice"
OK
redis 127.0.0.1:6379> CONFIG GET loglevel

1) "loglevel"
2) "notice"
参数说明
redis.conf 配置项说明如下：
1. Redis默认不是以守护进程的方式运行，可以通过该配置项修改，使用yes启用守护进程
    daemonize no
2. 当Redis以守护进程方式运行时，Redis默认会把pid写入/var/run/redis.pid文件，可以通过pidfile指定
    pidfile /var/run/redis.pid
3. 指定Redis监听端口，默认端口为6379，作者在自己的一篇博文中解释了为什么选用6379作为默认端口，因为6379在手机按键上MERZ对应的号码，而MERZ取自意大利歌女Alessia Merz的名字
    port 6379
4. 绑定的主机地址
    bind 127.0.0.1
5.当 客户端闲置多长时间后关闭连接，如果指定为0，表示关闭该功能
    timeout 300
6. 指定日志记录级别，Redis总共支持四个级别：debug、verbose、notice、warning，默认为verbose
    loglevel verbose
7. 日志记录方式，默认为标准输出，如果配置Redis为守护进程方式运行，而这里又配置为日志记录方式为标准输出，则日志将会发送给/dev/null
    logfile stdout
8. 设置数据库的数量，默认数据库为0，可以使用SELECT <dbid>命令在连接上指定数据库id
    databases 16
9. 指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合
    save <seconds> <changes>
    Redis默认配置文件中提供了三个条件：
    save 900 1
    save 300 10
    save 60 10000
    分别表示900秒（15分钟）内有1个更改，300秒（5分钟）内有10个更改以及60秒内有10000个更改。
 
10. 指定存储至本地数据库时是否压缩数据，默认为yes，Redis采用LZF压缩，如果为了节省CPU时间，可以关闭该选项，但会导致数据库文件变的巨大
    rdbcompression yes
11. 指定本地数据库文件名，默认值为dump.rdb
    dbfilename dump.rdb
12. 指定本地数据库存放目录
    dir ./
13. 设置当本机为slav服务时，设置master服务的IP地址及端口，在Redis启动时，它会自动从master进行数据同步
    slaveof <masterip> <masterport>
14. 当master服务设置了密码保护时，slav服务连接master的密码
    masterauth <master-password>
15. 设置Redis连接密码，如果配置了连接密码，客户端在连接Redis时需要通过AUTH <password>命令提供密码，默认关闭
    requirepass foobared
16. 设置同一时间最大客户端连接数，默认无限制，Redis可以同时打开的客户端连接数为Redis进程可以打开的最大文件描述符数，如果设置 maxclients 0，表示不作限制。当客户端连接数到达限制时，Redis会关闭新的连接并向客户端返回max number of clients reached错误信息
    maxclients 128
17. 指定Redis最大内存限制，Redis在启动时会把数据加载到内存中，达到最大内存后，Redis会先尝试清除已到期或即将到期的Key，当此方法处理 后，仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行读取操作。Redis新的vm机制，会把Key存放内存，Value会存放在swap区
    maxmemory <bytes>
18. 指定是否在每次更新操作后进行日志记录，Redis在默认情况下是异步的把数据写入磁盘，如果不开启，可能会在断电时导致一段时间内的数据丢失。因为 redis本身同步数据文件是按上面save条件来同步的，所以有的数据会在一段时间内只存在于内存中。默认为no
    appendonly no
19. 指定更新日志文件名，默认为appendonly.aof
     appendfilename appendonly.aof
20. 指定更新日志条件，共有3个可选值： 
    no：表示等操作系统进行数据缓存同步到磁盘（快） 
    always：表示每次更新操作后手动调用fsync()将数据写到磁盘（慢，安全） 
    everysec：表示每秒同步一次（折衷，默认值）
    appendfsync everysec
 
21. 指定是否启用虚拟内存机制，默认值为no，简单的介绍一下，VM机制将数据分页存放，由Redis将访问量较少的页即冷数据swap到磁盘上，访问多的页面由磁盘自动换出到内存中（在后面的文章我会仔细分析Redis的VM机制）
     vm-enabled no
22. 虚拟内存文件路径，默认值为/tmp/redis.swap，不可多个Redis实例共享
     vm-swap-file /tmp/redis.swap
23. 将所有大于vm-max-memory的数据存入虚拟内存,无论vm-max-memory设置多小,所有索引数据都是内存存储的(Redis的索引数据 就是keys),也就是说,当vm-max-memory设置为0的时候,其实是所有value都存在于磁盘。默认值为0
     vm-max-memory 0
24. Redis swap文件分成了很多的page，一个对象可以保存在多个page上面，但一个page上不能被多个对象共享，vm-page-size是要根据存储的 数据大小来设定的，作者建议如果存储很多小对象，page大小最好设置为32或者64bytes；如果存储很大大对象，则可以使用更大的page，如果不 确定，就使用默认值
     vm-page-size 32
25. 设置swap文件中的page数量，由于页表（一种表示页面空闲或使用的bitmap）是在放在内存中的，，在磁盘上每8个pages将消耗1byte的内存。
     vm-pages 134217728
26. 设置访问swap文件的线程数,最好不要超过机器的核数,如果设置为0,那么所有对swap文件的操作都是串行的，可能会造成比较长时间的延迟。默认值为4
     vm-max-threads 4
27. 设置在向客户端应答时，是否把较小的包合并为一个包发送，默认为开启
    glueoutputbuf yes
28. 指定在超过一定的数量或者最大的元素超过某一临界值时，采用一种特殊的哈希算法
    hash-max-zipmap-entries 64
    hash-max-zipmap-value 512
29. 指定是否激活重置哈希，默认为开启（后面在介绍Redis的哈希算法时具体介绍）
    activerehashing yes
30. 指定包含其它的配置文件，可以在同一主机上多个Redis实例之间使用同一份配置文件，而同时各个实例又拥有自己的特定配置文件
    include /path/to/local.conf

------------

Redis 数据类型
Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。


String（字符串）
string是redis最基本的类型，你可以理解成与Memcached一模一样的类型，一个key对应一个value。
string类型是二进制安全的。意思是redis的string可以包含任何数据。比如jpg图片或者序列化的对象 。
string类型是Redis最基本的数据类型，一个键最大能存储512MB。
实例
redis 127.0.0.1:6379> SET name "w3cschool.cc"
OK
redis 127.0.0.1:6379> GET name
"w3cschool.cc"
在以上实例中我们使用了 Redis 的 SET 和 GET 命令。键为 name，对应的值为w3cschool.cc。
注意：一个键最大能存储512MB。
Hash（哈希）
Redis hash 是一个键值对集合。
Redis hash是一个string类型的field和value的映射表，hash特别适合用于存储对象。
实例
redis 127.0.0.1:6379> HMSET user:1 username w3cschool.cc password w3cschool.cc points 200
OK
redis 127.0.0.1:6379> HGETALL user:1
1) "username"
2) "w3cschool.cc"
3) "password"
4) "w3cschool.cc"
5) "points"
6) "200"
redis 127.0.0.1:6379>
以上实例中 hash 数据类型存储了包含用户脚本信息的用户对象。 实例中我们使用了 Redis HMSET, HGETALL 命令，user:1 为键值。
每个 hash 可以存储 232 - 1 键值对（40多亿）。
List（列表）
Redis 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素导列表的头部（左边）或者尾部（右边）。
实例
redis 127.0.0.1:6379> lpush w3cschool.cc redis
(integer) 1
redis 127.0.0.1:6379> lpush w3cschool.cc mongodb
(integer) 2
redis 127.0.0.1:6379> lpush w3cschool.cc rabitmq
(integer) 3
redis 127.0.0.1:6379> lrange w3cschool.cc 0 10
1) "rabitmq"
2) "mongodb"
3) "redis"
redis 127.0.0.1:6379>
列表最多可存储 232 - 1 元素 (4294967295, 每个列表可存储40多亿)。

Set（集合）
Redis的Set是string类型的无序集合。
集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。
sadd 命令
添加一个string元素到,key对应的set集合中，成功返回1,如果元素以及在集合中返回0,key对应的set不存在返回错误。
sadd key member
实例
redis 127.0.0.1:6379> sadd w3cschool.cc redis
(integer) 1
redis 127.0.0.1:6379> sadd w3cschool.cc mongodb
(integer) 1
redis 127.0.0.1:6379> sadd w3cschool.cc rabitmq
(integer) 1
redis 127.0.0.1:6379> sadd w3cschool.cc rabitmq
(integer) 0
redis 127.0.0.1:6379> smembers w3cschool.cc

1) "rabitmq"
2) "mongodb"
3) "redis"
注意：以上实例中 rabitmq 添加了两次，但根据集合内元素的唯一性，第二次插入的元素将被忽略。
集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。
zset(sorted set：有序集合)
Redis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。
不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。
zset的成员是唯一的,但分数(score)却可以重复。
zadd 命令
添加元素到集合，元素在集合中存在则更新对应score
zadd key score member 
实例
redis 127.0.0.1:6379> zadd w3cschool.cc 0 redis
(integer) 1
redis 127.0.0.1:6379> zadd w3cschool.cc 0 mongodb
(integer) 1
redis 127.0.0.1:6379> zadd w3cschool.cc 0 rabitmq
(integer) 1
redis 127.0.0.1:6379> zadd w3cschool.cc 0 rabitmq
(integer) 0
redis 127.0.0.1:6379> ZRANGEBYSCORE w3cschool.cc 0 1000

1) "redis"
2) "mongodb"
3) "rabitmq"

------------

启动tomcat项目
mac和ip绑定
解决java内存溢出
自动关机
进程
杀死端口
mac显示隐藏文件
redis配置
创建热点

------------

C:\Users\Administrator>d:

D:\yucheng1\apache\apache-tomcat-6.0.35\bin>cd D:\yucheng1\apache\apache-tomcat-
6.0.35\bin

D:\yucheng1\apache\apache-tomcat-6.0.35\bin>./srartup.bat
'.' 不是内部或外部命令，也不是可运行的程序
或批处理文件。

D:\yucheng1\apache\apache-tomcat-6.0.35\bin>dir
 驱动器 D 中的卷是 电影之家
 卷的序列号是 8E62-8643

 D:\yucheng1\apache\apache-tomcat-6.0.35\bin 的目录

2022/09/22  15:31    <DIR>          .
2022/09/22  15:31    <DIR>          ..
2011/11/28  11:20            22,705 bootstrap.jar
2011/11/28  11:20             2,374 catalina-tasks.xml
2013/05/06  17:18            12,082 catalina.bat
2013/05/06  17:17            12,076 catalina.bat.bak
2011/11/28  11:20            17,708 catalina.sh
2011/11/28  11:20           199,623 commons-daemon-native.tar.gz
2011/11/28  11:20            24,172 commons-daemon.jar
2011/11/28  11:20             1,342 cpappend.bat
2011/11/28  11:20             2,108 digest.bat
2011/11/28  11:20             1,689 digest.sh
2011/11/28  11:20             5,062 service.bat
2011/11/28  11:20             3,150 setclasspath.bat
2011/11/28  11:20             4,114 setclasspath.sh
2011/11/28  11:20             2,108 shutdown.bat
2011/11/28  11:20             1,628 shutdown.sh
2011/11/28  11:20             2,109 startup.bat
2011/11/28  11:20             2,023 startup.sh
2011/11/28  11:20         1,168,384 tcnative-1.dll
2011/11/28  11:20            32,277 tomcat-juli.jar
2011/11/28  11:20           249,259 tomcat-native.tar.gz
2011/11/28  11:20            96,256 tomcat6.exe
2011/11/28  11:20           102,400 tomcat6w.exe
2011/11/28  11:20             3,479 tool-wrapper.bat
2011/11/28  11:20             3,472 tool-wrapper.sh
2011/11/28  11:20             2,113 version.bat
2011/11/28  11:20             1,632 version.sh
              26 个文件      1,975,345 字节
               2 个目录 27,620,577,280 可用字节

D:\yucheng1\apache\apache-tomcat-6.0.35\bin>startup.bat
'JAVA_OPTS' 不是内部或外部命令，也不是可运行的程序
或批处理文件。
Using CATALINA_BASE:   "D:\yucheng1\apache\apache-tomcat-6.0.35"
Using CATALINA_HOME:   "D:\yucheng1\apache\apache-tomcat-6.0.35"
Using CATALINA_TMPDIR: "D:\yucheng1\apache\apache-tomcat-6.0.35\temp"
Using JRE_HOME:        "C:\Program Files\Java\jdk1.6.0_10"
Using CLASSPATH:       "D:\yucheng1\apache\apache-tomcat-6.0.35\bin\bootstrap.ja
r"
'JAVA_OPTS' 不是内部或外部命令，也不是可运行的程序
或批处理文件。
'-server' 不是内部或外部命令，也不是可运行的程序
或批处理文件。
文件名、目录名或卷标语法不正确。
文件名、目录名或卷标语法不正确。
D:\yucheng1\apache\apache-tomcat-6.0.35\bin>shupdown.bat
'shupdown.bat' 不是内部或外部命令，也不是可运行的程序
或批处理文件。

D:\yucheng1\apache\apache-tomcat-6.0.35\bin> shutdown.bat
'JAVA_OPTS' 不是内部或外部命令，也不是可运行的程序
或批处理文件。
Using CATALINA_BASE:   "D:\yucheng1\apache\apache-tomcat-6.0.35"
Using CATALINA_HOME:   "D:\yucheng1\apache\apache-tomcat-6.0.35"
Using CATALINA_TMPDIR: "D:\yucheng1\apache\apache-tomcat-6.0.35\temp"
Using JRE_HOME:        "C:\Program Files\Java\jdk1.6.0_10"
Using CLASSPATH:       "D:\yucheng1\apache\apache-tomcat-6.0.35\bin\bootstrap.ja
r"
'JAVA_OPTS' 不是内部或外部命令，也不是可运行的程序
或批处理文件。
'-server' 不是内部或外部命令，也不是可运行的程序
或批处理文件。
文件名、目录名或卷标语法不正确。
文件名、目录名或卷标语法不正确。
D:\yucheng1\apache\apache-tomcat-6.0.35\bin>startup.bat
'JAVA_OPTS' 不是内部或外部命令，也不是可运行的程序
或批处理文件。
Using CATALINA_BASE:   "D:\yucheng1\apache\apache-tomcat-6.0.35"
Using CATALINA_HOME:   "D:\yucheng1\apache\apache-tomcat-6.0.35"
Using CATALINA_TMPDIR: "D:\yucheng1\apache\apache-tomcat-6.0.35\temp"
Using JRE_HOME:        "C:\Program Files\Java\jdk1.6.0_10"
Using CLASSPATH:       "D:\yucheng1\apache\apache-tomcat-6.0.35\bin\bootstrap.ja
r"
'JAVA_OPTS' 不是内部或外部命令，也不是可运行的程序
或批处理文件。
'-server' 不是内部或外部命令，也不是可运行的程序
或批处理文件。
文件名、目录名或卷标语法不正确。
文件名、目录名或卷标语法不正确。
D:\yucheng1\apache\apache-tomcat-6.0.35\bin>dir
 驱动器 D 中的卷是 电影之家
 卷的序列号是 8E62-8643

 D:\yucheng1\apache\apache-tomcat-6.0.35\bin 的目录

2022/09/22  15:31    <DIR>          .
2022/09/22  15:31    <DIR>          ..
2011/11/28  11:20            22,705 bootstrap.jar
2011/11/28  11:20             2,374 catalina-tasks.xml
2013/05/06  17:18            12,082 catalina.bat
2013/05/06  17:17            12,076 catalina.bat.bak
2011/11/28  11:20            17,708 catalina.sh
2011/11/28  11:20           199,623 commons-daemon-native.tar.gz
2011/11/28  11:20            24,172 commons-daemon.jar
2011/11/28  11:20             1,342 cpappend.bat
2011/11/28  11:20             2,108 digest.bat
2011/11/28  11:20             1,689 digest.sh
2011/11/28  11:20             5,062 service.bat
2011/11/28  11:20             3,150 setclasspath.bat
2011/11/28  11:20             4,114 setclasspath.sh
2011/11/28  11:20             2,108 shutdown.bat
2011/11/28  11:20             1,628 shutdown.sh
2011/11/28  11:20             2,109 startup.bat
2011/11/28  11:20             2,023 startup.sh
2011/11/28  11:20         1,168,384 tcnative-1.dll
2011/11/28  11:20            32,277 tomcat-juli.jar
2011/11/28  11:20           249,259 tomcat-native.tar.gz
2011/11/28  11:20            96,256 tomcat6.exe
2011/11/28  11:20           102,400 tomcat6w.exe
2011/11/28  11:20             3,479 tool-wrapper.bat
2011/11/28  11:20             3,472 tool-wrapper.sh
2011/11/28  11:20             2,113 version.bat
2011/11/28  11:20             1,632 version.sh
              26 个文件      1,975,345 字节
               2 个目录 27,620,577,280 可用字节

D:\yucheng1\apache\apache-tomcat-6.0.35\bin>

------------

以前上网的时候QQ经常断线，一分断一次，气死个人，后来被扫描出有人盗用我的MAC地址，那时候不知道怎么弄，现在知道了，盗用者通过盗用你的MAC地址来利用IP和MAC地址来上网，简单来说就是以你的名义来上网，所以你的网络才会经常很慢，而且严重时就像我一样，经常的断线，所以现在给出方法来绑定你的IP和MAC地址防止别人盗用你的MAC地址，MAC地址就是物理地址。
XP系统下绑定 
开始菜单——运行——输入CMD——再输入ipconfig /all 查看你的IP地址和MAC地址（物理地址），然后在输入arp -s ip mac就可以将IP绑定MAC地址了。如arp -s 10.5.118.145 00-25-B3-72-4B-D8，10.5.118.145是我的IP地址，00-25-B3-72-4B-D8是我的物理地址。如果要解除绑定就输入arp -d解除MAC地址绑定。
Windows7系统下绑定 
1
使用 arp -a 命令查看网关的MAC网卡物理地址
2
使用 netsh i i show in命令查看本地连接的idx编号，我的是11的。
3
使用 netsh -c “i i” add neighbors 本地连接的idx “网关IP” “网关mac“ 命令绑定MAC地址
4
使用 arp -a 查看MAC绑定结果
5
最后绑定的结果是静态的。如果没有人盗用你的MAC地址最好就不要绑定了。
通过注册表来修改MAC地址
如果是校园网，而且绑定IP后依然被盗用MAC的话，那就尝试通过注册表来修改MAC（建议修改注册表之前先为系统设置一个还原点，要不然把系统弄崩了就麻烦了，我的电脑——属性——系统保护——创建——输入一个还原点的名称然后创建就OK了）

在“开始”菜单的“运行”中输入regedit，打开注册表编辑器，展开注册表到：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Class\{4D36E972-E325-11CE-BFC1-08002BE10318}子键，在子键下的0000，0001，0002等分支中查找DriverDesc（如果你有一块以上的网卡，就有0001，0002……在这里保存了有关你的网卡的信息，其中的DriverDesc的内容就是你的网卡的信息描述，比如我的网卡就是Marvell Yukon 88E8072 PCI-E Gigabit Ethernet Controller
），在这里假设你的网卡在0000子键。

在0000子键下添加一个字符串，命名为“NetworkAddress”，键值为修改后的MAC地址，要求为连续的12个16进制数。然后在“0000”子键下的NDI\params中新建一项名为NetworkAddress的子键，在该子键下添加名为“default”的字符串，如果有了default的看一下键值有没有，没有的话就把键值为修改后的MAC地址。

在NetworkAddress的子键下继续建立名为“ParamDesc”的字符串，其作用为指定NetworkAddress的描述，其值可为“MAC Address”。这样以后打开网络邻居的“属性”，双击相应的网卡就会发现有一个“高级”设置，其下存在MAC Address的选项，它就是你在注册表中加入的新项NetworkAddress，以后只要在此修改MAC地址就可以了。

关闭注册表，重新启动，你的网卡地址已改。打开网络邻居的属性，双击相应网卡项会发现有一个MAC Address的高级设置项，用于直接修改MAC地址。当然，你还可以用MAC地址修改器这类工具软件来修改网卡的MAC地址，我没有用过。
参考资料

------------

TOMCAT出错：java.lang.OutOfMemoryError: Java heap space

If Java runs out of memory, the following error occurs:
Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
Java heap size can be increased as follows:

java -Xms<initial heap size> -Xmx<maximum heap size>
Defaults are:
java -Xms32m -Xmx128m

如果你用win
/tomcat/bin/catalina.bat 加上下面的命令:
set JAVA_OPTS=-Xms32m -Xmx256m

如果你用unix/linux
/tomcat/bin/catalina.sh 加上下面的命令:
JAVA_OPTS="-Xms32m -Xmx256m"

java.lang.OutOfMemoryError: Java heap space 
使用Java程序从数据库中查询大量的数据时出现异常:
java.lang.OutOfMemoryError: Java heap space 
在JVM中如果98％的时间是用于GC且可用的 Heap size 不足2％的时候将抛出此异常信息。

JVM堆的设置是指java程序运行过程中JVM可以调配使用的内存空间的设置.JVM在启动的时候会自动设置Heap size的值，其初始空间(即-Xms)是物理内存的1/64，最大空间(-Xmx)是物理内存的1/4。可以利用JVM提供的-Xmn -Xms -Xmx等选项可进行设置。
例如：java -jar -Xmn16m -Xms64m -Xmx128m MyApp.jar
如果Heap Size设置偏小，除了这些异常信息外，还会发现程序的响应速度变慢了。GC占用了更多的时间，而应用分配到的执行时间较少。
Heap Size 最大不要超过可用物理内存的80％，一般的要将-Xms和-Xmx选项设置为相同，而-Xmn为1/4的-Xmx值。
Heap size的 -Xms -Xmn 设置不要超出物理内存的大小。否则会提示“Error occurred during initialization of VM Could not reserve enough space for object heap”。

还有:Java堆的管理—垃圾回收提到一下几点，很不错，或许可以作为写程序时候的准则：

　　（1）不要试图去假定垃圾收集发生的时间，这一切都是未知的。比如，方法中的一个临时对象在方法调用完毕后就变成了无用对象，这个时候它的内存就可以被释放。
　　（2）Java中提供了一些和垃圾收集打交道的类，而且提供了一种强行执行垃圾收集的方法--调用System.gc()，但这同样是个不确定的方法。Java 中并不保证每次调用该方法就一定能够启动垃圾收集，它只不过会向JVM发出这样一个申请，到底是否真正执行垃圾收集，一切都是个未知数。

　　（3）挑选适合自己的垃圾收集器。一般来说，如果系统没有特殊和苛刻的性能要求，可以采用JVM的缺省选项。否则可以考虑使用有针对性的垃圾收集器，比如增量收集器就比较适合实时性要求较高的系统之中。系统具有较高的配置，有比较多的闲置资源，可以考虑使用并行标记/清除收集器。
　　（4）关键的也是难把握的问题是内存泄漏。良好的编程习惯和严谨的编程态度永远是最重要的，不要让自己的一个小错误导致内存出现大漏洞。
　　（5）尽早释放无用对象的引用。大多数程序员在使用临时变量的时候，都是让引用变量在退出活动域(scope)后，自动设置为null，暗示垃圾收集器来收集该对象，还必须注意该引用的对象是否被监听，如果有，则要去掉监听，然后再赋空值。
就是说,对于频繁申请内存和释放内存的操作,还是自己控制一下比较好,但是System.gc()的方法不一定适用，最好使用finallize强制执行或者写自己的finallize方法

Eclipse中出现java.lang.OutOfMemoryError: Java heap space
错误2007-06-12 11:53java.lang.OutOfMemoryError: Java heap space错误
在tomcat in的catalina.bat里加 
set JAVA_OPTS=-Xms256m -Xmx512m -Djava.awt.headless=true 
256和512分别是MIN和MAX内存 
在eclipse中的 
windows->preferences..->tomcat->jvm..->jvm那一个文本框里，添加-Xms256m -Xmx512m 
这样就可以了！
 
 
点“编辑”
 
缺省VM自变量（A）：那一个文本框里添加：-Xms256m -Xmx512m
 


------------

2、关机DOS命令 
at 17:00 shutdown -s
shutdown -f -s 3600  3600即3600s=1H
shutdown -s -t 1800
shutdown -r -t

------------

一、在windows命令行窗口下执行：运行--cmd
C:\>netstat -aon|findstr "8080" 
TCP     127.0.0.1:80       0.0.0.0:0             LISTENING    2448
端口被进程号为2448的进程占用，继续执行下面命令：
C:\>tasklist|findstr "2448" 
thread.exe                   2016 Console                 0     16,064 K
很清楚，thread占用了你的端口,Kill it

命令：taskkill -F -PID 2448

如果第二步查不到，那就开任务管理器，进程---查看---选择列---pid（进程位标识符）打个勾就可以了
看哪个进程是2448，然后杀之即可。
在安装WAMP时，也经常遇到这种问题，说是80端口被占，就把前面的8080改成80即可

------------

1、首先查找到占用8080端口的进程号PID是多少

CMD>netstat -ano | findstr 8080

这个命令输出的最后一列表示占用8080端口的进程号是多少，假设为1234

2、kill掉这个进程

CMD>taskkill /F /PID 1234

这样8080端口就是释放了。

------------

#显示Mac隐藏文件
defaults write com.apple.finder AppleShowAllFiles YES

#隐藏Mac隐藏文件
defaults write com.apple.finder AppleShowAllFiles NO


------------

一. 如何初始化redis的密码？

总共2个步骤：

a.在配置文件中有个参数： requirepass  这个就是配置redis访问密码的参数。

比如 requirepass test123

b.配置文件中参数生效需要重启重启redis 。

 

二.不重启redis如何配置密码?

a. 在配置文件中配置requirepass的密码（当redis重启时密码依然有效）。

# requirepass foobared
 如  修改成 :

requirepass  test123

 

b. 进入redis重定义参数

查看当前的密码：

[root@slaver251 redis-2.4.16]# ./src/redis-cli -p 6379
redis 127.0.0.1:6379> 
redis 127.0.0.1:6379> config get requirepass
1) "requirepass"
2) (nil)

显示密码是空的，

然后设置密码：

redis 127.0.0.1:6379> config set requirepass test123
OK

再次查询密码：

redis 127.0.0.1:6379> config get requirepass
(error) ERR operation not permitted

此时报错了！

现在只需要密码认证就可以了。

redis 127.0.0.1:6379> auth test123
OK

再次查询密码：

redis 127.0.0.1:6379> config get requirepass
1) "requirepass"
2) "test123"

密码已经得到修改。

当到了可以重启redis的时候 由于配置参数已经修改 所以密码会自动生效。

要是配置参数没添加密码 那么redis重启 密码将相当于没有设置。

 

三.如何登录有密码的redis？

a.在登录的时候 密码就输入

[root@slaver251 redis-2.4.16]# ./src/redis-cli -p 6379 -a test123
redis 127.0.0.1:6379> 
redis 127.0.0.1:6379> config get requirepass
1) "requirepass"
2) "test123"

 

b.先登录再验证：

[root@slaver251 redis-2.4.16]#  ./src/redis-cli -p 6379
redis 127.0.0.1:6379> 
redis 127.0.0.1:6379> auth test123
OK
redis 127.0.0.1:6379> config get requirepass
1) "requirepass"
2) "test123"
redis 127.0.0.1:6379>

 

四. master 有密码,slave 如何配置？

当master 有密码的时候 配置slave 的时候 相应的密码参数也得相应的配置好。不然slave 是无法进行正常复制的。

相应的参数是：

#masterauth

比如:

masterauth  mstpassword

 

------------

你可以开启windows 7的隐藏功能：虚拟WiFi和SoftAP（即虚拟无线AP），就可以让电脑变成无线路由器，实现共享上网。
点开始  所有程序   命令提示符右键管理员身份运行命令提示符  运行命令：netsh wlan set hostednetwork mode=allow ssid=test-WiFi key=12345678
此命令有三个参数，mode：是否启用虚拟WiFi网卡，改为disallow则为禁用 。               ssid：无线网名称，最好用英文(以wuminPC为例)。 key：无线网密码，八个以上字符(以wuminWiFi为例)。   
  以上三个参数可以自己设置，例如只使用mode=disallow可以直接禁用虚拟Wifi网卡。
   开启成功后，网络连接中会多出一个网卡为“Microsoft Virtual WiFi Miniport Adapter”的无线连接2，为方便起见，将其重命名为虚拟WiFi。有些win7可能找不到网络连接，在 控制面板\网络和 Internet\网络和共享中心 点左边的更改适配器设置就是网络连接。
在“网络连接”窗口中，右键单击已连接到Internet的网络连接，选择“属性”→“共享”，勾上“允许其他······连接(N)”并选择“虚拟WiFi”。确定之后，提供共享的网卡图标旁会出现“共享的”字样，表示“宽带连接”已共享至“虚拟WiFi”。
     继续在命令提示符中运行：netsh wlan start hostednetwork    （将start改为stop即可关闭该无线网，以后开机后要启用该无线网只需再次运行此命令即可）  至此，虚拟WiFi的红叉叉消失，WiFi基站已组建好，主机设置完毕。笔记本、带WiFi模块的手机等子机搜索到无线网络wuminPC，输入密码wuminWiFi，就能共享上网啦！ 


------------

插入xls
无法输入汉字
Note1

------------

菜单上的“插入”→对象...→选择“由文件创建”→点击浏览找到需要的excel文档→勾选“显示为图标”选项。此时会默认将文件路径和文件名一起显示，影响美观，可以点击【更改图标】按钮，在“题注”中将路径和文件.xls的后缀名一起删除→确定→确定。这时候文件就向一个图标状态，在本机或其他电脑上双击这个图标即可打开插入的excel文件。此外还可向编辑图片一样编辑这个插入文件的图标。

------------

在word中不能使用搜狗/QQ拼音输入法的解决办法
	有时在我们输入汉字的时候发现无法使用我们日常用的搜狗输入法等，出现这种情况的原因分两种情况：
	1、系统中所有位置均不能输入。
解决方法：
	在控制面板中依次打开
	“区域与语言选项—语言—详细信息—高级”，
	取消选择“关闭高级语言语言服务”。

	2、在Word中无法输入汉字。
	解决方法：
	单击“工具—选项”（高版本中单击“文件—选项—高级”），
	取消选择“输入法控制处于活动状态”即可。
需要重新启动Word软件。


------------

shift+space 切换搜狗输入法的圆角半角
ctrl+"."切换中英文标点
shift切换中英文












------------

jsp中判断是不是数字
ascii
润乾报表导出html
配置web.xml
web.xml中加载顺序和解决乱码
sever.xml
刷新页面
一些项目经验
md5
css
图片滚动
判断是不是数字
StringUtil中的字符转换方法
设置session
配置日志
Annotation
分页
转向
Ajax
获取当前时间
配置jndi
时间差计算
设置tomcat内存
System.getProperty()
解决eclipse问题
Maven项目转web项目
定时效果
UE多行插入
项目开发流程
自动化测试
quartz
卸载和安装jdk
杀掉端口
润乾报表

------------

2012-05-29 11:05 JS判断只能输入数字小数点等（转）1.文本框只能输入数字代码(小数点也不能输入)
<input onkeyup="this.value=this.value.replace(/\D/g,'')" onafterpaste="this.value=this.value.replace(/\D/g,'')">

2.只能输入数字,能输小数点.
<input onkeyup="if(isNaN(value))execCommand('undo')" onafterpaste="if(isNaN(value))execCommand('undo')">
<input name=txt1 onchange="if(/\D/.test(this.value)){alert('只能输入数字');this.value='';}">

3.数字和小数点方法二
<input type=text t_value="" o_value="" onkeypress="if(!this.value.match(/^[\+\-]?\d*?\.?\d*?$/))this.value=this.t_value;else this.t_value=this.value;if(this.value.match(/^(?:[\+\-]?\d+(?:\.\d+)?)?$/))this.o_value=this.value" onkeyup="if(!this.value.match(/^[\+\-]?\d*?\.?\d*?$/))this.value=this.t_value;else this.t_value=this.value;if(this.value.match(/^(?:[\+\-]?\d+(?:\.\d+)?)?$/))this.o_value=this.value" onblur="if(!this.value.match(/^(?:[\+\-]?\d+(?:\.\d+)?|\.\d*?)?$/))this.value=this.o_value;else{if(this.value.match(/^\.\d+$/))this.value=0+this.value;if(this.value.match(/^\.$/))this.value=0;this.o_value=this.value}">

4.只能输入字母和汉字
<input onkeyup="value=value.replace(/[\d]/g,'') "onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[\d]/g,''))" maxlength=10 name="Numbers">

5.只能输入英文字母和数字,不能输入中文
<input onkeyup="value=value.replace(/[^\w\.\/]/ig,'')">

6.只能输入数字和英文<font color="Red">chun</font>
<input onKeyUp="value=value.replace(/[^\d|chun]/g,'')">

7.小数点后只能有最多两位(数字,中文都可输入),不能输入字母和运算符号:
<input onKeyPress="if((event.keyCode<48 || event.keyCode>57) && event.keyCode!=46 || /\.\d\d$/.test(value))event.returnValue=false">

8.小数点后只能有最多两位(数字,字母,中文都可输入),可以输入运算符号:
<input onkeyup="this.value=this.value.replace(/^(\-)*(\d+)\.(\d\d).*$/,'$1$2.$3')">

只能是数字和小数点和加减乘际

onkeypress="return event.keyCode>=4&&event.keyCode<=57"



------------

ASCII码表完整版
ASCII值	控制字符	ASCII值	控制字符	ASCII值	控制字符	ASCII值	控制字符 
0 	NUT 	32 	(space) 	64 	@ 	96 	、
1 	SOH 	33 	！	65 	A 	97 	a 
2 	STX 	34 	”	66 	B 	98 	b 
3 	ETX 	35 	# 	67 	C 	99 	c 
4 	EOT 	36 	$ 	68 	D 	100 	d 
5 	ENQ 	37 	% 	69 	E 	101 	e 
6 	ACK 	38 	& 	70 	F 	102 	f 
7 	BEL 	39 	, 	71 	G 	103 	g 
8 	BS 	40 	( 	72 	H 	104 	h 
9 	HT 	41 	) 	73 	I 	105 	i 
10 	LF 	42 	* 	74 	J 	106 	j 
11 	VT 	43 	+ 	75 	K 	107 	k 
12 	FF 	44 	, 	76 	L 	108 	l 
13 	CR 	45 	- 	77 	M 	109 	m 
14 	SO 	46 	. 	78 	N 	110 	n 
15 	SI 	47 	/ 	79 	O 	111 	o 
16 	DLE 	48 	0 	80 	P 	112 	p 
17 	DCI 	49 	1 	81 	Q 	113 	q 
18 	DC2 	50 	2 	82 	R 	114 	r 
19 	DC3 	51 	3 	83 	X 	115 	s 
20 	DC4 	52 	4 	84 	T 	116 	t 
21 	NAK 	53 	5 	85 	U 	117 	u 
22 	SYN 	54 	6 	86 	V 	118 	v 
23 	TB 	55 	7 	87 	W 	119 	w 
24 	CAN 	56 	8 	88 	X 	120 	x 
25 	EM 	57 	9 	89 	Y 	121 	y 
26 	SUB 	58 	: 	90 	Z 	122 	z 
27 	ESC 	59 	; 	91 	[ 	123 	{ 
28 	FS 	60 	< 	92 	/ 	124 	| 
29 	GS 	61 	= 	93 	] 	125 	} 
30 	RS 	62 	> 	94 	^ 	126 	~ 
31 	US 	63 	? 	95 	—	127 	DEL 
NUL 空	VT 垂直制表	SYN 空转同步
SOH 标题开始	FF   走纸控制	ETB  信息组传送结束
STX  正文开始	CR   回车	CAN  作废
ETX  正文结束	SO   移位输出	EM   纸尽
EOY  传输结束	SI    移位输入	SUB  换置
ENQ  询问字符	DLE  空格	ESC  换码
ACK  承认	DC1  设备控制1 	FS   文字分隔符
BEL  报警	DC2  设备控制2 	GS   组分隔符
BS   退一格	DC3  设备控制3 	RS   记录分隔符
HT   横向列表	DC4  设备控制4 	US   单元分隔符
LF   换行	NAK  否定	DEL  删除



算数运算符：+ ，- ，* ，/ ，% ，++ ，- -
 关系运算符：> ，< ，>= ，<= ，= =  ，!=
 逻辑运算符：！，&& ，|| ，^ ，& ，|
 位运算符：~ ，& ，| ，^ ，>> ，<< ，>>>
 赋值运算符：=
 扩展赋值运算符：+= ，-= ，*= ，/=
 字符串连接运算符：+


------------

import java.io.FileInputStream;
import java.io.InputStream;

import com.runqian.report4.model.ReportDefine;
import com.runqian.report4.model.engine.ExtCellSet;
import com.runqian.report4.usermodel.Context;
import com.runqian.report4.usermodel.Engine;
import com.runqian.report4.usermodel.IReport;
import com.runqian.report4.util.ReportUtils;



public class exportreport {
//	public static IReport Create() throws Exception{
//		String reportFile1 = "C:/graphtest1.raq";
//		InputStream is =new FileInputStream(reportFile1);
//		ReportDefine rd = (ReportDefine)ReportUtils.read(is);
//		//第二步，运算报表
//		Context context = new Context();
//		Engine enging = new Engine( rd, context);
//		IReport iReport= enging.calc();
//		
//		
//		return iReport;
//		
//	}
	/**
	 * @param args
	 * @throws Exception 
	 */
	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
		String lisenseFile = "D:\\runqianServer.lic"; 
		ExtCellSet.setLicenseFileName(lisenseFile);
//		
//		
		String reportFile1 = "D:\\flexibleReport.raq";
		InputStream is =new FileInputStream(reportFile1);
		ReportDefine rd = (ReportDefine)ReportUtils.read(is);
//		//第二步，运算报表
		Context context = new Context();
		Engine enging = new Engine( rd, context);
		IReport iReport= enging.calc();
		try {
			//输出到本地
			//rd = setInput(rd);
			
//			OutputStream out = new FileOutputStream( "C:/temp/result2.html" );
//			ReportUtils.write(out,rd);
//			out.close();
			
			ReportUtils.exportToHTML("d:\\rrresult2.html",  iReport);

			System.out.println("导出成功");
		} catch (Exception e) {
			e.printStackTrace();
		} catch (Throwable e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}


------------

1 定义头和根元素
 
　　部署描述符文件就像所有XML文件一样，必须以一个XML头开始。这个头声明可以使用的XML版本并给出文件的字符编码。
DOCYTPE声明必须立即出现在此头之后。这个声明告诉服务器适用的servlet规范的版本（如2.2或2.3）并指定管理此文件其余部分内容的语法的DTD(Document Type Definition，文档类型定义)。
所有部署描述符文件的顶层（根）元素为web-app。请注意，XML元素不像HTML，他们是大小写敏感的。因此，web-App和WEB-APP都是不合法的，web-app必须用小写。

2 部署描述符文件内的元素次序
 
　　XML 元素不仅是大小写敏感的，而且它们还对出现在其他元素中的次序敏感。例如，XML头必须是文件中的第一项，DOCTYPE声明必须是第二项，而web- app元素必须是第三项。在web-app元素内，元素的次序也很重要。服务器不一定强制要求这种次序，但它们允许（实际上有些服务器就是这样做的）完全拒绝执行含有次序不正确的元素的Web应用。这表示使用非标准元素次序的web.xml文件是不可移植的。
下面的列表给出了所有可直接出现在web-app元素内的合法元素所必需的次序。例如，此列表说明servlet元素必须出现在所有servlet-mapping元素之前。请注意，所有这些元素都是可选的。因此，可以省略掉某一元素，但不能把它放于不正确的位置。
l icon icon元素指出IDE和GUI工具用来表示Web应用的一个和两个图像文件的位置。
l display-name display-name元素提供GUI工具可能会用来标记这个特定的Web应用的一个名称。
l description description元素给出与此有关的说明性文本。
l context-param context-param元素声明应用范围内的初始化参数。
l filter 过滤器元素将一个名字与一个实现javax.servlet.Filter接口的类相关联。
l filter-mapping 一旦命名了一个过滤器，就要利用filter-mapping元素把它与一个或多个servlet或JSP页面相关联。
l listener servlet API的版本2.3增加了对事件监听程序的支持，事件监听程序在建立、修改和删除会话或servlet环境时得到通知。Listener元素指出事件监听程序类。
l servlet 在向servlet或JSP页面制定初始化参数或定制URL时，必须首先命名servlet或JSP页面。Servlet元素就是用来完成此项任务的。
l servlet-mapping 服务器一般为servlet提供一个缺省的URL：http://host/webAppPrefix/servlet/ServletName。但是，常常会更改这个URL，以便servlet可以访问初始化参数或更容易地处理相对URL。在更改缺省URL时，使用servlet-mapping元素。
l session-config 如果某个会话在一定时间内未被访问，服务器可以抛弃它以节省内存。可通过使用HttpSession的setMaxInactiveInterval方法明确设置单个会话对象的超时值，或者可利用session-config元素制定缺省超时值。
l mime-mapping 如果Web应用具有想到特殊的文件，希望能保证给他们分配特定的MIME类型，则mime-mapping元素提供这种保证。
l welcom-file-list welcome-file-list元素指示服务器在收到引用一个目录名而不是文件名的URL时，使用哪个文件。
l error-page error-page元素使得在返回特定HTTP状态代码时，或者特定类型的异常被抛出时，能够制定将要显示的页面。
l taglib taglib元素对标记库描述符文件（Tag Libraryu Descriptor file）指定别名。此功能使你能够更改TLD文件的位置，而不用编辑使用这些文件的JSP页面。
l resource-env-ref resource-env-ref元素声明与资源相关的一个管理对象。
l resource-ref resource-ref元素声明一个资源工厂使用的外部资源。
l security-constraint security-constraint元素制定应该保护的URL。它与login-config元素联合使用
l login-config 用login-config元素来指定服务器应该怎样给试图访问受保护页面的用户授权。它与sercurity-constraint元素联合使用。
l security-role security-role元素给出安全角色的一个列表，这些角色将出现在servlet元素内的security-role-ref元素的role-name子元素中。分别地声明角色可使高级IDE处理安全信息更为容易。
l env-entry env-entry元素声明Web应用的环境项。
l ejb-ref ejb-ref元素声明一个EJB的主目录的引用。
l ejb-local-ref ejb-local-ref元素声明一个EJB的本地主目录的应用。
 
3 分配名称和定制的UL
 
在web.xml中完成的一个最常见的任务是对servlet或JSP页面给出名称和定制的URL。用servlet元素分配名称，使用servlet-mapping元素将定制的URL与刚分配的名称相关联。
3.1 分配名称
为了提供初始化参数，对servlet或JSP页面定义一个定制URL或分配一个安全角色，必须首先给servlet或JSP页面一个名称。可通过 servlet元素分配一个名称。最常见的格式包括servlet-name和servlet-class子元素（在web-app元素内），如下所示：
  
Xml代码 
<servlet>   
    <servlet-name>Test</servlet-name>   
    <servlet-class>moreservlets.TestServlet</servlet-class>   
</servlet>    

<servlet>
<servlet-name>Test</servlet-name>
<servlet-class>moreservlets.TestServlet</servlet-class>
</servlet> 

　　这表示位于WEB-INF/classes/moreservlets/TestServlet的servlet已经得到了注册名Test。给 servlet一个名称具有两个主要的含义。首先，初始化参数、定制的URL模式以及其他定制通过此注册名而不是类名引用此servlet。其次,可在 URL而不是类名中使用此名称。因此，利用刚才给出的定义，URL http://host/webAppPrefix/servlet/Test 可用于 http://host/webAppPrefix/servlet/moreservlets.TestServlet 的场所。
请记住：XML元素不仅是大小写敏感的，而且定义它们的次序也很重要。例如，web-app元素内所有servlet元素必须位于所有servlet- mapping元素（下一小节介绍）之前，而且还要位于5.6节和5.11节讨论的与过滤器或文档相关的元素（如果有的话）之前。类似地，servlet 的servlet-name子元素也必须出现在servlet-class之前。5.2节"部署描述符文件内的元素次序"将详细介绍这种必需的次序。
例如，程序清单5-1给出了一个名为TestServlet的简单servlet，它驻留在moreservlets程序包中。因为此servlet是扎根在一个名为deployDemo的目录中的Web应用的组成部分，所以TestServlet.class放在deployDemo/WEB- INF/classes/moreservlets中。程序清单5-2给出将放置在deployDemo/WEB-INF/内的web.xml文件的一部分。此web.xml文件使用servlet-name和servlet-class元素将名称Test与TestServlet.class相关联。图 5-1和图5-2分别显示利用缺省URL和注册名调用TestServlet时的结果。
 

程序清单5-1 TestServlet.java
 
Java代码 
package moreservlets;    
   
import java.io.*;    
import javax.servlet.*;    
import javax.servlet.http.*;    
   
public class TestServlet extends HttpServlet {    
    public void doGet(HttpServletRequest request,    
HttpServletResponse response)    
throws ServletException, IOException {    
        response.setContentType("text/html");    
        PrintWriter out = response.getWriter();    
        String uri = request.getRequestURI();    
        out.println(ServletUtilities.headWithTitle("Test Servlet") +"<BODY BGCOLOR=\"#FDF5E6\">\n" +"<H2>URI: " + uri "</H2>\n" +"</BODY></HTML>");    
    }    
}   

package moreservlets;
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
public class TestServlet extends HttpServlet {
public void doGet(HttpServletRequest request,
HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html");
PrintWriter out = response.getWriter();
String uri = request.getRequestURI();
out.println(ServletUtilities.headWithTitle("Test Servlet") +"<BODY BGCOLOR=\"#FDF5E6\">\n" +"<H2>URI: " + uri "</H2>\n" +"</BODY></HTML>");
}
}
 
 
程序清单5-2 web.xml（说明servlet名称的摘录）
 
Xml代码 
<?xml version="1.0" encoding="ISO-8859-1"?>   
<!DOCTYPE web-app    
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"    
"http://java.sun.com/dtd/web-app_2_3.dtd">   
<web-app>   
<!-- … -->   
<servlet>   
    <servlet-name>Test</servlet-name>   
    <servlet-class>moreservlets.TestServlet</servlet-class>   
</servlet>   
<!-- … -->   
</web-app>   

<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE web-app
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
"http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
<!-- … -->
<servlet>
<servlet-name>Test</servlet-name>
<servlet-class>moreservlets.TestServlet</servlet-class>
</servlet>
<!-- … -->
</web-app>
 
 
 
3.2 定义定制的URL
大多数服务器具有一个缺省的serlvet URL：
http://host/webAppPrefix/servlet/packageName.ServletName。虽然在开发中使用这个URL很方便，但是我们常常会希望另一个URL用于部署。例如，可能会需要一个出现在Web应用顶层的URL（如，http: //host/webAppPrefix/Anyname），并且在此URL中没有servlet项。位于顶层的URL简化了相对URL的使用。此外，对许多开发人员来说，顶层URL看上去比更长更麻烦的缺省URL更简短。
事实上，有时需要使用定制的URL。比如，你可能想关闭缺省URL映射，以便更好地强制实施安全限制或防止用户意外地访问无初始化参数的servlet。如果你禁止了缺省的URL，那么你怎样访问servlet呢？这时只有使用定制的URL了。
为了分配一个定制的URL，可使用servlet-mapping元素及其servlet-name和url-pattern子元素。Servlet- name元素提供了一个任意名称，可利用此名称引用相应的servlet；url-pattern描述了相对于Web应用的根目录的URL。url- pattern元素的值必须以斜杠（/）起始。
下面给出一个简单的web.xml摘录，它允许使用URL http://host/webAppPrefix/UrlTest而不是http://host/webAppPrefix/servlet/Test或
http: //host/webAppPrefix/servlet/moreservlets.TestServlet。请注意，仍然需要XML头、 DOCTYPE声明以及web-app封闭元素。此外，可回忆一下，XML元素出现地次序不是随意的。特别是，需要把所有servlet元素放在所有 servlet-mapping元素之前。
 
 
 
Xml代码 
<servlet>   
    <servlet-name>Test</servlet-name>   
    <servlet-class>moreservlets.TestServlet</servlet-class>   
</servlet>   
<!-- ... -->   
<servlet-mapping>   
    <servlet-name>Test</servlet-name>   
    <url-pattern>/UrlTest</url-pattern>   
</servlet-mapping>   

<servlet>
<servlet-name>Test</servlet-name>
<servlet-class>moreservlets.TestServlet</servlet-class>
</servlet>
<!-- ... -->
<servlet-mapping>
<servlet-name>Test</servlet-name>
<url-pattern>/UrlTest</url-pattern>
</servlet-mapping>
 
URL模式还可以包含通配符。例如，下面的小程序指示服务器发送所有以Web应用的URL前缀开始，以..asp结束的请求到名为BashMS的servlet。
 
Xml代码 
<servlet>   
    <servlet-name>BashMS</servlet-name>   
    <servlet-class>msUtils.ASPTranslator</servlet-class>   
</servlet>   
<!-- ... -->   
<servlet-mapping>   
    <servlet-name>BashMS</servlet-name>   
    <url-pattern>/*.asp</url-pattern>   
</servlet-mapping>   

<servlet>
<servlet-name>BashMS</servlet-name>
<servlet-class>msUtils.ASPTranslator</servlet-class>
</servlet>
<!-- ... -->
<servlet-mapping>
<servlet-name>BashMS</servlet-name>
<url-pattern>/*.asp</url-pattern>
</servlet-mapping>
 
 

3.3 命名JSP页面
　　因为JSP页面要转换成sevlet，自然希望就像命名servlet一样命名JSP页面。毕竟，JSP页面可能会从初始化参数、安全设置或定制的URL中受益，正如普通的serlvet那样。虽然JSP页面的后台实际上是servlet这句话是正确的，但存在一个关键的猜疑：即，你不知道JSP页面的实际类名（因为系统自己挑选这个名字）。因此，为了命名JSP页面，可将jsp-file元素替换为servlet-calss元素，如下所示：
 
Xml代码 
<servlet>   
    <servlet-name>Test</servlet-name>   
    <jsp-file>/TestPage.jsp</jsp-file>   
</servlet>   

<servlet>
<servlet-name>Test</servlet-name>
<jsp-file>/TestPage.jsp</jsp-file>
</servlet>
 
　　命名JSP页面的原因与命名servlet的原因完全相同：即为了提供一个与定制设置（如，初始化参数和安全设置）一起使用的名称，并且，以便能更改激活 JSP页面的URL（比方说，以便多个URL通过相同页面得以处理，或者从URL中去掉.jsp扩展名）。但是，在设置初始化参数时，应该注意，JSP页面是利用jspInit方法，而不是init方法读取初始化参数的。
例如，程序清单5-3给出一个名为TestPage.jsp的简单JSP页面，它的工作只是打印出用来激活它的URL的本地部分。TestPage.jsp放置在deployDemo应用的顶层。程序清单5-4给出了用来分配一个注册名PageName，然后将此注册名与http://host/webAppPrefix/UrlTest2/anything 形式的URL相关联的web.xml文件（即，deployDemo/WEB-INF/web.xml）的一部分。
 
 
 
程序清单5-3 TestPage.jsp
 
 
 
Html代码 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">   
<HTML>   
<HEAD>   
<TITLE>JSP Test Page</TITLE>   
</HEAD>   
<BODY BGCOLOR="#FDF5E6">   
<H2>URI: <%= request.getRequestURI() %></H2>   
</BODY>   
</HTML>   

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
<TITLE>JSP Test Page</TITLE>
</HEAD>
<BODY BGCOLOR="#FDF5E6">
<H2>URI: <%= request.getRequestURI() %></H2>
</BODY>
</HTML>
 
程序清单5-4 web.xml（说明JSP页命名的摘录）
 
Xml代码 
<?xml version="1.0" encoding="ISO-8859-1"?>   
<!DOCTYPE web-app    
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"    
"http://java.sun.com/dtd/web-app_2_3.dtd">   
<web-app>   
<!-- ... -->   
<servlet>   
    <servlet-name>PageName</servlet-name>   
    <jsp-file>/TestPage.jsp</jsp-file>   
</servlet>   
<!-- ... -->   
<servlet-mapping>   
    <servlet-name> PageName </servlet-name>   
    <url-pattern>/UrlTest2/*</url-pattern>   
</servlet-mapping>   
<!-- ... -->   
</web-app>   

<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE web-app
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
"http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
<!-- ... -->
<servlet>
<servlet-name>PageName</servlet-name>
<jsp-file>/TestPage.jsp</jsp-file>
</servlet>
<!-- ... -->
<servlet-mapping>
<servlet-name> PageName </servlet-name>
<url-pattern>/UrlTest2/*</url-pattern>
</servlet-mapping>
<!-- ... -->
</web-app>
 
 
 

4 禁止激活器servlet
 
　　对servlet或JSP页面建立定制URL的一个原因是，这样做可以注册从 init（servlet）或jspInit（JSP页面）方法中读取得初始化参数。但是，初始化参数只在是利用定制URL模式或注册名访问 servlet或JSP页面时可以使用，用缺省URL http://host/webAppPrefix/servlet/ServletName 访问时不能使用。因此，你可能会希望关闭缺省URL，这样就不会有人意外地调用初始化servlet了。这个过程有时称为禁止激活器servlet，因为多数服务器具有一个用缺省的servlet URL注册的标准servlet，并激活缺省的URL应用的实际servlet。
　　有两种禁止此缺省URL的主要方法：
l 在每个Web应用中重新映射/servlet/模式。
l 全局关闭激活器servlet。
重要的是应该注意到，虽然重新映射每个Web应用中的/servlet/模式比彻底禁止激活servlet所做的工作更多，但重新映射可以用一种完全可移植的方式来完成。相反，全局禁止激活器servlet完全是针对具体机器的，事实上有的服务器（如ServletExec）没有这样的选择。下面的讨论对每个Web应用重新映射/servlet/ URL模式的策略。后面提供在Tomcat中全局禁止激活器servlet的详细内容。
 
 
 
4.1 重新映射/servlet/URL模式
　　在一个特定的Web应用中禁止以http://host/webAppPrefix/servlet/ 开始的URL的处理非常简单。所需做的事情就是建立一个错误消息servlet，并使用前一节讨论的url-pattern元素将所有匹配请求转向该 servlet。只要简单地使用：
 
Xml代码 
<url-pattern>/servlet/*</url-pattern>   

<url-pattern>/servlet/*</url-pattern>
 
 
 
作为servlet-mapping元素中的模式即可。
 

例如，程序清单5-5给出了将SorryServlet servlet（程序清单5-6）与所有以http://host/webAppPrefix/servlet/ 开头的URL相关联的部署描述符文件的一部分。
 
程序清单5-5 web.xml（说明JSP页命名的摘录）
 
Xml代码 
<?xml version="1.0" encoding="ISO-8859-1"?>   
<!DOCTYPE web-app    
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"    
"http://java.sun.com/dtd/web-app_2_3.dtd">   
<web-app>   
<!-- ... -->   
<servlet>   
    <servlet-name>Sorry</servlet-name>   
    <servlet-class>moreservlets.SorryServlet</servlet-class>   
</servlet>   
<!-- ... -->   
<servlet-mapping>   
    <servlet-name> Sorry </servlet-name>   
    <url-pattern>/servlet/*</url-pattern>   
</servlet-mapping>   
<!-- ... -->   
</web-app>   

<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE web-app
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
"http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
<!-- ... -->
<servlet>
<servlet-name>Sorry</servlet-name>
<servlet-class>moreservlets.SorryServlet</servlet-class>
</servlet>
<!-- ... -->
<servlet-mapping>
<servlet-name> Sorry </servlet-name>
<url-pattern>/servlet/*</url-pattern>
</servlet-mapping>
<!-- ... -->
</web-app>
 
程序清单5-6 SorryServlet.java
 
 
 
Java代码 
package moreservlets;    
   
import java.io.*;    
import javax.servlet.*;    
import javax.servlet.http.*;    
   
public class SorryServlet extends HttpServlet {    
    public void doGet(HttpServletRequest request,    
HttpServletResponse response)    
throws ServletException, IOException {    
        response.setContentType("text/html");    
        PrintWriter out = response.getWriter();    
        String title = "Invoker Servlet Disabled.";    
        out.println(ServletUtilities.headWithTitle(title) +"<BODY BGCOLOR=\"#FDF5E6\">\n" +"<H2>" + title + "</H2>\n" +    
"Sorry, access to servlets by means of\n" +"URLs that begin with\n" +"http://host/webAppPrefix/servlet//n" +"has been disabled.\n" + "</BODY></HTML>");    
        }    
   
    public void doPost(HttpServletRequest request,HttpServletResponse response)throws ServletException, IOException {    
        doGet(request, response);    
    }    
}   

package moreservlets;
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
public class SorryServlet extends HttpServlet {
public void doGet(HttpServletRequest request,
HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html");
PrintWriter out = response.getWriter();
String title = "Invoker Servlet Disabled.";
out.println(ServletUtilities.headWithTitle(title) +"<BODY BGCOLOR=\"#FDF5E6\">\n" +"<H2>" + title + "</H2>\n" +
"Sorry, access to servlets by means of\n" +"URLs that begin with\n" +"http://host/webAppPrefix/servlet//n" +"has been disabled.\n" + "</BODY></HTML>");
}
public void doPost(HttpServletRequest request,HttpServletResponse response)throws ServletException, IOException {
doGet(request, response);
}
}
 
 

4.2 全局禁止激活器：Tomcat
Tomcat 4中用来关闭缺省URL的方法与Tomcat 3中所用的很不相同。下面介绍这两种方法：
 

1．禁止激活器： Tomcat 4
Tomcat 4用与前面相同的方法关闭激活器servlet，即利用web.xml中的url-mapping元素进行关闭。不同之处在于Tomcat使用了放在 install_dir/conf中的一个服务器专用的全局web.xml文件，而前面使用的是存放在每个Web应用的WEB-INF目录中的标准 web.xml文件。
因此，为了在Tomcat 4中关闭激活器servlet，只需在install_dir/conf/web.xml中简单地注释出/servlet/* URL映射项即可，如下所示：
 
Xml代码 
<servlet-mapping>   
    <servlet-name>invoker</servlet-name>   
    <url-pattern>/servlet/*</url-pattern>   
</servlet-mapping>   

<servlet-mapping>
<servlet-name>invoker</servlet-name>
<url-pattern>/servlet/*</url-pattern>
</servlet-mapping>
 

再次提醒，应该注意这个项是位于存放在install_dir/conf的Tomcat专用的web.xml文件中的，此文件不是存放在每个Web应用的WEB-INF目录中的标准web.xml。
 

2．禁止激活器：Tomcat3
在Apache Tomcat的版本3中，通过在install_dir/conf/server.xml中注释出InvokerInterceptor项全局禁止缺省 servlet URL。例如，下面是禁止使用缺省servlet URL的server.xml文件的一部分。
 
Xml代码 
<!--    
<RequsetInterceptor className="org.apache.tomcat.request.InvokerInterceptor" debug="0" prefix="/servlet/" />   
-->   

<!--
<RequsetInterceptor className="org.apache.tomcat.request.InvokerInterceptor" debug="0" prefix="/servlet/" />
-->
 
 
5 初始化和预装载servlet与JSP页面
 
这里讨论控制servlet和JSP页面的启动行为的方法。特别是，说明了怎样分配初始化参数以及怎样更改服务器生存期中装载servlet和JSP页面的时刻。
 

5.1 分配servlet初始化参数
利用init-param元素向servlet提供初始化参数，init-param元素具有param-name和param-value子元素。例如，在下面的例子中，如果initServlet servlet是利用它的注册名（InitTest）访问的，它将能够从其方法中调用getServletConfig(). getInitParameter("param1")获得"Value 1"，调用getServletConfig().getInitParameter("param2")获得"2"。
 
 
 
Xml代码 
<servlet>   
    <servlet-name>InitTest</servlet-name>   
    <servlet-class>moreservlets.InitServlet</servlet-class>   
        <init-param>   
            <param-name>param1</param-name>   
            <param-value>value1</param-value>   
        </init-param>   
        <init-param>   
            <param-name>param2</param-name>   
            <param-value>2</param-value>   
        </init-param>   
</servlet>   

<servlet>
<servlet-name>InitTest</servlet-name>
<servlet-class>moreservlets.InitServlet</servlet-class>
<init-param>
<param-name>param1</param-name>
<param-value>value1</param-value>
</init-param>
<init-param>
<param-name>param2</param-name>
<param-value>2</param-value>
</init-param>
</servlet>
 
在涉及初始化参数时，有几点需要注意：
l 返回值。GetInitParameter的返回值总是一个String。因此，在前一个例子中，可对param2使用Integer.parseInt获得一个int。
l JSP中的初始化。JSP页面使用jspInit而不是init。JSP页面还需要使用jsp-file元素代替servlet-class。
l 缺省URL。初始化参数只在通过它们的注册名或与它们注册名相关的定制URL模式访问Servlet时可以使用。因此，在这个例子中，param1和 param2初始化参数将能够在使用URL http://host/webAppPrefix/servlet/InitTest 时可用，但在使用URL http://host/webAppPrefix/servlet/myPackage.InitServlet 时不能使用。
例如，程序清单5-7给出一个名为InitServlet的简单servlet，它使用init方法设置firstName和emailAddress字段。程序清单5-8给出分配名称InitTest给servlet的web.xml文件。
 
程序清单5-7 InitServlet.java
 
Java代码 
package moreservlets;    
   
import java.io.*;    
import javax.servlet.*;    
import javax.servlet.http.*;    
   
public class InitServlet extends HttpServlet {    
    private String firstName, emailAddress;    
   
    public void init() {    
        ServletConfig config = getServletConfig();    
        firstName = config.getInitParameter("firstName");    
        emailAddress = config.getInitParameter("emailAddress");    
    }    
   
    public void doGet(HttpServletRequest request,HttpServletResponse response)throws ServletException, IOException {    
        response.setContentType("text/html");    
        PrintWriter out = response.getWriter();    
        String uri = request.getRequestURI();    
        out.println(ServletUtilities.headWithTitle("Init Servlet") +"<BODY BGCOLOR=\"#FDF5E6\">\n" +"<H2>Init Parameters:</H2>\n" +"<UL>\n" +"<LI>First name: " + firstName + "\n" +"<LI>Email address: " + emailAddress + "\n" +"</UL>\n" + "</BODY></HTML>");    
    }    
}   

package moreservlets;
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
public class InitServlet extends HttpServlet {
private String firstName, emailAddress;
public void init() {
ServletConfig config = getServletConfig();
firstName = config.getInitParameter("firstName");
emailAddress = config.getInitParameter("emailAddress");
}
public void doGet(HttpServletRequest request,HttpServletResponse response)throws ServletException, IOException {
response.setContentType("text/html");
PrintWriter out = response.getWriter();
String uri = request.getRequestURI();
out.println(ServletUtilities.headWithTitle("Init Servlet") +"<BODY BGCOLOR=\"#FDF5E6\">\n" +"<H2>Init Parameters:</H2>\n" +"<UL>\n" +"<LI>First name: " + firstName + "\n" +"<LI>Email address: " + emailAddress + "\n" +"</UL>\n" + "</BODY></HTML>");
}
}
 
程序清单5-8 web.xml（说明初始化参数的摘录）
 
Xml代码 
<?xml version="1.0" encoding="ISO-8859-1"?>   
<!DOCTYPE web-app    
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"    
"http://java.sun.com/dtd/web-app_2_3.dtd">   
   
<web-app>   
<!-- ... -->   
<servlet>   
    <servlet-name>InitTest</servlet-name>   
        <servlet-class>moreservlets.InitServlet</servlet-class>   
        <init-param>   
            <param-name>firstName</param-name>   
            <param-value>Larry</param-value>   
        </init-param>   
        <init-param>   
            <param-name>emailAddress</param-name>   
            <param-value>Ellison@Microsoft.com</param-value>   
        </init-param>   
    </servlet>   
<!-- ... -->   
</web-app>   

<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE web-app
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
"http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
<!-- ... -->
<servlet>
<servlet-name>InitTest</servlet-name>
<servlet-class>moreservlets.InitServlet</servlet-class>
<init-param>
<param-name>firstName</param-name>
<param-value>Larry</param-value>
</init-param>
<init-param>
<param-name>emailAddress</param-name>
<param-value>Ellison@Microsoft.com</param-value>
</init-param>
</servlet>
<!-- ... -->
</web-app>
 
 
5.2 分配JSP初始化参数
给JSP页面提供初始化参数在三个方面不同于给servlet提供初始化参数。
1）使用jsp-file而不是servlet-class。因此，WEB-INF/web.xml文件的servlet元素如下所示：
 
 
 
Xml代码 
<servlet>   
    <servlet-name>PageName</servlet-name>   
    <jsp-file>/RealPage.jsp</jsp-file>   
        <init-param>   
            <param-name>...</param-name>   
            <param-value>...</param-value>   
        </init-param>   
...    
</servlet>   

<servlet>
<servlet-name>PageName</servlet-name>
<jsp-file>/RealPage.jsp</jsp-file>
<init-param>
<param-name>...</param-name>
<param-value>...</param-value>
</init-param>
...
</servlet>
 
2) 几乎总是分配一个明确的URL模式。对servlet，一般相应地使用以http://host/webAppPrefix/servlet/ 开始的缺省URL。只需记住，使用注册名而不是原名称即可。这对于JSP页面在技术上也是合法的。例如，在上面给出的例子中，可用URL http://host/webAppPrefix/servlet/PageName 访问RealPage.jsp的对初始化参数具有访问权的版本。但在用于JSP页面时，许多用户似乎不喜欢应用常规的servlet的URL。此外，如果 JSP页面位于服务器为其提供了目录清单的目录中（如，一个既没有index.html也没有index.jsp文件的目录），则用户可能会连接到此 JSP页面，单击它，从而意外地激活未初始化的页面。因此，好的办法是使用url-pattern（5.3节）将JSP页面的原URL与注册的 servlet名相关联。这样，客户机可使用JSP页面的普通名称，但仍然激活定制的版本。例如，给定来自项目1的servlet定义，可使用下面的 servlet-mapping定义：
 
 
 
Xml代码 
<servlet-mapping>   
    <servlet-name>PageName</servlet-name>   
    <url-pattern>/RealPage.jsp</url-pattern>   
</servlet-mapping>   

<servlet-mapping>
<servlet-name>PageName</servlet-name>
<url-pattern>/RealPage.jsp</url-pattern>
</servlet-mapping>
 
3）JSP页使用jspInit而不是init。自动从JSP页面建立的servlet或许已经使用了inti方法。因此，使用JSP声明提供一个init方法是不合法的，必须制定jspInit方法。
为了说明初始化JSP页面的过程，程序清单5-9给出了一个名为InitPage.jsp的JSP页面，它包含一个jspInit方法且放置于 deployDemo Web应用层次结构的顶层。一般，http://host/deployDemo/InitPage.jsp 形式的URL将激活此页面的不具有初始化参数访问权的版本，从而将对firstName和emailAddress变量显示null。但是， web.xml文件（程序清单5-10）分配了一个注册名，然后将该注册名与URL模式/InitPage.jsp相关联。
 
程序清单5-9 InitPage.jsp
 
Html代码 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">   
<HTML>   
<HEAD><TITLE>JSP Init Test</TITLE></HEAD>   
<BODY BGCOLOR="#FDF5E6">   
<H2>Init Parameters:</H2>   
<UL>   
<LI>First name: <%= firstName %>   
<LI>Email address: <%= emailAddress %>   
</UL>   
</BODY></HTML>   
<%!    
private String firstName, emailAddress;    
   
public void jspInit() {    
ServletConfig config = getServletConfig();    
firstName = config.getInitParameter("firstName");    
emailAddress = config.getInitParameter("emailAddress");    
}    
%>   

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD><TITLE>JSP Init Test</TITLE></HEAD>
<BODY BGCOLOR="#FDF5E6">
<H2>Init Parameters:</H2>
<UL>
<LI>First name: <%= firstName %>
<LI>Email address: <%= emailAddress %>
</UL>
</BODY></HTML>
<%!
private String firstName, emailAddress;
public void jspInit() {
ServletConfig config = getServletConfig();
firstName = config.getInitParameter("firstName");
emailAddress = config.getInitParameter("emailAddress");
}
%>
 
程序清单5-10 web.xml（说明JSP页面的init参数的摘录）
 
 
 
Xml代码 
<?xml version="1.0" encoding="ISO-8859-1"?>   
<!DOCTYPE web-app    
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"    
"http://java.sun.com/dtd/web-app_2_3.dtd">   
<web-app>   
<!-- ... -->   
    <servlet>   
        <servlet-name>InitPage</servlet-name>   
            <jsp-file>/InitPage.jsp</jsp-file>   
                <init-param>   
                    <param-name>firstName</param-name>   
                    <param-value>Bill</param-value>   
                </init-param>   
                <init-param>   
                    <param-name>emailAddress</param-name>   
                    <param-value>gates@oracle.com</param-value>   
                </init-param>   
        </servlet>   
<!-- ... -->     
    <servlet-mapping>   
        <servlet-name> InitPage</servlet-name>   
        <url-pattern>/InitPage.jsp</url-pattern>   
    </servlet-mapping>   
<!-- ... -->   
</web-app>   

<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE web-app
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
"http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
<!-- ... -->
<servlet>
<servlet-name>InitPage</servlet-name>
<jsp-file>/InitPage.jsp</jsp-file>
<init-param>
<param-name>firstName</param-name>
<param-value>Bill</param-value>
</init-param>
<init-param>
<param-name>emailAddress</param-name>
<param-value>gates@oracle.com</param-value>
</init-param>
</servlet>
<!-- ... -->
<servlet-mapping>
<servlet-name> InitPage</servlet-name>
<url-pattern>/InitPage.jsp</url-pattern>
</servlet-mapping>
<!-- ... -->
</web-app>
 
 
 

5.3 提供应用范围内的初始化参数
一般，对单个地servlet或JSP页面分配初始化参数。指定的servlet或JSP页面利用ServletConfig的getInitParameter方法读取这些参数。但是，在某些情形下，希望提供可由任意servlet或JSP页面借助ServletContext的getInitParameter方法读取的系统范围内的初始化参数。
可利用context-param元素声明这些系统范围内的初始化值。context-param元素应该包含param-name、param-value以及可选的description子元素，如下所示：
 
Xml代码 
<context-param>   
    <param-name>support-email</param-name>   
    <param-value>blackhole@mycompany.com</param-value>   
</context-param>   

<context-param>
<param-name>support-email</param-name>
<param-value>blackhole@mycompany.com</param-value>
</context-param>
 
可回忆一下，为了保证可移植性，web.xml内的元素必须以正确的次序声明。但这里应该注意，context-param元素必须出现任意与文档有关的元素（icon、display-name或description）之后及filter、filter-mapping、listener或 servlet元素之前。
 

5.4 在服务器启动时装载servlet
假如servlet或JSP页面有一个要花很长时间执行的init （servlet）或jspInit（JSP）方法。例如，假如init或jspInit方法从某个数据库或ResourceBundle查找产量。这种情况下，在第一个客户机请求时装载servlet的缺省行为将对第一个客户机产生较长时间的延迟。因此，可利用servlet的load-on- startup元素规定服务器在第一次启动时装载servlet。下面是一个例子。
 
Xml代码 
<servlet>   
    <servlet-name> … </servlet-name>   
    <servlet-class> … </servlet-class> <!-- Or jsp-file -->   
<load-on-startup/>   
</servlet>   

<servlet>
<servlet-name> … </servlet-name>
<servlet-class> … </servlet-class> <!-- Or jsp-file -->
<load-on-startup/>
</servlet>
 
可以为此元素体提供一个整数而不是使用一个空的load-on-startup。想法是服务器应该在装载较大数目的servlet或JSP页面之前装载较少数目的servlet或JSP页面。例如，下面的servlet项（放置在Web应用的WEB-INF目录下的web.xml文件中的web-app元素内）将指示服务器首先装载和初始化SearchServlet，然后装载和初始化由位于Web应用的result目录中的index.jsp文件产生的 servlet。
 
Xml代码 
<servlet>   
    <servlet-name>Search</servlet-name>   
    <servlet-class>myPackage.SearchServlet</servlet-class> <!-- Or jsp-file -->   
        <load-on-startup>1</load-on-startup>   
/servlet>   
<servlet>   
        <servlet-name>Results</servlet-name>   
        <servlet-class>/results/index.jsp</servlet-class> <!-- Or jsp-file -->   
        <load-on-startup>2</load-on-startup>   
</servlet>   

<servlet>
<servlet-name>Search</servlet-name>
<servlet-class>myPackage.SearchServlet</servlet-class> <!-- Or jsp-file -->
<load-on-startup>1</load-on-startup>
/servlet>
<servlet>
<servlet-name>Results</servlet-name>
<servlet-class>/results/index.jsp</servlet-class> <!-- Or jsp-file -->
<load-on-startup>2</load-on-startup>
</servlet>
 
 
6 声明过滤器
 
servlet版本2.3引入了过滤器的概念。虽然所有支持servlet API版本2.3的服务器都支持过滤器，但为了使用与过滤器有关的元素，必须在web.xml中使用版本2.3的DTD。
过滤器可截取和修改进入一个servlet或JSP页面的请求或从一个servlet或JSP页面发出的相应。在执行一个servlet或JSP页面之前，必须执行第一个相关的过滤器的doFilter方法。在该过滤器对其FilterChain对象调用doFilter时，执行链中的下一个过滤器。如果没有其他过滤器，servlet或JSP页面被执行。过滤器具有对到来的ServletRequest对象的全部访问权，因此，它们可以查看客户机名、查找到来的cookie等。为了访问servlet或JSP页面的输出，过滤器可将响应对象包裹在一个替身对象（stand-in object）中，比方说把输出累加到一个缓冲区。在调用FilterChain对象的doFilter方法之后，过滤器可检查缓冲区，如有必要，就对它进行修改，然后传送到客户机。
例如，程序清单5-11帝国难以了一个简单的过滤器，只要访问相关的servlet或JSP页面，它就截取请求并在标准输出上打印一个报告（开发过程中在桌面系统上运行时，大多数服务器都可以使用这个过滤器）。
 
 
 
程序清单5-11 ReportFilter.java
 
Java代码 
package moreservlets;    
   
import java.io.*;    
import javax.servlet.*;    
import javax.servlet.http.*;    
import java.util.*;    
   
public class ReportFilter implements Filter {    
    public void doFilter(ServletRequest request,ServletResponse response,FilterChain chain)throws ServletException, IOException {    
        HttpServletRequest req = (HttpServletRequest)request;    
        System.out.println(req.getRemoteHost() +" tried to access " +req.getRequestURL() +" on " + new Date() + ".");    
        chain.doFilter(request,response);    
    }    
   
    public void init(FilterConfig config)throws ServletException {}    
   
    public void destroy() {}    
}   

package moreservlets;
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
import java.util.*;
public class ReportFilter implements Filter {
public void doFilter(ServletRequest request,ServletResponse response,FilterChain chain)throws ServletException, IOException {
HttpServletRequest req = (HttpServletRequest)request;
System.out.println(req.getRemoteHost() +" tried to access " +req.getRequestURL() +" on " + new Date() + ".");
chain.doFilter(request,response);
}
public void init(FilterConfig config)throws ServletException {}
public void destroy() {}
}
 
 
 
 
一旦建立了一个过滤器，可以在web.xml中利用filter元素以及filter-name（任意名称）、file-class（完全限定的类名）和（可选的）init-params子元素声明它。请注意，元素在web.xml的web-app元素中出现的次序不是任意的；允许服务器（但不是必需的）强制所需的次序，并且实际中有些服务器也是这样做的。但这里要注意，所有filter元素必须出现在任意filter-mapping元素之前， filter-mapping元素又必须出现在所有servlet或servlet-mapping元素之前。
例如，给定上述的ReportFilter类，可在web.xml中作出下面的filter声明。它把名称Reporter与实际的类ReportFilter（位于moreservlets程序包中）相关联。
 
Xml代码 
<filter>   
    <filter-name>Reporter</filter-name>   
    <filter-class>moresevlets.ReportFilter</filter-class>   
</filter>   

<filter>
<filter-name>Reporter</filter-name>
<filter-class>moresevlets.ReportFilter</filter-class>
</filter>
 
一旦命名了一个过滤器，可利用filter-mapping元素把它与一个或多个servlet或JSP页面相关联。关于此项工作有两种选择。
首先，可使用filter-name和servlet-name子元素把此过滤器与一个特定的servlet名（此servlet名必须稍后在相同的 web.xml文件中使用servlet元素声明）关联。例如，下面的程序片断指示系统只要利用一个定制的URL访问名为SomeServletName 的servlet或JSP页面，就运行名为Reporter的过滤器。
 
Xml代码 
<filter-mapping>   
    <filter-name>Reporter</filter-name>   
    <servlet-name>SomeServletName</servlet-name>   
</filter-mapping>   

<filter-mapping>
<filter-name>Reporter</filter-name>
<servlet-name>SomeServletName</servlet-name>
</filter-mapping>
 
其次，可利用filter-name和url-pattern子元素将过滤器与一组servlet、JSP页面或静态内容相关联。例如，相面的程序片段指示系统只要访问Web应用中的任意URL，就运行名为Reporter的过滤器。
 
Xml代码 
<filter-mapping>   
    <filter-name>Reporter</filter-name>   
    <url-pattern>/*</url-pattern>   
</filter-mapping>   

<filter-mapping>
<filter-name>Reporter</filter-name>
<url-pattern>/*</url-pattern>
</filter-mapping>
 
例如，程序清单5-12给出了将ReportFilter过滤器与名为PageName的servlet相关联的web.xml文件的一部分。名字 PageName依次又与一个名为TestPage.jsp的JSP页面以及以模式http: //host/webAppPrefix/UrlTest2/ 开头的URL相关联。TestPage.jsp的源代码已经JSP页面命名的谈论在前面的3节"分配名称和定制的URL"中给出。事实上，程序清单5- 12中的servlet和servlet-name项从该节原封不动地拿过来的。给定这些web.xml项，可看到下面的标准输出形式的调试报告（换行是为了容易阅读）。
 
 
 
程序清单5-12 Web.xml（说明filter用法的摘录）
 
Xml代码 
<?xml version="1.0" encoding="ISO-8859-1"?>   
<!DOCTYPE web-app    
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"    
"http://java.sun.com/dtd/web-app_2_3.dtd">   
<web-app>   
    <filter>   
        <filter-name>Reporter</filter-name>   
        <filter-class>moresevlets.ReportFilter</filter-class>   
    </filter>   
    <!-- ... -->   
    <filter-mapping>   
        <filter-name>Reporter</filter-name>   
        <servlet-name>PageName</servlet-name>   
    </filter-mapping>   
<!-- ... -->   
    <servlet>   
        <servlet-name>PageName</servlet-name>   
        <jsp-file>/RealPage.jsp</jsp-file>   
    </servlet>   
<!-- ... -->   
    <servlet-mapping>   
        <servlet-name> PageName </servlet-name>   
        <url-pattern>/UrlTest2/*</url-pattern>   
        </servlet-mapping>   
<!-- ... -->   
</web-app>   

<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE web-app
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
"http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
<filter>
<filter-name>Reporter</filter-name>
<filter-class>moresevlets.ReportFilter</filter-class>
</filter>
<!-- ... -->
<filter-mapping>
<filter-name>Reporter</filter-name>
<servlet-name>PageName</servlet-name>
</filter-mapping>
<!-- ... -->
<servlet>
<servlet-name>PageName</servlet-name>
<jsp-file>/RealPage.jsp</jsp-file>
</servlet>
<!-- ... -->
<servlet-mapping>
<servlet-name> PageName </servlet-name>
<url-pattern>/UrlTest2/*</url-pattern>
</servlet-mapping>
<!-- ... -->
</web-app>
 
7 指定欢迎页
 
假如用户提供了一个像http: //host/webAppPrefix/directoryName/ 这样的包含一个目录名但没有包含文件名的URL，会发生什么事情呢？用户能得到一个目录表？一个错误？还是标准文件的内容？如果得到标准文件内容，是 index.html、index.jsp、default.html、default.htm或别的什么东西呢？
Welcome-file-list 元素及其辅助的welcome-file元素解决了这个模糊的问题。例如，下面的web.xml项指出，如果一个URL给出一个目录名但未给出文件名，服务器应该首先试用index.jsp，然后再试用index.html。如果两者都没有找到，则结果有赖于所用的服务器（如一个目录列表）。
 
Xml代码 
<welcome-file-list>   
    <welcome-file>index.jsp</welcome-file>   
    <welcome-file>index.html</welcome-file>   
</welcome-file-list>   

<welcome-file-list>
<welcome-file>index.jsp</welcome-file>
<welcome-file>index.html</welcome-file>
</welcome-file-list>
 
虽然许多服务器缺省遵循这种行为，但不一定必须这样。因此，明确地使用welcom-file-list保证可移植性是一种良好的习惯。
 
 
 
8 指定处理错误的页面
 
现在我了解到，你在开发servlet和JSP页面时从不会犯错误，而且你的所有页面是那样的清晰，一般的程序员都不会被它们的搞糊涂。但是，是人总会犯错误的，用户可能会提供不合规定的参数，使用不正确的URL或者不能提供必需的表单字段值。除此之外，其它开发人员可能不那么细心，他们应该有些工具来克服自己的不足。
error-page元素就是用来克服这些问题的。它有两个可能的子元素，分别是：error-code和exception- type。第一个子元素error-code指出在给定的HTTP错误代码出现时使用的URL。第二个子元素excpetion-type指出在出现某个给定的Java异常但未捕捉到时使用的URL。error-code和exception-type都利用location元素指出相应的URL。此 URL必须以/开始。location所指出的位置处的页面可通过查找HttpServletRequest对象的两个专门的属性来访问关于错误的信息，这两个属性分别是：javax.servlet.error.status_code和javax.servlet.error.message。
可回忆一下，在web.xml内以正确的次序声明web-app的子元素很重要。这里只要记住，error-page出现在web.xml文件的末尾附近，servlet、servlet-name和welcome-file-list之后即可。
 
 
 
8.1 error-code元素
为了更好地了解error-code元素的值，可考虑一下如果不正确地输入文件名，大多数站点会作出什么反映。这样做一般会出现一个404错误信息，它表示不能找到该文件，但几乎没提供更多有用的信息。另一方面，可以试一下在http://www.microsoft.com/、http://www.ibm.com/ 处或者特别是在http://www.bea.com/ 处输出未知的文件名。这是会得出有用的消息，这些消息提供可选择的位置，以便查找感兴趣的页面。提供这样有用的错误页面对于Web应用来说是很有价值得。事实上rm-error-page子元素）。由form-login-page给出的HTML表单必须具有一个j_security_check的 ACTION属性、一个名为j_username的用户名文本字段以及一个名为j_password的口令字段。
例如，程序清单5-19指示服务器使用基于表单的验证。Web应用的顶层目录中的一个名为login.jsp的页面将收集用户名和口令，并且失败的登陆将由相同目录中名为login-error.jsp的页面报告。
 
程序清单5-19 web.xml（说明login-config的摘录）
 
Xml代码 
<?xml version="1.0" encoding="ISO-8859-1"?>   
<!DOCTYPE web-app    
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"    
"http://java.sun.com/dtd/web-app_2_3.dtd">   
   
<web-app>   
<!-- ... -->   
    <security-constraint> ... </security-constraint>   
    <login-config>   
        <auth-method> FORM </auth-method>   
        <form-login-config>   
            <form-login-page>/login.jsp</form-login-page>   
            <form-error-page>/login-error.jsp</form-error-page>   
        </form-login-config>   
    </login-config>   
<!-- ... -->   
</web-app>   

<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE web-app
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
"http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
<!-- ... -->
<security-constraint> ... </security-constraint>
<login-config>
<auth-method> FORM </auth-method>
<form-login-config>
<form-login-page>/login.jsp</form-login-page>
<form-error-page>/login-error.jsp</form-error-page>
</form-login-config>
</login-config>
<!-- ... -->
</web-app>
 

9.2 限制对Web资源的访问
现在，可以指示服务器使用何种验证方法了。"了不起，"你说道，"除非我能指定一个来收到保护的 URL，否则没有多大用处。"没错。指出这些URL并说明他们应该得到何种保护正是security-constriaint元素的用途。此元素在 web.xml中应该出现在login-config的紧前面。它包含是个可能的子元素，分别是：web-resource-collection、 auth-constraint、user-data-constraint和display-name。下面各小节对它们进行介绍。
l web-resource-collection
此元素确定应该保护的资源。所有security-constraint元素都必须包含至少一个web-resource-collection项。此元素由一个给出任意标识名称的web-resource-name元素、一个确定应该保护的URL的url-pattern元素、一个指出此保护所适用的 HTTP命令（GET、POST等，缺省为所有方法）的http-method元素和一个提供资料的可选description元素组成。例如，下面的 Web-resource-collection项（在security-constratint元素内）指出Web应用的proprietary目录中所有文档应该受到保护。
 
Xml代码 
<security-constraint>   
    <web-resource-coolection>   
    <web-resource-name>Proprietary</web-resource-name>   
        <url-pattern>/propritary/*</url-pattern>   
    </web-resource-coolection>   
<!-- ... -->   
</security-constraint>   

<security-constraint>
<web-resource-coolection>
<web-resource-name>Proprietary</web-resource-name>
<url-pattern>/propritary/*</url-pattern>
</web-resource-coolection>
<!-- ... -->
</security-constraint>
 
重要的是应该注意到，url-pattern仅适用于直接访问这些资源的客户机。特别是，它不适合于通过MVC体系结构利用 RequestDispatcher来访问的页面，或者不适合于利用类似jsp:forward的手段来访问的页面。这种不匀称如果利用得当的话很有好处。例如，servlet可利用MVC体系结构查找数据，把它放到bean中，发送请求到从bean中提取数据的JSP页面并显示它。我们希望保证决不直接访问受保护的JSP页面，而只是通过建立该页面将使用的bean的servlet来访问它。url-pattern和auth-contraint元素可通过声明不允许任何用户直接访问JSP页面来提供这种保证。但是，这种不匀称的行为可能让开发人员放松警惕，使他们偶然对应受保护的资源提供不受限制的访问。 
l auth-constraint
尽管web-resource-collention元素质出了哪些URL应该受到保护，但是auth-constraint元素却指出哪些用户应该具有受保护资源的访问权。此元素应该包含一个或多个标识具有访问权限的用户类别role- name元素，以及包含（可选）一个描述角色的description元素。例如，下面web.xml中的security-constraint元素部门规定只有指定为Administrator或Big Kahuna（或两者）的用户具有指定资源的访问权。
 
Xml代码 
<security-constraint>   
    <web-resource-coolection> ... </web-resource-coolection>   
    <auth-constraint>   
        <role-name>administrator</role-name>   
        <role-name>kahuna</role-name>   
    </auth-constraint>   
</security-constraint>   

<security-constraint>
<web-resource-coolection> ... </web-resource-coolection>
<auth-constraint>
<role-name>administrator</role-name>
<role-name>kahuna</role-name>
</auth-constraint>
</security-constraint>
 
重要的是认识到，到此为止，这个过程的可移植部分结束了。服务器怎样确定哪些用户处于任何角色以及它怎样存放用户的口令，完全有赖于具体的系统。
例如，Tomcat使用install_dir/conf/tomcat-users.xml将用户名与角色名和口令相关联，正如下面例子中所示，它指出用户joe（口令bigshot）和jane（口令enaj）属于administrator和kahuna角色。
 
Xml代码 
<tomcat-users>   
    <user name="joe" password="bigshot" roles="administrator,kahuna" />   
    <user name="jane" password="enaj" roles="kahuna" />   
</tomcat-users>   

<tomcat-users>
<user name="joe" password="bigshot" roles="administrator,kahuna" />
<user name="jane" password="enaj" roles="kahuna" />
</tomcat-users>
 
l user-data-constraint
这个可选的元素指出在访问相关资源时使用任何传输层保护。它必须包含一个transport-guarantee子元素（合法值为NONE、 INTEGRAL或CONFIDENTIAL），并且可选地包含一个description元素。transport-guarantee为NONE值将对所用的通讯协议不加限制。INTEGRAL值表示数据必须以一种防止截取它的人阅读它的方式传送。虽然原理上（并且在未来的HTTP版本中），在 INTEGRAL和CONFIDENTIAL之间可能会有差别，但在当前实践中，他们都只是简单地要求用SSL。例如，下面指示服务器只允许对相关资源做 HTTPS连接：
 
Xml代码 
<security-constraint>   
<!-- ... -->   
    <user-data-constraint>   
        <transport-guarantee>CONFIDENTIAL</transport-guarantee>   
    </user-data-constraint>   
</security-constraint>   

<security-constraint>
<!-- ... -->
<user-data-constraint>
<transport-guarantee>CONFIDENTIAL</transport-guarantee>
</user-data-constraint>
</security-constraint>
 
l display-name
security-constraint的这个很少使用的子元素给予可能由GUI工具使用的安全约束项一个名称。
 

9.3 分配角色名
迄今为止，讨论已经集中到完全由容器（服务器）处理的安全问题之上了。但servlet以及JSP页面也能够处理它们自己的安全问题。
例如，容器可能允许用户从bigwig或bigcheese角色访问一个显示主管人员额外紧贴的页面，但只允许bigwig用户修改此页面的参数。完成这种更细致的控制的一种常见方法是调用HttpServletRequset的isUserInRole方法，并据此修改访问。
Servlet的 security-role-ref子元素提供出现在服务器专用口令文件中的安全角色名的一个别名。例如，假如编写了一个调用 request.isUserInRole（"boss"）的servlet，但后来该servlet被用在了一个其口令文件调用角色manager而不是boss的服务器中。下面的程序段使该servlet能够使用这两个名称中的任何一个。
 
Xml代码 
<servlet>   
<!-- ... -->   
    <security-role-ref>   
        <role-name>boss</role-name> <!-- New alias -->   
        <role-link>manager</role-link> <!-- Real name -->   
    </security-role-ref>   
</servlet>   

<servlet>
<!-- ... -->
<security-role-ref>
<role-name>boss</role-name> <!-- New alias -->
<role-link>manager</role-link> <!-- Real name -->
</security-role-ref>
</servlet>
 
也可以在web-app内利用security-role元素提供将出现在role-name元素中的所有安全角色的一个全局列表。分别地生命角色使高级IDE容易处理安全信息。
 
 
 
10 控制会话超时
 
如果某个会话在一定的时间内未被访问，服务器可把它扔掉以节约内存。可利用HttpSession的setMaxInactiveInterval方法直接设置个别会话对象的超时值。如果不采用这种方法，则缺省的超时值由具体的服务器决定。但可利用session-config和session- timeout元素来给出一个适用于所有服务器的明确的超时值。超时值的单位为分钟，因此，下面的例子设置缺省会话超时值为三个小时（180分钟）。
 
 
 
Xml代码 
<session-config>   
    <session-timeout>180</session-timeout>   
</session-config>   

<session-config>
<session-timeout>180</session-timeout>
</session-config>
  

11 Web应用的文档化
 
越来越多的开发环境开始提供servlet和JSP的直接支持。例子有Borland Jbuilder Enterprise Edition、Macromedia UltraDev、Allaire JRun Studio（写此文时，已被Macromedia收购）以及IBM VisuaAge for Java等。
大量的web.xml元素不仅是为服务器设计的，而且还是为可视开发环境设计的。它们包括icon、display-name和discription等。
可回忆一下，在web.xml内以适当地次序声明web-app子元素很重要。不过，这里只要记住icon、display-name和description是web.xml的web-app元素内的前三个合法元素即可。
l icon
icon元素指出GUI工具可用来代表Web应用的一个和两个图像文件。可利用small-icon元素指定一幅16 x 16的GIF或JPEG图像，用large-icon元素指定一幅32 x 32的图像。下面举一个例子：
 
Xml代码 
<icon>   
    <small-icon>/images/small-book.gif</small-icon>   
    <large-icon>/images/tome.jpg</large-icon>   
</icon>   

<icon>
<small-icon>/images/small-book.gif</small-icon>
<large-icon>/images/tome.jpg</large-icon>
</icon>
 
l display-name
display-name元素提供GUI工具可能会用来标记此Web应用的一个名称。下面是个例子。
<display-name>Rare Books</display-name>
l description
description元素提供解释性文本，如下所示：
 
Xml代码 
<description>   
This Web application represents the store developed for rare-books.com, an online bookstore specializing in rare and limited-edition books.    
</description>   

<description>
This Web application represents the store developed for rare-books.com, an online bookstore specializing in rare and limited-edition books.
</description>
 
 
12 关联文件与MIME类型
 
服务器一般都具有一种让Web站点管理员将文件扩展名与媒体相关联的方法。例如，将会自动给予名为mom.jpg的文件一个image/jpeg的MIME 类型。但是，假如你的Web应用具有几个不寻常的文件，你希望保证它们在发送到客户机时分配为某种MIME类型。mime-mapping元素（具有 extension和mime-type子元素）可提供这种保证。例如，下面的代码指示服务器将application/x-fubar的MIME类型分配给所有以.foo结尾的文件。
 
Xml代码 
<mime-mapping>   
    <extension>foo</extension>   
    <mime-type>application/x-fubar</mime-type>   
</mime-mapping>   

<mime-mapping>
<extension>foo</extension>
<mime-type>application/x-fubar</mime-type>
</mime-mapping>
 
或许，你的Web应用希望重载（override）标准的映射。例如，下面的代码将告诉服务器在发送到客户机时指定.ps文件作为纯文本（text/plain）而不是作为PostScript（application/postscript）。
 
Xml代码 
<mime-mapping>   
    <extension>ps</extension>   
    <mime-type>application/postscript</mime-type>   
</mime-mapping>   

<mime-mapping>
<extension>ps</extension>
<mime-type>application/postscript</mime-type>
</mime-mapping>
 
13 定位TLD
 
JSP taglib元素具有一个必要的uri属性，它给出一个TLD（Tag Library Descriptor）文件相对于Web应用的根的位置。TLD文件的实际名称在发布新的标签库版本时可能会改变，但我们希望避免更改所有现有JSP页面。此外，可能还希望使用保持taglib元素的简练性的一个简短的uri。这就是部署描述符文件的taglib元素派用场的所在了。Taglib包含两个子元素：taglib-uri和taglib-location。taglib-uri元素应该与用于JSP taglib元素的uri属性的东西相匹配。Taglib-location元素给出TLD文件的实际位置。例如，假如你将文件chart-tags- 1.3beta.tld放在WebApp/WEB-INF/tlds中。现在，假如web.xml在web-app元素内包含下列内容。
 
Xml代码 
<taglib>   
    <taglib-uri>/charts.tld</taglib-uri>   
    <taglib-location>/WEB-INF/tlds/chart-tags-1.3beta.tld</taglib-location>   
</taglib>   

<taglib>
<taglib-uri>/charts.tld</taglib-uri>
<taglib-location>/WEB-INF/tlds/chart-tags-1.3beta.tld</taglib-location>
</taglib>
 
给出这个说明后，JSP页面可通过下面的简化形式使用标签库。
<%@ taglib uri="/charts.tld" prefix="somePrefix" %>
 
 
 
14 指定应用事件监听程序
 
应用事件监听器程序是建立或修改servlet环境或会话对象时通知的类。它们是servlet规范的版本2.3中的新内容。这里只简单地说明用来向Web应用注册一个监听程序的web.xml的用法。
注册一个监听程序涉及在web.xml的web-app元素内放置一个listener元素。在listener元素内，listener-class元素列出监听程序的完整的限定类名，如下所示：
 
Xml代码 
<listener>   
    <listener-class>package.ListenerClass</listener-class>   
</listener>   

<listener>
<listener-class>package.ListenerClass</listener-class>
</listener>
 
虽然listener元素的结构很简单，但请不要忘记，必须正确地给出web-app元素内的子元素的次序。listener元素位于所有的servlet 元素之前以及所有filter-mapping元素之后。此外，因为应用生存期监听程序是serlvet规范的2.3版本中的新内容，所以必须使用 web.xml DTD的2.3版本，而不是2.2版本。
例如，程序清单5-20给出一个名为ContextReporter的简单的监听程序，只要Web应用的Servlet-Context建立（如装载Web应用）或消除（如服务器关闭）时，它就在标准输出上显示一条消息。程序清单5-21给出此监听程序注册所需要的web.xml文件的一部分。
 
 
 
程序清单5-20 ContextReporterjava
 
Java代码 
package moreservlets;    
   
import javax.servlet.*;    
import java.util.*;    
   
public class ContextReporter implements ServletContextListener {    
    public void contextInitialized(ServletContextEvent event) {    
        System.out.println("Context created on " +  new Date() + ".");    
    }    
   
    public void contextDestroyed(ServletContextEvent event) {    
        System.out.println("Context destroyed on " +   new Date() + ".");    
    }    
}   

package moreservlets;
import javax.servlet.*;
import java.util.*;
public class ContextReporter implements ServletContextListener {
public void contextInitialized(ServletContextEvent event) {
System.out.println("Context created on " +  new Date() + ".");
}
public void contextDestroyed(ServletContextEvent event) {
System.out.println("Context destroyed on " +   new Date() + ".");
}
}
 
  


程序清单5-21 web.xml（声明一个监听程序的摘录）
 
Xml代码 
<?xml version="1.0" encoding="ISO-8859-1"?>   
<!DOCTYPE web-app    
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"    
"http://java.sun.com/dtd/web-app_2_3.dtd">   
<web-app>   
<!-- ... -->   
    <filter-mapping> … </filter-mapping>   
    <listener>   
        <listener-class>package.ListenerClass</listener-class>   
    </listener>   
    <servlet> ... </servlet>   
<!-- ... -->   
</web-app>   

<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE web-app
PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
"http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
<!-- ... -->
<filter-mapping> … </filter-mapping>
<listener>
<listener-class>package.ListenerClass</listener-class>
</listener>
<servlet> ... </servlet>
<!-- ... -->
</web-app>
 
15 J2EE元素
 
本节描述用作J2EE环境组成部分的Web应用的web.xml元素。这里将提供一个简明的介绍，详细内容可以参阅http://java.sun.com/j2ee/j2ee-1_3-fr-spec.pdf的Java 2 Plantform Enterprise Edition版本1.3规范的第5章。
l distributable
distributable 元素指出，Web应用是以这样的方式编程的：即，支持集群的服务器可安全地在多个服务器上分布Web应用。例如，一个可分布的应用必须只使用 Serializable对象作为其HttpSession对象的属性，而且必须避免用实例变量（字段）来实现持续性。distributable元素直接出现在discription元素之后，并且不包含子元素或数据，它只是一个如下的标志。
<distributable />
l resource-env-ref
resource -env-ref元素声明一个与某个资源有关的管理对象。此元素由一个可选的description元素、一个resource-env-ref- name元素（一个相对于java:comp/env环境的JNDI名）以及一个resource-env-type元素（指定资源类型的完全限定的类），如下所示：
 
Xml代码 
<resource-env-ref>   
    <resource-env-ref-name>jms/StockQueue</resource-env-ref-name>   
    <resource-env-ref-type>javax.jms.Queue</resource-env-ref-type>   
</resource-env-ref>   

<resource-env-ref>
<resource-env-ref-name>jms/StockQueue</resource-env-ref-name>
<resource-env-ref-type>javax.jms.Queue</resource-env-ref-type>
</resource-env-ref>
 
l env-entry
env -entry元素声明Web应用的环境项。它由一个可选的description元素、一个env-entry-name元素（一个相对于java: comp/env环境JNDI名）、一个env-entry-value元素（项值）以及一个env-entry-type元素（java.lang程序包中一个类型的完全限定类名，java.lang.Boolean、java.lang.String等）组成。下面是一个例子：
 
Xml代码 
<env-entry>   
    <env-entry-name>minAmout</env-entry-name>   
    <env-entry-value>100.00</env-entry-value>   
    <env-entry-type>minAmout</env-entry-type>   
</env-entry>   

<env-entry>
<env-entry-name>minAmout</env-entry-name>
<env-entry-value>100.00</env-entry-value>
<env-entry-type>minAmout</env-entry-type>
</env-entry>
 
l ejb-ref
ejb -ref元素声明对一个EJB的主目录的应用。它由一个可选的description元素、一个ejb-ref-name元素（相对于java: comp/env的EJB应用）、一个ejb-ref-type元素（bean的类型，Entity或Session）、一个home元素（bean的主目录接口的完全限定名）、一个remote元素（bean的远程接口的完全限定名）以及一个可选的ejb-link元素（当前bean链接的另一个 bean的名称）组成。
l ejb-local-ref
ejb-local-ref元素声明一个EJB的本地主目录的引用。除了用local-home代替home外，此元素具有与ejb-ref元素相同的属性并以相同的方式使用。
 
  

给你的session加个监听器 


今天一个学生问我怎么实现在网页里显示在线用户的名称——他已经使用了session，但是无法处理用户离开的情况，然后导致在线用户列表的无限增大。跟他说了自己在application中进行超时检查，更新application的时候就比较当前所有列表中的session是否超过自己指定的时间间隔。后来想了想，又给他提了使用给session加监听器的方法。但是提的时候自己也没有做过，所以只是说这种方式很复杂，建议他还是自己进行超时检查。刚才又看了看资料，发现实际上给session加监听器的方式很简单，不禁觉得自己有点误人子弟了，现在将方法写在这，借以告诫自己以后要严谨。
首先写一个SessionBinder类,它实现了HttpSessionBindingListener接口的valueBound方法和valueUnbound方法，示例代码如下：
 
Java代码 
public class SessionBinder implements HttpSessionBindingListener {    
    public void valueBound(HttpSessionBindingEvent event){    
    //you can do anything you want!this method will be called when this binder is bind with any session.    
    }    
   
    public void valueUnbound(HttpSessionBindingEvent event) {    
    //you can do something while this session is invalidate    
    }    
}   

public class SessionBinder implements HttpSessionBindingListener {
public void valueBound(HttpSessionBindingEvent event){
//you can do anything you want!this method will be called when this binder is bind with any session.
}
public void valueUnbound(HttpSessionBindingEvent event) {
//you can do something while this session is invalidate
}
}
 
 

现在写好了SessionBinder，我们现在选择在一个servlet中向session中加入这个监听器——在jsp中的代码书写与此相同
//省略前面的代码，此操作可能发生在servlet的doGet方法中，也可能是doPost方法中
 
Java代码 
HttpSession session = req.getSession(true);//首先获得需要加入监听器的session对象，req是HttpRequest对象    
SessionBinder sb = new SessionBinder();//建立一个监听器对象    
session.putValue("BinderObject",sb);//将监听器加入此session中，从此时开始执行sb的valueBound方法   

    HttpSession session = req.getSession(true);//首先获得需要加入监听器的session对象，req是HttpRequest对象
SessionBinder sb = new SessionBinder();//建立一个监听器对象
session.putValue("BinderObject",sb);//将监听器加入此session中，从此时开始执行sb的valueBound方法
 
//省略后面的代码
随后，如果整个session超时或者被用户中止之后，sb的valueUnbound自动执行


------------

web.xml 文件中一般包括 servlet, spring, filter, listenr的配置。那么他们是按照一个什么顺序加载呢？

加载顺序会影响对spring bean 的调用。

    比如filter 需要用到 bean ，但是加载顺序是 先加载filter 后加载spring，则filter中初始化操作中的bean为null；

首先可以肯定 加载顺序与他们在web.xml 文件中的先后顺序无关。

web.xml 中 listener 和 serverlet 的加载顺序为 先 listener 后serverlet 

最终得出结果：先 listener >> filter >> servlet >>  spring 

 所以，如果过滤器中要使用到 bean，可以将spring 的加载 改成 Listener的方式 

<listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>


 搞定！

 

 

 

 关于他们的内部执行顺序，也需要注意，如下面文章中遇到的问题

web.xml的filter执行顺序导致的乱码，切记！
2008-05-02 01:38
发现引起bug的原因是web.xml的下面几行：
    <filter-mapping>
        <filter-name>SecurityFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>CharacterEncoding</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>CharacterEncoding</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>

根据servlet2.3规范filter执行是按照web.xml配置的filter-mapping先后顺序进行执行，所以上面的配置会导致遇见*.do的url请求，先进行SecurityFilter的过滤器处理，这时候没有做编码处理，已经是乱码，到下面的filter处理时已经时乱码，再做编码处理已经没有用处。

修正方式，调整filter-mapping顺序，如下：

    <filter-mapping>
        <filter-name>CharacterEncoding</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>CharacterEncoding</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>SecurityFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping> 



------------

<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
--><!-- Note:  A "Server" is not itself a "Container", so you may not
     define subcomponents such as "Valves" at this level.
     Documentation at /docs/config/server.html
 --><Server port="8005" shutdown="SHUTDOWN">

  <!--APR library loader. Documentation at /docs/apr.html -->
  <Listener SSLEngine="on" className="org.apache.catalina.core.AprLifecycleListener"/>
  <!--Initialize Jasper prior to webapps are loaded. Documentation at /docs/jasper-howto.html -->
  <Listener className="org.apache.catalina.core.JasperListener"/>
  <!-- Prevent memory leaks due to use of particular java/javax APIs-->
  <Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener"/>
  <!-- JMX Support for the Tomcat server. Documentation at /docs/non-existent.html -->
  <Listener className="org.apache.catalina.mbeans.ServerLifecycleListener"/>
  <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener"/>

  <!-- Global JNDI resources
       Documentation at /docs/jndi-resources-howto.html
  -->
  <GlobalNamingResources>
    <!-- Editable user database that can also be used by
         UserDatabaseRealm to authenticate users
    -->
    <Resource auth="Container" description="User database that can be updated and saved" factory="org.apache.catalina.users.MemoryUserDatabaseFactory" name="UserDatabase" pathname="conf/tomcat-users.xml" type="org.apache.catalina.UserDatabase"/>
  </GlobalNamingResources>

  <!-- A "Service" is a collection of one or more "Connectors" that share
       a single "Container" Note:  A "Service" is not itself a "Container", 
       so you may not define subcomponents such as "Valves" at this level.
       Documentation at /docs/config/service.html
   -->
  <Service name="Catalina">
  
    <!--The connectors can use a shared executor, you can define one or more named thread pools-->
    <!--
    <Executor name="tomcatThreadPool" namePrefix="catalina-exec-" 
        maxThreads="150" minSpareThreads="4"/>
    -->
    
    
    <!-- A "Connector" represents an endpoint by which requests are received
         and responses are returned. Documentation at :
         Java HTTP Connector: /docs/config/http.html (blocking & non-blocking)
         Java AJP  Connector: /docs/config/ajp.html
         APR (HTTP/AJP) Connector: /docs/apr.html
         Define a non-SSL HTTP/1.1 Connector on port 8080
    -->
    <Connector connectionTimeout="20000" port="9080" protocol="HTTP/1.1" redirectPort="8443"/>
    <!-- A "Connector" using the shared thread pool-->
    <!--
    <Connector executor="tomcatThreadPool"
               port="8080" protocol="HTTP/1.1" 
               connectionTimeout="20000" 
               redirectPort="8443" />
    -->           
    <!-- Define a SSL HTTP/1.1 Connector on port 8443
         This connector uses the JSSE configuration, when using APR, the 
         connector should be using the OpenSSL style configuration
         described in the APR documentation -->
    <!--
    <Connector port="8443" protocol="HTTP/1.1" SSLEnabled="true"
               maxThreads="150" scheme="https" secure="true"
               clientAuth="false" sslProtocol="TLS" />
    -->

    <!-- Define an AJP 1.3 Connector on port 8009 -->
    <Connector port="8009" protocol="AJP/1.3" redirectPort="8443"/>


    <!-- An Engine represents the entry point (within Catalina) that processes
         every request.  The Engine implementation for Tomcat stand alone
         analyzes the HTTP headers included with the request, and passes them
         on to the appropriate Host (virtual host).
         Documentation at /docs/config/engine.html -->

    <!-- You should set jvmRoute to support load-balancing via AJP ie :
    <Engine name="Catalina" defaultHost="localhost" jvmRoute="jvm1">         
    --> 
    <Engine defaultHost="localhost" name="Catalina">

      <!--For clustering, please take a look at documentation at:
          /docs/cluster-howto.html  (simple how to)
          /docs/config/cluster.html (reference documentation) -->
      <!--
      <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"/>
      -->        

      <!-- The request dumper valve dumps useful debugging information about
           the request and response data received and sent by Tomcat.
           Documentation at: /docs/config/valve.html -->
      <!--
      <Valve className="org.apache.catalina.valves.RequestDumperValve"/>
      -->

      <!-- This Realm uses the UserDatabase configured in the global JNDI
           resources under the key "UserDatabase".  Any edits
           that are performed against this UserDatabase are immediately
           available for use by the Realm.  -->
      <Realm className="org.apache.catalina.realm.UserDatabaseRealm" resourceName="UserDatabase"/>

      <!-- Define the default virtual host
           Note: XML Schema validation will not work with Xerces 2.2.
       -->
      <Host appBase="webapps" autoDeploy="true" name="localhost" unpackWARs="true" xmlNamespaceAware="false" xmlValidation="false">

        <!-- SingleSignOn valve, share authentication between web applications
             Documentation at: /docs/config/valve.html -->
        <!--
        <Valve className="org.apache.catalina.authenticator.SingleSignOn" />
        -->

        <!-- Access log processes all example.
             Documentation at: /docs/config/valve.html -->
        <!--
        <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"  
               prefix="localhost_access_log." suffix=".txt" pattern="common" resolveHosts="false"/>
        -->

		<!--  <Context docBase="tmrpt305" path="/tmrpt305" reloadable="true" source="org.eclipse.jst.jee.server:bocRisk" >
      	<Resource name="jdbc/tmrpt" 
				  type="javax.sql.DataSource" 
				  driverClassName="oracle.jdbc.driver.OracleDriver" 
				  maxIdle="3" 
				  maxWait="-1" 
				  username="TMRPT" 
				  password="TMRPT" 
				  url="jdbc:oracle:thin:@(DESCRIPTION =(ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = 22.188.132.158)(PORT = 1521)))(CONNECT_DATA =(SERVICE_NAME = oraAARP)))"  
				  maxActive="5"/>
      </Context>   
       -->
       
      
        <Context docBase="tmrpt305" path="/tmrpt305" reloadable="true" source="org.eclipse.jst.jee.server:bocRisk" >
      	<Resource name="jdbc/tmrpt" 
				  type="javax.sql.DataSource" 
				  driverClassName="oracle.jdbc.driver.OracleDriver" 
				  maxIdle="3" 
				  maxWait="-1" 
				  username="tmrpt305" 
				  password="tmrpt305" 
				  url="jdbc:oracle:thin:@22.188.20.184:1521:orau11g" 
				  maxActive="5"/>
      </Context>  
     <!--   
     <Context docBase="tmrpt305" path="/tmrpt305" reloadable="true" source="org.eclipse.jst.jee.server:bocRisk" >
      	<Resource name="jdbc/tmrpt" 
				  type="javax.sql.DataSource" 
				  driverClassName="oracle.jdbc.driver.OracleDriver" 
				  maxIdle="3" 
				  maxWait="-1" 
				  username="TMRPT" 
				  password="TMRPT" 
				  url="jdbc:oracle:thin:@(DESCRIPTION =(ADDRESS_LIST =(ADDRESS = (PROTOCOL = TCP)(HOST = 22.188.132.158)(PORT = 1521)))(CONNECT_DATA =(SERVICE_NAME = oraAARP)))"  
				  maxActive="5"/>
      </Context>   -->
      <!--    <Context docBase="tmrpt305" path="/tmrpt305" reloadable="true" source="org.eclipse.jst.jee.server:bocRisk" >
      	<Resource name="jdbc/tmrpt" 
				  type="javax.sql.DataSource" 
				  driverClassName="oracle.jdbc.driver.OracleDriver" 
				  maxIdle="3" 
				  maxWait="-1" 
				  username="tmrpt" 
				  password="tmrpt" 
				  url="jdbc:oracle:thin:@127.0.0.1:1521:XINBL" 
				   
				  maxActive="5"/>
      </Context>  --> 
      </Host>
    </Engine>
  </Service>
</Server>

------------

 
Javascript刷新页面的几种方法： 
1 history.go(0) 
2 location.reload() 
3 location=location 
4 location.assign(location) 
5 document.execCommand('Refresh') 
6 window.navigate(location) 
7 location.replace(location) 
8 document.URL=location.href 

自动刷新页面的方法: 
1.页面自动刷新：把如下代码加入<head>区域中 
<meta http-equiv="refresh" content="20"> 
其中20指每隔20秒刷新一次页面. 

2.页面自动跳转：把如下代码加入<head>区域中 
<meta http-equiv="refresh" content="20;url=http://www.jb51.net"> 
其中20指隔20秒后跳转到http://www.jb51.net页面 

3.页面自动刷新js版 
复制代码 代码如下:

<script language="JavaScript"> 
function myrefresh() 
{ 
window.location.reload(); 
} 
setTimeout('myrefresh()',1000); //指定1秒刷新一次 
</script> 

ASP.NET如何输出刷新父窗口脚本语句 
1. this.response.write("<script>opener.location.reload();</script>"); 
2. this.response.write("<script>opener.window.location.href = opener.window.location.href;</script>"); 
3. Response.Write("<script language=javascript>opener.window.navigate(''你要刷新的页.asp'');</script>") 

JS刷新框架的脚本语句 
//如何刷新包含该框架的页面用 
<script language=JavaScript> 
parent.location.reload(); 
</script> 

//子窗口刷新父窗口 
<script language=JavaScript> 
self.opener.location.reload(); 
</script> 
(　或　<a href="javascript:opener.location.reload()">刷新</a> ) 

//如何刷新另一个框架的页面用 
<script language=JavaScript> 
parent.另一FrameID.location.reload(); 
</script> 

如果想关闭窗口时刷新或者想开窗时刷新的话，在<body>中调用以下语句即可。 

<body onload="opener.location.reload()"> 开窗时刷新 
<body onUnload="opener.location.reload()"> 关闭时刷新 

<script language="javascript"> 
window.opener.document.location.reload() 
</script> 

//跳出页面 
<SCRIPT LANGUAGE=JAVASCRIPT> 
<!-- 
if (top.location !== self.location) { 
top.location=self.location; 
}

------------

Timestamp 时间戳
刷新另外一个页面  window.parent.main.document.location.reload();main是一个frame的name
获取session 
String admin =(String)session.getAttribute("admin");
if(admin==null||admin.equals("true")){
response.sendRedirect("login.jsp");
}
设置id自增：   id       INT(20) not null AUTO_INCREMENT
查看建表语句：show create table tablename；
删除全表：delete from tablename；
设置表不自动提交：conn.setAutoCommit(false);
查看表名字：document.form["formname"].name.vlue=参数;
立即执行javaScript语句；test();eval(test());
链接到一个frame中的jsp：window.parent.frames["framename"].loaction.href="test.jsp";可以传递参数
request.setCharacterEncoding("gb2312");
request.getParameter("name");
实现数据库分页 定义一个函数Page(pagenum,pagesize){}
SELECT * FROM  (
SELECT A.*, rownum r FROM
(SELECT * FROM event_log ) A
WHERE rownum <= 5*10
) B
WHERE r > 4*10

------------

加密
能逆算的加密
传入String加密

------------

import java.security.*;   
 
class 加密 {   
 public final static String MD5(String s) {   
  char hexDigits[] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',   
    'a', 'b', 'c', 'd', 'e', 'f' };   
  try {   
   byte[] strTemp = s.getBytes();  
   MessageDigest mdTemp = MessageDigest.getInstance("MD5");   
   mdTemp.update(strTemp);   
   byte[] md = mdTemp.digest();   
   int j = md.length;   
   char str[] = new char[j * 2];   
   int k = 0;   
   for (int i = 0; i < j; i++) {   
    byte byte0 = md[i];   
    str[k++] = hexDigits[byte0 >>> 4 & 0xf];   &是位运算符，11为1 ，01为0,10为0，00为0；0xf的二进制码为1111；
    str[k++] = hexDigits[byte0 & 0xf];   
   }   
   return new String(str);   
  } catch (Exception e) {   
   return null;   
  }   
 }   
  
 public static void main(String[] args) {   
  // MD5_Test aa = new MD5_Test();   
  System.out.print(加密.MD5("b"));   
 }   
}  

------------

package com.gdb.mima;

import java.security.MessageDigest;   


public class 解密 {   
 // MD5加码。32位   
 public static String MD5(String inStr) {   
  MessageDigest md5 = null;   
  try {   
   md5 = MessageDigest.getInstance("MD5");   
  } catch (Exception e) {   
   System.out.println(e.toString());   
   e.printStackTrace();   
   return "";   
  }   
  char[] charArray = inStr.toCharArray();   
  byte[] byteArray = new byte[charArray.length];   
  
  for (int i = 0; i < charArray.length; i++)   
   byteArray[i] = (byte) charArray[i];   
  
  byte[] md5Bytes = md5.digest(byteArray);   
  
  StringBuffer hexValue = new StringBuffer();   
  
  for (int i = 0; i < md5Bytes.length; i++) {   
   int val = ((int) md5Bytes[i]) & 0xff;   
   if (val < 16)   
    hexValue.append("0");   
   hexValue.append(Integer.toHexString(val));   
  }   
  
  return hexValue.toString();   
 }   
  
 // 可逆的加密算法   
 public static String KL(String inStr) {   
  // String s = new String(inStr);   
  char[] a = inStr.toCharArray();   
  for (int i = 0; i < a.length; i++) {   
   a[i] = (char) (a[i] ^ 't');   
  }   
  String s = new String(a);   
  return s;   
 }   
  
 // 加密后解密   
 public static String JM(String inStr) {   
  char[] a = inStr.toCharArray();   
  for (int i = 0; i < a.length; i++) {   
   a[i] = (char) (a[i] ^ 't');   
  }   
  String k = new String(a);   
  return k;   
 }   
    
 // 测试主函数   
 public static void main(String args[]) {   
  String s = new String("a");   
  System.out.println("原始：" + s);   
  System.out.println("MD5后：" + MD5(s));   
  System.out.println("MD5后再加密：" + KL(MD5(s)));   
  System.out.println("解密为MD5后的：" + JM(KL(MD5(s))));   
 }   
}  


------------

package com.amsoft.amp.util;
/**
 * <p> Title: </p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2007</p>
 * <p>Company: 北京宇信易诚网络技术有限公司</p>
 * <p>Date: 2011-12-18</p>
 * @author 毛小明
 * @version 1.0
 */
import java.security.MessageDigest;
import java.sql.*;
import java.text.*;
import java.util.Date;
import java.util.GregorianCalendar;

public class GeneralUtils
{
  /**
   * 将字符串md5加密
   * @param test
   * @return
   * @throws Exception
   */
  public static String formatToMD5(String test) throws Exception {
	  MessageDigest md = MessageDigest.getInstance("MD5");
	  md.update(test.getBytes());
	  
	  byte b[] = md.digest(); 
	  int i; 

	  StringBuffer buf = new StringBuffer(""); 
	  for (int offset = 0; offset < b.length; offset++) { 
		  i = b[offset]; 
		  if(i<0) i+= 256; 
		  if(i<16) 
		  buf.append("0"); 
		  buf.append(Integer.toHexString(i)); 
	  }

	  return buf.toString();
  }
}

  
  
  调用：ciphertext = GeneralUtils.formatToMD5(password);

------------

css-div
css
日期显示
博客div
实例
文字滚动

------------

div,span{
	font-size:18px;						/* 字号大小 */
	font-weight:bold;					/* 字体粗细 */
	font-family:Arial;					/* 字体 */
	color:#FF0000;						/* 颜色 */
	background-color:#FFFF00;			/* 背景颜色 */
	text-align:center;					/* 对齐方式 */
	width:300px;						/* 块宽度 */
	height:100px;						/* 块高度 */
}
<div>这是一个div标记</div>
<span>这是一个div标记</span>

div是行内是块会分行 span不会分行

盒子模型
padding内容和内边框的距离 bottom  top left right
border是边框宽度                  bottom  top left right
margin是两个块之间的空隙   bottom  top left right

元素定位
float
position
#block{
	background-color:#fff0ac;
	border:1px dashed #000000;
	padding:10px;
	position:absolute;	/* absolute绝对定位 */
	left:20px;		/* 块的左边框离页面左边界20px */
	top:40px;		/* 块的上边框离页面上边界40px */
}

z-index的使用有覆盖的时候，z-index大的在上面
#block1{
	background-color:#fff0ac;
	border:1px dashed #000000;
	padding:10px;
	position:absolute;
	left:20px;
	top:30px;
	z-index:1;					/* 高低值1 */
}
#block2{
	background-color:#ffc24c;
	border:1px dashed #000000;
	padding:10px;
	position:absolute;
	left:40px;
	top:50px;
	z-index:0;					/* 高低值0 */
}
#block3{
	background-color:#c7ff9d;
	border:1px dashed #000000;
	padding:10px;
	position:absolute;
	left:60px;
	top:70px;
	z-index:-1;					/* 高低值-1 */
}
-->
</style>
   </head>
<body>
	<div id="block1">AAAAAAAA</div>
	<div id="block2">BBBBBBBB</div>
	<div id="block3">CCCCCCCC</div>
</body>
后出现的div将会在前面的div上面

3.图片和文字的结合使用
<style type="text/css">
<!--
body{
	margin:15px;
	font-family:Arial;
	font-size:12px;
	font-style:italic;
}
#block1{
	padding:10px;		/* 给图片加框 */
	border:1px solid #000000;
	float:left;
}
#block2{
	color:white;
	padding:10px;
	position:absolute;
	left:255px;			/* 移动到图片上 */
	top:205px;
}
-->
</style>
   </head>
<body>
<div id="father">
	<div id="block1"><img src="building4.jpg" border="0"></div>
	<div id="block2">isaac photo</div>
</div>
</body>

div板式
#content{
	float:left;
	text-align:center;
	padding-right:200px;	/* 内容往回挤200px */
}
#links{
	float:right;
	width:200px;
	border:1px solid #000000;
	margin-left:-200px;		/* 强行往左拉回200px */
	text-align:center;
}
#footer{
	clear:both;				/* 不受float影响 */
	text-align:center;
	height:30px;
	border:1px solid #000000;
}

固定宽度居中的设置方法一
<html>
<head>
<title>个人主页</title>
<style>
<!--
body, html{
	margin:0px; padding:0px;
	text-align:center;居中
	background:#e9fbff;
}
#container{
	position: relative;
	margin: 0 auto;
	padding:0px;
	width:700px;固定宽度
	text-align: left;
	background:url(container_bg.jpg) repeat-y;
}
-->
</style>
   </head>
<body> 
<div id="container">
	<div id="footer">版权所有 2006.12.7 Next Station</div>
</div>
</body>
</html>

第二种设置绝对位置居中的设置

body, html{
	margin:0px; padding:0px;
	background:#e9fbff;
}
#container{
	position: relative;
	left:50%;
	width:700px;
	margin-left:-350px;
	padding:0px;
	background:url(container_bg.jpg) repeat-y;
}
有电子相册制作实例11-6.html








------------

id选择器，id不能重复#one{
}
class选择器， .one{ 
color:red;
font-size:15px;
font-weight:bold;
text-decoration:underline下,overline顶,line-through删除,blink闪烁;
font=style:normal,oblique,italic,18px;斜体
text-transform:capitalize首字母,none,uppercase,lowercase;
letter-spacing:-2px;字母间距
vertical-align:top,bottom,middle;对齐方式
background-color：black ;
}
.span{
float:left;首字下沉
padding-right:5px;与右边的间隔
}
 类选择器h1,td{
 font-family:黑体,幼体,楷体-GB2312;
}
css图片效果：
<img src="1.jsp"  class="test1">
<stype>
img.test1{
border-style:dotted点画线,dashed虚线;
border-color:#FF9900;边框颜色
border-width:5px;边框粗细
}
还可以写为img.test1{
border:dashed 2px blue
}
还可以写为img.test1{
border-left:dashed 2px blue;
}
图片缩放：
img.test1{
width：50%;相对宽度
height：60%；相对高度
width：50px；绝对宽度
}
</stype>
图片对齐方式 ：
<td style="text -align:left,center,right;vertical-align:baseline,bottom,middle,sub,super,text-bottom,text-top,top；竖直对齐方式"><img src="1.jsp"  class="test1"></td> 
-----图文混排：
1.文字环绕：
<img src="1.jsp"  class="test1">
<span>chun</span>
img{
float:left;文字环绕图片
}
span{
float:left;
}
背景颜色：body{
background-color:#99FF00;背景颜色
color:red;字体颜色
}
body{
background-image:url(03.jpg);图片重复
}
body{
padding:0px;
margin:0px
background-image:url(03.jpg);背景图片
background-repeat:repeat-y;垂直方向重复
background-color:#0066FF;i背景颜色
background-position:bottom right;位置为右下
}
body{
padding:0px;
margin:0px
background-image:url(03.jpg);背景图片
background-repeat:repeat-y;垂直方向重复
background-color:#0066FF;i背景颜色
background-attachment:fixed;固定背景图片
}
竖直排版
div.conteng{
height:260px;
writing-mode:tb-tl;竖直版文字IE
background:url(03.jpg) no-repeat;
}
设置输入框为下划线：
.text{
border-bottom:1px solid #005aa7;下划线效果
color:red;
border-top:0px;
border-left:0px;
border-right:0px;
background-color:transparent;背景色透明
}
设置submit样式：
.bottom1{
border:0px;无边框
background-color:transparent;背景色透明
}
设置inpuut边框为无
input{
border:none;
}
动态超链接效果
a.link{正常状态下
color:#005799;深蓝色
text-decoration:none;无下划线
}
a.visited{访问过的超链接
color:#000000;黑色
text-decoration:none;无下划线
}
a.hover{鼠标经过的超链接
color:#FFFF00;黄色
text-decoration:underline;下划线
}
按钮式超链接
a{										/* 统一设置所有样式 */
	font-family: Arial;
	font-size: .8em;
	text-align:center;
	margin:3px;
}
a:link, a:visited{	/* 超链接正常状态、被访问过的样式 */
	color: #A62020;
	padding:4px 10px 4px 10px;
	background-color: #ecd8db;
	text-decoration: none;
	border-top: 1px solid #EEEEEE;	/* 边框实现阴影效果 */
	border-left: 1px solid #EEEEEE;
	border-bottom: 1px solid #717171;
	border-right: 1px solid #717171;
}
a:hover{						/* 鼠标经过时的超链接 */
	color:#821818;				/* 改变文字颜色 */
	padding:5px 8px 3px 12px;	/* 改变文字位置 */
	background-color:#e2c4c9;	/* 改变背景色 */
	border-top: 1px solid #717171;/* 边框变换，实现“按下去”的效果 */
	border-left: 1px solid #717171;
	border-bottom: 1px solid #EEEEEE;
	border-right: 1px solid #EEEEEE;
}
浮雕超链接
a:visited{color:#654300}
a.link{color:#654300}
a:hover{color:#FFFFF
             text-decortation:none;
             background:url(button2.jpg) no-repeat;
             	}
鼠标变换超链接
a.help.hover{
 cursor:help;变换鼠标形状
}
<a href="#" class="help">帮助</a>
设置滤镜
1.Alpha通道
<img src="building1.jpg" border="0" class="alpha">

.alpha{
	filter:alpha(opacity=50);透明度为50%
}
2.Blur模糊
body{
	background:url(bg1.jpg);
	margin:20px;}
img{
	border:1px solid #d58000;}
.alpha{
filter:alpha(opacity=0,finishopacity=100,style=1,startx=0,starty=0,finishx=0,finishy=100);/* 从上到下渐变 */
}
<img src="building2.jpg" border="0" class="alpha">
3.chroma透明度
.chroma{
filter:chroma(color=FF6800);去除金黄颜色
}
4.Flip翻转
body{
	margin:12px;
	background:#000000;
}
.flip1{
	filter:fliph;	/* 水平翻转 */
}
.flip2{
	filter:flipv;	/* 竖直翻转 */
}
.flip3{
	filter:flipv fliph;	/* 水平、竖直同时翻转 */
}
-->
</style>
   </head>
<body>
<img src="building4.jpg"><img src="building4.jpg" class="flip1"><br>
<img src="building4.jpg" class="flip2"><img src="building4.jpg" class="flip3">
</body>
6.遮罩mask
.flip3{
	filter:mask(color=#FF0000);
}
7.波浪
span.wave1{	
	filter:wave(add=0,freq=2,lightstrength=70,phase=75,strength=4);
}
<span class="wave1">波浪Wave</span>
8.多个滤镜使用
.wave1{
	filter:flipv alpha(opacity=80) wave(add=0, freq=15, lightstrength=30, phase=0, strength=4);
	/* 同时使用三个滤镜 */
	/* 竖直翻转、透明、波浪效果 */
}




------------

lunar.js
引入js
date.js

------------

//获得任意日期的农历，以及各种节日、节气等 isaac 修改万年历而得 Aug 2nd 2005
/*****************************************************************************
                                   日期资料
*****************************************************************************/

var lunarInfo=new Array(
	0x04bd8,0x04ae0,0x0a570,0x054d5,0x0d260,0x0d950,0x16554,0x056a0,0x09ad0,0x055d2,
	0x04ae0,0x0a5b6,0x0a4d0,0x0d250,0x1d255,0x0b540,0x0d6a0,0x0ada2,0x095b0,0x14977,
	0x04970,0x0a4b0,0x0b4b5,0x06a50,0x06d40,0x1ab54,0x02b60,0x09570,0x052f2,0x04970,
	0x06566,0x0d4a0,0x0ea50,0x06e95,0x05ad0,0x02b60,0x186e3,0x092e0,0x1c8d7,0x0c950,
	0x0d4a0,0x1d8a6,0x0b550,0x056a0,0x1a5b4,0x025d0,0x092d0,0x0d2b2,0x0a950,0x0b557,
	0x06ca0,0x0b550,0x15355,0x04da0,0x0a5d0,0x14573,0x052b0,0x0a9a8,0x0e950,0x06aa0,
	0x0aea6,0x0ab50,0x04b60,0x0aae4,0x0a570,0x05260,0x0f263,0x0d950,0x05b57,0x056a0,
	0x096d0,0x04dd5,0x04ad0,0x0a4d0,0x0d4d4,0x0d250,0x0d558,0x0b540,0x0b5a0,0x195a6,
	0x095b0,0x049b0,0x0a974,0x0a4b0,0x0b27a,0x06a50,0x06d40,0x0af46,0x0ab60,0x09570,
	0x04af5,0x04970,0x064b0,0x074a3,0x0ea50,0x06b58,0x055c0,0x0ab60,0x096d5,0x092e0,
	0x0c960,0x0d954,0x0d4a0,0x0da50,0x07552,0x056a0,0x0abb7,0x025d0,0x092d0,0x0cab5,
	0x0a950,0x0b4a0,0x0baa4,0x0ad50,0x055d9,0x04ba0,0x0a5b0,0x15176,0x052b0,0x0a930,
	0x07954,0x06aa0,0x0ad50,0x05b52,0x04b60,0x0a6e6,0x0a4e0,0x0d260,0x0ea65,0x0d530,
	0x05aa0,0x076a3,0x096d0,0x04bd7,0x04ad0,0x0a4d0,0x1d0b6,0x0d250,0x0d520,0x0dd45,
	0x0b5a0,0x056d0,0x055b2,0x049b0,0x0a577,0x0a4b0,0x0aa50,0x1b255,0x06d20,0x0ada0,
	0x14b63
);

var solarMonth=new Array(31,28,31,30,31,30,31,31,30,31,30,31);
var Gan=new Array("甲","乙","丙","丁","戊","己","庚","辛","壬","癸");
var Zhi=new Array("子","丑","寅","卯","辰","巳","午","未","申","酉","戌","亥");
var Animals=new Array("鼠","牛","虎","兔","龙","蛇","马","羊","猴","鸡","狗","猪");
var solarTerm = new Array("小寒","大寒","立春","雨水","惊蛰","春分","清明","谷雨","立夏","小满","芒种","夏至","小暑","大暑","立秋","处暑","白露","秋分","寒露","霜降","立冬","小雪","大雪","冬至");
var sTermInfo = new Array(0,21208,42467,63836,85337,107014,128867,150921,173149,195551,218072,240693,263343,285989,308563,331033,353350,375494,397447,419210,440795,462224,483532,504758);
var nStr1 = new Array('日','一','二','三','四','五','六','七','八','九','十');
var nStr2 = new Array('初','十','廿','卅','□');
var nStr3 = new Array("正", "二", "三", "四", "五", "六", "七", "八", "九", "十", "冬", "腊");

//公历节日，*表示放假
var sFtv = new Array(
	"0101 元旦",
	"0202 世界湿地日",
	"0207 声援南非日",
	"0210 国际气象节",
	"0214 情人节",
	"0301 国际海豹日",
	"0303 全国爱耳日",
	"0308 国际妇女节",
	"0312 植树节",
	"0314 国际警察日",
	"0315 消费者权益日",
	"0317 国际航海日",
	"0321 世界森林日",
	"0321 世界儿歌日",
	"0322 世界水日",
	"0323 世界气象日",	
	"0401 愚人节",
	"0407 世界卫生日",
	"0422 世界地球日",
	"0501 国际劳动节",
	"0504 五四青年节",
	"0505 碘缺乏防治日",
	"0508 世界红十字日",
	"0512 国际护士节",
	"0515 国际家庭日",
	"0517 世界电信日",
	"0518 国际博物馆日",
	"0520 学生营养日",
	"0523 国际牛奶日",
	"0531 世界无烟日", 
	"0601 国际儿童节",
	"0605 世界环境日",
	"0606 全国爱眼日",
	"0617 防治荒漠化日",
	"0623 奥林匹克日",
	"0625 全国土地日",
	"0626 国际反毒日",
	"0701 党的生日",
	"0707 抗日纪念日",
	"0711 世界人口日",
	"0730 非洲妇女日",
	"0801 建军节",
	"0815 日本投降日",	
	"0908 国际扫盲日",
	"0910 中国教师节",
	"0914 清洁地球日",
	"0916 臭氧层保护日",
	"0918 九一八纪念",
	"0920 国际爱牙日",
	"0927 世界旅游日",
	"1001 国庆节",
	"1004 世界动物日",
	"1008 全国高血压日",
	"1008 世界视觉日",
	"1009 世界邮政日",
	"1013 世界保健日",	
	"1015 国际盲人节",
	"1016 世界粮食日",
	"1017 世界消贫日",
	"1022 世界医药日",
	"1024 联合国日",
	"1031 世界勤俭日",
	"1108 中国记者日",
	"1109 消防宣传日",
	"1110 世界青年节",
	"1112 孙中山诞辰",
	"1114 世界糖尿病日",	
	"1117 国际大学生节",
	"1121 世界电视日",
	"1201 世界艾滋病日",
	"1203 世界残疾人日",
	"1208 儿童电视日",
	"1209 世界足球日",
	"1210 世界人权日",
	"1212 西安事变纪念",
	"1213 南京大屠杀",
	"1221 国际篮球日",
	"1224 平安夜",
	"1225 圣诞节",
	"1226 毛泽东诞辰",
	"1229 生物多样性日"
);

//某月的第几个星期几。 5,6,7,8 表示到数第 1,2,3,4 个星期几
var wFtv = new Array(
	"0110 黑人日",
	"0520 母亲节",
	"0530 全国助残日",
	"0630 父亲节",
	"0911 劳动节",
	"0932 国际和平日",
	"0940 国际聋人节",
	"0950 世界海事日",
	"1011 国际住房日",
	"1144 感恩节"
);

//农历节日
var lFtv = new Array(
	"0101 春节",
	"0115 元宵节",
	"0202 龙抬头节",
	"0505 端午节",
	"0707 七七鹊桥节",
	"0714 鬼节",
	"0815 中秋节",
	"0909 重阳节",
	"1208 腊八节",
	"0100 除夕"
);

//计算农历，发现万年历里面的农历年是tmd错的，居然以立春为分界，我靠
//找到我以前改的这个，以年初一为分界的，嗯，两个合并一下 isaac 2006.1.21
//不过原来那个错的，因为可以计算节日，也不知道哪些代码是多余的
//估计多余部分不少，懒得看了.....
function LunarDate(tY,tM,tD) {

  var TianGan = new Array(                          // 天干名称
    "甲", "乙", "丙", "丁", "戊", "己", "庚", "辛", "壬", "癸");
  var DiZhi = new Array(                            // 地支名称
    "子", "丑", "寅", "卯", "辰", "巳", "午", "未", "申", "酉", "戌", "亥");
  var ShuXiang = new Array(                         // 属相名称
    "鼠", "牛", "虎", "兔", "龙", "蛇", "马", "羊", "猴", "鸡", "狗", "猪");
  var DayName = new Array("*",                      // 农历日期名
    "初一", "初二", "初三", "初四", "初五", "初六", "初七", "初八", "初九", "初十",
    "十一", "十二", "十三", "十四", "十五", "十六", "十七", "十八", "十九", "二十",
    "廿一", "廿二", "廿三", "廿四", "廿五", "廿六", "廿七", "廿八", "廿九", "三十");
  var MonName = new Array("*",                      // 农历月份名
    "正", "二", "三", "四", "五", "六", "七", "八", "九", "十", "冬", "腊");
  var MonthAdd = new Array(                         // 公历每月前面的天数
    0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334);
  var NongLiData = new Array(                       // 农历数据
    2635, 333387, 1701, 1748, 267701, 694, 2391, 133423, 1175, 396438, 3402, 3749,
    331177, 1453, 694, 201326, 2350, 465197, 3221, 3402, 400202, 2901, 1386, 267611,
    605, 2349, 137515, 2709, 464533, 1738, 2901, 330421, 1242, 2651, 199255, 1323,
    529706, 3733, 1706, 398762, 2741, 1206, 267438, 2647, 1318, 204070, 3477, 461653,
    1386, 2413, 330077, 1197, 2637, 268877, 3365, 531109, 2900, 2922, 398042, 2395,
    1179, 267415, 2635, 661067, 1701, 1748, 398772, 2742, 2391, 330031, 1175, 1611,
    200010, 3749, 527717, 1452, 2742, 332397, 2350, 3222, 268949, 3402, 3493, 133973,
    1386, 464219, 605, 2349, 334123, 2709, 2890, 267946, 2773, 592565, 1210, 2651,
    395863, 1323, 2707, 265877
  );

  this.CalcLunar = function() {
    var i, m, n, k, isEnd, bit, TheDate;
    var curYear = tY;
    var curMonth = tM+1;
    var curDay = tD;
	
    // 计算到初始时间1921年2月8日的天数：1921-2-8(正月初一)
    TheDate = (curYear - 1921) * 365 +  Math.floor((curYear - 1921) / 4)
            + MonthAdd[curMonth - 1] - 38 + curDay;
    if ((curYear%4)==0 && curMonth>2)
      TheDate ++;

    // 计算农历天干、地支、月、日
    isEnd = 0;
    m = 0;
    while (true) {
      k = (NongLiData[m] < 4095 ? 11 : 12);
      n = k
      while (true) {
        if (n < 0) break;
        // 获取 NongliData[m] 的第 n 个二进制位的值
        bit = (NongLiData[m] >>> n) % 2;
        if (TheDate <= 29 + bit) {
          isEnd = 1;
          break;
        }
        TheDate -= 29 + bit;
        n --;
      }
      if (isEnd == 1) break;
      m ++;
    }

    curYear = 1921 + m;
    curMonth = k - n + 1;
    curDay = TheDate;
    if (k==12) {
      if (curMonth==(Math.floor(NongLiData[m]/65536)+1)) {
        curMonth = 1 - curMonth
      } else if (curMonth > (Math.floor(NongLiData[m] / 65536) + 1)) {
        curMonth --;
      }
    }

    // 生成农历天干、地支、属相 ==> strLunar
    strLunar = TianGan[((curYear - 4) % 60) % 10]
             + DiZhi[((curYear - 4) % 60) % 12] + "年 "
             + ShuXiang[((curYear - 4) % 60) % 12] + " ";

    // 生成农历月、日 ==> strLunarDay
    strLunarDay = (curMonth < 1 ? 
      ("闰" + MonName[-1 * curMonth]) : MonName[curMonth]
    );
    strLunarDay += "月" + DayName[curDay];
	return (strLunar+" "+strLunarDay);
  };

  return(this.CalcLunar());
}

/*****************************************************************************
                                      日期计算
*****************************************************************************/

//====================================== 传回农历 y年的总天数
function lYearDays(y) {
   var i, sum = 348;
   for(i=0x8000; i>0x8; i>>=1) sum += (lunarInfo[y-1900] & i)? 1: 0;
   return(sum+leapDays(y));
}

//====================================== 传回农历 y年闰月的天数
function leapDays(y) {
   if(leapMonth(y))  return((lunarInfo[y-1900] & 0x10000)? 30: 29);
   else return(0);
}

//====================================== 传回农历 y年闰哪个月 1-12 , 没闰传回 0
function leapMonth(y) {
   return(lunarInfo[y-1900] & 0xf);
}

//====================================== 传回农历 y年m月的总天数
function monthDays(y,m) {
   return( (lunarInfo[y-1900] & (0x10000>>m))? 30: 29 );
}

//====================================== 算出农历, 传入日期物件, 传回农历日期物件
//                                       该物件属性有 .year .month .day .isLeap
function Lunar(objDate) {

   var i, leap=0, temp=0;
   var offset   = (Date.UTC(objDate.getFullYear(),objDate.getMonth(),objDate.getDate()) - Date.UTC(1900,0,31))/86400000;

   for(i=1900; i<2050 && offset>0; i++) { temp=lYearDays(i); offset-=temp; }

   if(offset<0) { offset+=temp; i--; }

   this.year = i;

   leap = leapMonth(i); //闰哪个月
   this.isLeap = false;

   for(i=1; i<13 && offset>0; i++) {
      //闰月
      if(leap>0 && i==(leap+1) && this.isLeap==false)
         { --i; this.isLeap = true; temp = leapDays(this.year); }
      else
         { temp = monthDays(this.year, i); }

      //解除闰月
      if(this.isLeap==true && i==(leap+1)) this.isLeap = false;

      offset -= temp;
   }

   if(offset==0 && leap>0 && i==leap+1)
      if(this.isLeap)
         { this.isLeap = false; }
      else
         { this.isLeap = true; --i; }

   if(offset<0){ offset += temp; --i; }

   this.month = i;
   this.day = offset + 1;
}

//==============================传回国历 y年某m+1月的天数
function solarDays(y,m) {
   if(m==1)
      return(((y%4 == 0) && (y%100 != 0) || (y%400 == 0))? 29: 28);
   else
      return(solarMonth[m]);
}
//============================== 传入 offset 传回干支, 0=甲子
function cyclical(num) {
   return(Gan[num%10]+Zhi[num%12]);
}

//============================== 月历属性
function calElement(sYear,sMonth,sDay,week,lYear,lMonth,lDay,isLeap,cYear,cMonth,cDay) {

      this.isToday    = false;
      //国历
      this.sYear      = sYear;   //西元年4位数字
      this.sMonth     = sMonth;  //西元月数字
      this.sDay       = sDay;    //西元日数字
      this.week       = week;    //星期, 1个中文
      //农历
      this.lYear      = lYear;   //西元年4位数字
      this.lMonth     = lMonth;  //农历月数字
      this.lDay       = lDay;    //农历日数字
      this.isLeap     = isLeap;  //是否为农历闰月?
      //八字
      this.cYear      = cYear;   //年柱, 2个中文
      this.cMonth     = cMonth;  //月柱, 2个中文
      this.cDay       = cDay;    //日柱, 2个中文

      this.color      = '';

      this.lunarFestival = ''; //农历节日
      this.solarFestival1 = ''; //国历节日1
	  this.solarFestival2 = ''; //国历节日2
	  this.solarFestival3 = ''; //国历节日3
      this.solarTerms = ''; //节气
}

//===== 某年的第n个节气为几日(从0小寒起算)
function sTerm(y,n) {
   var offDate = new Date( ( 31556925974.7*(y-1900) + sTermInfo[n]*60000  ) + Date.UTC(1900,0,6,2,5) );
   return(offDate.getUTCDate());
}

//============================== 传回月历物件 (y年,m+1月)
/*
功能说明: 传回整个月的日期资料物件
使用方式: OBJ = new calendar(年,零起算月);
  OBJ.length      传回当月最大日
  OBJ.firstWeek   传回当月一日星期
  由 OBJ[日期].属性名称 即可取得各项值
  OBJ[日期].isToday  传回是否为今日 true 或 false
  其他 OBJ[日期] 属性参见 calElement() 中的注解
*/
function calendar(y,m) {

   var sDObj, lDObj, lY, lM, lD=1, lL, lX=0, tmp1, tmp2, tmp3;
   var cY, cM, cD; //年柱,月柱,日柱
   var lDPOS = new Array(3);
   var n = 0;
   var firstLM = 0;

   sDObj = new Date(y,m,1,0,0,0,0);    //当月一日日期


   this.length    = solarDays(y,m);    //国历当月天数
   this.firstWeek = sDObj.getDay();    //国历当月1日星期几

   ////////年柱 1900年春分后为庚子年(60进制36)
   if(m<2) cY=cyclical(y-1900+36-1);
   else cY=cyclical(y-1900+36);
   var term2=sTerm(y,2); //立春日期

   ////////月柱 1900年1月小寒以前为 丙子月(60进制12)
   var firstNode = sTerm(y,m*2) //传回当月「节」为几日开始
   cM = cyclical((y-1900)*12+m+12);

   //当月一日与 1900/1/1 相差天数
   //1900/1/1与 1970/1/1 相差25567日, 1900/1/1 日柱为甲戌日(60进制10)
   var dayCyclical = Date.UTC(y,m,1,0,0,0,0)/86400000+25567+10;

   for(var i=0;i<this.length;i++) {

      if(lD>lX) {
         sDObj = new Date(y,m,i+1);    //当月一日日期
         lDObj = new Lunar(sDObj);     //农历
         lY    = lDObj.year;           //农历年
         lM    = lDObj.month;          //农历月
         lD    = lDObj.day;            //农历日
         lL    = lDObj.isLeap;         //农历是否闰月
         lX    = lL? leapDays(lY): monthDays(lY,lM); //农历当月最后一天

         if(n==0) firstLM = lM;
         lDPOS[n++] = i-lD+1;
      }

      //依节气调整二月分的年柱, 以春分为界
      if(m==1 && (i+1)==term2) cY=cyclical(y-1900+36);
      //依节气月柱, 以「节」为界
      if((i+1)==firstNode) cM = cyclical((y-1900)*12+m+13);
      //日柱
      cD = cyclical(dayCyclical+i);

      this[i] = new calElement(y, m+1, i+1, nStr1[(i+this.firstWeek)%7],
                               lY, lM, lD++, lL,
                               cY ,cM, cD );
   }

   //节气
   tmp1=sTerm(y,m*2)-1;
   tmp2=sTerm(y,m*2+1)-1;
   this[tmp1].solarTerms = solarTerm[m*2];
   this[tmp2].solarTerms = solarTerm[m*2+1];
   //if(m==3) this[tmp1].color = 'red'; //清明颜色

   //国历节日
   for(i in sFtv)
      if(sFtv[i].match(/^(\d{2})(\d{2})([\s\*])(.+)$/))
         if(Number(RegExp.$1)==(m+1)) {
            this[Number(RegExp.$2)-1].solarFestival1 += RegExp.$4;
            //if(RegExp.$3=='*') this[Number(RegExp.$2)-1].color = 'red';
         }

   //月周节日
   for(i in wFtv)
      if(wFtv[i].match(/^(\d{2})(\d)(\d)([\s\*])(.+)$/))
         if(Number(RegExp.$1)==(m+1)) {
            tmp1=Number(RegExp.$2);
            tmp2=Number(RegExp.$3);
            if(tmp1<5)
               this[((this.firstWeek>tmp2)?7:0) + 7*(tmp1-1) + tmp2 - this.firstWeek].solarFestival2 += RegExp.$5;
            else {
               tmp1 -= 5;
               tmp3 = (this.firstWeek+this.length-1)%7; //当月最后一天星期?
               this[this.length - tmp3 - 7*tmp1 + tmp2 - (tmp2>tmp3?7:0) - 1 ].solarFestival2 += RegExp.$5;
            }
         }

   //农历节日
   for(i in lFtv)
      if(lFtv[i].match(/^(\d{2})(.{2})([\s\*])(.+)$/)) {
         tmp1=Number(RegExp.$1)-firstLM;
         if(tmp1==-11) tmp1=1;
         if(tmp1 >=0 && tmp1<n) {
            tmp2 = lDPOS[tmp1] + Number(RegExp.$2) -1;
            if( tmp2 >= 0 && tmp2<this.length && this[tmp2].isLeap!=true) {
               this[tmp2].lunarFestival += RegExp.$4;
               //if(RegExp.$3=='*') this[tmp2].color = 'red';
            }
         }
      }

   //复活节只出现在3或4月
   if(m==2 || m==3) {
      var estDay = new easter(y);
      if(m == estDay.m)
         this[estDay.d-1].solarFestival3 = this[estDay.d-1].solarFestival3+'复活节';// Easter Sunday';
   }
}

//======================================= 传回该年的复活节(春分后第一次满月周后的第一主日)
function easter(y) {

   var term2=sTerm(y,5); //取得春分日期
   var dayTerm2 = new Date(Date.UTC(y,2,term2,0,0,0,0)); //取得春分的国历日期物件(春分一定出现在3月)
   var lDayTerm2 = new Lunar(dayTerm2); //取得取得春分农历

   if(lDayTerm2.day<15) //取得下个月圆的相差天数
      var lMlen= 15-lDayTerm2.day;
   else
      var lMlen= (lDayTerm2.isLeap? leapDays(y): monthDays(y,lDayTerm2.month)) - lDayTerm2.day + 15;

   //一天等于 1000*60*60*24 = 86400000 毫秒
   var l15 = new Date(dayTerm2.getTime() + 86400000*lMlen ); //求出第一次月圆为国历几日
   var dayEaster = new Date(l15.getTime() + 86400000*( 7-l15.getUTCDay() ) ); //求出下个周日

   this.m = dayEaster.getUTCMonth();
   this.d = dayEaster.getUTCDate();

}

///////////////////////////////////////////////////////////////////////////////

var cld;

function drawCld(SY,SM,sD) {
	
	var s1,s2,s3,s4,s5,lObj='',yDisplay;
	cld = new calendar(SY,SM);
	
	//显示农历年、属相
	yDisplay=LunarDate(SY,SM,sD);
	//yDisplay = cyclical(SY-1900+36) + '年 '+ Animals[(SY-4)%12] + ' ';
	
	sD--;
	
	if(sD>-1 && sD<cld.length) { //日期内
		
		s1 = cld[sD].lunarFestival;
		if(s1.length>0) //农历节日
			lObj += ' ' + s1.fontcolor('#FF3BEF');
		
		s2 = cld[sD].solarFestival1;
		if( s2.length>0 && (s1.length + s2.length) <= 8) //国历节日1
			lObj += ' ' + s2.fontcolor('#8FB4FF');
			
		s3 = cld[sD].solarFestival2;
		if( s3.length>0 && (s1.length + s2.length + s3.length) <= 8) //国历节日2
			lObj += ' ' + s3.fontcolor('#8FB4FF');
		
		s4 = cld[sD].solarFestival3;
		if( s4.length>0 && (s1.length + s2.length + s3.length + s4.length) <= 8) //国历节日3
			lObj += ' ' + s4.fontcolor('#8FB4FF');
	
		s5 = cld[sD].solarTerms;
		if( s5.length>0 && (s1.length + s2.length + s3.length + s4.length + s5.length) <= 8 ) //廿四节气
			lObj += ' ' + s5.fontcolor('limegreen');
			
	}
	else  //非日期
		lObj = '';

	document.write( yDisplay + lObj );
}

var Today = new Date();
var tY = Today.getFullYear();
var tM = Today.getMonth();
var tD = Today.getDate();
drawCld(tY,tM,tD); //可传入任意日期，如2007.6.24为 drawCld(2007,5,24);


------------

<div id="currenttime">
			<p class="p1"><script language=javascript src="date.js"></script></p>
			<p class="p2"><script language=javascript src="lunar.js"></script></p>
		</div>

------------

//isaac at Feb 23 2005 11:31
function astrology(month,day){
	document.write('<a href="/frames.html?mainurl=/bbsdoc.php?board=birthday" class="astro" title="点击进入birthday版">');
	var constellation = new Array(
		"摩羯", "水瓶", "双鱼", "牡羊", "金牛", "双子",
		"巨蟹", "狮子", "处女", "天秤", "天蝎", "射手");
	switch(month)
	{
		case 1:
			if (day < 21)
				document.write(constellation[0]);
			else
				document.write(constellation[1]);
			break;
		case 2:
			if (day < 19)
				document.write(constellation[1]);
			else
				document.write(constellation[2]);
			break;
		case 3:
			if (day < 21)
				document.write(constellation[2]);
			else
				document.write(constellation[3]);
			break;
		case 4:
			if (day < 21)
				document.write(constellation[3]);
			else
				document.write(constellation[4]);
			break;
		case 5:
			if (day < 21)
				document.write(constellation[4]);
			else
				document.write(constellation[5]);
			break;
		case 6:
			if (day < 22)
				document.write(constellation[5]);
			else
				document.write(constellation[6]);
			break;
		case 7:
			if (day < 23)
				document.write(constellation[6]);
			else
				document.write(constellation[7]);
			break;
		case 8:
			if (day < 23)
				document.write(constellation[7]);
			else
				document.write(constellation[8]);
			break;
		case 9:
			if (day < 23)
				document.write(constellation[8]);
			else
				document.write(constellation[9]);
			break;
		case 10:
			if (day < 24)
				document.write(constellation[9]);
			else
				document.write(constellation[10]);
			break;
		case 11:
			if (day < 23)
				document.write(constellation[10]);
			else
				document.write(constellation[11]);
			break;
		case 12:
			if (day < 22)
				document.write(constellation[11]);
			else
				document.write(constellation[0]);
			break;
		default:
			document.write('诡异');
	}
	document.write('</a>');
}

currentDate=new Date();
with (currentDate){
	year=getYear();
	day=getDay();
	month=getMonth()+1;

	if(year >= 2000)
		document.write(getYear()+'年'+month+'月'+getDate()+'日');
	if(year <= 99)
		document.write('19'+getYear()+'年'+month+'月'+getDate()+'日');
	if(year >= 100 && year < 2000){
		year=year-100+2000;
		document.write(year+'年'+month+'月'+getDate()+'日');}
	
	if(day==1){document.write('&nbsp;&nbsp;星期一&nbsp;&nbsp;');}
	else if(day==2){document.write('&nbsp;&nbsp;星期二&nbsp;&nbsp;');}
	else if(day==3){document.write('&nbsp;&nbsp;星期三&nbsp;&nbsp;');}
	else if(day==4){document.write('&nbsp;&nbsp;星期四&nbsp;&nbsp;');}
	else if(day==5){document.write('&nbsp;&nbsp;星期五&nbsp;&nbsp;');}
	else if(day==6){document.write('&nbsp;&nbsp;星期六&nbsp;&nbsp;');}
	else{document.write('&nbsp;&nbsp;星期日&nbsp;&nbsp;');}
	
	astrology(getMonth()+1,getDay());	//显示星座
}

------------

1.导航条，列表，内容，foot
float:left一般是用在中间部分
clear:both 针对footer
开始一般用id选择器
中间各模块总宽度要小于最上面的图片宽度
body{
	background-color:#2286c6;
	margin: 0px;
	padding:0px;
	text-align:center;居中
	font-size:12px;
	font-family:Arial, Helvetica, sans-serif;
}
#container{
	position:relative;
	margin:0px auto 0px auto;
	width:780px;总宽度
	text-align:left;
}

------------

20.css
20.html

------------

body{
	background-color:#2286c6;
	margin: 0px;
	padding:0px;
	text-align:center;
	font-size:12px;
	font-family:Arial, Helvetica, sans-serif;
}
#container{
	position:relative;
	margin:0px auto 0px auto;
	width:780px;
	text-align:left;
}
div br{
	display:none;
}
#globallink{
	margin:0px; padding:0px;
}
#globallink ul{
    list-style:none;
	padding:0px; margin:0px;
}
#globallink li{
	float:left; 
	text-align:center;
	width:78px;	
}
#globallink a{
	display:block;
	padding:9px 6px 11px 6px;
	background:url(button1.jpg) no-repeat;
	margin:0px;
}
#globallink a:link, #globallink a:visited{
	color:#004a87;
	text-decoration:underline;
}
#globallink a:hover{
	color:#FFFFFF;
	text-decoration:underline;
	background:url(button1_bg.jpg) no-repeat;
}

#left{
	float:left;
	width:200px;
	background-color:#FFFFFF;
	margin:0px;
	padding:0px 0px 5px 0px;
	color:#d8ecff;
}
#left div{
	background-color:#5ea6eb;
	margin:0px 5px 0px 5px;
}
#weather{
	background:url(weather.jpg) no-repeat -5px 0px;
	margin:0px 5px 0px 5px; 
	background-color:#5ea6eb;
}
div#left #weather h3{
	font-size:12px;
	padding:24px 0px 0px 74px;
	color:#FFFFFF;
	background:none;
	margin:0px;
}
div#weather ul{
	margin:8px 5px 0px 5px;
	padding:10px 0px 8px 5px;	
	list-style:none;
}
#weather ul li{
	background:url(icon1.gif) no-repeat 0px 6px;
	padding:1px 0px 0px 10px;
}
#left div h3{
	font-size:12px;
	padding:4px 0px 2px 15px;
	color:#003973;
	margin:0px 0px 5px 0px;
	background:#bbddff url(icon2.gif) no-repeat 5px 7px;
}
#today{
	padding:0px 0px 10px 0px;
}
#today ul{
	list-style:none;
	margin:-5px 0px 0px 0px;
	padding:0px;
}
#today ul li{
	text-align:center;
}
#today ul li img{
	border:1px solid #FFFFFF;
	margin:8px 0px 0px 0px;
}
#today ul li a:link, #today ul li a:visited{
	color:#d8ecff;
	text-decoration:none;
}
#today ul li a:hover{
	color:#FFFF00;
	text-decoration:underline;
}

#middle{
	background-color:#FFFFFF;
	margin:0px 0px 0px 2px;
	padding:5px 0px 0px 0px;
	width:400px; float:left;
}
#middle div{
	margin-left:5px;
	margin-right:5px;
	position:relative;
}
#middle h3{
	margin:0px; padding:0px;
	height:41px;
}
#middle h3 span{
	display:none;		/* 文字去掉，换成图片 */
}
#beauty{
	margin:15px 0px 0px 0px;
	padding:0px;
}
#beauty h3{
	background:url(picture_h1.gif) no-repeat;
}
#beauty ul, #route ul{
	list-style:none;
	margin:8px 1px 0px 1px;
	padding:0px;
}
#beauty ul li{
	float:left;
	width:97px;
	text-align:center;
}
#beauty ul li img{
	border:1px solid #4ab0ff;
}
#route{
	clear:both; margin:0px;
	padding:5px 0px 15px 0px;
}
#route h3{
	background:url(route_h1.gif) no-repeat;
}
#route ul li{
	padding:3px 0px 0px 30px;
	background:url(icon1.gif) no-repeat 20px 7px;
}
#route ul li a:link, #route ul li a:visited{
	color:#004e8a;
	text-decoration:none;
}
#route ul li a:hover{
	color:#000000;
	text-decoration:underline;
}

#right{
	float:left;
	margin:0px 0px 1px 2px;
	width:176px;
	background-color:#FFFFFF;
	color:#d8ecff;
}
#right div{
	position:relative;
	margin-left:5px;
	margin-right:5px;
	background-color:#5ea6eb;
}
#right div h3{
	font-size:12px;
	padding:4px 0px 2px 15px;
	color:#003973;
	margin:0px 0px 5px 0px;
	background:#bbddff url(icon2.gif) no-repeat 5px 7px;
}
#map{
	margin-top:5px;	
}
#map p{
	text-align:center;
	margin:0px;
	padding:2px 0px 5px 0px;
}
#map p img{
	border:1px solid #FFFFFF;
}
#food{
	padding-top:10px;
}
#food ul, #life ul{
	list-style:none;
	padding:0px 0px 10px 0px;
	margin:10px 10px 0px 10px;
}
#food ul li, #life ul li{
	background:url(icon1.gif) no-repeat 3px 9px;
	padding:3px 0px 3px 12px;
	border-bottom:1px dashed #EEEEEE;
}
#food ul li a:link, #food ul li a:visited, #life ul li a:link, #life ul li a:visited{
	color:#d8ecff;
	text-decoration:none;
}
#food ul li a:hover, #life ul li a:hover{
	color:#000000;
	text-decoration:none;
}
#life{
	padding-top:10px;
	padding-bottom:5px;
	margin-bottom:5px;
}

#footer{
	background-color:#FFFFFF;
	margin:1px 0px 0px 0px;
	clear:both;
	position:relative;
	padding:1px 0px 1px 0px;
}
#footer p{
	text-align:center;
	padding:0px;
	margin:4px 5px 4px 5px;
	background-color:#5ea6eb;
}
#footer p a{
	color:#FFFFFF;
	text-decoration:none;
}



------------

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
<title>新疆行知书</title>
<link href="20.css" rel="stylesheet" type="text/css">
</head>

<body>
<div id="container">
	<div id="banner"><img src="banner.jpg"></div>
	<div id="globallink">
		<ul>
			<li><a href="#">首页</a></li>
			<li><a href="#">新疆简介</a></li>
			<li><a href="#">风土人情</a></li>
			<li><a href="#">吃在新疆</a></li>
			<li><a href="#">路线选择</a></li>
			<li><a href="#">自助行</a></li>
			<li><a href="#">摄影摄像</a></li>
			<li><a href="#">游记精选</a></li>
			<li><a href="#">资源下载</a></li>
			<li><a href="#">雁过留声</a></li>
		</ul>
		<br>
	</div>
	<div id="left">
		<div id="weather">
			<h3><span>天气查询</span></h3>
			<ul>
				<li>乌鲁木齐&nbsp;&nbsp;&nbsp;雷阵雨 20℃-31℃</li>
				<li>吐鲁番&nbsp;&nbsp;&nbsp;多云转阴 20℃-28℃</li>
				<li>喀什&nbsp;&nbsp;&nbsp;阵雨转多云 25℃-32℃</li>
				<li>库尔勒&nbsp;&nbsp;&nbsp;阵雨转阴 21℃-28℃</li>
				<li>克拉马依&nbsp;&nbsp;&nbsp;雷阵雨 26℃-30℃</li>
			</ul>
			<br>
		</div>	
		<div id="today">
			<h3><span>今日推荐</span></h3>
			<ul>
				<li><a href="#"><img src="tuijian1.jpg"></a></li>
				<li><a href="#">喀纳斯河</a></li>
				<li><a href="#"><img src="tuijian2.jpg"></a></li>
				<li><a href="#">布尔津</a></li>
				<li><a href="#"><img src="tuijian3.jpg"></a></li>
				<li><a href="#">天山之路</a></li>
			</ul>
			<br>
		</div>
	</div>
	<div id="middle">
		<div id="ghost"><a href="#" title="魔鬼城探秘"><img src="ghost.jpg" border="0"></a></div>
		<div id="beauty">
			<h3><span>美景寻踪</span></h3>
			<ul>
				<li><a href="#"><img src="beauty1.jpg"></a></li>
				<li><a href="#"><img src="beauty2.jpg"></a></li>
				<li><a href="#"><img src="beauty3.jpg"></a></li>
				<li><a href="#"><img src="beauty4.jpg"></a></li>
			</ul>
			<br>
		</div>
		<div id="route">
			<h3><span>线路精选</span></h3>
			<ul>
				<li><a href="#">吐鲁番——库尔勒——库车——塔中——和田——喀什</a></li>
				<li><a href="#">乌鲁木齐——天池——克拉马依——乌伦古湖——喀纳斯</a></li>
				<li><a href="#">乌鲁木齐——奎屯——乔尔玛——那拉提——巴音布鲁克</a></li>
				<li><a href="#">乌鲁木齐——五彩城——将军隔壁——吉木萨尔</a></li>
			</ul>
			<br>
		</div>
	</div>
	<div id="right">
		<div id="map">
			<h3><span>新疆风光</span></h3>
			<p><a href="#" title="点击看大图"><img src="map1.jpg"></a></p>
			<p><a href="#" title="点击看大图"><img src="map2.jpg"></a></p>
		</div>
		<div id="food">
			<h3><span>小吃推荐</span></h3>
			<ul>
				<li><a href="#">17号抓饭</a></li>
				<li><a href="#">大盘鸡</a></li>
				<li><a href="#">五一夜市</a></li>
				<li><a href="#">水果</a></li>
			</ul>
			<br>
		</div>
		<div id="life">
			<h3><span>宾馆酒店</span></h3>
			<ul>
				<li><a href="#">美丽华大饭店</a></li>
				<li><a href="#">海德大饭店</a></li>
				<li><a href="#">银都大饭店</a></li>
				<li><a href="#">鸿福大饭店</a></li>
				<li><a href="#">友好大酒店</a></li>
				<li><a href="#">棉麻宾馆</a></li>
				<li><a href="#">电信宾馆</a></li>
			</ul>
			<br>
		</div>
	</div>
	<div id="footer">
		<p>艾萨克 &copy;版权所有 <a href="mailto:demo@demo.com">demo@demo.com</a></p>
	</div>
</div>
</body>
</html>


------------

<HTML>
<HEAD>
   <TITLE> HTML 语言教程</TITLE>
</HEAD>
<BODY BGCOLOR="#D4D4D4" onLoad="alert('本页面的效果必须在 Microsoft Internet Explorer 中才能看到 :-(((')">

<H1 ALIGN=CENTER>会移动的文字(Marquee)</H1>
<P><marquee>啦啦啦，我会移动耶！--默认从右向左运动</marquee> </P>  
<P><marquee direction=left>啦啦啦，我从右向左移！</marquee> </P>
<P><marquee direction=right>啦啦啦，我从左向右移！</marquee> </P>
<P><marquee behavior=scroll>啦啦啦，我一圈一圈绕着走！</marquee> </P>
<P><marquee behavior=slide>啦啦啦，我只走一次就歇了！</marquee> </P>
<P><marquee behavior=alternate>啦啦啦，我来回走耶！</marquee> </P>

<H3>循环 &lt;loop=#&gt; #=次数；若未指定则循环不止(infinite)</H3>

<P><marquee loop=3 width=50% behavior=scroll>啦啦啦，我只走 3 趟哟！</marquee></P>
<P><marquee loop=3 width=50% behavior=slide>啦啦啦，我只走 3 趟哟！</marquee> </P>
<P><marquee loop=3 width=50% behavior=alternate>啦啦啦，我只走 3 趟哟！</marquee></P>
<H3>速度 &lt;scrollamount=#&gt;</H3>
<P><marquee scrollamount=20>啦啦啦，我走得好快哟！</marquee> </P>
<H3>延时 &lt;scrolldelay=#&gt;</H3>
<P><marquee scrolldelay=500 scrollamount=100>啦啦啦，我走一步，停一停！</marquee></P>
<H3>对齐方式(Align) &lt;align=#&gt; #=top, middle, bottom</H3>
<FONT SIZE=6>
<P><marquee align=top width=400>啦啦啦，我会移动耶！</marquee>
</FONT>对齐上沿。</P>

<FONT SIZE=6>
<P><marquee align=middle width=400>啦啦啦，我会移动耶！</marquee>
</FONT>对齐中间。</P>

<FONT SIZE=6>
<P><marquee align=bottom width=400>啦啦啦，我会移动耶！</marquee>
</FONT>对齐下沿。</P>
<H3>底色 &lt;bgcolor=#&gt; </H3>
<DL>
<DD><B>#=rrggbb</B> 16 进制数码，或者是下列预定义色彩</A>：<BR>
<FONT COLOR="#000000">Black</FONT>, <FONT COLOR="#808000">Olive</FONT>,
<FONT COLOR="#008080">Teal</FONT>, <FONT COLOR="#FF0000">Red</FONT>, <FONT COLOR="#0000FF">Blue</FONT>,
<FONT COLOR="#800000">Maroon</FONT>, <FONT COLOR="#000080">Navy</FONT>,
<FONT COLOR="#808080">Gray</FONT>, <FONT COLOR="#00FF00">Lime</FONT>, <BR>
<FONT COLOR="#FF00FF">Fuchsia</FONT>, <FONT COLOR="#FFFFFF">White</FONT>,
<FONT COLOR="#008000">Green</FONT>, <FONT COLOR="#800080">Purple</FONT>,
<FONT COLOR="#C0C0C0">Silver</FONT>, <FONT COLOR="#FFFF00">Yellow</FONT>,
<FONT COLOR="#00FFFF">Aqua</FONT> 
</DD>
</DL>
<P><marquee bgcolor=aaaaee>啦啦啦，我会移动耶！</marquee> </P>
<H3>面积 &lt;height=# width=#&gt;</H3>

<DL>
<DD><TT>&lt;marquee height=40 width=50% bgcolor=aaeeaa&gt;<BR>
啦啦啦，我会移动耶！<BR>
&lt;/marquee&gt; </TT></DD>
</DL>

<P><marquee height=40 width=50% bgcolor=aaeeaa>啦啦啦，我会移动耶！</marquee>
</P>
<H3>空白(Margins)&lt;hspace=# vspace=#&gt;</H3>
<P>********************************************<BR>
嗨, <marquee hspace=20 vspace=20 width=150 
bgcolor=ffaaaa align=middle>啦啦啦，我会移动耶！</marquee>
大家好！<BR>
******************************************** </P>
</BODY>
</HTML>


------------

设置图片无缝滚动
图片上下滚动
单张图片滚动
多张图片左右滚动
JavaScript 无缝上下左右滚动加定高定宽停顿效果 
图片单张滚动
一些图片滚动的网址
关于文字滚动

------------

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
	<div id="mhmove" style="overflow:hidden;width:800px;margin:0 auto 0;">
				<table width="800px" border="0" cellspacing="0" cellpadding="0">
    <tr>

      <td width="800px" id="mhmove1"><table width="800px" border="0" cellpadding="0" cellspacing="0">
        <tr>


        <td width="166" align="center"><a href = "index.jsp" title="woai"><img src="image/IMG_0139.JPG" width="166" height="117" border="0" usemap="#Map2" /></a></td>

          <td width="166" align="center"> <img src="image/IMG_0140.JPG" width="166" height="117" border="0" usemap="#Map"/></td>

          <td width="166" align="center"><img src="image/IMG_0142.JPG" width="166" height="117" border="0" usemap="#Map3" /></td>

          <td width="166" align="center"><img src="image/IMG_0153.JPG" width="166" height="117" border="0" usemap="#Map4"  /></td>

          <td width="172" align="center"><img src="image/IMG_0161.JPG" width="166" height="117" border="0" usemap="#Map5"  /></td>
		  
		  <td width="172" align="center"><img src="image/IMG_0162.JPG" width="166" height="117" border="0" usemap="#Map6" /></td>
       </tr>
        
      </table></td>
      <td width="50" id="mhmove2">&nbsp;</td>
    </tr>
  </table>
			</div>
</body>
   <script> 
				var speed=40 ;   //speed越大，滚动越慢
				mhmove2.innerHTML=mhmove1.innerHTML; 
				function Marquee3(){ 
					if(mhmove2.offsetWidth-mhmove.scrollLeft<=0) 
						mhmove.scrollLeft-=mhmove1.offsetWidth;
					else{ 
						mhmove.scrollLeft++; 
					} 
				} 
				function Marquee4(){ 
					if(mhmove2.offsetHeight-mhmove.scrollTop<=0)
					 //scrollHeight: 获取对象的滚动高度。 offsetHeight:获取对象相对于版面或由父坐标 offsetParent 属性指定的父坐标的高度
						mhmove.scrollTop-=mhmove1.offsetHeight; 
					else{ 
						mhmove.scrollTop++;
					} 
				}
				var MyMar2=setInterval(Marquee3,speed); 
				mhmove.onmouseover=function() {clearInterval(MyMar2)} 
				mhmove.onmouseout=function() {MyMar2=setInterval(Marquee3,speed)}
			</script>
</html>

------------

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>javascript图片上下无缝滚动</title>
<style type="text/css">
*{margin:0;padding:0;list-style-type:none;border:0;}

.demo{width:270px;margin:20px auto;}
#scrollbox{background:#FFF;overflow:hidden;width:192px;height:256px;margin:0 10px;display:inline;float:left;}
#scrollbox img{border:3px solid #F2F2F2;}
#leftDir{width:20px;height:40px;padding:8px 0px;text-align:center;float:left;cursor:pointer;margin:90px 0 0 0;}
#rightDir{width:20px;height:40px;padding:8px 0px;text-align:center;float:left;cursor:pointer;margin:90px 0 0 0;}
</style>
</head>
<body>
innerHTML:设置或获取位于对象起始和结束标签内的 HTML
scrollHeight: 获取对象的滚动高度。 
scrollLeft:设置或获取位于对象左边界和窗口中目前可见内容的最左端之间的距离
scrollTop:设置或获取位于对象最顶端和窗口中可见内容的最顶端之间的距离
scrollWidth:获取对象的滚动宽度
offsetHeight:获取对象相对于版面或由父坐标 offsetParent 属性指定的父坐标的高度
offsetLeft:获取对象相对于版面或由 offsetParent 属性指定的父坐标的计算左侧位置
offsetTop:获取对象相对于版面或由 offsetTop 属性指定的父坐标的计算顶端位置 
offsetWidth:获取对象相对于版面或由父坐标 offsetParent 属性指定的父坐标的宽度
<div class="demo">
	<div id="leftDir"><<</div>
	<div id="scrollbox">
		<div id="scrollcon">
			<div id="scrollpic">
				<a href="http://www.17sucai.com/"><img src="image/IMG_0161.JPG" width="192" height="128" alt="" /></a>
				<a href="http://www.17sucai.com/"><img src="image/IMG_0161.JPG" width="192" height="128" alt="" /></a>
				<a href="http://www.17sucai.com/"><img src="image/IMG_0161.JPG" width="192" height="128" alt="" /></a>
				<a href="http://www.17sucai.com/"><img src="image/IMG_0161.JPG" width="192" height="128" alt="" /></a>
				<a href="http://www.17sucai.com/"><img src="image/IMG_0161.JPG" width="192" height="128" alt="" /></a>
			</div>
			<div id="scrollpic-copy"></div>
		</div>
	</div>
	<div id="rightDir">>></div>
</div>
<script type="text/javascript">
//上下无缝滚动
var speed = 10;
var direction="top";
var tab = document.getElementById("scrollbox");
var tab1 = document.getElementById("scrollpic");
var tab2 = document.getElementById("scrollpic-copy");
var leftDir = document.getElementById("leftDir");
var rightDir = document.getElementById("rightDir");
tab2.innerHTML = tab1.innerHTML;
function marquee(){
    switch(direction){
        case "top":
            if(tab2.offsetHeight - tab.scrollTop <= 0){
                tab.scrollTop -= tab1.offsetHeight;
            }
            else{
                tab.scrollTop++;
            }
        break;
        case "bottom":
            if(tab.scrollTop <= 0){
                tab.scrollTop += tab2.offsetHeight;
            }
            else{
                tab.scrollTop--;
            }
        break;
    }
}
function changeDirection(dir){
   direction = dir;
}
var timer = setInterval(marquee,speed);
tab.onmouseover = function(){clearInterval(timer);};
tab.onmouseout = function(){timer = setInterval(marquee,speed);};
leftDir.onclick = function(){changeDirection("top");};
rightDir.onclick = function(){changeDirection("bottom");};
</script>
</body>
</html>

------------

 <MARQUEE scrollAmount=4 scrollDelay=60 width=740 height=190><IMG src="http://image35.360doc.com/DownloadImg/2011/09/0217/16919204_18.jpg" width=150  border=0></MARQUEE>
			    

------------

<marquee dataformatas=HTML direction=left height=100 loop=4 scrollamount=1 scrolldelay=2 width=100% onMouseOver='this.stop()' onMouseOut='this.start()'>

<table>
	<tr>
<td><img src="image/IMG_0139.JPG"></td>
<td><img src="image/IMG_0140.JPG"></td>
<td><img src="image/IMG_0139.JPG"></td>
<td><img src="image/IMG_0139.JPG"></td>
</tr>
</table>

</marquee>	

------------

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
<title>JavaScript 无缝上下左右滚动加定高定宽停顿效果(兼容ie/ff)</title>
</head>
<body>
<script type="text/javascript">
var $ = function (id) {
    return "string" == typeof id ? document.getElementById(id) : id;
};

var Class = {
  create: function() {
    return function() {
      this.initialize.apply(this, arguments);
    }
  }
}

Object.extend = function(destination, source) {
    for (var property in source) {
        destination[property] = source[property];
    }
    return destination;
}

function addEventHandler(oTarget, sEventType, fnHandler) {
    if (oTarget.addEventListener) {
        oTarget.addEventListener(sEventType, fnHandler, false);
    } else if (oTarget.attachEvent) {
        oTarget.attachEvent("on" + sEventType, fnHandler);
    } else {
        oTarget["on" + sEventType] = fnHandler;
    }
};


var Scroller = Class.create();
Scroller.prototype = {
  initialize: function(idScroller, idScrollMid, options) {
    var oThis = this, oScroller = $(idScroller), oScrollMid = $(idScrollMid);
    
    this.SetOptions(options);
    this.Side = this.options.Side || ["up"];//方向
    this.scroller = oScroller;            //对象
    this.speed = this.options.Speed;    //速度
    this.timer = null;                    //时间
    this.pauseHeight = 0;                //定高
    this.pauseWidth = 0;                //定宽
    this.pause = 0;                        //定高(宽)
    this.side = 0;                        //参数
    
    //用于上下滚动
    this.heightScroller = parseInt(oScroller.style.height) || oScroller.offsetHeight;
    this.heightList = oScrollMid.offsetHeight;
    
    //用于左右滚动
    this.widthScroller = parseInt(oScroller.style.width) || oScroller.offsetWidth;
    this.widthList = oScrollMid.offsetWidth;
    
    //js取不到css设置的height和width
    
    oScroller.style.overflow = "hidden";
    oScrollMid.appendChild(oScrollMid.cloneNode(true));
    oScrollMid.appendChild(oScrollMid.cloneNode(true));
    
    addEventHandler(oScroller, "mouseover", function() { oThis.Stop(); });
    addEventHandler(oScroller, "mouseout", function() { oThis.Start(); });
    
    this.Start();
  },
  //设置默认属性
  SetOptions: function(options) {
    this.options = {//默认值
      Step:            1,//每次变化的px量
      Speed:        20,//速度(越大越慢)
      Side:            ["up"],//滚动方向:"up"是上，"down"是下，"left"是左，"right"是右
      PauseHeight:    0,//隔多高停一次
      PauseWidth:    0,//隔多宽停一次
      //当上下和左右一起使用时必须设置PauseHeight和PauseWidth来设置转向位置
      PauseStep:    1000//停顿时间(PauseHeight或PauseWidth大于0该参数才有效)
    };
    Object.extend(this.options, options || {});
  }, 
  //转向
  Turn: function() {
    //通过设置方向数组的排列来转向
    this.Side.push(this.Side.shift().toLowerCase());
  },
  //上下滚动
  ScrollUpDown: function() {
    this.pause = this.pauseHeight;
    this.scroller.scrollTop = this.GetScroll(this.scroller.scrollTop, this.heightScroller, this.heightList, this.options.PauseHeight);
    this.pauseHeight = this.pause;
    
    var oThis = this;
    this.timer = window.setTimeout(function(){ oThis.Start(); }, this.speed);
  },
  //左右滚动
  ScrollLeftRight: function() {
    this.pause = this.pauseWidth;
    //注意:scrollLeft超过1400会自动变回1400 注意长度
    this.scroller.scrollLeft = this.GetScroll(this.scroller.scrollLeft, this.widthScroller, this.widthList, this.options.PauseWidth);
    this.pauseWidth = this.pause;
    
    var oThis = this;
    this.timer = window.setTimeout(function(){ oThis.Start(); }, this.speed);
  },
  //获取设置滚动数据
  GetScroll: function(iScroll, iScroller, iList, iPause) {
    var iStep = this.options.Step * this.side;
    
    if(this.side > 0){
        if(iScroll >= (iList * 2 - iScroller)){ iScroll -= iList; }
    } else {
        if(iScroll <= 0){ iScroll += iList; }
    }
    
    this.speed = this.options.Speed;
    if(iPause > 0){
        if(Math.abs(this.pause) >= iPause){
            this.speed = this.options.PauseStep; this.pause = iStep = 0; this.Turn();
        } else {
            this.pause += iStep;
        }
    }
    
    return (iScroll + iStep);
  },
  //开始
  Start: function() {    
    //方向设置
    switch (this.Side[0].toLowerCase()) {
        case "right" :
            if(this.widthList < this.widthScroller) return;
            this.side = -1;
            this.ScrollLeftRight();
            break;
        case "left" :
            if(this.widthList < this.widthScroller) return;
            this.side = 1;
            this.ScrollLeftRight();
            break;
        case "down" :
            if(this.heightList < this.heightScroller) return;
            this.side = -1;
            this.ScrollUpDown();
            break;
        case "up" :
        default :
            if(this.heightList < this.heightScroller) return;
            this.side = 1;
            this.ScrollUpDown();
    }
  },
  //停止
  Stop: function() {
    clearTimeout(this.timer);
  }
};

window.onload = function(){
    new Scroller("idScroller", "idScrollMid",{ Side:["up","left"], PauseHeight:50, PauseWidth:400 });
}
</script>
<style>
.Scroller {line-height:50px; border:1px solid #000000; padding:0px 10px; height:50px; width:400px;}
.Scroller *{margin:0px; padding:0px;}
.ScrollMid {float:left;}
.ScrollMid ul{width:800px;float:left;}
.ScrollMid li{list-style:none; float:left; width:390px; padding-left:10px;}
</style>
<div id="idScroller" class="Scroller" style="width:400px; height:50px;">
  <div style="width:1600px">
    <div id="idScrollMid" class="ScrollMid">
      <ul>
        <li>111111111111</li>
        <li>2222222222222</li>
        <li>333333333333333</li>
        <li>4444444444444</li>
      </ul>
    </div>
  </div>
</div>
<div id="test"></div>
</body>
</html>

------------

RevealTrans.htm
RevealTrans.js

------------

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
<title>图片切换效果</title>
<script src="RevealTrans.js"></script>
</head>
<body>
<style type="text/css">
.container{
	width:280px;
	height:200px;
	border:1px solid #eee;
	position:relative;
}
#idPicText{
	background:#eee;
	line-height:25px;
	text-align:center;
	font-weight:bold;
	width:282px;
	white-space:nowrap;
	overflow:hidden;
	font-size:12px;
}
#idPicText a{
	text-decoration:none;
	color:#333;
	display:block;
}
#idPicList img{
	cursor:pointer;
	width:65px;
	height:50px;
	filter:alpha(opacity=50);
	-moz-opacity: .5;
	opacity: .5;
	border:0;
	margin:10px;
}
#idPicList img.on{
	filter:alpha(opacity=100);
	-moz-opacity: 1;
	opacity: 1;
}

#idNum{ position:absolute; right:5px; bottom:5px;}
#idNum li{
	float: left;
	list-style:none;
	color: #fff;
	text-align: center;
	line-height: 16px;
	width: 16px;
	height: 16px;
	font-family: Arial;
	font-size: 12px;
	cursor: pointer;
	margin: 1px;
	border: 1px solid #707070;
	background-color: #060a0b;
}
#idNum li.on{
	line-height: 18px;
	width: 18px;
	height: 18px;
	font-size: 14px;
	border: 0;
	background-color: #ce0609;
	font-weight: bold;
}

</style>

<div id="idShow" class="container">
</div>

<div id="idPicShow" class="container">
  <ul id="idNum">
  </ul>
</div>
<div id="idPicText"></div>
<div id="idPicList"></div>

<script>
var r = new RevealTrans("idShow");

//添加变换对象
r.Add('http://images.cnblogs.com/cnblogs_com/cloudgamer/143727/r_rt_1.jpg', '图片变换效果', 'http://www.cnblogs.com/cloudgamer/archive/2008/05/23/1205642.html');
r.Add('http://images.cnblogs.com/cnblogs_com/cloudgamer/143727/r_rt_2.jpg', '图片滑动展示效果', 'http://www.cnblogs.com/cloudgamer/archive/2008/05/13/1194272.html');
r.Add('http://images.cnblogs.com/cnblogs_com/cloudgamer/143727/r_rt_3.jpg', '图片切换展示效果', 'http://www.cnblogs.com/cloudgamer/archive/2008/07/06/1236770.html');

r.Start();

//////////////////////

var rvt = new RevealTrans("idPicShow");

//添加变换对象
rvt.Add('http://images.cnblogs.com/cnblogs_com/cloudgamer/143727/r_rt_1.jpg', '图片变换效果', 'http://www.cnblogs.com/cloudgamer/archive/2008/05/23/1205642.html');
rvt.Add('http://images.cnblogs.com/cnblogs_com/cloudgamer/143727/r_rt_2.jpg', '图片滑动展示效果', 'http://www.cnblogs.com/cloudgamer/archive/2008/05/13/1194272.html');
rvt.Add('http://images.cnblogs.com/cnblogs_com/cloudgamer/143727/r_rt_3.jpg', '图片切换展示效果', 'http://www.cnblogs.com/cloudgamer/archive/2008/07/06/1236770.html');


var oList = $("idPicList"), oText = $("idPicText"), arrImg = [];

var oNum = $("idNum"), arrNum = [];

//设置图片列表
Each(rvt.List, function(list, i){
	//图片式
	var img = document.createElement("img");
	img.src = list["img"]; img.alt = list["text"];
	arrImg[i] = img;
	oList.appendChild(img);
	//按钮式
	var li = document.createElement("li");
	li.innerHTML = i + 1;
	arrNum[i] = li;
	oNum.appendChild(li);
	//事件设置
	img.onmouseover = li.onmouseover = function(){ rvt.Auto = false; rvt.Index = i; rvt.Start(); };
	img.onmouseout = li.onmouseout = function(){ rvt.Auto = true; rvt.Start(); };
});

//设置图片列表样式 文本显示区域
rvt.onShow = function(){
	var i = this.Index, list = this.List[i];
	//图片式
	Each(arrImg, function(o){ o.className = ""; }); arrImg[i].className = "on";
	//按钮式
	Each(arrNum, function(o){ o.className = ""; }); arrNum[i].className = "on";
	//文本区域
	oText.innerHTML = !!list.url ? "<a href='" + list.url + "' target='_blank'>" + list.text + "</a>" : list.text;
}

//文本显示区域
oText.onmouseover = function(){ rvt.Auto = false; rvt.Stop(); };
oText.onmouseout = function(){ rvt.Auto = true; rvt.Start(); };

rvt.Start();

</script>
<br />
<script type="text/javascript"><!--
google_ad_client = "ca-pub-0342339836871729";
/* 728x90, 创建于 10-1-26 */
google_ad_slot = "8648094726";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</body>
</html>


------------

/*!
 * RevealTrans
 * Copyright (c) 2010 cloudgamer
 * Blog: http://cloudgamer.cnblogs.com/
 * Date: 2008-5-23
 */


var isIE = (document.all) ? true : false;

var $ = function (id) {
	return "string" == typeof id ? document.getElementById(id) : id;
};

var Class = {
	create: function() {
		return function() { this.initialize.apply(this, arguments); }
	}
}

var Extend = function(destination, source) {
	for (var property in source) {
		destination[property] = source[property];
	}
}

var Bind = function(object, fun) {
	return function() {
		return fun.apply(object, arguments);
	}
}

var Each = function(list, fun){
	for (var i = 0, len = list.length; i < len; i++) { fun(list[i], i); }
};


//ie only
var RevealTrans = Class.create();
RevealTrans.prototype = {
  initialize: function(container, options) {
	this._img = document.createElement("img");
	this._a = document.createElement("a");
	
	this._timer = null;//计时器
	this.Index = 0;//显示索引
	this._onIndex = -1;//当前索引
	
	this.SetOptions(options);
	
	this.Auto = !!this.options.Auto;
	this.Pause = Math.abs(this.options.Pause);
	this.Duration = Math.abs(this.options.Duration);
	this.Transition = parseInt(this.options.Transition);
	this.List = this.options.List;
	this.onShow = this.options.onShow;
	
	//初始化显示区域
	this._img.style.visibility = "hidden";//第一次变换时不显示红x图
	this._img.style.width = this._img.style.height = "100%"; this._img.style.border = 0;
	this._img.onmouseover = Bind(this, this.Stop);
	this._img.onmouseout = Bind(this, this.Start);
	isIE && (this._img.style.filter = "revealTrans()");
	
	this._a.target = "_blank";
	
	$(container).appendChild(this._a).appendChild(this._img);
  },
  //设置默认属性
  SetOptions: function(options) {
	this.options = {//默认值
		Auto:		true,//是否自动切换
		Pause:		1000,//停顿时间(微妙)
		Duration:	1,//变换持续时间(秒)
		Transition:	23,//变换效果(23为随机)
		List:		[],//数据集合,如果这里不设置可以用Add方法添加
		onShow:		function(){}//变换时执行
	};
	Extend(this.options, options || {});
  },
  Start: function() {
	clearTimeout(this._timer);
	//如果没有数据就返回
	if(!this.List.length) return;
	//修正Index
	if(this.Index < 0 || this.Index >= this.List.length){ this.Index = 0; }
	//如果当前索引不是显示索引就设置显示
	if(this._onIndex != this.Index){ this._onIndex = this.Index; this.Show(this.List[this.Index]); }
	//如果要自动切换
	if(this.Auto){
		this._timer = setTimeout(Bind(this, function(){ this.Index++; this.Start(); }), this.Duration * 1000 + this.Pause);
	}
  },
  //显示
  Show: function(list) {
	if(isIE){
		//设置变换参数
		with(this._img.filters.revealTrans){
			Transition = this.Transition; Duration = this.Duration; apply(); play();
		}
	}
	this._img.style.visibility = "";
	//设置图片属性
	this._img.src = list.img; this._img.alt = list.text;
	//设置链接
	!!list["url"] ? (this._a.href = list["url"]) : this._a.removeAttribute("href");
	//附加函数
	this.onShow();
  },
  //添加变换对象
  Add: function(sIimg, sText, sUrl) {
	this.List.push({ img: sIimg, text: sText, url: sUrl });
  },
  //停止
  Stop: function() {
	clearTimeout(this._timer);
  }
};


------------

http://www.cnblogs.com/cloudgamer/archive/2008/05/23/1205642.html

------------

<HTML>
<HEAD>
   <TITLE> HTML 语言教程</TITLE>
</HEAD>
<BODY BGCOLOR="#D4D4D4" onLoad="alert('本页面的效果必须在 Microsoft Internet Explorer 中才能看到 :-(((')">

<H1 ALIGN=CENTER>会移动的文字(Marquee)</H1>
<P><marquee>啦啦啦，我会移动耶！--默认从右向左运动</marquee> </P>  
<P><marquee direction=left>啦啦啦，我从右向左移！</marquee> </P>
<P><marquee direction=right>啦啦啦，我从左向右移！</marquee> </P>
<P><marquee behavior=scroll>啦啦啦，我一圈一圈绕着走！</marquee> </P>
<P><marquee behavior=slide>啦啦啦，我只走一次就歇了！</marquee> </P>
<P><marquee behavior=alternate>啦啦啦，我来回走耶！</marquee> </P>

<H3>循环 &lt;loop=#&gt; #=次数；若未指定则循环不止(infinite)</H3>

<P><marquee loop=3 width=50% behavior=scroll>啦啦啦，我只走 3 趟哟！</marquee></P>
<P><marquee loop=3 width=50% behavior=slide>啦啦啦，我只走 3 趟哟！</marquee> </P>
<P><marquee loop=3 width=50% behavior=alternate>啦啦啦，我只走 3 趟哟！</marquee></P>
<H3>速度 &lt;scrollamount=#&gt;</H3>
<P><marquee scrollamount=20>啦啦啦，我走得好快哟！</marquee> </P>
<H3>延时 &lt;scrolldelay=#&gt;</H3>
<P><marquee scrolldelay=500 scrollamount=100>啦啦啦，我走一步，停一停！</marquee></P>
<H3>对齐方式(Align) &lt;align=#&gt; #=top, middle, bottom</H3>
<FONT SIZE=6>
<P><marquee align=top width=400>啦啦啦，我会移动耶！</marquee>
</FONT>对齐上沿。</P>

<FONT SIZE=6>
<P><marquee align=middle width=400>啦啦啦，我会移动耶！</marquee>
</FONT>对齐中间。</P>

<FONT SIZE=6>
<P><marquee align=bottom width=400>啦啦啦，我会移动耶！</marquee>
</FONT>对齐下沿。</P>
<H3>底色 &lt;bgcolor=#&gt; </H3>
<DL>
<DD><B>#=rrggbb</B> 16 进制数码，或者是下列预定义色彩</A>：<BR>
<FONT COLOR="#000000">Black</FONT>, <FONT COLOR="#808000">Olive</FONT>,
<FONT COLOR="#008080">Teal</FONT>, <FONT COLOR="#FF0000">Red</FONT>, <FONT COLOR="#0000FF">Blue</FONT>,
<FONT COLOR="#800000">Maroon</FONT>, <FONT COLOR="#000080">Navy</FONT>,
<FONT COLOR="#808080">Gray</FONT>, <FONT COLOR="#00FF00">Lime</FONT>, <BR>
<FONT COLOR="#FF00FF">Fuchsia</FONT>, <FONT COLOR="#FFFFFF">White</FONT>,
<FONT COLOR="#008000">Green</FONT>, <FONT COLOR="#800080">Purple</FONT>,
<FONT COLOR="#C0C0C0">Silver</FONT>, <FONT COLOR="#FFFF00">Yellow</FONT>,
<FONT COLOR="#00FFFF">Aqua</FONT> 
</DD>
</DL>
<P><marquee bgcolor=aaaaee>啦啦啦，我会移动耶！</marquee> </P>
<H3>面积 &lt;height=# width=#&gt;</H3>

<DL>
<DD><TT>&lt;marquee height=40 width=50% bgcolor=aaeeaa&gt;<BR>
啦啦啦，我会移动耶！<BR>
&lt;/marquee&gt; </TT></DD>
</DL>

<P><marquee height=40 width=50% bgcolor=aaeeaa>啦啦啦，我会移动耶！</marquee>
</P>
<H3>空白(Margins)&lt;hspace=# vspace=#&gt;</H3>
<P>********************************************<BR>
嗨, <marquee hspace=20 vspace=20 width=150 
bgcolor=ffaaaa align=middle>啦啦啦，我会移动耶！</marquee>
大家好！<BR>
******************************************** </P>
</BODY>
</HTML>


------------

 public static boolean isNum(String str)  {  //一个静态方法，判断你输入的是不是数字
			
				return str.matches("^[-+]?(([0-9]+)([.]([0-9]+))?|([.]([0-9]+))?)$");	
     }  

------------

StringUtils全览 


org.apache.commons.lang.StringUtils中常用的方法，这里主要列举String中没有，且比较有用的方法：

1. 检查字符串是否为空：

static boolean isBlank(CharSequence str) 判断字符串是否为空或null; 
static boolean isNotBlank(CharSequence str) 判断字符串是否非空或非null;

StringUtils.isBlank("a"); 
返回结果为: false;

2. 缩进字符串：

static String abbreviate(String str, int maxWidth) 缩进字符串，第二个参数至少为4（包括...）

StringUtils.abbreviate("abcdefg", 20); 
返回结果为：abcdefg （正常显示）

StringUtils.abbreviate("abcdefg", 4); 
返回结果为：a...

3. 首字母大写：

static String capitalize(String str) 首字母大写 
static String uncapitalize(String str)首字母小写
StringUtils.capitalize("abcdefg"); 
返回结果：Abcdefg

4. 字符串显示在一个大字符串的位置：
static String center(String str, int size); 默认以空格填充 
static String center(String str, int size, String padString); 其余位置字符串填充 
public static String leftPad(String str,int size); 左侧空格填充 
public static String leftPad(String str,int size,String padStr);左侧字符串填充 
public static String rightPad(String str,int size); 左侧空格填充 
public static String rightPad(String str,int size,String padStr);左侧字符串填充 
StringUtils.center("abcdefg", 20)； 
返回结果：      abcdefg       
StringUtils.center("abcdefg", 20,"*_"); 
返回结果：*_*_*_abcdefg*_*_*_*
StringUtils.leftPad("abc", 10, "*"); 
返回结果：*******abc

5. 重复字符串次数

   static String repeat(String str, int repeat);

   StringUtils.repeat("abc", 5); 
返回结果：abcabcabcabcabc

6. 是否全是大写，是否全是小写（3.0版本）

   public static boolean isAllLowerCase(String str); 
public static boolean isAllUpperCase(String str);

   StringUtils.isAllLowerCase("abC"); 
返回结果：false

7. 是否都是由字母组成：

   public static boolean isAlpha(String str); 只由字母组成 
public static boolean isAlphaSpace(String str); 只有字母和空格组成 
public static boolean isAlphanumeric(String str);只由字母和数字组成 
public static boolean isAlphanumericSpace(String str);只由字母数字和空格组成 
public static boolean isNumeric(String str);只由数字组成 
public static boolean isNumericSpace(String str);只由数字和空格组成

   StringUtils.isAlpha("a2bdefg"); 
返回结果：false

8. 小字符串在大字符串中的匹配次数

public static int countMatches(String str,String sub);

StringUtils.countMatches("ababsssababa", "ab"); 
返回结果：4

9. 字符串倒转

   public static String reverse(String str);

   StringUtils.reverse("abcdef"); 
返回结果：fedcba

10. 大小写转换，空格不动 
public static String swapCase(String str);
StringUtils.swapCase("I am a-A*a") 
返回结果：i AM A-a*A



------------

通过设置session.setAttribute("title", title);
在request中 String title = JParamToolkit.getSession(request.getSession(), "title");

   public static String getSession(HttpSession session, String sessionName) {
        String retStr = "";
        try {
            retStr = session.getAttribute(sessionName).toString();
        } catch (Exception e) {
            retStr = "";
        }
        return retStr;
    }

------------

配置logback
配置log4j
log.xml配置
log.xml配置1
log4j.xml配置简介

------------

配置logback
配置xml
用到的包
与log4j冲突

------------

帮看下logback问题，日志输出到文件。
logback配置如下
<?xml version="1.0" encoding="UTF-8"?>
<configuration>
<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
<substitutionProperty name="log.mycomm" value="../logs/mycomm" />
<jmxConfigurator />
<appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
<layout class="ch.qos.logback.classic.PatternLayout">
<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
<pattern>%date %-5level %logger{80} - %msg%n</pattern>
</layout>
</appender>
<!-- 按照每天生成日志文件 -->
<appender name="logfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
<Encoding>UTF-8</Encoding>
<File>${log.mycomm}.log</File>
<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
<FileNamePattern>${log.mycomm}.%d{yyyy-MM-dd}.log.zip</FileNamePattern>
<!--日志保存天数-->
<maxHistory>100</maxHistory>
</rollingPolicy>
<layout class="ch.qos.logback.classic.PatternLayout">
<pattern>%date [%thread] %-5level %logger{80} - %msg%n</pattern>
</layout>
<!--日志文件最大的大小 默认就是10M-->
<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
<MaxFileSize>10MB</MaxFileSize>
</triggeringPolicy>
</appender>
<logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="WARN" />   
  <logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="WARN"/>   
  <logger name="org.hibernate.SQL" level="WARN" />   
  <logger name="org.hibernate.engine.QueryParameters" level="WARN" />   
  <logger name="org.hibernate.engine.query.HQLQueryPlan" level="WARN" />   
<root level="INFO">
<appender-ref ref="stdout" />
<appender-ref ref="logfile" />
</root>
</configuration>

我测试了下，比如在类中写一个
int a = Integer.parseInt("sd");
那么会报：java.lang.NumberFormatException: For input string: "sd"这个异常，为什么这个异常控制台会显示，但输出的日志文件中缺没有，但日志中有logger.info输出的信息。

[解决办法]
你可能输入了空格，如果没有的话应该是在你的配置文件中配置了空格，删掉就行了
[解决办法]
你没有给控制台定义文件输出啊。。。

<appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
<layout class="ch.qos.logback.classic.PatternLayout">
<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
<pattern>%date %-5level %logger{80} - %msg%n</pattern>
</layout>
</appender>

这个不是你写的控制台定义吗。。

控制台输出和日志输出是两个概念
[解决办法]
把log打印类型改为FILE，应该可以吧

------------

<?xml version="1.0" encoding="UTF-8"?>
<configuration>

	<property resource="properties/sysconfig.properties" />

	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<encoding>UTF-8</encoding>
		<file>${javaLogPath}/vpetl_server.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${javaLogPath}/vpetl_server.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<!--日志保存天数 -->
			<maxHistory>100</maxHistory>
		 <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            <maxFileSize>10MB</maxFileSize>
         </timeBasedFileNamingAndTriggeringPolicy>     
			
		</rollingPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger -%msg%n</pattern>
		</layout>
	</appender>

	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger-%msg%n</pattern>
		</encoder>
	</appender>

	<logger name="com.vprisk" level="error" />
	<logger name="org.springframework.security" level="error" />
	<logger name="com.mchange" level="error" />
	<logger name="org.hibernate" level="error" />
	<root level="debug">
		<appender-ref ref="FILE" />
		<appender-ref ref="STDOUT" />
	</root>
</configuration>

------------

D:\java_team\KeplerSpace\vpetl-metadata-2.2.2-hh\WebContent\WEB-INF\lib\logback-access-1.0.13.jar
D:\java_team\KeplerSpace\vpetl-metadata-2.2.2-hh\WebContent\WEB-INF\lib\logback-classic-1.0.13.jar
D:\java_team\KeplerSpace\vpetl-metadata-2.2.2-hh\WebContent\WEB-INF\lib\logback-core-1.0.13.jar
D:\java_team\KeplerSpace\vpetl-metadata-2.2.2-hh\WebContent\WEB-INF\lib\slf4j-api-1.7.5.jar

------------

项目组下log日志输出，需要删除的包----------------------
log4j-1.2.15.jar
slf4j-log4j12-1.6.6.jar

------------

原始配置
log4j.xml配置说明
log4j.xml
web.xml中相关配置

------------

log4j.properties
用到的包

------------

### direct log messages to stdout ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c:%L - %m%n

### direct messages to file hibernate.log ###
#log4j.appender.file=org.apache.log4j.FileAppender
#log4j.appender.file.File=hibernate.log
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

### set log levels - for more verbose logging change 'info' to 'debug' ###

log4j.rootLogger=warn, stdout

#log4j.logger.org.hibernate=info
#log4j.logger.org.hibernate=debug

### log HQL query parser activity
#log4j.logger.org.hibernate.hql.ast.AST=debug

### log just the SQL
#log4j.logger.org.hibernate.SQL=debug

### log JDBC bind parameters ###
#log4j.logger.org.hibernate.type=info
#log4j.logger.org.hibernate.type=debug

### log schema export/update ###
log4j.logger.org.hibernate.tool.hbm2ddl=debug

### log HQL parse trees
#log4j.logger.org.hibernate.hql=debug

### log cache activity ###
#log4j.logger.org.hibernate.cache=debug

### log transaction activity
#log4j.logger.org.hibernate.transaction=debug

### log JDBC resource acquisition
#log4j.logger.org.hibernate.jdbc=debug

### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace


------------

E:\Java\包\Hibernate配置的压缩包\slf4j-log4j12-1.5.8.jar
E:\Java\包\Hibernate配置的压缩包\log4j-1.2.15.jar
E:\Java\包\Hibernate配置的压缩包\slf4j-api-1.5.8.jar


主要用到的是log4j和slf4j,同时用到的一个转换器就是slf4j-log4j12-1.5.8.jar
实现了日志输出。

------------

其语法为：  
    log4j.rootLogger = [ level ] , appenderName1, appenderName2, …  
level: 是日志记录的优先级，分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL或  
者您定义的级别。Log4j建议只使用四个级别，优 先级从高到低分别是ERROR、WARN、INFO、DEBUG。通过在这里定义的级别，您可以控制到应用程序中相应级别的日志信息的开关。比如在这里定 义了INFO级别，则应用程序中所有DEBUG级别的日志信息将不被打印出来。  
appenderName: 就是指定日志信息输出到哪个地方。您可以同时指定多个输出目的地。  
        例如：log4j.rootLogger＝info,A1,B2,C3  

输出级别的种类
[html] view plaincopy
OFF 、FATAL 、ERROR、WARN、INFO、DEBUG、TRACE 、ALL  
 OFF 为最高等级 关闭了日志信息  
 FATAL  为可能导致应用中止的严重事件错误  
 ERROR 为严重错误 主要是程序的错误  
 WARN 为一般警告，比如session丢失  
 INFO 为一般要显示的信息，比如登录登出  
 DEBUG 为程序的调试信息  
 TRACE 为比DEBUG更细粒度的事件信息  
 ALL 为最低等级，将打开所有级别的日志  

配置日志信息输出目的地
[html] view plaincopy
log4j.appender.appenderName = fully.qualified.name.of.appender.class  
 1.org.apache.log4j.ConsoleAppender（控制台）  
 2.org.apache.log4j.FileAppender（文件）  
 3.org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）  
 4.org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）  
 5.org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）  

配置日志信息的格式
[html] view plaincopy
log4j.appender.appenderName.layout = fully.qualified.name.of.layout.class  
 1.org.apache.log4j.HTMLLayout（以HTML表格形式布局），  
 2.org.apache.log4j.PatternLayout（可以灵活地指定布局模式），  
 3.org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），  
 4.org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）  

[html] view plaincopy
<strong>控制台选项</strong>  
Threshold=DEBUG:指定日志消息的输出最低层次。  
 ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。  
 Target=System.err：默认情况下是：System.out,指定输出控制台  
  
 <strong>FileAppender 选项</strong>  
 Threshold=DEBUF:指定日志消息的输出最低层次。  
 ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。  
 File=mylog.txt:指定消息输出到mylog.txt文件。  
 Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。  
  
 <strong>RollingFileAppender 选项</strong>  
 Threshold=DEBUG:指定日志消息的输出最低层次。  
 ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。  
 File=mylog.txt:指定消息输出到mylog.txt文件。  
 Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容。  
 MaxFileSize=100KB: 后缀可以是KB, MB 或者是 GB. 在日志文件到达该大小时，将会自动滚动，即将原来的内容移到mylog.log.1文件。  
 MaxBackupIndex=2:指定可以产生的滚动文件的最大数。  
 log4j.appender.A1.layout.ConversionPattern=%-4r %-5p %d{yyyy-MM-dd HH:mm:ssS} %c %m%n  

日志信息格式中几个符号所代表的含义：
[html] view plaincopy
-X号: X信息输出时左对齐；  
%p: 输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL,  
%d: 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921  
%r: 输出自应用启动到输出该log信息耗费的毫秒数  
%c: 输出日志信息所属的类目，通常就是所在类的全名  
%t: 输出产生该日志事件的线程名  
%l: 输出日志事件的发生位置，相当于%C.%M(%F:%L)的组合,包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main (TestLog4.java:10)  
%x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。  
%%: 输出一个"%"字符  
%F: 输出日志消息产生时所在的文件名称  
%L: 输出代码中的行号  
%m: 输出代码中指定的消息,产生的日志具体信息  
%n: 输出一个回车换行符，Windows平台为"/r/n"，Unix平台为"/n"输出日志信息换行  
可以在%与模式字符之间加上修饰符来控制其最小宽度、最大宽度、和文本的对齐方式。如：  
1)%20c：指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，默认的情况下右对齐。  
2)%-20c:指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，"-"号指定左对齐。  
3)%.30c:指定输出category的名称，最大的宽度是30，如果category的名称大于30的话，就会将左边多出的字符截掉，但小于30的话也不会有空格。  
4)%20.30c:如果category的名称小于20就补空格，并且右对齐，如果其名称长于30字符，就从左边较远输出的字符截掉。  

log4j.xml配置如下，log4j.xml存放在WEB-INF目录下：
[html] view plaincopy
<?xml version="1.0" encoding="GBK" ?>    
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">    
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">      
    <!-- 输出日志到控制台  ConsoleAppender -->   
        <appender name="console"   
        class="org.apache.log4j.ConsoleAppender">  
        <param name="Threshold" value="info"></param>  
        <layout class="org.apache.log4j.TTCCLayout">  
            <param name="ConversionPattern" value="TTCCLayout"></param>  
        </layout>  
    </appender>  
  
    <!-- 输出日志到文件  每天一个文件 -->  
    <appender name="dailyRollingFile"  
        class="org.apache.log4j.DailyRollingFileAppender">  
        <param name="Threshold" value="info"></param>  
        <param name="ImmediateFlush" value="true"></param>  
        <param name="File" value="c:/logs/dailyRollingFile.log"></param>  
        <param name="DatePattern" value="'.'yyyy-MM-dd'.log'"></param>  
        <layout class="org.apache.log4j.PatternLayout">  
            <param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] {%c:%L}-%m%n"></param>  
        </layout>  
    </appender>   
      
    <!-- 输出日志到文件  文件大小到达指定尺寸的时候产生一个新的文件 -->  
    <appender name="railyFile"   
        class="org.apache.log4j.RollingFileAppender">  
        <param name="File" value="c:/logs/railyFile.log"></param>  
        <param name="ImmediateFlush" value="true"/>  
        <param name="Threshold" value="info"></param>  
        <param name="Append" value="true"></param>  
        <param name="MaxFileSize" value="30KB"></param>  
        <param name="MaxBackupIndex" value="100"></param>  
        <layout class="org.apache.log4j.PatternLayout">  
            <param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] {%c:%L}-%m%n"></param>  
        </layout>  
    </appender>  
  
    <!-- 输出日志到文件 -->  
    <appender name="file"  
        class="org.apache.log4j.FileAppender">  
        <param name="File" value="c:/logs/file.log"></param>  
        <param name="Threshold" value="info"></param>  
        <layout class="org.apache.log4j.PatternLayout">  
            <param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] {%c:%L}-%m%n"></param>  
        </layout>  
    </appender>  
  
    <!--   
        定义全局的日志输出级别,但是在输出目的地的配置中配置的具体输出级别优先级高于全局定义的优先级。  
        如果在railyFile中定义<param name="Threshold" value="info"></param>，那么将会把info以上级别的信息输出  
     -->  
    <root>       
        <priority value="debug" />       
        <appender-ref ref="console" />    
        <appender-ref ref="dailyRollingFile" />    
        <appender-ref ref="railyFile" />    
        <appender-ref ref="file" />    
    </root>         
  
</log4j:configuration>   

在web.xml中添加log4j.xml配置
[html] view plaincopy
<!-- log4j 系统日志-->  
<context-param>   
    <param-name>log4jConfigLocation</param-name>   
    <param-value>/WEB-INF/log4j.xml</param-value>   
</context-param>   
<listener>   
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>   
</listener>  

对Logger的简单封装：
BasicConfigurator.configure();默认先读取log4j.xml，如果不存在则再读取log4j.properties.
[java] view plaincopy
public class Log4jUtil {  
    private static final String configFile = "log4j.xml";  
      
    static{  
        BasicConfigurator.configure();  
    }  
      
    public Log4jUtil() {  
        super();  
    }  
      
    public static String getConfigFile(){  
        return configFile;  
    }  
      
    public static Logger getLogger(Class clazz){  
        return Logger.getLogger(clazz);  
    }  
      
    public static Logger getLogger(String strClass){  
        return Logger.getLogger(strClass);  
    }  
      
    public static Logger getLogger(String strClass,LoggerFactory loggerFactory){  
        return Logger.getLogger(strClass, loggerFactory);  
    }  
      
      
}  

最后只需在代码中调用即可，格式如下：
[java] view plaincopy
public class HelloLog4j {  
  
    private static Logger logger = Logger.getLogger(HelloLog4j.class);  
  
    public  String getURL(){  
        logger.info("getURL() ... ");  
        return null;  
    }  
}  

这样log4j就配置成功了。

------------

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//LOGGER" "log4j.dtd">

<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- Appenders -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS}||||%p||||%m%n"  />
		</layout>
	</appender>	

	<!-- 输出debug日志 -->
	<appender name="debug.log" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="File" value="e:/tmrpt/log/debug.log" />
		<param name="Append" value="true" />
		<param name="encoding" value="UTF-8"/>
		<param name="DatePattern" value="yyyyMMddHH"/>
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS} [%p][%c]- %m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="levelMin" value="debug" />
			<param name="levelMax" value="debug" />
			<param name="AcceptOnMatch" value="true" />
		</filter>
	</appender>	  

	<!-- 输出info日志 -->
	<appender name="info.log" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="File" value="e:/tmrpt/log/info.log" />
		<param name="Append" value="true" />
		<param name="encoding" value="UTF-8"/>
		<param name="DatePattern" value="yyyyMMddHH"/>
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS} [%p][%c]- %m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="levelMin" value="info" />
			<param name="levelMax" value="info" />
			<param name="AcceptOnMatch" value="true" />
		</filter>
	</appender>
	
	<!-- 输出warn日志 -->
	<appender name="warn.log" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="File" value="e:/tmrpt/log/warn.log" />
		<param name="Append" value="true" />
		<param name="encoding" value="UTF-8"/>
		<param name="DatePattern" value="yyyyMMddHH" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS} [%p][%c]- %m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="levelMin" value="warn" />
			<param name="levelMax" value="warn" />
			<param name="AcceptOnMatch" value="true" />
		</filter>
	</appender>	
	
	<!-- 输出error日志 -->
	<appender name="error.log" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="File" value="e:/tmrpt/log/error.log" />
		<param name="Append" value="true" />
		<param name="encoding" value="UTF-8"/>
		<param name="DatePattern" value="yyyyMMddHH" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS} [%p][%c]- %m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="levelMin" value="error" />
			<param name="levelMax" value="error" />
			<param name="AcceptOnMatch" value="true" />
		</filter>
	</appender>		
		
	<!-- Root Logger -->
	<root>
<!-- 	priority配置输出日志级别 -->
		<priority value="info" /> 
		<appender-ref ref="console" ></appender-ref>
		<appender-ref ref="info.log" />
		<appender-ref ref="debug.log" />
		<appender-ref ref="warn.log" />
		<appender-ref ref="error.log"/>
	</root>

</log4j:configuration>

------------

	<!-- log4j 系统日志-->
	<context-param> 
	  	<param-name>log4jConfigLocation</param-name> 
	 	<param-value>/WEB-INF/log4j.xml</param-value> 
	</context-param> 
	<listener> 
	  	<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class> 
	</listener>

------------

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//LOGGER" "log4j.dtd">

<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- Appenders -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS}||||%p||||%m%n"  />
		</layout>
	</appender>	

	
	<appender name="debug.log" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="File" value="d:/tmrpt/log/debug.log" />
		<param name="Append" value="true" />
		<param name="encoding" value="UTF-8"/>
		<param name="DatePattern" value="yyyyMMddHH" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS} [%p][%c]- %m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="levelMin" value="debug" />
			<param name="levelMax" value="info" />
			<param name="AcceptOnMatch" value="true" />
		</filter>
	</appender>	
	
	
	<appender name="warn.log" class="com.boc.util.DateRollingFileAppender">
		<param name="File" value="d:/tmrpt/log/warn.log" />
		<param name="Append" value="true" />
		<param name="encoding" value="UTF-8"/>
		<param name="MaxFileSize" value="500KB" />
		<param name="MaxBackupIndex" value="1000" />
		<param name="DatePattern" value="yyyyMMddHHmmss" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS}||||%p||||%m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="levelMin" value="warn" />
			<param name="levelMax" value="warn" />
			<param name="AcceptOnMatch" value="true" />
		</filter>
	</appender>
	
	<appender name="error.log" class="com.boc.util.DateRollingFileAppender">
		<param name="File" value="d:/tmrpt/log/error.log" />
		<param name="Append" value="true" />
		<param name="encoding" value="UTF-8"/>
		<param name="MaxFileSize" value="500KB" />
		<param name="MaxBackupIndex" value="1000" />
		<param name="DatePattern" value="yyyyMMddHHmmss" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS}||||%p||||%c||||%m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="levelMin" value="error" />
			<param name="levelMax" value="error" />
			<param name="AcceptOnMatch" value="true" />
		</filter>
	</appender>

	<!-- Root Logger -->
	<root>
		<priority value="debug" />
		<appender-ref ref="console" />
		<appender-ref ref="debug.log" />
		<appender-ref ref="warn.log" />
		<appender-ref ref="error.log"/>
	</root>

</log4j:configuration>
Administrator 10:48:34
  <?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//LOGGER" "log4j.dtd">

<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- Appenders -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS}||||%p||||%m%n"  />
		</layout>
	</appender>	

	
	<appender name="debug.log" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="File" value="d:/tmrpt/log/debug.log" />
		<param name="Append" value="true" />
		<param name="encoding" value="UTF-8"/>
		<param name="DatePattern" value="yyyyMMddHH" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS} [%p][%c]- %m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="levelMin" value="debug" />
			<param name="levelMax" value="info" />
			<param name="AcceptOnMatch" value="true" />
		</filter>
	</appender>	
	
	
	<appender name="warn.log" class="com.boc.util.DateRollingFileAppender">
		<param name="File" value="d:/tmrpt/log/warn.log" />
		<param name="Append" value="true" />
		<param name="encoding" value="UTF-8"/>
		<param name="MaxFileSize" value="500KB" />
		<param name="MaxBackupIndex" value="1000" />
		<param name="DatePattern" value="yyyyMMddHHmmss" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS}||||%p||||%m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="levelMin" value="warn" />
			<param name="levelMax" value="warn" />
			<param name="AcceptOnMatch" value="true" />
		</filter>
	</appender>
	
	<appender name="error.log" class="com.boc.util.DateRollingFileAppender">
		<param name="File" value="d:/tmrpt/log/error.log" />
		<param name="Append" value="true" />
		<param name="encoding" value="UTF-8"/>
		<param name="MaxFileSize" value="500KB" />
		<param name="MaxBackupIndex" value="1000" />
		<param name="DatePattern" value="yyyyMMddHHmmss" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS}||||%p||||%c||||%m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="levelMin" value="error" />
			<param name="levelMax" value="error" />
			<param name="AcceptOnMatch" value="true" />
		</filter>
	</appender>

	<!-- Root Logger -->
	<root>
		<priority value="debug" />
		<appender-ref ref="console" />
		<appender-ref ref="debug.log" />
		<appender-ref ref="warn.log" />
		<appender-ref ref="error.log"/>
	</root>

</log4j:configuration>


------------

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//LOGGER" "log4j.dtd">

<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- Appenders -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS}||||%p||||%m%n"  />
		</layout>
	</appender>
	
	<appender name="debug.log" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="File" value="d:/tmrpt/log/debug.log" />
		<param name="Append" value="true" />
		<param name="encoding" value="UTF-8"/>
<!-- 		<param name="MaxFileSize" value="500KB" /> -->
		<param name="MaxBackupIndex" value="1000" />
		<param name="DatePattern" value="yyyy-MM-dd 24HH" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS}||||%p||||%m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="levelMax" value="info" />
			<param name="levelMin" value="info" />
			<param name="AcceptOnMatch" value="true" />
		</filter>
	</appender>
	
	<appender name="warn.log" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="File" value="d:/tmrpt/log/warn.log" />
		<param name="Append" value="true" />
		<param name="encoding" value="UTF-8"/>
		<param name="MaxFileSize" value="500KB" />
		<param name="MaxBackupIndex" value="1000" />
		<param name="DatePattern" value="yyyyMMddHHmmss" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS}||||%p||||%m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="levelMin" value="warn" />
			<param name="levelMax" value="warn" />
			<param name="AcceptOnMatch" value="true" />
		</filter>
	</appender>
	
	<appender name="error.log" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="File" value="d:/tmrpt/log/error.log" />
		<param name="Append" value="true" />
		<param name="encoding" value="UTF-8"/>
		<param name="MaxFileSize" value="500KB" />
		<param name="MaxBackupIndex" value="1000" />
		<param name="DatePattern" value="yyyyMMddHHmmss" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-d{yyyy-MM-dd HH:mm:ss,SSS}||||%p||||%c||||%m%n" />
		</layout>
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="levelMin" value="error" />
			<param name="levelMax" value="error" />
			<param name="AcceptOnMatch" value="true" />
		</filter>
	</appender>

	<!-- Root Logger -->
	<root>
		<priority value="debug" />
		<appender-ref ref="console" />
		<appender-ref ref="debug.log" />
		<appender-ref ref="warn.log" />
		<appender-ref ref="error.log"/>
	</root>

</log4j:configuration>


------------

log4j.xml输出日志调试过程  
现在业务系统运行也有日志输出，读的是log4j.properties，配置如下：

#-------------------------------

log4j.rootCategory=DEBUG, stdout
#每天输出一个日志
log4j.appender.stdout=org.apache.log4j.DailyRollingFileAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d - %m%n
#%-d{yyyy-MM-dd HH:mm:ss,SSS}
%d 输出日志时间点的日期或时间
#%m 输出代码中指定的消息
#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
#%r 输出自应用启动到输出该log信息耗费的毫秒数
#%c 输出所属的类目，通常就是所在类的全名
#%t 输出产生该日志事件的线程名
#%n 输出一个回车换行符，Windows平台为"\r\n"，Unix平台为"\n"
log4j.appender.stdout.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} - %p - %m%n
#输出文件的名字
log4j.appender.stdout.File=E:\\tomcatLog\\test.log
#日志优先级别由低到高 DEBUG  INFO  WARN  ERROR  FATAL
log4j.appender.stdout.Threshold=DEBUG

#---------------------------

描述：系统所有输出日志都写到文件E:\\tomcatLog\\test.log，不能更具日志debug,info,warn,error和fatal级别分别输出到不同的文件。

 

在网上查询log4j.xml,然后修改相关配置，配置如下：

 

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">

<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

 

<!--debug日志输出配置-->


 <appender name="debug"
  class="org.apache.log4j.DailyRollingFileAppender">
  <param name="File" value="D:/data/programe/cgt/log/debug.txt" />
  <param name="Append" value="true" />
  <layout class="org.apache.log4j.PatternLayout">
   <param name="ConversionPattern" value="%d [%t] %p - %m%n" />
  </layout>
  <filter class="org.apache.log4j.varia.LevelRangeFilter">
   <param name="LevelMax" value="DEBUG" /><!--过滤只输出DEBUG级别日志-->
   <param name="LevelMin" value="DEBUG" />
  </filter>

 </appender>

 

<!--infor日志输出配置-->

 <appender name="info"
  class="org.apache.log4j.DailyRollingFileAppender">
  <param name="File" value="D:/data/programe/cgt/log/info.txt" />
  <param name="Append" value="true" />
  <layout class="org.apache.log4j.PatternLayout">
   <param name="ConversionPattern" value="%d [%t] %p - %m%n" />
  </layout>
  <filter class="org.apache.log4j.varia.LevelRangeFilter">
   <param name="LevelMax" value="INFO" />
   <param name="LevelMin" value="INFO" />
  </filter>

 </appender>

<!--warn日志输出配置-->
 <appender name="warn"
  class="org.apache.log4j.DailyRollingFileAppender">
  <param name="File" value="D:/data/programe/cgt/log/warn.txt" />
  <param name="Append" value="true" />
  <layout class="org.apache.log4j.PatternLayout">
   <param name="ConversionPattern" value="%d [%t] %p - %m%n" />
  </layout>
  <filter class="org.apache.log4j.varia.LevelRangeFilter">
   <param name="LevelMax" value="WARN" />
   <param name="LevelMin" value="WARN" />
  </filter>

 </appender>

 

<!--error日志输出配置-->

 <appender name="error"
  class="org.apache.log4j.DailyRollingFileAppender">
  <param name="File" value="D:/data/programe/cgt/log/error.txt" />
  <param name="Append" value="true" />
  <layout class="org.apache.log4j.PatternLayout">
   <param name="ConversionPattern" value="%d [%t] %p - %m%n" />
  </layout>
  <filter class="org.apache.log4j.varia.LevelRangeFilter">
   <param name="LevelMax" value="ERROR" />
   <param name="LevelMin" value="ERROR" />
  </filter>

 </appender>

 

<!--fatal日志输出配置-->

 <appender name="fatal"
  class="org.apache.log4j.DailyRollingFileAppender">
  <param name="File" value="D:/data/programe/cgt/log/fatal.txt" />
  <param name="Append" value="true" />
  <layout class="org.apache.log4j.PatternLayout">
   <param name="ConversionPattern" value="%d [%t] %p - %m%n" />
  </layout>
  <filter class="org.apache.log4j.varia.LevelRangeFilter">
   <param name="LevelMax" value="FATAL" />
   <param name="LevelMin" value="FATAL" />
  </filter>

 </appender>


 <root>
  <priority value="debug" /><!--日志输出最低级别-->
  <appender-ref ref="debug" /><!--debug日志输出-->
  <appender-ref ref="info" /><!--info日志输出-->
  <appender-ref ref="warn" /><!--warn日志输出-->
  <appender-ref ref="error" /><!--error日志输出-->
  <appender-ref ref="fatal" /><!--fatal日志输出-->
 </root>

</log4j:configuration>

这样就可以把系统不同级别的输出到不同的文件了。

一点想法【个人观点】：

log4j.properties：使用这个配置，所有输出都输出到一个文件中，这样在系统调试过程比较合适，这样可以跟踪业务流程；

log4j.xml：使用这个配置不同级别的日志输出到不同的文件夹，比较适合于系统正式上线运行阶段，这个可以很快的定位到错误所在，但要求必须熟悉系统流程，看到异常日志时能知道问题是出到哪一块了。

 

 

如果把log4j.xml和log4j.properties都放到classes文件加下，系统会自动先去查找log4j.xml配置文件，如果log4j.xml存在，那么系统日志将按照log4j.xml配置输出；不过log4j.xml不存在，则查找log4j.properties文件。



------------

四个注解

------------

在bean.xml中配置关于注解的配置
 <context:annotation-config />
              <context:component-scan base-package="com.bluedot">
        </context:component-scan>


controller
service
component
repository

------------

实现分页的sql

------------

方法参数：userlist(int pageid, int pagesize)
String sql =" SELECT * FROM  ( SELECT A.*, rownum r FROM  (SELECT * FROM userlist ) A  WHERE rownum <= "+pageid+"*"+pagesize+" ) B  WHERE r >  "+(pageid-1)+"*"+pagesize+" order by id"; 


------------

sendRedirect
forward

------------

地址栏会发生变化：response.sendRedirect("view.jsp");
从服务器端转到客户端，客户端访问新的jsp页面后，在返回到服务器端。效率相对比较低。转走之后，当前页面的代码会继续执行。
这个页面可以任意转如：http://www.baidu.com;
可以传递参数；必须下载url后面



------------

这种转向，是不同的对象，可以取到上个页面的内容，在服务器内部转向，客户端不会知道转向的事。地址栏没有变化。
<jsp:forward page="view.jsp">
原页面后面的代码不会被执行


------------

增加事件

------------

window.onload=function(){

}

------------

一. 获取当前系统时间和日期并格式化输出:

import java.util.Date;
import java.text.SimpleDateFormat;

public class NowString {
public static void main(String[] args) { 
SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");//设置日期格式
System.out.println(df.format(new Date()));// new Date()为获取当前系统时间
}
}

二. 在数据库里的日期只以年-月-日的方式输出，可以用下面两种方法：

1、用convert()转化函数：

String sqlst = "select convert(varchar(10),bookDate,126) as convertBookDate from roomBook where bookDate between '2007-4-10' and '2007-4-25'";

System.out.println(rs.getString("convertBookDate"));

2、利用SimpleDateFormat类：

先要输入两个java包：

import java.util.Date;
import java.text.SimpleDateFormat;

然后：

定义日期格式：SimpleDateFormat sdf = new SimpleDateFormat(yy-MM-dd);

sql语句为：String sqlStr = "select bookDate from roomBook where bookDate between '2007-4-10' and '2007-4-25'";

输出：

System.out.println(df.format(rs.getDate("bookDate")));

 

************************************************************

java中获取当前日期和时间的方法
 
import java.util.Date; 
import java.util.Calendar; 

import java.text.SimpleDateFormat; 

public class TestDate{ 
public static void main(String[] args){ 
Date now = new Date(); 
SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");//可以方便地修改日期格式


String hehe = dateFormat.format( now ); 
System.out.println(hehe); 

Calendar c = Calendar.getInstance();//可以对每个时间域单独修改

 


int year = c.get(Calendar.YEAR); 
int month = c.get(Calendar.MONTH); 
int date = c.get(Calendar.DATE); 
int hour = c.get(Calendar.HOUR_OF_DAY); 
int minute = c.get(Calendar.MINUTE); 
int second = c.get(Calendar.SECOND); 
System.out.println(year + "/" + month + "/" + date + " " +hour + ":" +minute + ":" + second); 
} 
}

 有时候要把String类型的时间转换为Date类型，通过以下的方式，就可以将你刚得到的时间字符串转换为Date类型了。

SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");

java.util.Date time=null;
try {
   time= sdf.parse(sdf.format(new Date()));

} catch (ParseException e) {

   e.printStackTrace();
}

------------

参考文件

------------

tomcat下jndi的三种配置方式
分类： web开发 2011-08-23 11:44 3638人阅读 评论(0) 收藏 举报
tomcatjdbcjavamysqljspencoding
       
         jndi(Java Naming and Directory Interface，Java命名和目录接口)是一组在Java应用中访问命名和目录服务的API。命名服务将名称和对象联系起来，使得我们可以用名称
访问对象。目录服务是一种命名服务，在这种服务里，对象不但有名称，还有属性。
         tomcat配置jndi有全局配置和局部配置。大致的有以下三种配置方式：
 
 第一种：全局配置。
1）在tomcat的conf文件夹下的context.xml配置文件中加入：
[html] view plaincopy
<Resource name="jndi/mybatis"   
            auth="Container"   
            type="javax.sql.DataSource"   
            driverClassName="com.mysql.jdbc.Driver"   
            url="jdbc:mysql://localhost:3306/appdb"   
            username="root"   
            password="123456"   
            maxActive="20"   
            maxIdle="10"   
            maxWait="10000"/>      

2)在项目的web.xml中加入资源引用：
[html] view plaincopy
<resource-ref>  
  <description>JNDI DataSource</description>  
  <res-ref-name>jndi/mybatis</res-ref-name>  
  <res-ref-type>javax.sql.DataSource</res-ref-type>  
  <res-auth>Container</res-auth>  
</resource-ref>  
其中res-ref-name值要和context.xml的name值一致。
 
3）jndi测试方法：
[java] view plaincopy
public void testJNDI() throws NamingException, SQLException{  
    Context ctx = new InitialContext();  
    DataSource ds = (DataSource) ctx.lookup("java:comp/env/jndi/mybatis");  
    Connection conn = ds.getConnection();  
    System.out.println(conn.isClosed());  
  
}  

4）在jsp中调用加载jndi方式，不可以直接用main方法测试，必须通过启动容器从jsp中调用：
[java] view plaincopy
TestPageAccessURL test = new TestPageAccessURL();  
test.testJNDI();  

 
第二种：局部配置（不推荐）。
1）在tomcat的server.xml的<host>标签内，添加：
[html] view plaincopy
<Context path="/demo_jndi" docBase="/demo_jndi">  
   <Resource  
     name="jndi/mybatis"  
     type="javax.sql.DataSource"  
     driverClassName="com.mysql.jdbc.Driver"  
     maxIdle="2"  
     maxWait="5000"  
     username="root"  
     password="123456"  
     url="jdbc:mysql://localhost:3306/appdb"  
     maxActive="4"/>  
</Context>  
其他配置同第一种方式。
 
第三种：局部配置。
1）在项目的META-INFO下面新建context.xml。加入：
[html] view plaincopy
<?xml version="1.0" encoding="UTF-8"?>  
<Context>  
    <Resource name="jndi/mybatis"   
                auth="Container"   
                type="javax.sql.DataSource"   
                driverClassName="com.mysql.jdbc.Driver"   
                url="jdbc:mysql://localhost:3306/appdb"   
                username="root"   
                password="123456"   
                maxActive="20"   
                maxIdle="10"   
                maxWait="10000"/>      
</Context>  
其他配置同第一种方式。
总结：如果要配置局部的话，推荐使用第三种方式，这样不依赖tomcat了。但是还是推荐使用第一种方式好，虽然依赖tomat，但是是全局的，而且可以配置
多个。对于以后切换使用方便。
在项目的web.xml中添加的资源引用可有可无。

 

------------



------------

-Xms256M -Xmx512M -XX:PermSize=256m -XX:MaxPermSize=512m

------------

常用的System.getProperty()
public class TestSystemproperty {
public static void main(String[] args){
   System.out.println("Java运行时环境版本:\n"+System.getProperty("java.version"));
   System.out.println("Java 运行时环境供应商:\n"+System.getProperty("java.vendor"));
   System.out.println("Java 供应商的"));
   System.out.println("Java安装目录:\n"+System.getProperty("java.home"));
   System.out.println("Java 虚拟机规范版本:\n"+System.getProperty("java.vm.specification.version"));
   System.out.println("Java 类格式版本号:\n"+System.getProperty("java.class.version"));
   System.out.println("Java类路径：\n"+System.getProperty("java.class.path"));
   System.out.println("加载库时搜索的路径列表:\n"+System.getProperty("java.library.path"));
   System.out.println("默认的临时文件路径:\n"+System.getProperty("java.io.tmpdir"));
   System.out.println("要使用的 JIT 编译器的名称:\n"+System.getProperty("java.compiler"));
   System.out.println("一个或多个扩展目录的路径:\n"+System.getProperty("java.ext.dirs"));
   System.out.println("操作系统的名称:\n"+System.getProperty("os.name"));
   System.out.println("操作系统的架构:\n"+System.getProperty("os.arch"));
   System.out.println("操作系统的版本:\n"+System.getProperty("os.version"));
   System.out.println("文件分隔符（在 UNIX 系统中是“/”）:\n"+System.getProperty("file.separator"));
   System.out.println("路径分隔符（在 UNIX 系统中是“:”）:\n"+System.getProperty("path.separator"));
   System.out.println("行分隔符（在 UNIX 系统中是“/n”）:\n"+System.getProperty("line.separator"));
   System.out.println("用户的账户名称:\n"+System.getProperty("user.name"));
   System.out.println("用户的主目录:\n"+System.getProperty("user.home"));
   System.out.println("用户的当前工作目录:\n"+System.getProperty("user.dir"));
}
}
From jdk 1.5.0 documents
java.version
Java 运行时环境版本
java.vendor
Java 运行时环境供应商
java.vendor.url
Java 供应商的 URL
java.home
Java 安装目录
java.vm.specification.version
Java 虚拟机规范版本
java.vm.specification.vendor
Java 虚拟机规范供应商
java.vm.specification.name
Java 虚拟机规范名称
java.vm.version
Java 虚拟机实现版本
java.vm.vendor
Java 虚拟机实现供应商
java.vm.name
Java 虚拟机实现名称
java.specification.version
Java 运行时环境规范版本
java.specification.vendor
Java 运行时环境规范供应商
java.specification.name
Java 运行时环境规范名称
java.class.version
Java 类格式版本号
java.class.path
Java 类路径
java.library.path
加载库时搜索的路径列表
java.io.tmpdir
默认的临时文件路径
java.compiler
要使用的 JIT 编译器的名称
java.ext.dirs
一个或多个扩展目录的路径
os.name
操作系统的名称
os.arch
操作系统的架构
os.version
操作系统的版本
file.separator
文件分隔符（在 UNIX 系统中是“/”）
path.separator
路径分隔符（在 UNIX 系统中是“:”）
line.separator
行分隔符（在 UNIX 系统中是“/n”）
user.name
用户的账户名称
user.home
用户的主目录
user.dir
用户的当前工作目录
3.运行结果为：


------------

项目已经存在

------------

解决在eclipse中导入项目名称已存在的问题
1、Some projects cannot be imported because they already exist in the workspace

2、Some projects were hidden because they exist in the workspace directory

有时候eclipse或者myeclipse导入项目的时候会发生上面两个错误，IDE不允许我们导入。具体原因是在IDE的workspace中已经存在了相同名字的项目，所以不能导入。

解决办法则是修改项目名：

1、right click --- refactor --- rename


2、workspace中要修改名字的项目 --- 打开.project文件 --- 修改<name>projectName</name>

------------

 如何把maven项目转成web项目
分类： 知识(Knowledge) 2012-12-03 15:06 10131人阅读 评论(6) 收藏 举报
创建Web工程，使用eclipse ee创建maven web工程 

1.右键项目,选择Project Facets,点击Convert to faceted from 
2.更改Dynamic Web Module的Version为2.5.(3.0为Java7的,Tomcat6不支持). 
如果提示错误,可能需要在Java Compiler设置Compiler compliance level 为1.6 .或者需要在此窗口的Java的Version改成1.6. 
3.点击下面的Further configuration available…，弹出Modify Faceted Project窗口 
此处是设置web.xml文件的路径,输入src/main/webapp. 
Generate web.xml deployment descriptor自动生成web.xml文件,可选可不选. 
4.点击OK 

5.设置部署程序集(Web Deployment Assembly) 
6.在右键项目打开此窗口.在左侧列表中会出现一个Deployment Assembly,点击进去后 
7.删除test的两项,因为test是测试使用,并不需要部署. 
8.设置将Maven的jar包发布到lib下. 
Add -> Java Build Path Entries -> Maven Dependencies -> Finish 

完成后有: 
/src/main/webapp    / 
/src/main/java      /WEB-INF/classes 
/src/main/resources /WEB-INF/classes 
Maven Dependencies  /WEB-INF/lib 
好了，这样就把一个maven项目转化成web项目了。

------------

TDS平台定时除服服务时间配置采用corn Wxpression。以下是对cron Excetpion 格式的一些说明。
	Cron Exception表达式的格式十分类似于UNIX cron 格式，但还是有少许明显的区别。区别之一就是cron Exception的格式向下支持到秒级别的计划，而UNIX cron 计划仅支持至分钟级。许多我们的触发计划要基于秒级递增(如 每15秒)，因此这是一个非常好的差异。
	在UNIX cron 里，要执行的作用(或者说命令)是存放在cron 表达式中的，在第六个域位置上。Cron Exception 表达式存放执行计划。
	另一个与 UNIX cron 表达式的不同点是在表达式中支持域的数目。Cron Expression提供七个域。下表列出了Cron Expression表达式支持的七个域。
名称
	是否必须	允许值	特殊字符
秒	是	0-59	, - * /
分	是	0-59	, - * /
时	是	0-23	, - * /
日	是	1-31	, - * ? / L W C
月	是	1-12 或 JAN-DEC	, - * /
周	是	1-7 或 SUN-SAT	, - * ? / L C #
年	否	空 或 1970-2099	, - * /
月份和星期的名称是不区分大小写的。FRI 和 fri 是一样的。域之间有空格分隔，这和 UNIX cron 一样。无可争辩的，我们能写的最简单的表达式看起来就是这个了：
* * * ? * *
这个表达会每秒钟(每分种的、每小时的、每天的)激发一个部署的 job。
?理解特殊字符
同 UNIX cron 一样，Cron Expression表达式支持用特殊字符来创建更为复杂的执行计划。然而，Cron Expression在特殊字符的支持上比标准 UNIX cron 表达式更丰富了。
* 星号
使用星号(*) 指示着你想在这个域上包含所有合法的值。例如，在月份域上使用星号意味着每个月都会触发这个 trigger。
表达式样例：
0 * 17 * * ?
意义：每天从下午5点到下午5:59中的每分钟激发一次 trigger。它停在下午 5:59 是因为值 17 在小时域上，在下午 6 点时，小时变为 18 了，也就不再理会这个 trigger，直到下一天的下午5点。
在你希望 trigger 在该域的所有有效值上被激发时使用 * 字符
? 问号
? 号只能用在日和周域上，但是不能在这两个域上同时使用。你可以认为 ? 字符是 "我并不关心在该域上是什么值。" 这不同于星号，星号是指示着该域上的每一个值。? 是说不为该域指定值。
不能同时这两个域上指定值的理由是难以解释甚至是难以理解的。基本上，假定同时指定值的话，意义就会变得含混不清了：考虑一下，如果一个表达式在日域上有值11，同时在周域上指定了 WED。那么是要 trigger 仅在每个月的11号，且正好又是星期三那天被激发？还是在每个星期三的11号被激发呢？要去除这种不明确性的办法就是不能同时在这两个域上指定值
只要记住，假如你为这两域的其中一个指定了值，那就必须在另一个字值上放一个 ?。
表达式样例
0 10,44 14 ? 3 WEB

意义：在三月中的每个星期三的下午 2:10 和 下午 2:44 被触发。

, 逗号

逗号 (,) 是用来在给某个域上指定一个值列表的。例如，使用值 0,15,30,45 在秒域上意味着每15秒触发一个 trigger。

表达式样例：

0 0,15,30,45 * * * ?

意义：每刻钟触发一次 trigger。

/ 斜杠

斜杠 (/) 是用于时间表的递增的。我们刚刚用了逗号来表示每15分钟的递增，但是我们也能写成这样 0/15。
表达式样例：
0/15 0/30 * * * ?
意义：在整点和半点时每15秒触发 trigger。
- 中划线
中划线 (-) 用于指定一个范围。例如，在小时域上的 3-8 意味着 "3,4,5,6,7 和 8 点。"  域的值不允许回卷，所以像 50-10 这样的值是不允许的。
表达式样例：
0 45 3-8 ? * *
意义：在上午的3点至上午的8点的45分时触发 trigger。
L 字母
L 说明了某域上允许的最后一个值。它仅被日和周域支持。当用在日域上，表示的是在月域上指定的月份的最后一天。例如，当月域上指定了 JAN 时，在日域上的 L 会促使 trigger 在1月31号被触发。假如月域上是 SEP，那么 L 会预示着在9月30号触发。换句话说，就是不管指定了哪个月，都是在相应月份的时最后一天触发 trigger。
表达式 0 0 8 L * ? 意义是在每个月最后一天的上午 8:00 触发 trigger。在月域上的 * 说明是 "每个月"。
当 L 字母用于周域上，指示着周的最后一天，就是星期六 (或者数字7)。所以如果你需要在每个月的最后一个星期六下午的 11:59 触发 trigger，你可以用这样的表达式 0 59 23 ? * L。
当使用于周域上，你可以用一个数字与 L 连起来表示月份的最后一个星期 X。例如，表达式 0 0 12 ? * 2L 说的是在每个月的最后一个星期一触发 trigger。
不要让范围和列表值与 L 连用

虽然你能用星期数(1-7)与 L 连用，但是不允许你用一个范围值和列表值与 L 连用。这会产生不可预知的结果。

W 字母

W 字符代表着平日 (Mon-Fri)，并且仅能用于日域中。它用来指定离指定日的最近的一个平日。大部分的商业处理都是基于工作周的，所以 W 字符可能是非常重要的。例如，日域中的 15W 意味着 "离该月15号的最近一个平日。" 假如15号是星期六，那么 trigger 会在14号(星期五)触发，因为星期四比星期一（这个例子中是17号）离15号更近。（译者Unmi注：不会在17号触发的，如果是15W，可能会是在14号(15号是星期六)或者15号(15号是星期天)触发，也就是只能出现在邻近的一天，如果15号当天为平日直接就会当日执行）。W 只能用在指定的日域为单天，不能是范围或列表值。

# 井号

# 字符仅能用于周域中。它用于指定月份中的第几周的哪一天。例如，如果你指定周域的值为 6#3，它意思是某月的第三个周五 (6=星期五，#3意味着月份中的第三周)。另一个例子 2#1 意思是某月的第一个星期一 (2=星期一，#1意味着月份中的第一周)。注意，假如你指定 #5，然而月份中没有第 5 周，那么该月不会触发。



------------

我用的UE版本是:14.10.0.1024   操作如下:
1.在UE中使用Alt+C切换到列模式
2.点击编辑菜单栏上的 【列(L)】-->【右对齐(R)】
3.将光标移至第一行的末尾,然后按住Shift键,用鼠标点击最后一行的末尾。
4.再输入你想要的符号就行了。

------------

预研阶段--
需求阶段
设计阶段
编码阶段
测试阶段
发布阶段
参考资料
培训资料


------------

备份路径：G:\火狐
插件下载地址：http://seleniumhq.org/download
客户端：Selenium Client & WebDriver Language Bindings
服务端：Selenium Server (formerly the Selenium RC Server)

火狐：31.0 


------------

配置说明
维护表

------------

Quartz将Job保存在数据库中所需表的说明 (2012-01-19 11:38:03)转载▼
标签： quartz database it	分类： J2EE框架
http://blog.iqbon.com/doc/364.html   (将Quartz持久化到数据库的做法)

QRTZ_CALENDARS 以 Blob 类型存储 Quartz 的 Calendar 信息 
QRTZ_CRON_TRIGGERS 存储 Cron Trigger，包括 Cron表达式和时区信息 
QRTZ_FIRED_TRIGGERS 存储与已触发的 Trigger 相关的状态信息，以及相联 Job的执行信息 QRTZ_PAUSED_TRIGGER_GRPS 存储已暂停的 Trigger 组的信息 
QRTZ_SCHEDULER_STATE 存储少量的有关 Scheduler 的状态信息，和别的 Scheduler实例(假如是用于一个集群中) 
QRTZ_LOCKS 存储程序的悲观锁的信息(假如使用了悲观锁) 
QRTZ_JOB_DETAILS 存储每一个已配置的 Job 的详细信息 
QRTZ_JOB_LISTENERS 存储有关已配置的 JobListener 的信息 
QRTZ_SIMPLE_TRIGGERS 存储简单的Trigger，包括重复次数，间隔，以及已触的次数 
QRTZ_BLOG_TRIGGERS Trigger 作为 Blob 类型存储(用于 Quartz 用户用 JDBC创建他们自己定制的 Trigger 类型，JobStore 并不知道如何存储实例的时候) 
QRTZ_TRIGGER_LISTENERS 存储已配置的 TriggerListener 的信息 
QRTZ_TRIGGERS 存储已配置的 Trigger 的信息 
--------------------------------------------------------------------------------------------------

quartz 持久化数据库表格字段解释
建表,SQL语句在quartz-1.6.6\docs\dbTables文件夹中可以找到,介绍下主要的几张表： 
       表qrtz_job_details: 保存job详细信息,该表需要用户根据实际情况初始化 
       job_name:集群中job的名字,该名字用户自己可以随意定制,无强行要求 
       job_group:集群中job的所属组的名字,该名字用户自己随意定制,无强行要求 
       job_class_name:集群中个note job实现类的完全包名,quartz就是根据这个路径到classpath找到该job类 
       is_durable:是否持久化,把该属性设置为1，quartz会把job持久化到数据库中 
       job_data:一个blob字段，存放持久化job对象 

       表qrtz_triggers: 保存trigger信息 
       trigger_name: trigger的名字,该名字用户自己可以随意定制,无强行要求 
       trigger_group:trigger所属组的名字,该名字用户自己随意定制,无强行要求 
       job_name: qrtz_job_details表job_name的外键 
       job_group: qrtz_job_details表job_group的外键 
       trigger_state:当前trigger状态，设置为ACQUIRED,如果设置为WAITING,则job不会触发 
       trigger_cron:触发器类型,使用cron表达式 

       表qrtz_cron_triggers:存储cron表达式表 
       trigger_name: qrtz_triggers表trigger_name的外键 
       trigger_group: qrtz_triggers表trigger_group的外键 
       cron_expression:cron表达式 
       
       表qrtz_scheduler_state:存储集群中note实例信息，quartz会定时读取该表的信息判断集群中每个实例的当前状态 
       instance_name:之前配置文件中org.quartz.scheduler.instanceId配置的名字，就会写入该字段，如果设置为AUTO,quartz会根据物理机名和当前时间产生一个名字 
       last_checkin_time:上次检查时间 
       checkin_interval:检查间隔时间 

步骤4: 
 配置quartz.properties文件：
#调度标识名 集群中每一个实例都必须使用相同的名称 org.quartz.scheduler.instanceName = scheduler
#ID设置为自动获取 每一个必须不同 org.quartz.scheduler.instanceId = AUTO
#数据保存方式为持久化 org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
#数据库平台 org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.oracle.weblogic.WebLogicOracleDelegate #数据库别名 随便取org.quartz.jobStore.dataSource = myXADS
#表的前缀 org.quartz.jobStore.tablePrefix = QRTZ_
#设置为TRUE不会出现序列化非字符串类到 BLOB 时产生的类版本问题 org.quartz.jobStore.useProperties = true
#加入集群 org.quartz.jobStore.isClustered = true
#调度实例失效的检查时间间隔 org.quartz.jobStore.clusterCheckinInterval = 20000 
#容许的最大作业延长时间 org.quartz.jobStore.misfireThreshold = 60000
#ThreadPool 实现的类名 org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
#线程数量 org.quartz.threadPool.threadCount = 10
#线程优先级 org.quartz.threadPool.threadPriority = 5
#自创建父线程 org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true 
#设置数据源org.quartz.dataSource.myXADS.jndiURL = CT
#jbdi类名 org.quartz.dataSource.myXADS.java.naming.factory.initial = weblogic.jndi.WLInitialContextFactory #URLorg.quartz.dataSource.myXADS.java.naming.provider.url = t3://localhost:7001

【注】：在J2EE工程中如果想用数据库管理Quartz的相关信息，就一定要配置数据源，这是Quartz的要求。

------------

赵春峰 10:40:43
http://blog.sina.com.cn/s/blog_4f925fc30102e3zr.html
赵春峰 10:40:57
http://www.quartz-scheduler.org/documentation

------------

卸载jdk
安装jdk
卸载某个版本

------------

显示内容会包含下面几行信息，具体显示可能略有不同，比如版本号
rpm -qa |grep java
会列出你安装的JAVA    卸载
[oracle@orcl ~]$ rpm -qa |grep java
libgconf-java-2.12.4-6.el5
xmlrpc-javadoc-2.0.1-3jpp.1
java-1.4.2-gcj-compat-src-1.4.2.0-40jpp.115
glib-java-0.2.6-3.fc6
libgconf-java-2.12.4-6.el5
libglade-java-2.12.5-3.fc6
glib-java-0.2.6-3.fc6
java-1.6.0-openjdk-devel-1.6.0.0-1.2.b09.el5
cairo-java-1.0.5-3.fc6
libgnome-java-2.12.4-3.fc6
bsh-javadoc-1.3.0-9jpp.1
cairo-java-1.0.5-3.fc6
libgtk-java-2.8.7-3.el5
libgnome-java-2.12.4-3.fc6
java-1.4.2-gcj-compat-devel-1.4.2.0-40jpp.115
java-1.4.2-gcj-compat-devel-1.4.2.0-40jpp.115
libgtk-java-2.8.7-3.el5
gcc-java-4.1.2-46.el5
libglade-java-2.12.5-3.fc6
如果有依赖关系，提示无法卸载，使用rpm -e --nodeps 卸载就行了
没有直接删除的直接
rpm -e java-1.4.2-gcj-compat-1.4.2.0-40jpp.115
就可以了

------------

到http://www.oracle.com/technetwork/java/archive-139210.html 下载相应版本的JDK。建议下载rpm自解压可是的版本，这里我是下载jdk-7u15-linux-i586.rpm版本。 
1.	将jdk-7u15-linux-i586.rpm文件通过Xftp工具上传到linux系统下 /usr/rpm文件夹下，如果木有此文件夹，就创建。 
2.	在linux下，cd  /usr/rpm 进入到rpm 目录下，执行命令                         chmod 755 jdk-7u15-linux-i586.rpm 给文件赋予权限。 
3.	安装JDK：执行语句：rpm –ivh jdk-7u15-linux-i586.rpm 
4.	配置JDK环境变量：（在/目录下配置，使JDK在所有的用户中可用） 
4.1.	执行语句：vi /etc/profile.d/java.sh 
4.2.	export JAVA_HOME=/usr/java/jdk1.7.0_15 
4.3.	export JAVA_BIN=/usr/java/jdk1.7.0_15/bin 
4.4.	export PATH=$PATH:$JAVA_HOME/bin 
4.5.	export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar 
4.6.	export JAVA_HOME JAVA_BIN PATH CLASSPATH 
5.	保存，退出，重启。 
6.	检验JDK	是否安装成功以及显示它的路径： 
6.1.	执行命令：java –version 可以看到到版本 
6.2.	执行命令：javac –version 
6.3.	执行命令：echo $JAVA_HOME 
6.4.	执行命令：echo $JAVA_BIN 
6.5.	执行命令：echo $PATH 
6.6.	执行命令：echo $CLASSPATH 

7.	若之前自己装过JDK ，卸载rpm安装的jdk版本： 
7.1.	查看安装的JDK: （执行命令：rpm –qa|grep jdk） 

7.2.	卸载此JDK：（执行命令：rpm –e –nodeps jdk-1.7.0_15-fcs.i586） 

------------

可以试试
root用户登陆到系统，打开一个终端输入
# rpm -qa|grep gcj
显示内容会包含下面几行信息，具体显示可能略有不同，比如版本号
java-1.4.2-gcj-compat-1.4.2.0-40jpp.115
java-1.4.2-gcj-compat-devel-l.4.2.0-40jpp.115
java-1.4.2-gcj-compat-src-l.4.2.0-40jpp.115
卸载
# rpm -e java-1.4.2-gcj-compat-1.4.2.0-40jpp.115
# rpm -e java-1.4.2-gcj-compat-devel-l.4.2.0-40jpp.115
# rpm -e java-1.4.2-gcj-compat-src-l.4.2.0-40jpp.115

如果有依赖关系，提示无法卸载，使用rpm -e --nodeps 卸载就行了

------------

在Windows操作系统中，我们在启动一个tomcat服务器时，经常会发现8080端口已经被占用的错误，而我们又不知道如何停止这个tomcat服务器。

 

本文将通过命令来强行终止这个已经运行的tomcat进程如下：

 

1、首先查找到占用8080端口的进程号PID是多少

CMD>netstat -ano | findstr 8080

这个命令输出的最后一列表示占用8080端口的进程号是多少，假设为1234

 

2、kill掉这个进程

CMD>taskkill /F /PID 1234

 

这样8080端口就是释放了

------------

autoBig导出xml
html导出html
autoBig标签的元素
20140108

------------

	function report1_saveAsXml() {
		document.getElementById( "group_saveAs_frame").src = "${ctx}/ExportToXml";
	}

------------

function report1_saveAsHtml() {

		document.getElementById( "report1_saveAs_frame" ).src = "${ctx}/ExportToHtml";
	}	
	

------------

<report:autoBig name="report1" reportFileName="<%=report%>"
								    	       dbType="oracle"  
										dsName="ds1"    
                                                     			totalCountExp=""     
				                        			pageCount="50"      
				                        			cachePageNum="5"
				                        			funcBarLocation="bottom" 
										needPageMark="yes"
										generateParamForm="no"
										needScroll="yes"
									       scrollWidth="<%=ccc%>"
										params="<%=raqParam%>"
										exceptionPage="/reportJsp/errorPage.jsp"
										appletJarName="runqianReport4Applet.jar,dmGraphApplet.jar"
										pageMarkLabel=""
										firstPageLabel=""
							            		prevPageLabel=""
							            		nextPageLabel=""
							            		lastPageLabel=""
							            		scale="2"
	/>

------------

替换包

------------

三个



------------

命令
执行jar文件
ftp和ASCII
ftp命令

------------

ftp 22.188.20.184
lcd 切换本地目录
cd  切换远程目录
put  上传到远程目录
get 下载到本地目录


C:\Users\Administrator>ftp
ftp> open 122.193.19.141
220 Welcome , Please wait...
用户(122.193.19.141:(none)):用户名
331 User name okay, need password.
密码: 这让输入密码，可是我的只有光标闪烁不让输入任何东西，可是不输入密码又无法登录
我用的是win7自带的dos 请大家看一下怎么回事

------------

java -jar  statelog.jar

------------

FTP可用多种格式传输文件，通常由系统决定，大多数系统(包括UNIX系统)只有两种模式：文本模式和二进制模式。文本传输器使用ASCII字符，并由回车键和换行符分开，而二进制不用转换或格式化就可传字符，二进制模式比文本模式更快，并且可以传输所有ASCII值，所以系统管理员一般将FTP设置成二进制模式。  
  一般来说： 如果你用错误的模式传输你的图片，你将会无法看到图片，看到的会是乱码。 如果你用错误模式上传CGI脚本，那么就将无法运行你的脚本，会看到类似Server 500 Error的出错信息。  
  所以你必须使用正确的模式，图片和执行文件必须用BINARY模式，CGI脚本和普通HTML文件用ASCII模式上传.  
  ASCII 和BINARY模式区别：  
  用HTML 和文本编写的文件必须用ASCII模式上传，用BINARY模式上传会破坏文件，导致文件执行出错。  
  BINARY模式用来传送可执行文件，压缩文件，和图片文件。  
  如果你用ASCII模式传，会显示一堆乱码，你必须重新用BINARY模式传。  
  对于第二种情况，是因为有很多ftp服务器和客户端软件能自动识别文件类型，并采取相应的传输方式。  
  ftp是应用层协议，和具体操作系统无关 .  
  ASCII 模式和BINARY模式的区别是回车换行的处理，binary模式不对数据进行任何处理，asci模式将回车换行转换为本机的回车字符，比如Unix下是\n,Windows下是\r\n，Mac下是\r  
  ascii模式下会转换文件  
  不能说是不同系统对回车换行解释不同  
  而是不同的系统有不同的行结束符  
  unix系统下行结束符是一个字节，即十六进制的0A  
  而ms的系统是两个字节，即十六进制的0D0A  
  所以当你用ascii方式从unix的ftp server下载文件时(不管是二进制或者文本文件)，每检测到一个  
  字节是0A，就会自动插入一个0D，所以如果你的文件是二进制文件比如可执行文件、


       
  




------------

FTP命令是Internet用户使用最频繁的命令之一，不论是在DOS还是UNIX操作系统下使用FTP，都会遇到大量的FTP内部命令。熟悉并灵活应用FTP的内部命令，可以大大方便使用者，并收到事半功倍之效。

　　FTP的命令行格式为：ftp -v -d -i -n -g [主机名]，其中

　　-v显示远程服务器的所有响应信息；

　　-n限制ftp的自动登录，即不使用；

　　.n etrc文件；

　　-d使用调试方式；

　　-g取消全局文件名。

　　ftp使用的内部命令如下(中括号表示可选项): 

　　1.![cmd[args]]：在本地机中执行交互shell，exit回到ftp环境，如：!ls*.zip. 

　　2.$ macro-ame[args]：执行宏定义macro-name. 

　　3.account[password]：提供登录远程系统成功后访问系统资源所需的补充口令。

　　4.append local-file[remote-file]：将本地文件追加到远程系统主机，若未指定远程系统文件名，则使用本地文件名。

　　5.ascii：使用ascii类型传输方式。

　　6.bell：每个命令执行完毕后计算机响铃一次。

　　7.bin：使用二进制文件传输方式。

　　8.bye：退出ftp会话过程。

　　9.case：在使用mget时，将远程主机文件名中的大写转为小写字母。

　　10.cd remote-dir：进入远程主机目录。

　　11.cdup：进入远程主机目录的父目录。

　　12.chmod mode file-name：将远程主机文件file-name的存取方式设置为mode，如：chmod 777 a.out。

　　13.close：中断与远程服务器的ftp会话(与open对应)。

　　14.cr：使用asscii方式传输文件时，将回车换行转换为回行。

　　15.delete remote-file：删除远程主机文件。

　　16.debug[debug-value]：设置调试方式，显示发送至远程主机的每条命令，如：deb up 3，若设为0，表示取消debug。

　　17.dir[remote-dir][local-file]：显示远程主机目录，并将结果存入本地文件local-file。

　　18.disconnection：同close。

　　19.form format：将文件传输方式设置为format，缺省为file方式。

　　20.get remote-file[local-file]：将远程主机的文件remote-file传至本地硬盘的local-file。

　　21.glob：设置mdelete，mget，mput的文件名扩展，缺省时不扩展文件名，同命令行的-g参数。

　　22.hash：每传输1024字节，显示一个hash符号(#)。

　　23.help[cmd]：显示ftp内部命令cmd的帮助信息，如：help get。

　　24.idle[seconds]：将远程服务器的休眠计时器设为[seconds]秒。

　　25.image：设置二进制传输方式(同binary)。

　　26.lcd[dir]：将本地工作目录切换至dir。

　　27.ls[remote-dir][local-file]：显示远程目录remote-dir，并存入本地文件local-file。

　　28.macdef macro-name：定义一个宏，遇到macdef下的空行时，宏定义结束。

　　29.mdelete[remote-file]：删除远程主机文件。

　　30.mdir remote-files local-file：与dir类似，但可指定多个远程文件，如：mdir *.o.*.zipoutfile

　　31.mget remote-files：传输多个远程文件。

　　32.mkdir dir-name：在远程主机中建一目录。

　　33.mls remote-file local-file：同nlist，但可指定多个文件名。

　　34.mode[modename]：将文件传输方式设置为modename，缺省为stream方式。

　　35.modtime file-name：显示远程主机文件的最后修改时间。

　　36.mput local-file：将多个文件传输至远程主机。

　　37.newer file-name：如果远程机中file-name的修改时间比本地硬盘同名文件的时间更近，则重传该文件。

　　38.nlist[remote-dir][local-file]：显示远程主机目录的文件清单，并存入本地硬盘的local-file。

　　39.nmap[inpattern outpattern]：设置文件名映射机制，使得文件传输时，文件中的某些字符相互转换，如：nmap $1.$2.$3[$1，$2].[$2，$3]，则传输文件a1.a2.a3时，文件名变为a1，a2。该命令特别适用于远程主机为非UNIX机的情况。

　　40.ntrans[inchars[outchars]]：设置文件名字符的翻译机制，如ntrans 1R，则文件名LLL将变为RRR。

　　41.open host[port]：建立指定ftp服务器连接，可指定连接端口。

　　42.passive：进入被动传输方式。

　　43.prompt：设置多个文件传输时的交互提示。

　　44.proxy ftp-cmd：在次要控制连接中，执行一条ftp命令，该命令允许连接两个ftp服务器，以在两个服务器间传输文件。第一条ftp命令必须为open，以首先建立两个服务器间的连接。

　　45.put local-file[remote-file]：将本地文件local-file传送至远程主机。

　　46.pwd：显示远程主机的当前工作目录。

　　47.quit：同bye，退出ftp会话。

　　48.quote arg1，arg2...：将参数逐字发至远程ftp服务器，如：quote syst. 

　　49.recv remote-file[local-file]：同get。

　　50.reget remote-file[local-file]：类似于get，但若local-file存在，则从上次传输中断处续传。

　　51.rhelp[cmd-name]：请求获得远程主机的帮助。

　　52.rstatus[file-name]：若未指定文件名，则显示远程主机的状态，否则显示文件状态。

　　53.rename[from][to]：更改远程主机文件名。

　　54.reset：清除回答队列。

　　55.restart marker：从指定的标志marker处，重新开始get或put，如：restart 130。

　　56.rmdir dir-name：删除远程主机目录。

　　57.runique：设置文件名唯一性存储，若文件存在，则在原文件后加后缀..1，.2等。

　　58.send local-file[remote-file]：同put。

　　59.sendport：设置PORT命令的使用。

　　60.site arg1，arg2...：将参数作为SITE命令逐字发送至远程ftp主机。

　　61.size file-name：显示远程主机文件大小，如：site idle 7200。

　　62.status：显示当前ftp状态。

　　63.struct[struct-name]：将文件传输结构设置为struct-name，缺省时使用stream结构。

　　64.sunique：将远程主机文件名存储设置为唯一(与runique对应)。

　　65.system：显示远程主机的操作系统类型。

　　66.tenex：将文件传输类型设置为TENEX机的所需的类型。

　　67.tick：设置传输时的字节计数器。

　　68.trace：设置包跟踪。

　　69.type[type-name]：设置文件传输类型为type-name，缺省为ascii，如：type binary，设置二进制传输方式。

　　70.umask[newmask]：将远程服务器的缺省umask设置为newmask，如：umask 3。

　　71.user user-name[password][account]：向远程主机表明自己的身份，需要口令时，必须输入口令，如：user anonymous my@email。

　　72.verbose：同命令行的-v参数，即设置详尽报告方式，ftp服务器的所有响应都将显示给用户，缺省为on. 

　　73.?[cmd]：同help。

------------

was部署错误分析
启动was和查看进程
jar包冲突
was部署中出现过滤器错误
linux下常用命令
配置共享库
滚屏日志
缓存项目路径
模糊查询
查看服务器IO
打开文件过多问题
was一些日志的禁止
压缩文件
滚动查看日志
内容查找
awk
less命令
was设置虚拟机
linux文件乱码
进程命令aux

------------

修改web.xml
was错误标号意义

------------

部分更新
修改

------------


关于j2ee工程发布到was上后，部分更新，例修改web.xml配置文件不起作用的原因解析
在was中，应用的配置从config/cells/..目录下读取，而资源从/installedApps目录下读取，
因此单web.xml发生改变时候，只更新应用程序资源文件/installedApps目录是不起作用的，必须到
/WebSphere/AppServer/profiles/AppSrv01/config/cells/SHPAM028Cell01/applications下修改相应web.xml文件才能生效或者重新部署应用程序

------------

关于修改WebSphere应用的web.xml的问题（如：修改session-outtime ）
【@叫我小猫Frank】与你分享

　　在websphere中，如果我们直接修改我们应用程序底下的web.xml的话，在不重新打包部署的情况下，那么这次修改肯定会是不会起作用的。解决的方法是：

　　我们在不打包重新部署的情况下，不能只修改应用底下的web.xml，因为还有 “config/cells……” 目录，是用来存储WAS的配置文件的。应用分为2部分--资源和配置，资源包括类文件，引用的包，图片等；配置包括各个模块的部署描述符。在WAS中，应用的配置是从 “config/cells……” 目录下读取；而资源从 “/installedApps……” 目录下读取。应用导出只能导出上一次发布的版本。所以建议任何的更改应该打包重新发布应用。  

　　通常我们在Websphere下部署了一个java工程后，如果修改了web.xml文件，重新启动这个java工程发现Websphere并没有自动加载web.xml文件，即修改后的web.xml并不起作用，除非重新把这个java工程再部署一次，这需要花一些时间，如果是远程操作机器，上传整个jar包也是很慢的事情。

　 　其实这是因为Websphere下的配置文件通常有两份，一份在installedApps下，另一份在config下面，所以需要修改两个地方的web.xml文件后才能起效。这里以websphere6为例，两份配置文件的详细路径一般为

1、/opt/IBM/WebSphere/profiles/AppSrv01/installedApps/coshineNode01Cell/arms.ear

  ※ 其中coshineNode01Cell这个是机器名，arms.ear为项目名

2、/opt/IBM/WebSphere/profiles/AppSrv01/config/cells/coshineNode01Cell/applications/arms.ear

只要修改这两处的web.xml文件，重启应用就可以生效了。

------------

was错误编号

------------

SRVE
SRVE0011E: 非法参数异常：尝试写的字符数小于 0
Explanation	 尝试输出大小小于 0 的缓冲区。
Action	 仅写大小等于或大于 0 的缓冲区。
SRVE0014E: 未捕获到 service() 异常的根本原因 {0}：{1}
Explanation	 在 servlet 服务方法中抛出未捕获的异常。
Action	 根据根本原因改变。
SRVE0015E: 无法初始化 Web 应用程序 {0}
Explanation	 无法初始化消息中指定的 Web 应用程序。查看错误日志以获取更多详细信息。
Action	 查看错误日志以确定此问题的根本原因。
SRVE0016E: 非法参数异常：无效头格式
Explanation	 找到请求头的无效格式。
Action	 检查客户机头创建。
SRVE0021I: 已卸装 Servlet：{0}
Explanation	 在调用破坏方法之后，已卸装指定的 servlet。
Action	 无。
SRVE0031E: 非法参数异常：{0} 不是目录。
Explanation	 指定的路径不是目录。
Action	 确保目录存在或者您正在请求正确的目录。
SRVE0035E: WebAppSecurityCollaborator
Explanation	 WebAppSecurityCollaborator。
Action	 检查服务器日志以确定问题的根本原因。如果没有相关消息，或者它们对于解决问题没有帮助，请与 IBM 支持人员联系。
SRVE0041E: 非法参数异常：未找到引导程序文件
Explanation	 这是一个内部系统错误，而且可能是由于先前的故障导致的。
Action	 检查服务器日志以确定问题的根本原因。如果没有相关消息，或者它们对于解决问题没有帮助，请与 IBM 支持人员联系。
SRVE0042E: 非法参数异常：无效内容长度
Explanation	 这是一个内部系统错误，而且可能是由于先前的故障导致的。
Action	 检查服务器日志以确定问题的根本原因。如果没有相关消息，或者它们对于解决问题没有帮助，请与 IBM 支持人员联系。
SRVE0053E: 非法参数异常：无效日期格式
Explanation	 无效日期格式。
Action	 检查服务器日志以确定问题的根本原因。如果没有相关消息，或者它们对于解决问题没有帮助，请与 IBM 支持人员联系。
SRVE0055I: Servlet 等待毁坏超时已到期，将强制执行毁坏：{0}
Explanation	 等待超时后正在毁坏 servlet。
Action	 无。
SRVE0056E: 非法参数异常：不支持的标志
Explanation	 这是一个内部系统错误，而且可能是由于先前的故障导致的。
Action	 检查服务器日志以确定问题的根本原因。如果没有相关消息，或者它们对于解决问题没有帮助，请与 IBM 支持人员联系。
SRVE0058E: 未识别出由 servlet {0} 抛出的 destroy() 异常：{1}
Explanation	 无法毁坏指定的 servlet。
Action	 检查服务器日志以确定问题的根本原因。如果没有相关消息，或者它们对于解决问题没有帮助，请与 IBM 支持人员联系。
SRVE0060E: 无法绑定主机名［{0}］到 servletHost［{1}］
Explanation	 无法绑定指定的主机名到指定的 servlet 主机。
Action	 确保已正确指定了主机名并且已在 virtualhosts.xml 中指定了 servlet 主机。
SRVE0061E: 非法参数异常：指定的目录无效：{0}
Explanation	 指定的目录无效。
Action	 检查目录规范以查看错误。
SRVE0066I: 正在等待 servlet 完成服务请求：{0}
Explanation	 Servlet 仍在处理该请求。请等待请求完成，然后再调用破坏。
Action	 无。
SRVE0068E: 未捕获到 servlet {0} 的其中一个服务方法中抛出的异常。抛出的异常：{1}
Explanation	 未捕获到该 servlet 的其中一个服务方法中抛出的异常。
Action	 检查服务器日志以确定问题的根本原因。如果没有相关消息，或者它们对于解决问题没有帮助，请与 IBM 支持人员联系。
SRVE0070E: 初始化下一个请求时出错
Explanation	 内部 Web 容器错误。
Action	 收集服务器日志并联系 IBM 服务。
SRVE0080E: 无效内容长度
Explanation	 内部服务器错误。
Action	 收集日志并联系 IBM 服务。
SRVE0086E: 非法参数异常：缺少资源引导程序属性
Explanation	 内部服务器错误。
Action	 收集日志并联系 IBM 服务。
SRVE0097I: 已初始化 Servlet 卸装：{0}
Explanation	 正在从服务卸装指定的 servlet。
Action	 无。
SRVE0100E: 未识别出由 servlet {0} 抛出的 init() 异常：{1}
Explanation	 无法初始化指定的 servlet。
Action	 确保 servlet 类文件在应用程序类路径上可用。
SRVE0103E: 非法参数异常：脚本名必须是 URI 的第一部分
Explanation	 这是一个内部系统错误，而且可能是由于先前的故障导致的。
Action	 检查服务器日志以确定问题的根本原因。如果没有相关消息，或者它们对于解决问题没有帮助，请与 IBM 支持人员联系。
SRVE0105E: Session.releaseSession() 中发生异常
Explanation	 发布会话时发生的问题。
Action	 检查服务器日志以确定问题的根本原因。如果没有相关消息，或者它们对于解决问题没有帮助，请与 IBM 支持人员联系。
SRVE0108E: 非法参数异常：缺少标志值
Explanation	 缺少标志值。
Action	 检查服务器日志以确定问题的根本原因。如果没有相关消息，或者它们对于解决问题没有帮助，请与 IBM 支持人员联系。
SRVE0109E: 非法参数异常：实例化的 ObjectPool 无效。
Explanation	 这是一个内部系统错误，而且可能是由于先前的故障导致的。
Action	 检查服务器日志以确定问题的根本原因。如果没有相关消息，或者它们对于解决问题没有帮助，请与 IBM 支持人员联系。
SRVE0115E: 调用错误报告程序 {0} 时发生错误
Explanation	 调用指定的错误报告程序时发生的问题。
Action	 检查服务器日志以确定问题的根本原因。如果没有相关消息，或者它们对于解决问题没有帮助，请与 IBM 支持人员联系。
SRVE0120E: IO 错误 {0}
Explanation	 遇到 IO 错误。
Action	 根据报告的根本原因改变。
SRVE0121E: 非法参数异常：尝试写的字节数小于 0
Explanation	 尝试输出大小小于 0 的缓冲区。
Action	 仅写大小等于或大于 0 的缓冲区。
SRVE0126E: 失效异常：{0} 已创建
Explanation	 这是一个内部系统错误，而且可能是由于先前的故障导致的。
Action	 检查服务器日志以确定问题的根本原因。如果没有相关消息，或者它们对于解决问题没有帮助，请与 IBM 支持人员联系。
SRVE0133E: 解析参数时发生错误。{0}
Explanation	 解析 servlet 参数时遇到问题。
Action	 检查 web.xml 文件中的参数定义。
SRVE0138E: postInvoke 安全性异常
Explanation	 请求处理期间遇到安全性问题。
Action	 检查服务器日志以确定问题的根本原因。如果没有相关消息，或者它们对于解决问题没有帮助，请与 IBM 支持人员联系。
SRVE0139E: 安全性 preInvoke {0} 中发生异常
Explanation	 请求处理期间遇到安全性问题。
Action	 根据根本原因改变。
SRVE0140E: 无法实例化安全性协作程序 {0}
Explanation	 内部服务器错误。
Action	 收集日志并联系 IBM 服务。
SRVE0155E: 无法装入 encoding.properties 文件 {0}
Explanation	 无法装入指定的文件。
Action	 确保指定的文件存在。
SRVE0156E: 无法装入 converter.properties 文件 {0}
Explanation	 无法装入指定的文件。
Action	 确保指定的文件存在。
SRVE0157E: 第一次写入输出流／写程序之后调用了 setBufferSize()
Explanation	 在已落实了响应后尝试设置响应缓冲区大小。
Action	 除去 setBufferSize() 调用或者在响应落实之前将其移动到某个位置。
SRVE0160E: 回滚 UserTransaction 时发生异常：{0}
Explanation	 回滚指定的用户事务时遇到问题。
Action	 检查服务器日志以确定问题的根本原因。如果没有相关消息，或者它们对于解决问题没有帮助，请与 IBM 支持人员联系。
SRVE0161I: IBM WebSphere Application Server － Web 容器。Copyright IBM Corp. 1998-2006
Explanation	 应用程序服务器标识。
Action	 无。
SRVE0162I: Servlet 规范级别：2.4
Explanation	 应用程序服务器支持的 servlet 规范级别。
Action	 无。
SRVE0163I: 支持的 JSP 规范级别：Level: 2.0
Explanation	 应用程序服务器支持的 JSP 规范级别。
Action	 无。
SRVE0164E: Web 应用程序 {0} 使用上下文根 {1}，它已由 Web 应用程序 {2} 使用。将不会装入 Web 应用程序 {3}。
Explanation	 在同一虚拟主机上的两个 Web 应用程序共享同一上下文根。
Action	 更改其中一个 Web 应用程序的上下文根或将一个 Web 应用程序移动到不同的虚拟主机上。
SRVE0169I: 正在装入 Web 模块：{0}。
Explanation	 WebModule 正在启动，将可用于服务。
Action	 无。
SRVE0180I: [{0}] [{1}] [Servlet.LOG]: {2}
Explanation	 参考消息 {2} 是通过带有上下文根的 {1} 应用程序 {0} 中的 ServletContext.log 记录的。
Action	 无。
SRVE0181I: [{0}] [{1}] [Servlet.LOG]: {2}: {3}
Explanation	 参考消息 {2} 是通过带有上下文根的 {1} 和堆栈跟踪 {3} 的应用程序 {0} 中的 ServletContext.log 记录的。
Action	 无。
SRVE0185E: 处理请求时出错：
Explanation	 处理请求时发生的异常。
Action	 查看消息以确定问题的根本原因。
SRVE0186E: 将数据写入流之后，无法设置缓冲区大小
Explanation	 已将某些数据写入流，因此无法再控制缓冲区大小
Action	 写数据之前先设置缓冲区大小，或设置大小之前先复位缓冲区。
SRVE0187E: 检查您的类路径，以确保 servlet 需要的所有类都存在。
Explanation	 未找到必需类
Action	 确保您的类路径反映您可以访问的所有类
SRVE0188E: 类 {0} 未实现 servlet
Explanation	 提及的类需要实现 javax.servlet.Servlet，或扩展某个 javax.servlet.GenericServlet 或 javax.servlet.http.HttpServlet
Action	 提及的类需要实现 javax.servlet.Servlet，或扩展某个 javax.servlet.GenericServlet 或 javax.servlet.http.HttpServlet
SRVE0189E: 完成请求时发生错误
Explanation	 这是正在完成请求时发生的错误。发生此错误，可能是因为应用程序服务器中的通信错误，但应该不会影响对该请求的处理。
Action	 无。
SRVE0190E: 找不到文件：{0}
Explanation	 未找到提及的文件。
Action	 确保提及的文件在适当的位置。
SRVE0194E: 包括的 servlet 非法
Explanation	 在包括的 servlet/JSP 中无法执行尝试的操作（请参阅 Servlet 规范）
Action	 无。
SRVE0196E: 缺少必需的初始化参数：{0}
Explanation	 具有提及名称的参数没有值。这是个必需参数。
Action	 请为提及的参数提供值。
SRVE0199E: 已获取了 OutputStream
Explanation	 在已获取 ServletResponse OutputStream 之后，应用程序请求了 PrintWriter。
Action	 查看应用程序以确定是否获取了 PrintWriter 和 OuputStream。
SRVE0200E: Servlet [{0}]：找不到必需类 － {1}
Explanation	 Servlet 找不到为请求提供服务所需要的必需类。
Action	 无。
SRVE0201E: Servlet [{0}]：不是 servlet 类
Explanation	 提及的类需要实现 javax.servlet.Servlet，或扩展某个 javax.servlet.GenericServlet 或 javax.servlet.http.HttpServlet
Action	 提及的类需要实现 javax.servlet.Servlet，或扩展某个 javax.servlet.GenericServlet 或 javax.servlet.http.HttpServlet
SRVE0202E: Servlet [{0}]：找到 {1}，但已损坏：

Explanation	 找到的 servlet 类是损坏的
Action	 请重新编译该类并请重试。
SRVE0203E: Servlet [{0}]：找到 {1}，但缺少另一个必需类。

Explanation	 未找到必需类
Action	 确保将所有必需类都放在表示类路径的 folders/Jars 中
SRVE0204E: 尚未定义主机 {0}
Explanation	 未找到虚拟主机
Action	 请检查 virtualhosts.xml 文件中的虚拟主机配置，或通过管理控制台检查
SRVE0205E: 尚未定义端口 {1} 上的主机 {0}
Explanation	 找不到定义的虚拟主机来处理此请求 URI。
Action	 无。
SRVE0206E: 此错误通常意味着 servlet 最初是用服务器找不到的类来编译的。

Explanation	 无。
Action	 请用放在类路径中的所有必需组件重新编译 servlet。
SRVE0207E: 未捕捉到 servlet 抛出的初始化异常
Explanation	 初始化期间目标抛出异常，用户代码未捕获到此异常。
Action	 请说明目标代码中的异常。
SRVE0208E: 转换不受支持
Explanation	 代码尝试执行非法头值转换。例如，从整数转换到数据，而此转换是不可能的
Action	 无。
SRVE0209E: 已获取了写程序
Explanation	 已获取了此响应的写程序。请使用现有写程序
Action	 查看应用程序以确定是否获取了 PrintWriter 和 OuputStream。
SRVE0210I: 通过仅使用应用程序的运行时类路径中的类重新编译 servlet，可以调试此问题

Explanation	 无。
Action	 无。
SRVE0213E: 未找到类
Explanation	 内部异常。
Action	 与 WebSphere 支持人员联系以获取进一步帮助。
SRVE0214E: 计数无效
Explanation	 内部异常。
Action	 与 WebSphere 支持人员联系以获取进一步帮助。
SRVE0215E: 非 HTTP 请求或响应
Explanation	 已定义的 servlet 链只可以处理 HTTP 请求。
Action	 无。
SRVE0216E: post 主体包含的字节比内容长度指定的字节要少
Explanation	 入局请求可能已损坏。
Action	 无。
SRVE0217E: {0} 不是有效类
Explanation	 Web 容器尝试装入内部实现类时发生此错误。
Action	 检查原始 WAS 类路径，确保它未被修改。
SRVE0218E: 禁用：Web 安全性异常
Explanation	 请求尝试访问禁用资源。
Action	 请确保进行请求的实体有必需特权。
SRVE0219I: 未报告错误
Explanation	 调用了 DefaultErrorReport，但找不到错误。
Action	 查看应用程序以确定问题的原因。
SRVE0220I: 包含的错误 －
Explanation	 导致问题的错误。
Action	 无。
SRVE0221E: 不允许提供 JSP 文件的内容。
Explanation	 不能提供 JSP 文件的内容
Action	 无。
SRVE0223I: StackTrace：
Explanation	 无。
Action	 无。
SRVE0224I: 目标 Servlet：
Explanation	 无。
Action	 无。
SRVE0225I: 根本错误 －
Explanation	 无。
Action	 无。
SRVE0227I: 1. 检查类是否驻留在正确的软件包目录中。

Explanation	 资源的软件包名称与已编译类文件的软件包不匹配。
Action	 无。
SRVE0228I: 2. 检查在服务器中已使用正确的大小写和标准软件包定义类名。

Explanation	 无。
Action	 无。
SRVE0229I: 3. 检查已使用二进制传送方式将类传送到文件系统。

Explanation	 无。
Action	 无。
SRVE0230I: 4. 检查使用正确的大小写（如类定义中所定义）编译类。

Explanation	 无。
Action	 无。
SRVE0231E: 5. 检查在编译类文件后未重命名它。
Explanation	 无
Action	 无
SRVE0233E: 错误报告
Explanation	 无
Action	 无
SRVE0234I: 应用程序类路径=[{0}]
Explanation	 无
Action	 无
SRVE0235E: [{0}] 报告了错误
Explanation	 请参阅报告的错误。
Action	 无。
SRVE0236E: 在 starting() 调用中调用初始化协调程序时出错
Explanation	 查看 FFDC 日志以获取更多有关错误的详细信息
Action	 查看 FFDC 日志以获取更多有关错误的详细信息
SRVE0237E: 在 started() 调用中调用初始化协调程序时出错
Explanation	 查看 FFDC 日志以获取更多有关错误的详细信息
Action	 查看 FFDC 日志以获取更多有关错误的详细信息
SRVE0238E: 资源路径应该以斜杠开头
Explanation	 无。
Action	 请在路径前以斜杠开头，并请重试。
SRVE0239I: 成功注册扩展工厂［{0}］。
Explanation	 无。
Action	 无。
SRVE0240I: 扩展工厂［{0}］已与模式［{1}］关联。
Explanation	 无。
Action	 无。
SRVE0241I: 正在使用 [{0}] 作为 getTempDirectory() 中的服务器根。
Explanation	 无。
Action	 无。
SRVE0242I: [{2}] [{1}] [{0}]: 初始化成功。
Explanation	 目标资源的 init() 方法执行成功，并且已将目标放入服务。
Action	 无。
SRVE0243I: 收割线程时间间隔 [{0}] 和不活动限制 [{1}] 已启动。
Explanation	 无。
Action	 无。
SRVE0244I: 收割线程正在卸装 servlet：[{0}]。
Explanation	 如果 servlet 的不活动时间比收割不活动限制要长，则收割线程除去此 servlet。
Action	 无。
SRVE0245I: 收割线程正在除去 servlet [{0}] 的映射 [{0}]。
Explanation	 如果 jsps 和其他扩展的映射的不活动时间比收割不活动限制要长，则收割线程除去此映射。
Action	 无。
SRVE0246I: 收割线程正在毁坏 servlet：[{0}]。
Explanation	 无。
Action	 无。
SRVE0247E: 收割线程执行期间出错。
Explanation	 处理收割线程时发生异常。
Action	 收割处理只是垃圾回收的形式。
SRVE0248I: 当前正在处理请求。最多等待 60 秒，然后强制执行过滤器破坏。
Explanation	 无。
Action	 无。
SRVE0249W: 应用程序 {0} 已请求了 SyncToOSThread，但用于 SyncToOSThread 的服务器未启用
Explanation	 SyncToOSThread 将 J2EE 角色身份与 OS 线程同步，这意味着请求持续期间 OS 线程标识变成等于 J2EE 角色身份。此消息表明，在应用程序已配置为使用 SyncToOSThread 功能时，安装有此应用程序的服务器未配置为支持 SyncToOSThread 功能。
Action	 如果所讨论的服务器需要 SyncToOSThread 功能，请参阅信息中心，以获取如何启用服务器的 SyncToOSThread 的描述。
SRVE0250I: Web 模块 {0} 已绑定到 {1}。
Explanation	 指定的 Web 模块已关联到提到的虚拟主机，而且可通过此虚拟主机的任何主机／端口组合进行访问。
Action	 无。
SRVE0251W: 未使用 Web 容器下配置的线程池。
Explanation	 Web 容器上存在线程池配置。对此配置项的任何更改将不会导致系统的更改。
Action	 无。
SRVE0252W: 已检测到传输和链！已将传输更改为使用新的模型。请使用迁移实用程序将传输迁移到新的模型。Web 容器下的线程池配置将不与这些传输协同使用。
Explanation	 传输已更改为使用通道链。请参阅信息中心，以查看有关通道链，以及如何将现有传输迁移为基本通道链的信息。Web 容器下的线程池配置将不与这些传输协同使用。
Action	 使用迁移实用程序将您的配置模型从传输迁移到新的通道链。
SRVE0253I: [{2}] [{1}] [{0}]：毁坏成功。
Explanation	 成功执行了目标资源的 destroy() 方法，并且已经从服务中除去了目标。
Action	 无。
SRVE0254E: 未能设置请求字符编码：[{0}]。
Explanation	 在请求中指定了无效的请求编码。
Action	 查看日志以确定指定的编码是否是有效的编码。
SRVE0255E: 尚未定义要处理 {0} 的 Web 组／虚拟主机。
Explanation	 找不到要处理请求的 Web 组（Web 模块）或虚拟主机。
Action	 确保已定义并已部署 Web 组和虚拟主机。
SRVE0256E: 尚未初始化 Web 容器。
Explanation	 在安装应用程序之前未初始化 Web 容器。
Action	 无。
SRVE0257E: 不允许按星号进行过滤。
Explanation	 由于禁止按类名处理所有 Servlet 是由 com.ibm.ws.webcontainer.disallowserveservletsbyclassname 定制属性处理的，因此不允许按星号进行过滤。
Action	 将 com.ibm.ws.webcontainer.disallowserveservletsbyclassname 设置为 true 以便不允许按类名处理所有类。
SRVE0258E: Servlet 位于阻塞列表中：{0}
Explanation	 请求的 servlet 位于定制属性 com.ibm.ws.webcontainer.donotservebyclassname 所提供的阻塞列表中。
Action	 无。
SRVE0259W: 查询字符串中的字符无效。
Explanation	 查询字符串中存在无效字符，已忽略该字符。
Action	 不需要用户操作。
SRVE0261E: 尚未定义注释帮助程序 {0}。
Explanation	 尚未定义指定的注释帮助程序。
Action	 请检查指定的注释帮助程序的定义并在必要时进行添加。
SRVE0262E: 注释帮助程序 {0} 的类型不是 com.ibm.wsspi.webcontainer.AnnotationHelper。
Explanation	 指定的注释帮助程序的类型不是期望的类型。
Action	 请检查注释帮助程序实现类并修正该类。
SRVE0263E: 无法实例化注释帮助程序 {0}。
Explanation	 无法实例化指定的注释帮助程序。
Action	 请检查异常日志以获取无法实例化注释帮助程序的原因。
SRVE0264E: 在同一个类中找到了多个 @PostConstruct 注释：{0}
Explanation	 要放入服务中的类包含使用同一个类中的 @PostConstruct 进行注释的多个方法。
Action	 请更正类然后重新启动应用程序。
SRVE0265E: 在同一个类中找到了多个 @PreDestroy 注释：{0}
Explanation	 要放入服务中的类包含使用同一个类中的 @PreDestroy 进行注释的多个方法。
Action	 请更正类然后重新启动应用程序。
SRVE0266E: 使用 @PostConstruct 进行注释的方法不能带任何参数。类：{0}，方法：{1}
Explanation	 要放入服务中的类包含使用同一个类中的 @PostConstruct 进行注释且带有多个参数的方法。
Action	 请更正类然后重新启动应用程序。
SRVE0267E: 使用 @PreDestroy 进行注释的方法不能带任何参数。类：{0}，方法：{1}
Explanation	 要放入服务中的类包含使用 @PreDestroy 进行注释且带有多个参数的方法。
Action	 请更正类然后重新启动应用程序。
SRVE0268E: 使用 @PostConstruct 进行注释的方法必须具有空的返回类型。类：{0}，方法：{1}
Explanation	 要放入服务中的类包含使用 @PostConstruct 进行注释且不具有空的返回类型的方法。
Action	 请更正类然后重新启动应用程序。
SRVE0269E: 使用 @PreDestroy 进行注释的方法必须具有空的返回类型。类：{0}，方法：{1}
Explanation	 要放入服务中的类包含使用@PreDestroy 进行注释且不具有空的返回类型的方法。
Action	 请更正类然后重新启动应用程序。
SRVE0270E: 使用 @PostConstruct 进行注释的方法不能抛出异常。对象将不会放入服务。类：{0}，方法：{1}
Explanation	 类包含使用 @PostConstruct 进行注释且抛出异常的方法。
Action	 请更正类然后重新启动应用程序。
SRVE0271E: 使用 @PreDestroy 进行注释的方法不能抛出异常。类：{0}，方法：{1}
Explanation	 类包含使用 @PreDestroy 进行注释且抛出异常。
Action	 请更正类然后重新启动应用程序。
SRVE0272E: 使用 @PostConstruct 进行注释的方法不能声明为静态。类：{0}，方法：{1}
Explanation	 类包含使用@PostConstruct 进行注释且声明为静态的方法。
Action	 请更正类然后重新启动应用程序。
SRVE0273E: 使用 @PreDestroy 进行注释的方法不能声明为静态。类：{0}，方法：{1}
Explanation	 类包含使用 @PreDestroy 进行注释且声明为静态的方法。
Action	 请更正类然后重新启动应用程序。
SRVE0274E: 无法对类 {1} 中的注释方法 {0} 设置访问权
{2}
Explanation	 Java 安全管理器正在防止注释方法设置为可访问。
Action	 请更正该方法然后重新启动应用程序或更改 Java 安全管理器设置。
SRVE0275E: Servlet 由于无效的 @PostConstruct 方法而不可用。
Explanation	 Servlet 不可用，因为使用 @PostConstruct 进行注释的方法抛出了异常。
Action	 请更正 Servlet 类然后重新启动应用程序。
SRVE0276E: 过滤器由于无效的 @PostConstruct 方法而不可用。
Explanation	 过滤器不可用，因为使用 @PostConstruct 进行注释的方法抛出了异常。
Action	 请更正过滤器类然后重新启动应用程序。

------------

启动was和查看进程
解决端口被占用
查看硬盘使用情况

------------

ps -ef | grep java
sqlplus tmrpt/tmrpt@oraAATM1
topas
rm * 删除
hostname
查看监听
lsnrctl status
cp /tmrpt/ojdbc6.jar /WebSphere/AppServerb/ojdbc6.jar

一、oracle在aix上连接
   1.su - oracle  //进入oracle用户；
   2.export ORACLE_SID=house  //指定实例，多个实例的情况下；
   3.sqlplus log
   4.conn /as sysdba
cronble
sh
cd /oracle/product/11g/rdbmss/;
find . -mmin +60 -name "arch_*.arc" -exec rm {} \;
最好的建议只使用root的crontab 然后需要别的用户的crontab的时候使用su 过去执行
例如 0 * * * * * su - monitor -c 'ontape -s L 0'

绝对路径  

ar/spool/mail/root mail路径   

cronble crontest.cron
cronble -l

创建cron脚本
第一步：写cron脚本文件,命名为crontest.cron。
15,30,45,59 * * * * echo "xgmtest....." >> xgmtest.txt  表示，每隔15分钟，执行打印一次命令 
第二步：添加定时任务。执行命令 “crontab crontest.cron”。搞定 
第三步："crontab -l" 查看定时任务是否成功或者检测ar/spool/cron下是否生成对应cron脚本  


目录

启动was命令
cd /WebSphere/AppServer/bin
sh startManager.sh
cd /WebSphere/AppServer/profiles/AppSrv01/bin
sh startNode.sh
sh startServer.sh server1

停was
cd /WebSphere/AppServer/profiles/AppSrv01/bin
sh stopServer.sh server1
sh stopNode.sh
cd /WebSphere/AppServer/bin
sh stopManager.sh

杀掉进程
 ps -ef | grep java
谢晖 17:05:53
  kill -9 


登陆oracle
su - oracle进入oracle
sqlplus tmrpt/tmrpt 进入特定的用户


出现

节点 SHPAM028Cell01Node01 上的 TMRPT-1_0_0-TEST_war 扩展尚未完成。控制台将不会在节点 SHPAM028Cell01Node01 服务器 server1 上启动该应用程序。
等待其扩展完成后在启动项目就ok了





------------

#killall -9 httpd
#service httpd start

查看被占用的端口
 netstat -Aan|grep 
找到该端口连接对应的PCB/ADDR和连接的协议类型。
2. 如果是tcp连接，则rmsock  tcpcb
如果是udp连接，则rmsock  inpcb
下面我们以telnet服务所使用的23号端口为例，说明该方法：
#netstat -Aan|grep 23
f1000200019ce398 tcp 0 0 *.23 *.* LISTEN
可以看到PCB/ADDR为f1000200019ce398，且协议类型为tcp。
#rmsock f1000200019ce398 tcpcb
The socket 0x19ce008 is being held by proccess 185006 (inetd).
命令报告该端口正在被inetd进程使用，PID为185006。


------------------------------------------------------------------------------------------------------------------------------------------
wait情况下，可能是硬盘下内存已经满了。在此期间要禁止生成分析日志，

1. 打开管理控制台，依次选择：服务器 > 应用服务器 > 需要更改的服务器名称 > 进程定义 > 环境条目 
2. 新建如下的2个条目： 
Name Value 
IBM_HEAPDUMP_OUTOFMEMORY false 
IBM_JAVADUMP_OUTOFMEMORY false 
3. 保存配置的更改，重新启动WAS 


------------

增加提示bash
 查看硬盘使用情况：df -m
 nmon 之后 c m d分别查看cpu memory disk读写
 用pwd查看完整目录
 
 在某个文件夹下查找文件
 find /tmrpt -name "*.sql"
 
 ls -lat查看所有文件的权限、大小、所属用户等。

 
 

------------

当配置管理模块中的父类最后加载后报错
错误
Note1
测试jar包位置

------------

Error 500: javax.servlet.ServletException: Filter [encodingFilter]: org.springframework.web.filter.CharacterEncodingFilter was found, but is missing another required class. 

------------

JspCoreException: JSPG0049E: /report/test.jsp failed to compile : JSPG0091E: An error occurred at line: 1 in the file: /report/test.jspJSPG0093E: Generated servlet error from file: /report/test.jsp /WebSphere/AppServer/profiles/AppSrv01/temp/SHPAM028Cell01Node01/server1/TMRPT-1_0_0-TEST_war/TMRPT-1.0.0-TEST.war/report/_test.java : 7 : Only a type can be imported. org.springframework.web.filter.DelegatingFilterProxy resolves to a packageJSPG0091E: An error occurred at line: 16 in the file: /report/test.jspJSPG0093E: Generated servlet error from file: /report/test.jsp /WebSphere/AppServer/profiles/AppSrv01/temp/SHPAM028Cell01Node01/server1/TMRPT-1_0_0-TEST_war/TMRPT-1.0.0-TEST.war/report/_test.java : 90 : DelegatingFilterProxy cannot be resolved to a typeJSPG0091E: An error occurred at line: 18 in the file: /report/test.jspJSPG0093E: Generated servlet error from file: /report/test.jsp /WebSphere/AppServer/profiles/AppSrv01/temp/SHPAM028Cell01Node01/server1/TMRPT-1_0_0-TEST_war/TMRPT-1.0.0-TEST.war/report/_test.java : 93 : DelegatingFilterProxy cannot be resolved to a type	at com.ibm.ws.jsp.webcontainerext.AbstractJSPExtensionServletWrapper.translateJsp(AbstractJSPExtensionServletWrapper.java:562)	at com.ibm.ws.jsp.webcontainerext.AbstractJSPExtensionServletWrapper._checkForTranslation(AbstractJSPExtensionServletWrapper.java:430)	at com.ibm.ws.jsp.webcontainerext.AbstractJSPExtensionServletWrapper.checkForTranslation(AbstractJSPExtensionServletWrapper.java:283)	at com.ibm.ws.jsp.webcontainerext.AbstractJSPExtensionProcessor.findWrapper(AbstractJSPExtensionProcessor.java:498)	at com.ibm.ws.jsp.webcontainerext.AbstractJSPExtensionProcessor.getServletWrapper(AbstractJSPExtensionProcessor.java:338)	at com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:965)	at com.ibm.ws.webcontainer.webapp.WebApp.handleRequest(WebApp.java:3704)	at com.ibm.ws.webcontainer.webapp.WebGroup.handleRequest(WebGroup.java:304)	at com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:962)	at com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1662)	at com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:195)	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:452)	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:511)	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:305)	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:276)	at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.java:214)	at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113)	at com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:165)	at com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217)	at com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161)	at com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138)	at com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204)	at com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775)	at com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905)	at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1659)
 
Error 500: javax.servlet.ServletException: Filter [encodingFilter]: Could not find required filter class - org.springframework.web.filter.CharacterEncodingFilter.class 

------------

1.
“类装入和更新检测”中的“类装入器顺序”得选“类已经装入并且是父类装入器”
 “管理模块”中的“类装入器顺序”加载顺序设置为“先使用本地类装入器（父类最后）”
 oracle jdbc driver先不设
 在服务里面把那个关于类加载顺序的配置删除后测试
 结果。
 
 
 AM_PARENT_ID
 
 VARCHAR2(255 CHAR)
 
 exp tmrpt1/tmrpt1@orau11g file=/tmrpt/resource_tmrpt.sql full =y;


------------

<%@ page import="org.codehaus.jackson.map.ObjectMapper" %>
org.springframework.orm.hibernate3.SessionFactoryUtils.convertHibernateAccessException
<%--
  Created by IntelliJ IDEA.
  User: guozp
  Date: 13-9-25
  Time: 下午7:38
  To change this template use File | Settings | File Templates.
--%>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<html>
<head>
    <title></title>
</head>
<body>
       <h1>
            <%=ObjectMapper.class.getProtectionDomain().getCodeSource().getLocation().getPath()
        %>   </h1>
<h1><%=ObjectMapper.class.getClassLoader()%></h1>
</body>
</html>

------------

错误解决

------------

王利军(412303627)  15:37:27
http://frightanic.com/software-development/solution-to-error-404-srve0190e-on-websphere-6-1/#comment-318
看看这个，应该是需要给websphere上进行一个参数配置 
好的我先去配置一下试试，
王利军(412303627)  15:40:40
http://www.blogjava.net/yoda/archive/2010/07/01/324702.html
这个说的比较详细 ，
实施看看 。
试试


com.ibm.ws.webcontainer.invokeFiltersCompatibility=

true
or perhaps

com.ibm.ws.webcontainer.modifiedFileNotFoundExceptionBehavior=true
http://pic.dhe.ibm.com/infocenter/wasinfo/v8r0/index.jsp?topic=%2Fcom.ibm.websphere.base.iseries.doc%2Finfo%2Fiseries%2Fae%2Frweb_custom_props.html

com.ibm.ws.webcontainer.mapFiltersToAsterisk=true
com.ibm.ws.webcontainer.removetrailingservletpathslash=true
com.ibm.ws.webcontainer.invokeFiltersCompatibility=true
- See more at: http://frightanic.com/software-development/solution-to-error-404-srve0190e-on-websphere-6-1/#comment-318





------------

启动停止服务
连接oracle
常用命令
杀进程
vi编辑
查看版本
查找内容
cat

------------


linux
下启动停止
WebSphere  

1.以root用户身份登陆，进入websphere安装目录的bin目录下，
# cd /opt/WebSphere/AppServer/bin(此路径根据WebSphere具体安装路径确定)
//启动服务[root@localhost bin]$ 
 ./startServer.sh server1 
//停止服务

[root@localhost bin]$ ./stopServer.sh server1 

[root@localhost bin]$ 
如果是集群可能的路径是
/opt/WebSphere/AppServer/bin 

//启动服务
[root@localhost bin]$  ./startManager.sh 

//停止服务
[root@localhost bin]$ ./stopManager.sh 
如果启动时出现这样的错误信息：

ADMU0118E: 日至文件无法写到位置
           /opt/WebSphere/AppServer/logs/server1/startServer.log

请使用   -logfile 

指定不同的位置
ADMU3100I: 

正在从服务器读取配置

server1 

ADMU0111E: 

程序退出，带有错误。

           com.ibm.ws.process.exception.InvalidFileException:  

           PROC0007E: Some files required by the process or the process 

           definition were unaccessable.  Please check the standard in, out, 

           and error file redirects and directories.  Process could not be 

           created. 

ADMU0211I: 

在文件
           /opt/WebSphere/AppServer/logs/server1/startServer.log 

中可看到错误的详细信息

ADMU1211I: 

要获取故障的全部跟踪，使用

 -trace 

选项可能是登陆的用户没有足够的权限，需要使用有权限的用户启动。
2.服务启动后进入管理控制台

http://localhost:9090/admin进入
/WebSphere/AppServer/firststeps/
使用命令
[root@tc10 firststeps]# ./firststeps.sh

可以打开

WAS

第一步。

  

  


------------

1、通过本机从windows下可以操作AIX及oracle
2、先CMD到命令窗口模式（即DOS模式）
3、telnet 数据库服务器IP
4、显示连接信息(login:)要求输入用户,一般AIX用户名为root相当于windows下的administrator一样。
5、输入密码（问客户）
6、连接进入后。常用操作命令为
	ls	列目录。相当于dos下的dir命令
	cd	进入目录。同于DOS
	sh	执行批处理命令文件。以.sh结尾的文件。相当于windows下的.bat文件。
7、（连接oracle）需要先切换到oracle用户。（必须的，root用户不能操作oracle数据库）
	su  -  oracle
8、lsnrctl start     （启动监听。一般是启动的，可以看到提示信息中有）
9、sqlplus  / nolog	进入SQL模式。
10、sqlplus 'sys' as sysdba;	以管理员身份登录oracle
11、shutdown immediate;  快速关闭oracle
12、如果因故不能正常关闭（超过30分钟还未关闭的）。先执行以下命令。
	 startup force;
	稍等后，可以看到相关提示信息。再次出现命令提示符，说明完成。
13、再执行。shutdown immediate;   根据提示信息可以看到，已经正常关闭了。再次出现命令提示符，说明完成。
14、正常关闭后，再执行startup;启动oracle.   看到mounted 表明已启动。
15、如果正常启动就可以了。关闭退出。结束。退出一直用exit直到退回到你的windows命令窗口即结束


cd ..
quit

------------

1、通过本机从windows下可以操作AIX及oracle
2、先CMD到命令窗口模式（即DOS模式）
3、telnet 数据库服务器IP
4、显示连接信息(login:)要求输入用户,一般AIX用户名为root相当于windows下的administrator一样。
5、输入密码（问客户）
6、连接进入后。常用操作命令为
	ls	列目录。相当于dos下的dir命令
	cd	进入目录。同于DOS
	sh	执行批处理命令文件。以.sh结尾的文件。相当于windows下的.bat文件。
7、（连接oracle）需要先切换到oracle用户。（必须的，root用户不能操作oracle数据库）
	su  -  oracle
8、lsnrctl start     （启动监听。一般是启动的，可以看到提示信息中有）
9、sqlplus  / nolog	进入SQL模式。
10、sqlplus 'sys' as sysdba;	以管理员身份登录oracle
11、shutdown immediate;  快速关闭oracle
12、如果因故不能正常关闭（超过30分钟还未关闭的）。先执行以下命令。
	 startup force;
	稍等后，可以看到相关提示信息。再次出现命令提示符，说明完成。
13、再执行。shutdown immediate;   根据提示信息可以看到，已经正常关闭了。再次出现命令提示符，说明完成。
14、正常关闭后，再执行startup;启动oracle.   看到mounted 表明已启动。
15、如果正常启动就可以了。关闭退出。结束。退出一直用exit直到退回到你的windows命令窗口即结束


cd ..
quit
高德宝 17:29:44
1232
辛宝磊 17:30:17
1. 常用命令操作
 #prtconf  --AIX服务器物理结构信息
 #lscfg -l hdisk0 --列出设备信息
 #uname -a  --主机基本安装信息
 #oslevel -s  --查看操作系统版本
 #lspv    --查看磁盘信息
 #bootlist -m normal -0 --查看系统启动盘设定
 #bootlist -m normal hdisk1 --修改启动顺序（以hdisk1启动）
 #lssrc -g[s/t] tcpip  --查看服务（TCP/IP相关）
 #startsrc -g nfs  --开启nfs组服务
 #stopsrc -s inetd  --关闭网络服务
 #refresh -s inetd  --刷新服务
 #cat /etc/services  --查看服务端口
 #cat /etc/.init.state --查看系统运行级别
 #lsitab init   --查看系统默认启动级别
 #shutdown -Fr  --F强制关机，r重启
 #uptime    --系统启动时间
 #ipcs -ma   --查看共享内存信息
 #ps -fu oracle  --查看用户进程信息
 #smitty chgsys  --修改内核参数
 
2. AIX 克隆盘（用于创建克隆盘的磁盘不能属于任何卷组）
 2.1 使用smitty进行克隆
  以此进入smitty -> software installation and maintenance -> altername disk installation -> clone the rootvg to an altername disk 进行操作
 2.2 使用 mksysb 创建克隆盘
  #mksysb -i /usr/sys/rootvg.bk --创建 mksysb 备份文件
  #smitty alt_mksysb  --使用smitty进行克隆
  或者
  #alt_disk_mksysb -m /usr/sys/rootvg.bk -P "all" -d "hdisk0" --手工备份映像
 2.3 使用命令进行克隆
  #alt_disk_copy -d hdisk0 --将rootvg克隆到hdisk0
  #alt_rootvg_op -X old_rootvg --清除原始的rootvg（old_rotvg）
  #alt_rootvg_op -X altinst_rootvg --清除原始的rootvg（altinst_rootvg）
 2.4 克隆盘的查看（克隆卷组altinst_rootvg不能使用LVM命令）
  #alt_rootvg_op -W -d hdisk1 --唤醒克隆盘，此后即可对克隆盘进行修改,但不能继续执行引导操作
  #alt_rootvg_op -S -t hdisk1 --使其再次休眠
  #alt_rootvg_op -v old_rootvg -d hdisk1 --重新设置卷组名为old_rootvg
 2.5 AIX 克隆升级系统
  检查磁盘，确定rootvg是否包含2块磁盘
  #lspv
  拆除镜像，并将hdisk1从rootvg中去掉
  #unmirrorvg rootvg hdisk1
  #reducevg rootvg hdisk1
  查看系统启动顺序
  #bootlist -m normal -o
  创建rootvg克隆盘
  #alt_disk_copy -d hdisk1
  查看并修改系统启动顺序
  #bootlist -m normal -o
  #bootlist -m normal hdisk0 --此处设置为以前的
  执行AIX系统升级包（存储在/usr/sys/inst.images）
  #install_all_updates -d /usr/sys/inst.images
  重启系统
  #shutdown -Fr  --F强制关机，r重启
  如果系统顺利启动并运行于新版本，则删除克隆盘
  #alt_rootvg_op -X altinst_rootvg
  #lspv
  如果系统没有运行于新版本甚至无法启动，则使用克隆盘
  #bootlist -m normal -o hdisk1
  #bootlist -m normal -o
  重启系统
  #shutdown -Fr
  删除原来的rootvg卷组，hdisk1成为新的rootvg成员磁盘，hdisk0置为空
  #lspv
  #alt_rootvg_op -X old_rootvg
  
  3. 关于软件的安装和卸载(xlC.rte)
 3.1 查看当前安装软件的状态
  #lslpp -f xlC.rte
  或者
  #lslpp -l | grep xlC.rte
 3.2 清除之前安装失败的软件残余
  #installp -C --清除所有安装失败的软件残余
 3.3 安装软件包
  #installp -acpX -d /temp/sys/xlC.rte --安装预览
  #installp -avX -d /temp/sys/xlC.rte --以applied的方式安装
  #installp -cgX all --提交系统中所有处于应用状态的更新软件
 3.4 删除已成功安装的软件
  #installp -ugp -V2 xlC.rte --预览删除
  #installp -u xlC.rte  --直接删除
 3.5 列出光盘上可安装的文件内容
  #installp -L -d /dev/cd0
 3.6 查看某软件的技术级别
  #lslpp -l xlC.rte
4. AIX 网络设定
 4.1 常用命令
  #lsdev -Cc adapter  --查看适配器
  #lsdev -Cc if   --查看网络适配器
  #smitty chgenet   --使用smity配置以太网
  #smitty chgtok   --使用smity配置令牌环网
  #ifconfig -a   --列出所有已分配IP的网络接口
  #ifconfig en1   --列出en1网络接口/网络接口加回系统
  #ifconfig en0 up  --激活en0接口
  #ifconfig en0 down  --关闭en0接口
  #ifconfig en0 delete  --删除en0接口配置
  #ifconfig en0 detach  --断开en0接口
  #ifconfig en0 192.168.1.143 netmask 255.255.255.0 up --激活同时赋予IP地址
  #ifconfig en0 192.168.1.143 netmask 255.255.255.0 alias --将IP及掩码别名绑定到en0（重启系统后失效）
 4.2 使用smitty配置网络接口TCP/IP
  #smitty tcoip -> minimum configuration & startup -> available network interfaces
  
5. 用户、组、文件权限相关
 5.1 用户相关
  #mkuser oracle  --创建用户
  $passwd    --修改自己用户密码
  #passwd oracle  --修改指定用户密码
  #chuser rlogin=true oracle --设置oracle用户可远程访问
  #chuser groups=dba oracle --将用户oracle加到dba组
  #lsuser oracle  --列出oracle用户属性
  #rmuser oracle  --删除用户oracle（只删除用户信息）
  #rmuser -p oracle --删除用户oracle（删除用户所有信息）
  #who    --查看用户
  #whoami    --查看用户
  #who -r    --系统运行级别
  $chsh    --修改用户shell
  #last root console | more   --查看root用户从控制台登录和退出的相关信息
  #last oracle | more    --查看oracle从任意位置的登录和退出的相关信息
 5.2 组相关
  #mkgroup oinstall  --创建用户组
  #mkgroup -a oinstall --创建管理型用户组
 5.3 文件权限相关
  #chmod u+x backup.sh --授予用户对文件的执行权限
  
6. AIX设备、日志相关
 6.1 常用命令
  #ls -alt /dev   --查看所有设备
  #lsdev -C    --列出定制库设备信息
  #lsdev -P | more  --列出预定义库设备信息
  #cfgmgr     --扫描并配置设备
  #cfgmgr -l scsi0  --配置指定的设备
  #cfgmgr -i /usr/sys/inst.images --扫描并自动安装设备
  #lspv     --查看磁盘设备
  #lspv -p hdisk0 | more --查看物理磁盘物理分区
  #lsdev -Cc tape   --查看磁带设备信息
  #lsattr -El rmt0  --查看磁带设备rmt0配置信息
  #lsattr -l rmt0 -D  --查看磁带设备默认属性值
  #lsattr -l rmt0 -E  --查看磁带设备当前属性值
  #lsattr -El tty0 -a speed --查看设备指定属性当前值
 6.2 日志相关
  #/usr/lib/errdemon  --重启系统错误守候进程
  #/usr/lib/errdemon -l --查看错误相关属性
  #errpt     --显示到目前的所有错误信息
  #errpt -a    --错误详细信息
  #errpt -a -s 1102043810 --显示指定时间之前的错误信息（2010年11月02日04点38分）
  #errpt -aj 864D2CE3 | more  --显示指定错误号的详细信息
  #errclear -d S 0  --删除所有软件类错误
  #errclear 0    --删除所有信息
  #diag -d sysplanar0 -v -e   --查看指定设备的硬件错误信息
  
  
  7. AIX任务调度相关
 #crontab -l
 50 23 * * 6 /home/oracle/rman.sh
 每周6的23点50进行rman备份
8. AIX存储相关
 8.1 常用命令
  #cat /etc/filesystems --查看文件系统分布
  #mount     --查看文件系统和逻辑卷对应关系
  #lsfs test    --查看文件系统属性
 8.2 LVM存储管理流程
  8.2.1 物理卷相关
   #shutdown -F   --关机添加磁盘
   #lspv     --查看是否识别物理卷
    或者手动识别，并强制设置为物理卷
    #lspv
    #cfgmgr
    #lspv
    #chdev -l hdisk1 -a pv = yes --强制修改为物理卷
   #chpv -v r hdisk2  --设置为不可用
   #chpv -v a hdisk2  --设置为可用
   #mklv -y lv_test datavg 10 hdisk2 --创建逻辑卷
   #mklv -T O -y lv_redo1 datavg 1  --创建逻辑卷（裸设备）oracle redo 1个PP在卷组datavg上
   #chpv -a n hdisk2  --关闭物理卷可分配权
   #chpv -a y hdisk2  --开启物理卷可分配权
   #rmdev -l hdisk2  --删除磁盘设备
   #rmdev -l hdisk2 -d  --彻底删除磁盘设备
   #lspv hdisk2   --查看物理盘属性
   #lsdev -C -c disk  --查看物理盘属性
   #lscfg     --查看物理盘属性
   #lspv -M hdisk2   --查看物理卷上物理分区分配情况
  8.2.2 卷组相关
   #lsvg    --查看卷组属性
   #lsvg -o   --查看激活的卷组属性
   #lsvg -p   --列出卷组中物理卷信息
   #lsvg -l datavg  --列出卷组中逻辑卷信息
   #lspv    --查看是否存在可用物理卷
   #smitty mkvg  --使用smitty创建卷组
    #mkvg -y 'test' -s'4' hdisk0 hdisk1 hdisk2  --手动创建PP大小为4M不自动激活的卷组test
   #reducevg rootvg hdisk1  --删除卷组中的物理卷，只有逐个删除物理卷才可删除卷组
   #extendvg test hdisk3  --添加磁盘到卷组
   #reorgvg test fslv00  --重组卷组（test）中的逻辑卷（fslv00），重组前，卷组必须处于激活状态，且必须有一个空闲分区，不会重组条带化后的逻辑卷物理分区。
   #varyonvg datavg --激活卷组
   #varyoffvg datavg --关闭卷组
   #varyonvg -f datavg --强制激活卷组
   #exportvg test  --导出卷组（除rootvg，且已关闭的卷组）
   #importvg -y test hdsiak12 --导入卷组
   #mirrorvg -c 3 datavg --卷组镜像（3重镜像）
   #lsvg -l datavg  --查看卷组中逻辑卷信息
   #镜像卷组中成员物理卷替换
    #unmirrorvg datavg hdisk3 --假设hdisk3出现问题
    #reducevg datavg hdisk3  
    #rmdev -l hdisk3 -d
    #cfgmgr
    #extendvg datavg hdisk7  --使用hdisk7替换hdisk3
   #镜像根卷组（rootvg）
    #extendvg rootvg hdisk1    --添加物理卷到卷组
    #mirrorvg rootvg hdisk1    --镜像到物理卷一份
    #bosboot -ad /dev/hdisk1   --在镜像盘上创建启动映像
    #bootlist -m normal hdisk0 hdisk1 
    #bootlist -m normal -o
    #shutdown -Fr      --重启系统，关闭rootvg卷组的quorum
   #替换卷组中的物理卷
    #lsvg -p datavg      --确定卷组中成员磁盘
    #extendvg datavg hdisk3    --添加物理盘，注：源盘的已用物理分区数要小于或等于目标盘中未用的物理分区数
     #lspv hdisk2 | grep "USED PPs"  --查看源盘的已用物理分区数
     #lspv hdisk3 | grep "FREE PPs"  --查看目标盘的未用物理分区数
    #migratepv hdisk2 hdisk3   --物理卷（hdisk2）复制迁移到hdisk3
    #lspv -M hdisk2      --确定原物理卷hdisk2是否已经为空
    #reducevg datavg hdisk2    --从卷组中剔除物理卷
  8.2.3 逻辑卷相关
   #smitty mklv  --smitty创建逻辑卷
    #mklv -y lv1 -c 2 rootvg 10  --在卷组rootvg中创建逻辑卷lv1，其拥有10个逻辑分区采用2镜像，以20个物理分区来匹配这10个逻辑分区。
   #rmlv lv1   --删除逻辑卷
   #smitty rmlv  --smitty删除逻辑卷
   #逻辑卷物理空间占有大小=逻辑分区数*PP数*逻辑卷镜像数
   #extendlv lv1 10 --为逻辑卷lv1增加10个逻辑分区（逻辑卷扩容）
    #smitty extendlv --逻辑卷扩容
   #chfs -a size=-100M /db  --文件系统/db缩减100M
   #lslv lv_system  --查看具体逻辑卷信息
   #smitty lvsc  --修改逻辑卷属性
   #smitty mklvcopy --增加逻辑卷镜像副本
    #smitty rmlvcopy --减少逻辑卷镜像副本
   #mklv -y'lv_data1' -t'jfs2' 'S2M' testvg 10 hdsiak0 hdisk1 hdisk2 lv_data1  --创建条带化逻辑卷lv_data1，条带尺寸为2M，使用3块物理盘
    #smitty mklv   --创建条带化逻辑卷
   #cplv -v datavg -y lv1 oldlv1  --逻辑卷迁移，将逻辑卷oldlv1复制到卷组datavg上的逻辑卷lv1中，需注意二者的大小
    #smitty cplv  --使用smitty逻辑卷迁移
   #lslv lv1 | grep COPIES   --查看逻辑卷lv1的镜像数
   #splitlvcopy -y newlv1 lv1 2 --分离镜像逻辑卷，逻辑卷lv1只保留2份副本，原来的一份逻辑卷被分离为newlv1逻辑卷，注：分离式应卸载文件系统使逻辑卷处于关闭状态
   #syncvg -p hdisk04 hdisk05  --同步物理卷hdisk04和hdisk05上的逻辑卷副本
   #syncvg -v datavg    --同步卷组datavg上的所有镜像副本
   #lspv -l hdisk0  --查看物理卷中逻辑卷属性
 8.3 换页空间相关(配置文件:/etc/swapspaces)
  #lsps -a -c   --查看换页空间属性
  #lsps -s   --查看换页空间属性
  #mkps -a -n -s20 rootvg  --创建换页空间（在rootvg上创建一个新的20个PP大小的换页空间，自动激活，一般均在rootvg中）
   #smitty mkps
  #swapoff /dev/paging00  --不激活换页空间的物理卷paging00
  #swapon /dev/paging00  --激活换页空间的物理卷paging00
  #chps -s 1 hd6    --换页空间添加逻辑分区（1个）
  #chps -d 1 hd6    --换页空间减少逻辑分区（1个）
  #lsps -a     --查看所有分页空间
  #删除换页空间
   #swapoff /dev/paging00 --去活
   #rmps paging00   --删除换页空间
9. AIX 文件系统(配置文件：/etc/filesystems)
 9.1 常用命令
  #mount      --查看文件系统
   #smitty fs     --操作文件系统
  #lsfs | grep lv_striped  --查看指定文件系统
  #fuser -xc /tmp /hacmp.out --查看文件系统中文件占用情况
 9.2 创建文件系统 
  #crfs -v jfs2 -g rootvg -a size=10M -m /test   --创建文件系统test，类型为jfs2，属于卷组rootvg，大小为10M，挂载点为/test
  #crfs -v jfs2 -g rootvg -a size=10M -p ro -m /test1  --创建文件系统test(只读)，类型为jfs2，属于卷组rootvg，大小为10M，挂载点为/test
 9.3 挂载文件系统
  #mount /test
  或者，修改文件/etc/filesystems中对应条目 mount=automatic[自动挂载]
  #mount -rv cdrfs /dev/cd0 /mnt  --挂载光盘
  #umount /mnt      --卸载光盘
 9.4 卸载/删除文件系统
  #fuser -ku /test  --杀掉文件系统/test占用进程
  #umount test   --卸载文件系统/test
  #rmfs /test    --删除文件系统/test，会删除对应的逻辑卷
 9.5 文件系统容量管理
  #df -m        --查看文件系统容量
  #du /usr | sort -r -n    --显示/usr文件系统中文件和目录所占磁盘块数，并按磁盘块数升序排序
  #chfs -a size=+20M /test   --增加20M空间容量（需注意有空闲PP）
  #chfs -a size=-20M /test   --减少20M空间容量
   #smitty chjfs
 9.6 文件系统一致性管理
  #fsck -p /dev/fslv00    --检查文件系统并进行错误修复（文件系统未挂载，且可读取对应的逻辑卷）
  #fsck  /dev/fslv00     --检查文件系统完整性（文件系统未挂载，且可读取对应的逻辑卷）
  #snapshot -o snapfrom=/db -o size 500M  --创建文件系统/db的外部快照，大小为500M
  #snapshot -q /db       --查看/db的快照设置
 9.7 文件系统快照相关
  #mkdir -p /home/oracle/db_snap          --创建快照挂载点
  #mount -v jfs2 -o snapshot /dev/fslv02 /home/oracle/db_snap   --将文件系统/db的快照挂载到其他目录
  #df -g /home/oracle/db_snap           --查看快照文件系统的空间使用
  
  10. AIX 备份恢复
 10.1 rootvg卷组备份
  #mksysb '-m' '-i' '-X' /dev/rmt0 --备份rootvg到第一块磁带（-e 排除文件;-i 自动生成/image.data;-m 生成映像文件;-X 需要时扩展/tmp）
   #smitty mksysb
    #备份文件排除
   #编辑文件/etc/exclude.rootvg
   #mksysb -e /dev/rmt0
  
  恢复
  采用磁带备份引导->进入系统恢复界面
 
 10.2 用户卷组备份（非rootvg卷组）
 注意：卷组必须处于激活状，文件系统必须处于挂载状。
  #savevg -if /dev/rmt0 datavg  --备份用户卷组到磁带
   #smitty savevg
  #备份文件排除
   #编辑文件/etc/exclude.datavg
   #savevg -if /dev/rmt0 datavg
  
  恢复卷组
  #savevg -f '/datavg.backup' '-v' '-i' '-m' '-X' datavg --备份卷组datavg到/datavg.backup
  #listvgbackup -l -f '/datavg.backup'     --查看备份内容
  #restvg -q -f '/datavg.backup' -P '2' hdisk7 hdisk8 hdisk9  --恢复备份到新的卷组（由3块新盘组成）
   #smitty -> remake a volume group
   
  恢复卷组中文件
  #restore -x -d -v -q -f '/datavg.backup' ./data/testfile01  --从备份恢复指定文件
  
 10.3 文件系统备份
  #cd /db/oracle/product
  #find .-depth | backup -i -f /dev/rmt0  --备份/db/oracl e/product中所有文件和目录(相对目录备份，恢复时需切换到相应目录)
  #backup -f /db/backup.file -'0' -u /db  --完全备份文件系统/db
   #smitty backup
  恢复
  #restore -rvqf /dev/rmt0     --从磁带恢复文件系统
  #restore -xdvqf /dev/rmt0 /dir/mydirectory --从备份恢复一个特定目录
  #restore -xvqf /dev/rmt0 /dir/myfile  --从备份恢复一个特定文件
  
 10.4 其他备份恢复
  #tar -cvf /dev/rmt0 /db/oracle    --把/db/oracle备份到磁带上
  #tar -tvf /dev/rmt0 | more     --查看磁带上备份文件内容
  #tar -xvf /dev/rmt0 /db/oracle    --把磁带上的备份恢复到/db/oracle目录
  #tar -xvf /dev/rmt0 /db/oracle/admin/orcl/pfile/init.ora --用备份文件替换当前文件
  #tar -xvf /dev/rmt0 /db/oracle/admin/orcl/pfile/init.ora --用备份文件替换当前文件
  
  #find /db/oracle -print | cpio -ov > /dev/rmt0    --备份指定目录下的文件和目录到磁带
  #cpio -itv < /dev/rmt0 | more        --查看备份内容
  #cd /db/oracle
  #cpio -idmv < /dev/rmt0          --恢复磁带上的文件及目录
  #cpio -idmv < /dev/rmt0 "/db/oracle/admin/orcl/pfile/init.ora" --恢复指定文件
  
  #dd if=/dev/control01.ctl f=/backup/control01.bak   --裸设备备份及恢复
  
  #pax -wvf /dev/rmt0           --将当前目录及文件复制到磁带
  #pax -wvf /dev/rmt0 -x pax /db/db2 /db/oracle    --复制指定文件到磁带
  #pax -vf /dev/rmt0 -x pax         --列出磁带内容
  
  #cd /db/db2
  #find . -depth | backup -i -f /dev/rmt0
  #cd /db/db2
  #find . -print | cpio -o -c -v -B > /dev/rmt0    --备份指定目录及下级目录到磁带
  
 10.5 增量备份
 注：备份量级：0-9
  #backup -0 -u -f /dev/rmt0 /db/db2       --0级增量备份带磁带（全备份）
  
11. 磁带操作
 #cd /dev
 #ls -alt rmt*  --查看磁带设备文件
 #lsattr -El rmt0 --查看特定磁带属性
 #tctl -f /dev/rmt0 status --获取磁带机rmt0的状态
 #tctl -f /dev/rmt0 rewind --使磁带回到头部
 #tctl -f /dev/rmt0 erase --删除磁带内容
 #tctl -f /dev/rmt0 fsf 3 --使磁带跳过备份前3个片段
 #tctl -f /dev/rmt0 offline --弹出磁带
 #tcopy /dev/rmt0 /dev/rmt0.1 --复制磁带内容（rmt0.1 -> rmt0）
 #tcopy /dev/rmt0    --查看磁带内容
 
 示例恢复系统备份中的文件（/etc/hosts.equiv）
 #tctl -f /dev/rmt0 rewind     --跳到磁带头
 #restore -T -d -v -q -s4 -f /dev/rmt0.1  --跳过前三部分,查看备份内容
 #tctl -f /dev/rmt0 rewind     --跳到磁带头
 #ls -alt /etc/hosts.equiv     --查看是否文件存在
 #cd /
 #restore -X -d -v -q -s4 -f /dev/rmt0.1 ./etc/hosts.equiv --恢复文件到原始位置
12. AIX性能调整
 #lsps -a    --查看内存
 #svmon -G    --查看内存
 #svmon -U oracle  --查看指定用户内存使用
 #ps v 4784366   --查看具体进程资源使用情况
 #iostat -A 1 5   --查看异步IO（AIO）情况
 #vmstat 2 30   --查看CPU在IO资源消耗
 #pstat -a|grep aio  --查看异步IO服务器数（aioserver）
 #mount -o cio /db  --使文件系统采用CIO（缓冲读写）
 
 #vmstat 2 30   --查看系统内存分页情况
 #vmstat hdisk0 hdisk1 2 5
 
 #iostat 2 10   --查看CPU、IO、磁盘读写情况
 #iostat -d hdisk0 2 10
 
 #sar -u -P 0,1 2 10  --查看1和2号CPU信息
 #sar -b 2 20   --查看块设备磁盘读写和磁盘缓冲读写信息
 #sar -d 2 5    --查看磁盘使用和等待信息


------------

启动was命令
cd /WebSphere/AppServer/bin
sh startManager.sh
cd /WebSphere/AppServer/profiles/AppSrv01/bin
sh startNode.sh
sh startServer.sh server1

停was
cd /WebSphere/AppServer/profiles/AppSrv01/bin
sh stopServer.sh server1
sh stopNode.sh
cd /WebSphere/AppServer/bin
sh stopManager.sh

杀掉进程
 ps -ef | grep java
谢晖 17:05:53
  kill -9 


登陆oracle
su - oracle进入oracle
sqlplus tmrpt/tmrpt 进入特定的用户


------------

一、Unix编辑器概述
编辑器是使用计算机的重要工具之一，在各种操作系统中，编辑器都是必不可少的部件。Unix及其相似的ix操作系统系列中，为方便各种用户在各个不同的环境中使用，提供了一系列的ex编辑器，包括 ex, edit,ed 和vi.其中ex,edit,ed都是行编辑器，现在已很少有人使用，Unix提供他们的原因是考虑到满足各种用户特别是某些终端用户的需要。

值得庆幸的是，Unix提供了全屏幕的Vi编辑器，这使我们的工作轻松不少。不少DOS用户抱怨Vi编辑器不象DOS下的编辑器如edit那么好用，这是因为Vi考虑到各种用户的需要，没有使用某些通用的编辑键（在各个不同的终端机上他们的定义是不同的，在某些终端机上甚至没有这些键）。而是采用状态切换的方法，但这只是习惯的问题，一旦你熟练的使用上了vi你就会觉得它其实也很好用。虽然 Vi采用了状态切换的方法，但电脑的硬件及操作系统多种多样，某些电脑的键盘上没有特定的几个功能键！那麽不就有某些功能不能用了？这个问题在 Unix 系统上也一样，几乎各大电脑厂商都有自己的Unix 系统，而 vi 的操作方法也会随之有点出入。这里我们采用 PC 的键盘来说明 vi 的操作，但在具体的环境中还要参考相应的资料，这一点是值得注意的。

二、Vi入门

（一）、进入vi

在系统提示字符(如$、#)下敲入vi ＜档案名称＞，vi 可以自动帮你载入所要编辑的文件或是开启一个新文件（如果该文件不存在或缺少文件名）。进入 vi 后萤幕左方会出现波浪符号，凡是列首有该符号就代表此列目前是空的。

(二）、两种模式

如上所述，vi存在两种模式：指令模式和输入模式。在指令模式下输入的按键将做为指令来处理：如输入a，vi即认为是在当前位置插入字符。而在输入模式下，vi则把输入的按键当作插入的字符来处理。指令模式切换到输入模式只需键入相应的输入命令即可（如a,A），而要从输入模式切换到指令模式，则需在输入模式下键入ESC键，如果不晓得现在是处於什麽模式，可以多按几次 [ESC]，系统如发出哔哔声就表示已处于指令模式下了。

付：有指令模式进入输入模式的指令：

新增 (append)

a ：从光标所在位置後面开始新增资料，光标後的资料随新增资料向後移动。

A： 从光标所在列最後面的地方开始新增资料。

插入 (insert)

i： 从光标所在位置前面开始插入资料，光标後的资料随新增资料向後移动。

I ：从光标所在列的第一个非空白字元前面开始插入资料。

开始 (open)

o ：在光标所在列下新增一列并进入输入模式。

O: 在光标所在列上方新增一列并进入输入模式。

（三）、退出vi

在指令模式下键入:q,:q!,:wq或:x(注意:号），就会退出vi。其中:wq和:x是存盘退出，而:q是直接退出，如果文件已有新的变化，vi会提示你保存文件而:q命令也会失效，这时你可以用:w命令保存文件后再用:q退出，或用:wq或:x命令退出，如果你不想保存改变后的文件，你就需要用:q!命令，这个命令将不保存文件而直接退出vi。

（四）、基本编辑

配合一般键盘上的功能键，像是方向键、[Insert] 、[Delete] 等等，现在你应该已经可以利用 vi 来编辑文件了。当然 vi 还提供其他许许多多功能让文字的处理更为方便。

何谓编辑？一般认为是文字的新增、修改以及删除，甚至包括文字区块的搬移、复制等等。先这里介绍 vi的如何做删除与修改。（注意：在 vi 的原始观念里，输入跟编辑是两码子事。编辑是在指令模式下操作的，先利用指令移动光标来定位要进行编辑的地方，然後才下指令做编辑。）

删除与修改文件的命令：

x： 删除光标所在字符。

dd ：删除光标所在的列。

r ：修改光标所在字元，r 後接著要修正的字符。

R： 进入取替换状态，新增文字会覆盖原先文字，直到按 [ESC] 回到指令模式下为止。

s： 删除光标所在字元，并进入输入模式。

S： 删除光标所在的列，并进入输入模式。

其实呢，在PC上根本没有这麽麻烦！输入跟编辑都可以在输入模式下完成。例如要删除字元，直接按[Delete] 不就得了。而插入状态与取代状态可以直接用 [Insert] 切换，犯不著用什麽指令模式的编辑指令。不过就如前面所提到的，这些指令几乎是每台终端机都能用，而不是仅仅在 PC 上。
在指令模式下移动光标的基本指令是 h, j, k, l 。想来各位现在也应该能猜到只要直接用 PC 的方向键就可以了，而且无论在指令模式或输入模式下都可以。多容易不是。
当然 PC 键盘也有不足之处。有个很好用的指令 u 可以恢复被删除的文字，而 U 指令则可以恢复光标所在列的所有改变。这与某些电脑上的 [Undo] 按键功能相同。
三、附件：vi详细指令表
（一）、基本编辑指令：
新增 (append)

a ：从光标所在位置後面开始新增资料，光标後的资料随新增资料向後移动。

A： 从光标所在列最後面的地方开始新增资料。

插入 (insert)

i： 从光标所在位置前面开始插入资料，光标後的资料随新增资料向後移动。

I ：从光标所在列的第一个非空白字元前面开始插入资料。

开始 (open)

o ：在光标所在列下新增一列并进入输入模式。

O: 在光标所在列上方新增一列并进入输入模式。

x： 删除光标所在字符。

dd ：删除光标所在的列。

r ：修改光标所在字元，r 後接著要修正的字符。

R： 进入取替换状态，新增文字会覆盖原先文字，直到按 [ESC] 回到指令模式下为止。

s： 删除光标所在字元，并进入输入模式。

S： 删除光标所在的列，并进入输入模式。

（二）、光标移动指令：
由於许多编辑工作是藉由光标来定位，所以 vi 提供许多移动光标的方式，这个我们列
几张简表来说明（这些当然是指令模式下的指令）：

指令 说明  功能键 
0 移动到光标所在列的最前面 [Home]
$  移动到光标所在列的最後面 [End]
[CTRL][d] 向下半页  [PageDown]
[CTRL][f] 向下一页 
[CTRL][u] 向上半页 
[CTRL][b] 向上一页 [PageUp]

指令 说明
H 移动到视窗的第一列
M 移动到视窗的中间列
L 移动到视窗的最後列 
b 移动到下个字的第一个字母
w 移缴细鲎值牡谝桓鲎帜?nbsp; 
e 移动到下个字的最後一个字母
^ 移动到光标所在列的第一个非空白字元

指令 说明 
n- 减号移动到上一列的第一个非空白字元前面加上数字可以指定移动到以上 n 列 
n+ 加号移动到下一列的第一个非空白字元前面加上数字可以指定移动到以下 n 列
nG 直接用数字 n 加上大写 G 移动到第 n 列
指令 说明
fx
往右移动到 x 字元上 
Fx 往左移动到 x 字元上 
tx 往右移动到 x 字元前
Tx 往左移动到 x 字元前
; 配合 f&t 使用，重复一次
, 配合 f&t 使用，反方向重复一次
/string 往右移动到有 string 的地方
?string 往左移动到有 string 的地方
n  配合 /&? 使用，重复一次 
N  配合 /&? 使用，反方向重复一次

指令 说明 备注
n( 
左括号移动到句子的最前面句子是以前面加上数字可以指定往前移动 n 个句子 ! . ? 三种符号来界定
n) 右括号移动到下个句子的最前面前面加上数字可以指定往後移动 n 个句子 ! . ? 三种符号来界定
n{  左括弧移动到段落的最前面 段落是以段落间的空白列界定
n} 前面加上数字可以指定往前移动 n 个段落右括弧移动到下个段落的最前面前面加上数字可以指定往後移动 n 个段落 段落是以段落间的空白列界定 
（三）、更多的编辑指令
这些编辑指令非常有弹性，基本上可以说是由指令与范围所构成。例如 dw 怯缮境噶?nbsp;d 与范围 w 所组成，代表删除一个字 d(elete) w(ord) 。
指令列表如下：
d 删除(delete)
y 复制(yank)
p 放置(put)
c 修改(change)
范围可以是下列几个：
e 光晁谖恢玫礁米值淖钺嵋桓鲎帜?br> w 光标所在位置到下个字的第一个字母
b 光标所在位置到上个字的第一个字母
$ 光标所在位置到该列的最後一个字母
0 光标所在位置到该列的第一个字母
) 光标所在位置到下个句子的第一个字母
( 光标所在位置到该句子的第一个字母
} 光标所在位置到该段落的最後一个字母
{ 光标所在位置到该段落的第一个字母
说实在的，组合这些指令来编辑文件有一点点艺术气息。不管怎麽样，它们提供更多编辑文字的能力。值得注意的一点是删除与复制都会将指定范围的内容放到暂存区里，然後就可以用指令 p 贴到其它地方去，这是 vi 用来处理区段拷贝与搬移的办法。
某些 vi 版本，例如 Linux 所用的 elvis 可以大幅简化这一坨指令。如果稍微观察一下这些编辑指令就会发现问题其实是定范围的方式有点杂，实际上只有四个指令罢了。指令 v 非常好用，只要按下 v 键，光标所在的位置就会反白，然後就可以移动光标来设定范围，接著再直接下指令进行编辑即可。对於整列操作， vi 另外提供了更方便的编辑指令。前面曾经提到过删除整列文字的指令 dd 就是其中一个；cc 可以修改整列文字；而 yy 则是复制整列文字；指令 D 则可以删除光标到该列结束为止所有的文字。
（四）、文件操作指令
文件操作指令多以 : 开头，这跟编辑指令有点区别。
:q 结束编辑(quit)
:q! 不存档而要放弃编辑过的文件。
:w 保存文件(write)其後可加所要存档的档名。
:wq 即存档後离开。
zz 功能与 :wq 相同。
:x 与:wq相同

------------

oslevel
进入Websphere的bin目录：./versionInfo.sh查看版本
df -m查看硬盘使用
nmon查看进程、硬盘等


查看cpu使用情况：vmstat
查看当前路径：pwd

------------

grep -lr 查找的内容 *

------------

查看所有内容：cat 文件名
查看某行含有内容的文件：cat 文件名 | grep 内容

------------

增加：
<resource-ref>
 	 	<description>
    		Resource reference to a factory for java.sql.Connection
    		instances that may be used for talking to a particular
    		database that is configured in the server.xml file.
  		</description>
  		<res-ref-name>
    		jdbc/tmrpt
  		</res-ref-name>
  		<res-type>
    		javax.sql.DataSource
  		</res-type>
  		<res-auth>
    		Container
  		</res-auth>
	</resource-ref>

------------

tail -f 文件名

------------

/opt/IBM/WebSphere/AppServer/profiles/AppSrv01/config/cells/TL-VM-62Node01Cell/applications
/opt/IBM/WebSphere/AppServer/profiles/AppSrv01/temp/TL-VM-62Node01/server1

------------

linux如何模糊查找一个文件
      
在当前目录下搜索指定文件：
find . -name test.txt
 
在当前目录下模糊搜索文件：
find . -name '*.txt'
 
在当前目录下搜索特定属性的文件：
find . -amin -10 # 查找在系统中最后10分钟访问的文件
find . -atime -2 # 查找在系统中最后48小时访问的文件
find . -empty # 查找在系统中为空的文件或者文件夹
find . -group cat # 查找在系统中属于 groupcat的文件
find . -mmin -5 # 查找在系统中最后5分钟里修改过的文件
find . -mtime -1 #查找在系统中最后24小时里修改过的文件
find . -nouser #查找在系统中属于作废用户的文件
find . -user fred #查找在系统中属于FRED这个用户的文件
 
在当前目录搜索文件内容含有某字符串（大小写敏感）的文件：
find . -type f | xargs grep 'your_string'
 
在当前目录搜索文件内容含有某字符串（大小写敏感）的特定文件：
find . -type f -name '*.sh' | xargs grep 'your_string'
 
在当前目录搜索文件内容含有某字符串（忽略大小写）的特定文件：
find . -type f -name '*.sh' | xargs grep -i 'your_string'


查找文件夹
locate  etl_client
 

------------

命令1:  top
$top
输出如下：
top - 16:15:05 up 6 days,  6:25,  2 users,  load average: 1.45, 1.77, 2.14
 
　　Tasks: 147 total,   1 running, 146 sleeping,   0 stopped,   0 zombie
 
　　Cpu(s):  0.2% us,  0.2% sy,  0.0% ni, 86.9% id, 12.6% wa,  0.0% hi,  0.0% si
 
　　Mem:   4037872k total,  4003648k used,    34224k free,     5512k buffers
 
　　Swap:  7164948k total,   629192k used,  6535756k free,  3511184k cached
 
　如红色字体：IO等待所占用的CPU时间的百分比,高过30%时IO压力高
 
命令2：vmstat 2 100 
查看输出项的wa参数：IO等待消耗的CPU时间百分比，wa 的值高时，说明IO等待比较严重，这可能是由于磁盘大量作随机访问造成，也有可能是磁盘的带宽出现瓶颈(块操作)。
 
 
命令3：iostat -x 2 100   （有的linux没有改命令）
 
如果 %util 接近 100%，说明产生的I/O请求太多，I/O系统已经满负荷，该磁盘可能存在瓶颈；idle小于70% IO压力就较大了

------------

tooManyopenfiles
解决方案

------------

 运行在Linux系统上的Java程序可能会出现"Too many open files"的异常情况，且常见于高并发访问文件系统，多线程网络连接等场景。 

        程序经常访问的文件、socket在Linux中都是文件file，系统需要记录每个当前访问file的name、location、access authority等相关信息，这样的一个实体被称为file entry。“open files table”(图中橙色标识)存储这些file entry，以数组的形式线性管理。文件描述符(file descriptor)作为进程到open files table的指针，也就是open files table的下标索引，将每个进程与它所访问的文件关联起来了。 

 

        每个进程中都有一个file descriptor table管理当前进程所访问(open or create)的所有文件，文件描述符关联着open files table中文件的file entry。细节不表，对于open files table能容纳多少file entry。Linux系统配置open files table的文件限制，如果超过配置值，就会拒绝其它文件操作的请求，并抛出Too many open files异常。这种限制有系统级和用户级之分。 

       系统级： 
                系统级设置对所有用户有效。可通过两种方式查看系统最大文件限制 
                1  cat /proc/sys/fs/file-max  
                2  sysctl -a 查看结果中fs.file-max这项的配置数量 
                如果需要增加配置数量就修改/etc/sysctl.conf文件，配置fs.file-max属性，如果属性不存在就添加。 
                配置完成后使用sysctl -p来通知系统启用这项配置 

       用户级： 
                Linux限制每个登录用户的可连接文件数。可通过  ulimit -n来查看当前有效设置。如果想修改这个值就使用 ulimit -n <setting number> 命令。 

              对于文件描述符增加的比例，资料推荐是以2的幂次为参考。如当前文件描述符数量是1024，可增加到2048，如果不够，可设置到4096，依此类推。 

       在出现Too many open files问题后，首先得找出主要原因。最大的可能是打开的文件或是socket没有正常关闭。为了定位问题是否由Java进程引起，通过Java进程号查看当前进程占用文件描述符情况： 
Java代码  收藏代码
lsof -p $java_pid 每个文件描述符的具体属性  
lsof -p $java_pid | wc -l  当前Java进程file descriptor table中FD的总量  

        分析命令的结果，可判断问题是否由非正常释放资源所引起。

------------

Too many open files 
2010-08-19 18:48
工作中发现，在linux中搭建WEBLOGIC应用服务器的环境下，有时可能同时发布多个war包，而且每一个war包的文件数目很多，或者客户同时访问量比较大，此时WEBLOGIC就会报错，报错信息中包含“Too many open files”，例如：

java.io.FileNotFoundException: /home/weblogic/bea/user_projects/domains/lhyth/servers/AdminServer/tmp/_WL_user/_appsdir_AM_war/syskue/.tld_cache/webwork-2.2.6.jar/META-INF/taglib.tld/crc.ser (Too many open files)
        at java.io.FileOutputStream.open(Native Method)
        at java.io.FileOutputStream.<init>(FileOutputStream.java:179)
        at java.io.FileOutputStream.<init>(FileOutputStream.java:131)
        at weblogic.descriptor.DescriptorCache.writeToCache(DescriptorCache.java:236)
        at weblogic.descriptor.DescriptorCache.parseXML(DescriptorCache.java:388)
        Truncated. see log file for complete stacktrace

这是因为linux限制了打开文件的最大句柄数量。

linux默认的打开文件数量是1024，我们可以用ulimit -a 来查看系统资源，例如：

[root@redhat ~]# ulimit -a
core file size          (blocks, -c) 0
data seg size           (kbytes, -d) unlimited
file size               (blocks, -f) unlimited
pending signals                 (-i) 1024
max locked memory       (kbytes, -l) 32
max memory size         (kbytes, -m) unlimited
open files                   (-n) 1024 --打开最大文件数量限制
pipe size            (512 bytes, -p) 8
POSIX message queues     (bytes, -q) 819200
stack size              (kbytes, -s) 10240
cpu time               (seconds, -t) unlimited
max user processes              (-u) 16384
virtual memory          (kbytes, -v) unlimited
file locks                      (-x) unlimited

解决该问题的宗旨是：增大打开文件最大句柄限制数，该数是1024的整数倍

1.临时增大open files的限制值

可以用ulimit -n 来临时增大该限制值，但是一旦重启服务器后，该值又会恢复到1024。只能暂时性的解决问题。命令如下：

[root@redhat ~]# ulimit -n 65536
[root@redhat ~]# ulimit -a
core file size          (blocks, -c) 0
data seg size           (kbytes, -d) unlimited
file size               (blocks, -f) unlimited
pending signals                 (-i) 1024
max locked memory       (kbytes, -l) 32
max memory size         (kbytes, -m) unlimited
open files                      (-n) 65536
pipe size            (512 bytes, -p) 8
POSIX message queues     (bytes, -q) 819200
stack size              (kbytes, -s) 10240
cpu time               (seconds, -t) unlimited
max user processes              (-u) 16384
virtual memory          (kbytes, -v) unlimited
file locks                      (-x) unlimited

2.彻底增大open files的限制值

一般情况下，我们都会通过修改系统限制文件来彻底增大open files的值。

2.1 通过VI打开/etc/security/limits.conf，在“# End of file”上面添加如下：

    * - nofile 65536

    该语句表示：每一个用户的默认打开文件数是65536


2.2 通过VI打开/etc/sysctl.conf,在最后一行添加如下： 

     fs.file-max = 65536 

2.3 重启服务器。 

此时再用ulimit -a来查看： 
[root@redhat ~]# ulimit -a
core file size          (blocks, -c) 0
data seg size           (kbytes, -d) unlimited
file size               (blocks, -f) unlimited
pending signals                 (-i) 1024
max locked memory       (kbytes, -l) 32
max memory size         (kbytes, -m) unlimited
open files                      (-n) 65536
pipe size            (512 bytes, -p) 8
POSIX message queues     (bytes, -q) 819200
stack size              (kbytes, -s) 10240
cpu time               (seconds, -t) unlimited
max user processes              (-u) 16384
virtual memory          (kbytes, -v) unlimited
file locks                      (-x) unlimited



------------


http://blog.sina.com.cn/s/blog_553c33270100056d.html；
Websphere产生大量javacore与heapdump文件的分析

1. 打开管理控制台，依次选择：服务器 > 应用服务器 > 需要更改的服务器名称 > 进程定义 > 环境条目 
2. 新建如下的2个条目： 
Name Value 
IBM_HEAPDUMP_OUTOFMEMORY false 
IBM_JAVADUMP_OUTOFMEMORY false 
3. 保存配置的更改，重新启动WAS 


项目中碰到的情况，居然产生了20多G，把硬盘占满、服务Down掉。原因可能：出现过多内存泄漏,或者分配过多大内存等。解决方法：
 
1、进入was管理控制台，选择 应用程序服务器 > server1 > 进程定义 > Java 虚拟机，将"最大堆大小"改为768或1024以上（跟机器内存相关，你的机器最好有较大内存）。保存。
2、优化你的程序，减少要求分配较大内存的设计，优化数据连接池。
3、给was打补丁。ibm网站上有相关补丁下载，不过最好升级到同系列的最新版本
4、修改启动文件，使之不产生这些文件，设置如下：
   export IBM_HEAP_DUMP=false
   export IBM_HEAPDUMP=false
   export IBM_HEAPDUMP_OUTOFMEMORY=false
   export IBM_JAVACORE_OUTOFMEMORY=false
 
分析以上4中方法，只有方法2才是根本解决之道。
 
针对4，IBM网站上有详细阐述，特附如下：
http://www-1.ibm.com/support/docview.wss?uid=swg21140641
Out of Memory (Java heap) specific MustGather information
Set up for enabling heap dump file generation:
For releases of V6.0:
To set the Environment Entries from the administrative console, select the following:

Servers > Application Servers > server_name > Java and Process Management > Process Definition > Environment Entries > New

Add the following Name and Value pairs:

Name	Value
IBM_HEAPDUMP	true
IBM_HEAP_DUMP	true
IBM_HEAPDUMPDIR	your_directory
IBM_HEAPDUMP_OUTOFMEMORY	true
IBM_JAVADUMP_OUTOFMEMORY	true
IBM_JAVA_HEAPDUMP_TEXT	true

3. Make sure that you save changes to the master configuration.

For release V5.1.1:
To set the Environment Entries from the administrative console, select the following:

Servers > Application Servers > server_name > Process Definition > Environment Entries > New

Add the following Name and Value pairs:
Name	Value
IBM_HEAPDUMP	true
IBM_HEAP_DUMP	true
IBM_HEAPDUMPDIR	your_directory
IBM_HEAPDUMP_OUTOFMEMORY	true
IBM_JAVADUMP_OUTOFMEMORY	true
IBM_JAVA_HEAPDUMP_TEXT	true


Make sure that you save changes to the master configuration.

For releases of V5.0 and V5.1.0:
To set the Environment Entries from the administrative console, select the following:

Servers > Application Servers > server_name > Process Definition > Environment Entries > New

Add the following Name and Value pairs:
Name	Value
IBM_HEAPDUMP	true
IBM_HEAP_DUMP	true
IBM_HEAPDUMPDIR	your_directory
IBM_HEAPDUMP_OUTOFMEMORY	true
IBM_JAVADUMP_OUTOFMEMORY	true


Make sure that you save changes to the master configuration.
For releases of V4.0:
To enable the heap dump, add the following lines to the top of the adminserver.bat file in the install_root/bin directory, after the call to setupCmdLine.bat:

call "%~dp0setupCmdLine.bat"
set IBM_HEAPDUMP=true
set IBM_HEAP_DUMP=true
set IBM_HEAPDUMP_OUTOFMEMORY=true
set IBM_JAVADUMP_OUTOFMEMORY=true
set IBM_HEAPDUMPDIR=directory_path

When you start the administrative server, use the modified adminserver.bat file from a command prompt instead of using the Services panel.
Notes:
The heap dump is written to the current directory, install_root/bin, or the directory specified by the IBM_HEAPDUMPDIR environment variable.

The file that is generated is called heapdumppid.time in internal format txt. This file can be very large; allow for at least the maximum heap size. If the maximum heap is set to 512 MB, allow for .5 GB for the dump.

Any version of WebSphere Application Server that is using the IBM JDK 1.3.1 SR5 or higher, and 1.4.X, will automatically generate heapdump and javacore files on an OutOfMemory condition. Adding the additional parameters will give you the option to manually generate heapdumps and also specify the directory in which to write the heapdump files. To manually generate heapdumps you will need to issue the WSADMIN command to generate javacore*.txt file. This will also produce a heapdump*.txt file.
When failure occurs:
This mechanism uses the same signal handler as javacore processing, so do not have DISABLE_JAVADUMP set as an environment variable.

Follow instructions on enabling verbosegc in WebSphere Application Server.

Delete all Application Server and FFDC log files, if possible. Back them up, if needed.

Restart the Application Server.

Wait for the OutOfMemoryError condition to occur. This should cause the generation of a heapdump.

If you want to analyze the heapdump yourself, follow instructions to use IBM HeapAnalyzer tool for analyzing JVM heap usage. If you do not want to analyze this yourself, proceed to step 8.

Collect the following files:
For releases of V6.0:
The server.xml file located in the following directory:

install_root\profiles\profile_name\config\cells\
cell_name\nodes\node_name\servers\server_name

Everything in the following directory:

install_root\profiles\profile_name\logs\server_name

Specifically, the following logs are needed:
systemErr
systemOut
native_stderr
native_stdout
heapdump*.txt or heapdump*.phd
javacore*.txt

Everything in the following directory:

install_root\profiles\profile_name\logs\ffdc

All documents requested For all releases below.

For releases of V5.0 and V5.1:
The server.xml file located in the following directory:

install_root\config\cells\nodes\node_name\servers\server_name

Specifically, the following logs are needed:
systemErr
systemOut
native_stderr
native_stdout
heapdump*.txt or heapdump*.phd
javacore*.txt

Everything from the following directory:

install_root\logs\server_name

Everything from the following directory:

install_root\logs\ffdc

All documents requested For all releases below.

For releases of V4.0 and V3.5:
A XMLConfig full export.

Everything from the following directory:

install_root\logs

Specifically, the following log files are needed:
stderr
stdout
tracefile
heapdump*.txt
javacore*.txt

All documents requested For all releases below.

For all releases
All javacore*.txt files that were created when OutOfMemory conditions occurred. If javacore*.txt files were created, you can find them in the install_root, install_root\bin or in the configured working directory.

Include the Application Server systemErr, systemOut, native_stderr, and native_stdout logs, if they are located in a different directory.

List of all other software and version information on the system. For example, any databases, WebSphere MQ, and so forth.

Follow instructions to send diagnostic information to IBM support.

------------

sudo tar -zcvf pay.tar.gz  pay


解压 tar zxvf 文件名.tar.gz
压缩 tar zcvf 文件名.tar.gz 目标名

------------

watch -n 1 -d 'tail -500f   paycenter.2016-01-07.log'

------------

[glassfish@HA1 temp]$ grep '^[01]\{3\}[\ \-]\{1\}[0-9]\{6\}8$' 3.txt   
010-8387258
010 8387258


grep -lr  neirng *

^表示以什么开始


ps -ef | awk '{print length}' 


------------

ps -ef | awk '{print length}' 


ps -ef | awk '{print substr( $2,1)}' 

 ps -ef | awk '{print $2}' 

------------

less +F log/production.log
less +F works exactly like tail -f, with more:
Simply press ctrl+c to switch to editing model, so you can scroll backward and using any more/vi command, such as /pattern to search
Press shift+f again to switch back to tail model

------------


1
2
3
com.ibm.ws.webcontainer.mapFiltersToAsterisk=true
com.ibm.ws.webcontainer.removetrailingservletpathslash=true
com.ibm.ws.webcontainer.invokeFiltersCompatibility=true
- See more at: http://frightanic.com/software-development/solution-to-error-404-srve0190e-on-websphere-6-1/#comment-318

18701374987

MSArea1

　解决方法：
　　现在发现通过设置was jvm的参数可以解决这个问题，设置方法为： 
进入was控制台，点击：应用程序服务器 > server1 > 进程定义 > Java 虚拟机 > 定制属性，新建一个定制属性： 
名称：com.ibm.websphere.webservices.DisableIBMJAXWSEngine 
值：true 

------------

iconv -f gbk -t utf8 biz-spring-session.properties >biz-spring-session.properties.bak

------------

ps aux:查看所有进程

------------

一些参数
配置
启动MQ

------------

由于ActiveMQ是一个独立的jms provider，所以我们不需要其他任何第三方服务器就可以马上做我们的测试了.编译example目录下面的程序 ProducerTool/ConsumerTool 是JMS参考里面提到的典型应用，Producer产生消息，Consumer消费消息，而且这个例子还可以加入参数帮助你测试刚才启动的本地 ActiveMQ或者是远程的ActiveMQ
ProducerTool broker的地址，默认的是tcp://localhost:61616
[true|flase] 是否使用topic，默认是false
[subject] subject的名字，默认是TOOL.DEFAULT
[durabl] 是否持久化消息，默认是false
[messagecount] 发送消息数量，默认是10
[messagesize] 消息长度，默认是255
[clientID] durable为true的时候，需要配置clientID
[timeToLive] 消息存活时间
[sleepTime] 发送消息中间的休眠时间
[transacte] 是否采用事务
ConsumerTool broker的地址，默认的是tcp://localhost:61616
[true|flase] 是否使用topic，默认是false
[subject] subject的名字，默认是TOOL.DEFAULT
[durabl] 是否持久化消息，默认是false
[maxiumMessages] 接受最大消息数量，0表示不限制
[clientID] durable为true的时候，需要配置clientID
[transacte] 是否采用事务
[sleepTime] 接受消息中间的休眠时间，默认是0,onMeesage方法不休眠
[receiveTimeOut] 接受超时
我们可以这样使用：
先启动activeMQ，再打开两个命令窗口，都进入D:\activemq\example，一个运行：ant consumer，一个运行：ant producer，如果成功发送/接收了消息就OK了。


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
D:\etlvp\apache-activemq-5.9.0\conf\activemq.xml
        <managementContext>
            <managementContext createConnector="true" connectorPort="11099"/>
        </managementContext>

------------

    <managementContext>
            <managementContext createConnector="true" connectorPort="11099"/>
        </managementContext>

------------

MQ服务：
/home/vp/mq/apache-activemq-5.9.0/bin/linux-x86-64
张巧军 15:13:02
http://192.168.6.58:8161/admin/queues.jsp
客户端
/home/vp/etl/etlclient


配置数据库连接：
/home/vp/etl/etlclient/etl_client1/resources/sysconfig.properties

cp -r 

删除文件夹
rm -rf 文件名

启动和停止weblogic
/opt/Oracle/Middleware/user_projects/domains/base_domain/bin
张巧军 15:40:30
启动的时候：nohup ./startWeblogic.sh &

http://192.168.1.3:6080/svn/RDCODE/platform/branches/bugfix/vpetl/2.2

------------

oracle

------------

aix相关的命令
concepts
date和timestamp的转化
Goldengate的使用
job不能执行第二次
job那些事
Oracle AIM
oracle中INTERSECT,MINUS用法
Oracle异常ORA-01502
SGA
TRUNC 
不足
使用游标更新行
停job
删除
各指标查看
增大sga
存储过程中加入role权限
导出dump
导出数据根据scn号
常用函数总结-Oracle教程
常用到的语句
执行计划
数组
杀死进程
查看死锁
查询每一天的数量
清空oracle回收站
游标循环方法（2）
用不上索引的情况
知识点要求
等待锁
设置oracle数据库为归档模式
锁
锁2

------------


1，导入脚本(aix中要求的脚本格式和window下的格式不一样，在window下生成的脚本，
	可以通过ue打开，然后文件--》转换--》dos转unix，另存为选择编码格式)
	@../tmrpt/test.sql----（..表示上层目录）
	导入的可以是直接执行的命令
2，执行存储过程
	 execute job_create_partition;
	 
3,	 
	停止job
 	EXECUTE DBMS_JOB.BROKEN(job#,TRUE);
 	COMMIT;
	移除job
 	EXECUTE DBMS_JOB.REMOVE(:JOB);
 	COMMIT;
	

------------

1 和Oracle有关的两个基本内存结构是系统全局区（system global area，SGA）和程序全局区（program global area，PGA）。

		系统全局区（System Global Area，SGA）是包含了一个Oracle实例所拥有的数据及控制信息的共享内存区域。Oracle在实例启动时分配SGA空间，并在实例关闭时回收。每个实例都有自己的SGA。

		连接到Oracle数据库中的用户可以共享SGA中的数据。为了优化性能，应该使SGA尽可能的大（还要依据实际可用内存情况而定），以便在内存中尽可能多的存储数据，使磁盘I/O最小化。

		SGA的内容可以被分为以下几类内存结构，包括数据库缓冲区，重做日志缓冲区，和共享池。


		数据库缓冲区（database buffer）存储最近使用的数据块。一个实例中全部的数据库缓冲区被称为数据缓存。数据缓存同时包含修改过和未修改的数据块。 如果最近使用的（通常也是最常用的）数据被放在了内存中，对磁盘I/O的需求就减少了，因此性能得到了提高。

		重做日志缓冲区（redo log buffer）用于存储重做条目（redo entry）--用于记录数据库数据变化的日志。重做日志缓冲区中存储的重做条目将被写入联机的重做日志（online redo log）文件中，以备数据库恢复使用。重做日志文件的容量是固定的。

		共享池（shared pool）中包含的是共享的内存结构，例如共享SQL区（shared SQL area）。处理所有提交到数据库的SQL语句都要用到共享SQL区。共享SQL区中包含了语句对应的解析树（parse tree）、执行计划（execution plan）等信息。一个共享SQL区可以被提交了相同SQL语句的多个应用程序使用，以便节约内存空间。

		程序全局区（Program Global Area，PGA）是服务器后台进程所需的数据与控制信息的内存缓冲区。PGA是当服务器后台进程启动时由Server创建的。PGA中存储的信息由Oracle的配置情况决定。




------------

oracle数据类型date和timestamp的转化  

http://jimn1982.blog.163.com/blog/static/1558640201112514758892/



当您想在oracle中存储date和时间信息的时候，你会用DATE还是TIMESTAMP呢?下面就让我们看看这两种数据类型的差别和他们提供了些什么。 

date数据类型 

这个数据类型我们实在是太熟悉了，当我们需要表示日期和时间的话都会想到date类型。他能够存储月，年，日，世纪，时，分和秒。他典型地用来表示什么时候事情已发生或将要发生。date数据类型的问题在于他表示两个事件发生时间间隔的度量粒度是秒。这个问题将在文章稍后讨论timestamp的时候被解决。能够使用to_char函数把date数据进行传统地包装，达到表示成多种格式的目的。 

sql> select to_char(date1,mm/dd/yyyy hh24:mi:ss) "date" from date_table; 

date 

--------------------------- 

06/20/2003 16:55:14 

06/26/2003 11:16:36 



我见到的大多数人陷入的麻烦就是计算两个时间间的间隔年数、月数、天数、小时数和秒数。您需要明白的是，当您进行两个日期的相减运算的时候，得到的是天数。您需要乘上每天的秒数（1天=86400秒），然后，您能够再次计算得到您想要的间隔数。下面就是我的解决方法，能够精确计算出两个时间的间隔。我明白这个例子能够更简短些，但是我是为了显示任何的数字来强调计算方式。 

1         select to_char(date1,mmddyyyy:hh24:mi:ss) date1, 

2         to_char(date2,mmddyyyy:hh24:mi:ss) date2, 

3         trunc(86400*(date2-date1))- 

4         60*(trunc((86400*(date2-date1))/60)) seconds, 

5         trunc((86400*(date2-date1))/60)- 

6         60*(trunc(((86400*(date2-date1))/60)/60)) minutes, 

7         trunc(((86400*(date2-date1))/60)/60)- 

8         24*(trunc((((86400*(date2-date1))/60)/60)/24)) hours, 

9         trunc((((86400*(date2-date1))/60)/60)/24) days, 

10         trunc(((((86400*(date2-date1))/60)/60)/24)/7) weeks 

11*        from date_table 

date1             date2                seconds    minutes     hours      days      weeks 

----------------- ----------------- ---------- ---------- ---------- ---------- ---------- 

06202003:16:55:14 07082003:11:22:57         43         27         18        17          2 

06262003:11:16:36 07082003:11:22:57         21           6          0        12          1 



timestamp 数据类型 

date数据类型的主要问题是他粒度不能足够区别出两个事件哪个先发生。oracle已在date数据类型上扩展出来了timestamp数据类型，他包括了任何date数据类型的年月日时分秒的信息，而且包括了小数秒的信息。假如您想把date类型转换成timestamp类型，就使用cast函数。 

sql> select cast(date1 as timestamp) "date" from t; 

date 

----------------------------------------------------- 

20-jun-03 04.55.14.000000 pm 

26-jun-03 11.16.36.000000 am 



正如您看到的，在转换后的时间段尾部有了一段“.000000”。这是因为从date转换过来的时候，没有小数秒的信息，缺省为0。而且显示格式是按照参数nls_timestamp_format定的缺省格式显示。当您把一个表中date类型字段的数据移到另一个表的timestamp类型字段中去的时候，能够直接写insert select语句，oracle会自动为您做转换的。 

1 select to_char(time1,mm/dd/yyyy hh24:mi:ss) "date" from date_table 

date 

------------------- 

06/20/2003 16:55:14 

06/26/2003 11:16:36 


timestamp数据的格式化显示和date 数据相同。注意，to_char函数支持date和timestamp，但是trunc却不支持timestamp数据类型。这已清楚表明了在当两个时间的差别极度重要的情况下，使用timestamp数据类型要比date数据类型更确切。 

假如您想显示timestamp的小数秒信息，参考下面： 

1 select to_char(time1,mm/dd/yyyy hh24:mi:ss:ff3) "date" from date_table 

date 

----------------------- 

06/20/2003 16:55:14:000 

06/26/2003 11:16:36:000 

在上例中，我只现实了小数点后3位的内容。 

计算timestamp间的数据差别要比老的date数据类型更容易。当您直接相减的话，看看会发生什么。结果将更容易理解，第一行的17天，18小时，27分钟和43秒。 

1 select time1, 

2         time2, 

3         substr((time2-time1),instr((time2-time1), )+7,2)                 seconds, 

4         substr((time2-time1),instr((time2-time1), )+4,2)                 minutes, 

5         substr((time2-time1),instr((time2-time1), )+1,2)                 hours, 

6         trunc(to_number(substr((time2-time1),1,instr(time2-time1, ))))   days, 

7         trunc(to_number(substr((time2-time1),1,instr(time2-time1, )))/7) weeks 

8*   from date_table 

time1                       time2                      seconds minutes hours days weeks 

-------------------------   -------------------------- ------- ------- ----- ---- ----- 

06/20/2003:16:55:14:000000 07/08/2003:11:22:57:000000 43      27      18    17    2 

06/26/2003:11:16:36:000000 07/08/2003:11:22:57:000000 21     06      00    12    1 

这就意味着不再需要关心一天有多少秒在麻烦的计算中。因此，得到天数、月数、天数、时数、分钟数和秒数就成为用substr函数摘取出数字的事情了。 

系统日期和时间 

为了得到系统时间，返回成date数据类型。您能够使用sysdate函数。 

sql> select sysdate from dual; 

为了得到系统时间，返回成timestamp数据类型。您能够使用systimpstamp函数。 

sql> select systimestamp from dual; 

您能够配置初始化参数fixed_date指定sysdate函数返回一个固定值。这用在测试日期和时间敏感的代码。注意，这个参数对于systimestamp函数无效。 

sql> alter system set fixed_date = 2003-01-01-10:00:00; 

system altered. 



sql> select sysdate from dual; 

sysdate 

--------- 

01-jan-03 



sql> select systimestamp from dual; 

systimestamp 

--------------------------------------------------------- 

09-jul-03 11.05.02.519000 am -06:00 

当使用date和timestamp类型的时候，选择是很清楚的。您能够随意处置date和timestamp类型。当您试图转换到更强大的timestamp的时候，需要注意，他们既有类似的地方，更有不同的地方，而足以造成破坏。两者在简洁和间隔尺寸方面各有优势，请合理地选择。

------------

GOLDENGATE

--数据库容灾
容灾：1，硬件 2，软件

redo log方式
DataGuard-- Stream --GoldenGate

工作原理与流程
1>使用oracle以外的独立进程，捕捉redo log file的信息，将其翻译成sql语句，在通过网络传输到目标端数据库，在目标端数据库执行同样的sql语句，以实现同步
2>如果其进程赶不上oracle的日志切换，也可以捕捉归档日志的内容，也有的产品在源端以事物为单位，当一个事务完成后，再把sql传输到目标端。
3>oracle的dg是以数据库为单位进行复制，可以同步整个数据库，其他的产品一般都是以表为单位进行复制，同时也支持大部分ddl的复制。

技术和优势

因为使用oracle以为的进程进行捕捉，且优先级低于oracle进程，所以对源系统数据库的性能影响很小

基于其实现原理及多个队列文件的使用，复制环境可以提供网络失败，数据库失败，主机失败的容错能力

因为这类软件复制的只是sql语句或事务，所以他可以完全支持异构环境的复制，硬件的型号，oracle的版本，操作系统的种类、版本等可以不同。


捕捉器 capture 可以配置多个
投递 delivery 




------------

job_queue_process 表示oracle能够并发的job的数量，可以通过语句
	show parameter job_queue_process;
	来查看oracle中job_queue_process的值，当值为0的时候表示全部停止oracle的job
	
	可以通过语句：
		alter system set job_queue_process=10；
		
		不过这种修改是动态的，当oracle重新启动job_queue_process的值将仍然从\%oracle_home%\admin\mydb\pfile\init.ora

------------

1，查询当前用户下的job
select * from user_jobs t 

杀死正在运行的job
1，select * from dbsm_jobs
2,select * from dbs


1、查看所有job;
select * from dba_jobs;
2、查看正在运行的job;
select * from dba_jobs_running;
3、根据sid查出对应的session;
select SID,SERIAL# from V$Session where SID='&SID';
4、kill对应的session;
alter system kill session '&SID,&SERIAL';
5、将job置为broken;
exec dbms_job.broken('&JOB',true);
6、sysdba用户权限删除job;
delete from dba_jobs where JOB='&JOB';



 怎样把job分配到不同节点。

设置ＪＯＢ使用函数dbms_job.submit　其中有一个参数instance_id的参数可以指定Job在哪个实例上运行



------------

Oracle AIM

1.By Process

01. Configuration Management
CMQ.050 Software Migration and Version Control Procedure

02. Resource Management
RMQ.001 General Guidlines to Project Team Member

05. Control & Reporting
CR.010 Quality Plan
CR.CRF Change Request Form
CR.PMA Project Meeting Agenda
CR.PMI Project Meeting Minutes
CR.PMM Project Memo
CR.PMS Project Monthly Status Report
CR.PWS Project Weekly Status Report
CR.SPR Software Problem Report

08. Business Process Architecture
BP.040 Current Process Model
BP.050 Best Practice Model
BP.060 High-Level Process Vision
BP.080 Future Process Module
BP.090 Business Procedure Documentation
BPQ.020 PMO Study Checklist
BPQ.040 Current Process Models (PMOs) Comparison Form
BR.030 Mapped Business Requirements

09. Business Requirement Definition
RD.020 CURRENT  BUSINESS BASELINE
RD.030 PROCESS AND MAPPING SUMMARY
RD.050 Business Requirements ScenariosRDQ.020 Customers Business Operation Reference Documents

10. Business Requirement Mapping
BR.010 High-Level Gap Analysis
BR.100 Application Setup Documents

11. Application and Technical Architecture
TA.040 Application Architecture
TA.050 System Availability Strategy
TA.110 System Capacity Plan
TA.120 Platform and Network Architecture
TA.150 System Management Procedures
TAQ.020 Network Requirements Definition
TAQ.030 Disaster Recovery Strategy

12. Module Design and Build
MD.040 Build Standards
MD.050 Application Extension Functional Design
MD.070 Application Extension Technical Design

13. Data Conversion
CV.010 Data Conversion Requirements and Strategy
CV.060 Conversion Program Design

14. Documentation
DO.060 User Reference Manual
DO.070 Project Team Learning Plan
DO.070 Traning Manual
DO.080 Technical Reference Manual

15. Business System Testing
TE.010 Testing Requirements and Strategy
TE.020 UNIT TEST SCRIPT
TE.040 System Test Script
TE.130 UAT Result
TE.UAC User Acceptance Certificate
TEQ.010 UAT Plan


16. Performance Testing
PT.130-压力测试报告


17. Adoption and Learning
AP.030 Project Team Learning Plan
AP.150 Training Manual
APQ.010 Tools Instruction
APQ.150 Oracle Module Training and Reference Materail
TR.010 User Manual


18. Production Migration
PM.PAL Production Acceptance Checklist
PM.PAT Production Acceptance Test Certification
PM.PCL Project Closure Report



2.By Phase
1. ALL
2. Definition
3. Operations Analysis
4. Solution Design
5. Build
6. Transition
7. Production





------------

intersect 就是交集
minus 就是差集
 
交集就是两个结果集中都有的元素
 
比如 select uid from tb1
         intersect
        select uid from tb2
 
那么既存在tb1 又存在tb2中 相同的UID 就会查出来

差集：select uid from tb1
minus 
select uid from tb2 
 
存在于tb1 但不存在与tb2中的uid 会被查出


并集
   Select   Distinct   *   from   (   
              Select   *   from   a_message   
              Union   
              Select   *   from   b_message   )   
              
              

Union，对两个结果集进行并集操作，不包括重复行，同时进行默认规则的排序；
Union All，对两个结果集进行并集操作，包括重复行，不进行排序；
Intersect，对两个结果集进行交集操作，不包括重复行，同时进行默认规则的排序；
Minus，对两个结果集进行差操作，不包括重复行，同时进行默认规则的排序。              

------------

Oracle异常ORA-01502: 索引或这类索引的分区处于不可用状态原因： 出现这个问题，可能有人move过表，或者disable 过索引。 
1. alter table xxxxxx move tablespace xxxxxxx 命令后，索引就会失效。
2. alter index index_name  unusable，命令使索引失效。

select * from  user_indexes where status <> 'valid' ;
查出失效的索引


解决办法： 
1. 重建索引才是解决这类问题的完全的方法。
     alter index index_name rebuild (online);

     或者alter index index_name rebuild;
2. 如果是分区索引只需要重建那个失效的分区 。
     alter index index_name rebuild partition partition_name (online); 

     或者alter index index_name rebuild partition partition_name ; 

3. 或者改变当前索引的名字。

说明：
1. alter session set skip_unusable_indexes=true;就可以在session级别跳过无效索引作查询。
2. 分区索引应适用user_ind_partitions。
3. 状态分4种：
    N/A说明这个是分区索引需要查user_ind_partitions或者user_ind_subpartitions来确定每个分区是否可用；
    VAILD说明这个索引可用；
    UNUSABLE说明这个索引不可用；
    USABLE 说明这个索引的分区是可用的。

4. 查询当前索引的状态：select distinct status from user_indexes; 

5. 查询那个索引无效：select index_name from  user_indexes where status <> 'valid';

6. 详细讲解可参考：http://www.sudu.cn/info/html/edu/20071225/20526.html。


------------

组成

SGA主要由数据高速缓冲区（Database Buffer Cache）、共享池（Shared Pool）、重做日志缓冲区（Redo Log Cache）、大型池（Large Pool）、Java池（Java Pool）、流池（Streams Pool）和其他结构（如固定SGA、锁管理等）组成。
重要特性

1、SGA的构成——数据和控制信息，我们下面会详细介绍。
2、SGA是共享的，即当有多个用户同时登录了这个实例，SGA中的信息可以被它们同时访问（当涉及到互斥的问题时，由latch和sequence控制）。
3、一个SGA只服务于一个实例，也就是说，当一台机器上有多个实例运行时，每个实例都有一个自己的SGA尽管SGA来自于OS的共享内存区，但实例之间不能相互访问对方的SGA区。
主要包括


1.数据库高速缓冲(the data buffer cache)，
2.重做日志缓冲（the redo log buffer）
3.共享池（the shared pool），包括库高速缓存（the Library cache）和数据字典缓存（the data dictionary cache）以及其它各方面的信息。
1.数据高速缓冲区（Data Buffer Cache）
在数据高速缓冲区中存放着Oracle系统使用过的数据块（即用户的高速缓冲区），当把数据写入数据库时，它以数据块为单位进行读写，当数据高速缓冲区填满时，则系统自动去掉一些不常被用户访问的数据。如果用户要查的数据不在数据高速缓冲区时，Oracle自动从磁盘中去读取。数据高速缓冲区包括三个类型的区：
1） 脏数据区（Dirty Buffers）：包含有已经改变过并需要写回数据文件的数据块。
2） 自由区（Free Buffers）：没有包含任何数据并可以再写入的区，Oracle可以从数据文件读数据块该区。
3） 保留区（Pinned Buffers）：此区包含有正在处理的或者明确保留用作将来用的区。
2.Redo Log Buffer Cache缓存对于数据块的所有修改。
主要用于恢复其中的每一项修改记录都被称为redo 条目。利用Redo条目的信息可以重做修改。
3. Shared Pool用于缓存被执行的SQL语句和被使用的数据定义。
它主要由两个内存结构构成：Library cache和Data dictionary cache
修改共享池的大小：ALTER SYSTEM SET SHARED_POOL_SIZE = 64M;
Libray Cache缓存被执行的SQL和PL/SQL的相关信息，即存放SQL语句的文本,分析后的代码及执行计划。实现常用语句的共享，使用LRU算法进行管理，由以下两个结构构成：Shared SQL area、Shared PL/SQL area；
Data Dictionary Cache缓存被使用的数据库定义，即存放有关表,列和其它对象定义及权限。它包括关于数据库文件、表、索引、列、用户、权限以及其它数据库对象的信息。在语法分析阶段，Server Process访问数据字典中的信息以解析对象名和对存取操作进行验证。数据字典信息缓存在内存中有助于缩短响应时间。


 SGA主要有那些部分，主要作用是什么
 
系统全局区（SGA）:是ORACLE为实例分配的一组共享缓冲存储区，用于存放数据库数据和控制信息，以实现对数据库数据的管理和操作。 
SGA主要包括: a)共享池(shared pool) ：用来存储最近执行的SQL语句和最近使用的数据字典的数据。 
b)数据缓冲区 (database buffer cache)：用来存储最近从数据文件中读写过的数据。 
c)重作日志缓冲区（redo log buffer）：用来记录服务或后台进程对数据库的操作。 
另外在SGA中还有两个可选的内存结构： d)Java pool:  用来存储Java代码。 
e)Large pool: 用来存储不与SQL直接相关的大型内存结构。备份、恢复使用。   
GA：db_cache/shared_pool/large_pool/java_pool  
db_cache: 数据库缓存（Block Buffer）对于Oracle数据库的运转和性能起着非常关键的作用，它占据Oracle数据库SGA（系统共享内存区）的主要部分。Oracle数据库通过使用LRU算法，将最近访问的数据块存放到缓存中，从而优化对磁盘数据的访问. 
shared_pool: 共享池的大小对于Oracle 性能来说都是很重要的。共享池中保存数据字典高速缓冲和完全解析或编译的的PL/SQL 块和SQL 语句及控制结构  
large_pool: 使用MTS配置时，因为要在SGA中分配UGA来保持用户的会话，就是用Large_pool来保持这个会话内存使用RMAN做备份的时候，要使用Large_pool这个内存结构来做磁盘I/O缓存器  
java_pool: 为java procedure预备的内存区域,如果没有使用java proc,java_pool不是必须的

------------

TRUNC for dates(日期)

http://baike.baidu.com/view/2673319.htm


TRUNC函数返回以指定元素格式截去一部分的日期值。
其具体的语法格式如下：
TRUNC（date,[fmt]）
其中：
date 为必要参数，是输入的一个日期值
fmt 参数可忽略，是日期格式，用以指定的元素格式来截去输入的日期值。忽略它则由最近的日期截去
下面是该函数的使用情况：
trunc(sysdate,'yyyy') --返回当年第一天.
trunc(sysdate,'mm') --返回当月第一天.
trunc(sysdate,'d') --返回当前星期的第一天.
fmt值参考如下:
Unit
Valid format parameters
Year
SYYYY, YYYY, YEAR, SYEAR, YYY, YY, Y
ISO Year
IYYY, IY, I
Quarter
Q
Month
MONTH, MON, MM, RM
Week
WW
IW
IW
W
W
Day
DDD, DD, J
Start day of the week
DAY, DY, D
Hour
HH, HH12, HH24
Minute
MI
编辑本段
TRUNC for number(数字)

TRUNC函数返回处理后的数值，其工作机制与ROUND函数极为类似，只是该函数不对指定小数前或后的部分做相应舍入选择处理，而统统截去。
其具体的语法格式如下
TRUNC（number[,decimals]）
其中：
number 待做截取处理的数值
decimals 指明需保留小数点后面的位数。可选项，忽略它则截去所有的小数部分。
下面是该函数的使用情况：
TRUNC（89.985，2）=89.98
TRUNC（89.985）=89 (即取整)
TRUNC（89.985，-1）=80
注意：第二个参数可以为负数，表示为小数点左边指定位数后面的部分截去，即均以0记。与取整类似，比如参数为1即取整到十分位，如果是-1，则是取整到十位，以此类推；如果所设置的参数为负数，且负数的位数大于整数的字节数的话，则返回为0。如：TRUNC(89.985,-3)=0。
编辑本段
TRUNC在Microsoft Excel 中用法

在Microsoft Excel 2010中该函数是将数字的小数部分截去，返回整数。
语法
TRUNC（number,[num_digits]）
TRUNC 函数语法参数
TRUNC 函数语法具有下列参数：
Number 必需。需要截尾取整的数字。
Num_digits 可选。用于指定取整精度的数字。
Num_digits 的默认值为 0（零）。
说明
TRUNC 和 INT 类似，都返回整数。TRUNC 直接去除数字的小数部分，而 INT 则是依照给定数的小数部分的值，将其向小方向到最接近的整数。INT 和 TRUNC 在处理负数时有所不同：TRUNC(-4.3) 返回 -4，而 INT(-4.3) 返回 -5，因为 -5 是较小的数。
示例

------------

ddl
ttt
事务
分区
循环
游标
给表字段添加约束条件

------------

一、表空间管理
CREATE [BIGFILE|SMALLFILE] [TEMPORARY] TABLESPACE tablespace name -- 表空间名字
DATAFILE datafile spec | TEMPORARYFILE tempfile spec        -- 数据文件/临时文件说明
 [MINIMUM EXTENT minimum extent size]        -- 最小扩展空间
 [[BLOCKSIZE blocksize] DEFAULT STORAGE (defalut storage clause)]        -- （锁空间大小） 默认存储子句
 [LOGGING | NOLOGGING]        -- 有无日志
 [FORCE LOGGING]        -- 强制日志
 [ONLINE | OFFLINE]        -- 在线/不在线
 [EXTENT MANAGEMENT DICTIONARY | LOCAL [AUTOALLOCATE | UNIFORM SIZE size]]  -- 扩展管理字典/本地（自动定位/统一大小）
 [SEGMENT SPACE MANAGEMENT MANUAL | AUTO]  -- 管理extent中的block（设置为自动最佳）
 [FLASHBACK ON|OFF]         -- 删除文件是否可找回
1、1、创建永久表空间
 例：
 CREATE TABLESPACE MYTABLESPACE LOGGING
 DATAFILE 'D:\oracle\product\10.1.0\oradata\MYDB\MYTABLESPACE.DBF' SIZE 10M   REUSE 
 AUTOEXTEND ON NEXT 5M MAXSIZE UNLIMITED
 EXTENT MANAGEMENT LOCAL
1、2、创建临时表空间
 例：
 CREATE TEMPORARY TABLESPACE MYTEMP LOGGING
 TEMPFILE 'D:\oracle\product\10.1.0\oradata\MYDB\MYTEMP.DBF' SIZE 10M  REUSE 
 AUTOEXTEND ON NEXT 5M MAXSIZE UNLIMITED
 EXTENT MANAGEMENT LOCAL
 更改默认临时表空间
 alter database default temporary tablespace TEMP2;
1、3 删除表空间
 1）强行删除表空间，包括数据文件
 drop tablespace  mytemp including contents and datafiles cascade constraints
 2）表空间内无任何对象时才能删除
 drop tablespace  mytemp
1.4 为表空间增加文件
 alter tablespace users add datafile 'd:\oracle\oradata\....\users02.dbf' size 10m;
1.5 默认临时表空间
 在创建用户时，如果没有指定临时表空间，则会使用系统表空间作为临时表空间，如果指定了默认临时表空间，则在未指定临时表空间的情况下使用默认的临时表空间。
 alter database default temporary tablespace temp01
1.6 将表空间脱机
 alter tablespace users offline;
1.7 更改表空间的大小
 alter tablespace  datafile 'd:\oracle\....\xxx.dbf' resize 100m;
1.8 更改表空间文件的名称或路径
 1)先将对应表空间脱机
 2)将文件重命名或则移动到新的位置
 3)alter tablespace user01 rename datafile 'd:\oracle\oradata\fox\user01.dbf' to 'd:\oracle\oradata\fox\user02.dbf'
1.9 查看临时表空间的文件
 select * from dba_temp_files;
 or select * from v$tempfile;

二、表管理
2.1 建表
 CREATE TABLE emp
  (
  empno number(6) constraint emp_empno_pk primary key using index (create index emp_empno_pk on emp(empno) tablespace idx_ts), --不使用默认Primary 的索引
  firstname varchar(20),
  lastname varchar(25) constraint emp_last_name_nn not null,
  hire_date date default sysdate,
  salary number(8,2) constraint salary_ck check(salary>0),
  managerid number(6),
  deptno number(4) constraint emp_deptno_fk references deptment(deptno),  --定义外键约束
  email varchar(25),
  constraint emp_email_uq unique(email) --创建唯一约束
  )
 tablespace mytablespace  --制定表空间
    2.2 修改表
2.1.1 增加字段
     alter table emp add(birthday date default sysdate,ename varchar(20) constriant ename_ck check(ename<>'Admin'))
2.1.2 删除字段
 alter table emp drop column birthday
2.1.3 修改字段
 alter table emp modify ename varchar(30) default 'unknow'
2.1.4 修改列名
 alter table emp rename column ename to en_name
2.1.5 修改表名
 rename emp to employees  --其他对象通用
2.1.6 为(表)列添加描述
  -- 为表添加描述
 comment on table employees is '存放雇员的信息'
 comment on column employees.en_name is '存放雇员的英文名'
 -- 查询字段的描述
 select owner,table_name,column_name,comments from dba_col_comments where table_name='EMPLOYEES' --好象所有的值都大写
 -- 查询表的描述
 SELECT TABLE_NAME,COMMENTS FROM ALL_TAB_COMMENTS WHERE TABLE_NAME='EMPLOYEES'
2.1.7 截断表
 truncate table employees   --清除所有的数据，保留表结构，该操作不记录日志，请慎用
2.1.8 删除表
 DROP TABLE table_name [CASCADE CONSTRAINTS] [PURGE] -- CASCADE CONSTRAINTS 选项用于删除其他表的外键约束，[PURGE]选项用于彻底删除表
2.1.9 恢复被删除的表
 Flashback table employees to before drop

三、约束
3.1 创建约束
3.1.1   NOT NULL约束
 注:NOT NULL约束只能定义为列级约束，而不能为表级约束
eg: CREATE TABLE performance
   (
   student_no int not null,
   student_name varchar(10) constraint student_name_nn NOT NULL,
   performance number(6,2) 
   )
 -- 修改列为not null约束
 alter table performance modify performance not null
3.1.2 UNIQUE约束
eg: CREATE TABLE EMP
  (
   e_no int,
   name varchar(8),
   salary number(6,2),
   constraint name_unq UNIQUE(name)
   )
 -- 增加UNIQUE约束
 constraint emp_name_uk unique (e_no,name) 
3.1.3 PRIMARY KEY约束
eg: create table emp
  (
    emp_no int primary key,
    emp_name varchar(8),
    address varchar(20)
   )
 or
   create table emp
   (
    emp_no int,
    emp_name varchar(8),
    address varchar(20),
    constraint emp_no_pk primary key(emp_no)
   )
 -- 增加索引
 alter table emp add constraint emp_pk primary key (emp_no,emp_name)
3.1.3 foreign key 约束
  eg: create table salary
      (
       emp_no int,
       salary number(6,2) constraint emp_no_fk  references emp(emp_no)
      )
   or
      create table salary
      (
       emp_no int,
       salary number(6,2),
       constraint emp_no_fk foreign key (emp_no) references emp(emp_no)
      )
 -- 添加外键约束
 alter table emp add constraint emp_no_fk foreign key (emp_no)  references emp(emp_no) on delete cascade 
 -- 添加外键约束(双主键)
 alter table emp add constraint emp_no_fk foreign key (emp_no,emp_name)  references emp(emp_no,emp_name) on delete cascade
3.1.4 CKECK 约束
     create table salary
     (
       emp_no int,
       salary number(6,2) constraint salary_min check(salary>0)
      )
   or
     create table salary
     (
       emp_no int,
       salary number(6,2),
       constraint salary_min check(salary>0)
     )
 -- 添加CKECK约束
 alter table salary add constraint salary_min_chk check(salary>0)
3.2 修改约束
3.2.1 禁用/激活约束
  禁用/激活约束会引起删除和重建索引的操作
  alter table employees disable/enable unique email 
  alter table employees disable/enable constraint emp_ename_pk 
  alter tabel employees modify constraint emp_pk disable/enable 
  alter tabel employees modify constraint emp_ename_phone_uk disable/enable 
3.2.2 删除约束
  alter table salary drop constraint salary_min_chk
3.2.3 查询约束信息
  -- 约束及表信息
  select owner,constraint_name,table_name,search_condition from dba_constraints where owner='WENZI'
  --  约束及字段信息
  select owner,constraint_name,table_name,column_name,position from dba_cons_columns where owner='WENZI'

四、索引
索引和对应的表应该位于不同的表空间中,oracle能够并行读取位于不同硬盘上的数据，可以避免产生I/O冲突 
B树索引：在B树的叶节点中存储索引字段的值与ROWID. 
唯一索引和不唯一索引都只是针对B树索引而言. 
Oracle最多允许包含32个字段的复合索引
索引创建策略：
1.导入数据后再创建索引
2.不需要为很小的表创建索引
3.对于取值范围很小的字段（比如性别字段）应当建立位图索引
4.限制表中的索引的数目
5.为索引设置合适的PCTFREE值
6.存储索引的表空间最好单独设定
4.1 创建索引
4.1.1 创建不唯一索引
  create index emp_ename on employees(ename) tablespace users 
4.1.2 创建唯一索引
  create unique index emp_email on employees(email) tablespace users;
4.1.3 创建位图索引
  create bitmap index emp_sex on employees(sex) tablespace users;
4.1.4 创建反序索引
  create unique index order_reinx on orders(order_num,order_date) tablespace users reverse
4.1.5 创建函数索引
  create index emp_substr_empno on employees(substr(empno,1,2)) tablespace users; 
4.2 维护索引
4.2.1 修改索引
  由于定义约束时由oracle自动建立的索引通常是不知道名称的，对这类索引的修改经常是利用alter table ..using index语句进行的,而不是alter index语句。
  利用下面的语句将employees表中primary key约束对应的索引的PCTFREE参数修改为5：
  alter table employees enable primary key using index pctfree 5;
4.2.2 合并索引
  只是简单的将B树叶结点中的存储碎片合并在一起，并不会改变索引的物理组织结构
  alter index emp_pk coalesce;
4.2.3 重建索引
  不仅能够消除存储碎片,还可以改变索引的全部存储参数设置，并且可以将索引移动到其它的表空间中,重建索引 
  实际上就是再指定的表空间中重新建立一个新的索引,然后删除原来的索引。
  alter index emp_pk rebuild;
4.3 删除索引
  在删除一个表时,oracle会自动删除所有与该表相关的索引. 
  drop index emp_ename
4.4 查询索引的相关信息
  -- 索引名称及表：
  select owner,index_name,index_type,table_owner,table_type,tablespace_name,status from dba_indexes where owner='WENZI'
  -- 索引及字段
  select INDEX_OWNER,INDEX_NAME,TABLE_NAME,COLUMN_NAME,COLUMN_POSITION,DESCEND FROM dba_ind_columns where index_owner='WENZI'

五、视图
5.1 创建视图
 CREATE VIEW division1_staff AS
 SELECT ename, empno, job, dname FROM emp, dept
 WHERE emp.deptno IN (10, 30) AND emp.deptno = dept.deptno;
5.2 修改视图
 CREATE OR REPLACE VIEW sales_staff AS
 SELECT empno, ename, deptno FROM emp
 WHERE deptno = 30 WITH CHECK OPTION CONSTRAINT sales_staff_cnst;
5.3 删除视图
 DROP VIEW emp_dept;

六、序列
6.1 创建序列
  CREATE SEQUENCE emp_sequence
  INCREMENT BY 1
  START WITH 1
  NOMAXVALUE
  NOCYCLE
  CACHE 10;  --指定CACHE可以提高效率，但是当系统意外关闭时可能会发生跳号现象.
6.2 修改序列
  ALTER SEQUENCE emp_sequence
  INCREMENT BY 10
  MAXVALUE 10000
  CYCLE
  CACHE 20;
6.3 使用序列
  INSERT INTO Orders_tab (Orderno, Custno) VALUES (Order_seq.NEXTVAL, 1032);  --NEXTVAL 为序列的下一个编号，CURRVAL 为当前编号
  or
  UPDATE Orders_tab   SET Orderno = Order_seq.NEXTVAL  WHERE Orderno = 10112;
6.4 删除序列
  DROP SEQUENCE order_seq;



------------

create table test (name varchar2(50),id number not null,sex char(1));

alter table test add constraint s_t check (sex='m' or sex='j')；

alter table test add (height number);

create table test_t as select * from test;

rename  test_t to test_t2;

alter table TEST_T2 rename column name2 to NAME3;


Flashback table test_t2 to before drop

drop table test_t2;

delete test t where rownum<(select max(rownum) from test t2 where t2.name=t.name and t2.id=t.id)


create table test(
	name varchar2(100),
	id number,
	sex char(1),
	born_time date
)
partition by range (born_time)(
	partition P2000000 values less than to_date('2000/01/01','yyyy-mm')
		tablespace rptdat
);

alter table test add partition p290202 values less than to_date('2000/01/01','yyyy-mm');


select count(*) from user_tab_partitions  t;

alter table  test truncate partition p20000;
alter table test drop partition p2000;


 DBMS_JOB.BROKEN(R.JOB,false,TO_DATE(TO_CHAR(SYSDATE+1,'YYYY-MM-DD'),'YYYY-MM-DD')+1/24);
 
 select * from user_jobs;
 
 select * from user_source where name='' order by line;
 
 C:\oracle\product\10.2.0\flash
_recovery_area
 
 
 

http://v.youku.com/v_show/id_XNjAxMTE5NjQ4.html?tpa=dW5pb25faWQ9MTAyMjEzXzEwMDAwMl8wMV8wMQ

------------

BEGIN TRANSACTION

END 

ROLLBACK

------------

此文从以下几个方面来整理关于分区表的概念及操作:
        1.表空间及分区表的概念
        2.表分区的具体作用
        3.表分区的优缺点
        4.表分区的几种类型及操作方法
        5.对表分区的维护性操作.
(1.) 表空间及分区表的概念
表空间：
　　是一个或多个数据文件的集合，所有的数据对象都存放在指定的表空间中，但主要存放的是表， 所以称作表空间。
 
分区表： 
当表中的数据量不断增大，查询数据的速度就会变慢，应用程序的性能就会下降，这时就应该考虑对表进行分区。表进行分区后，逻辑上表仍然是一张完整的表，只是将表中的数据在物理上存放到多个表空间(物理文件上)，这样查询数据时，不至于每次都扫描整张表。
 
( 2).表分区的具体作用
Oracle的表分区功能通过改善可管理性、性能和可用性，从而为各式应用程序带来了极大的好处。通常，分区可以使某些查询以及维护操作的性能大大提高。此外,分区还可以极大简化常见的管理任务，分区是构建千兆字节数据系统或超高可用性系统的关键工具。
 
分区功能能够将表、索引或索引组织表进一步细分为段，这些数据库对象的段叫做分区。每个分区有自己的名称，还可以选择自己的存储特性。从数据库管理员的角度来看，一个分区后的对象具有多个段，这些段既可进行集体管理，也可单独管理，这就使数据库管理员在管理分区后的对象时有相当大的灵活性。但是，从应用程序的角度来看，分区后的表与非分区表完全相同，使用 SQL DML 命令访问分区后的表时，无需任何修改。
 
什么时候使用分区表：
1、表的大小超过2GB。
2、表中包含历史数据，新的数据被增加都新的分区中。
 
 (3).表分区的优缺点
表分区有以下优点： 
1、改善查询性能：对分区对象的查询可以仅搜索自己关心的分区，提高检索速度。
2、增强可用性：如果表的某个分区出现故障，表在其他分区的数据仍然可用；
3、维护方便：如果表的某个分区出现故障，需要修复数据，只修复该分区即可；
4、均衡I/O：可以把不同的分区映射到磁盘以平衡I/O，改善整个系统性能。
 
缺点： 
分区表相关：已经存在的表没有方法可以直接转化为分区表。不过 Oracle 提供了在线重定义表的功能。
 
(4).表分区的几种类型及操作方法
 一.范围分区：
范围分区将数据基于范围映射到每一个分区，这个范围是你在创建分区时指定的分区键决定的。这种分区方式是最为常用的，并且分区键经常采用日期。举个例子：你可能会将销售数据按照月份进行分区。
当使用范围分区时，请考虑以下几个规则：
1、每一个分区都必须有一个VALUES LESS THEN子句，它指定了一个不包括在该分区中的上限值。分区键的任何值等于或者大于这个上限值的记录都会被加入到下一个高一些的分区中。
2、所有分区，除了第一个，都会有一个隐式的下限值，这个值就是此分区的前一个分区的上限值。
3、在最高的分区中，MAXVALUE被定义。MAXVALUE代表了一个不确定的值。这个值高于其它分区中的任何分区键的值，也可以理解为高于任何分区中指定的VALUE LESS THEN的值，同时包括空值。
例一：
假设有一个CUSTOMER表，表中有数据200000行，我们将此表通过CUSTOMER_ID进行分区，每个分区存储100000行，我们将每个分区保存到单独的表空间中，这样数据文件就可以跨越多个物理磁盘。下面是创建表和分区的代码，如下：
CREATE TABLE CUSTOMER 
( 
    CUSTOMER_ID NUMBER NOT NULL PRIMARY KEY, 
    FIRST_NAME  VARCHAR2(30) NOT NULL, 
    LAST_NAME   VARCHAR2(30) NOT NULL, 
    PHONE        VARCHAR2(15) NOT NULL, 
    EMAIL        VARCHAR2(80), 
    STATUS       CHAR(1) 
) 
PARTITION BY RANGE (CUSTOMER_ID) 
( 
    PARTITION CUS_PART1 VALUES LESS THAN (100000) TABLESPACE CUS_TS01, 
    PARTITION CUS_PART2 VALUES LESS THAN (200000) TABLESPACE CUS_TS02 
)
例二：按时间划分
CREATE TABLE ORDER_ACTIVITIES 
( 
    ORDER_ID      NUMBER(7) NOT NULL, 
    ORDER_DATE    DATE, 
    TOTAL_AMOUNT NUMBER, 
    CUSTOTMER_ID NUMBER(7), 
    PAID           CHAR(1) 
) 
PARTITION BY RANGE (ORDER_DATE) 
(
  PARTITION ORD_ACT_PART01 VALUES LESS THAN (TO_DATE('01- MAY -2003','DD-MON-YYYY')) TABLESPACEORD_TS01,
  PARTITION ORD_ACT_PART02 VALUES LESS THAN (TO_DATE('01-JUN-2003','DD-MON-YYYY')) TABLESPACE ORD_TS02,
  PARTITION ORD_ACT_PART02 VALUES LESS THAN (TO_DATE('01-JUL-2003','DD-MON-YYYY')) TABLESPACE ORD_TS03
)
例三：MAXVALUE
CREATE TABLE RangeTable
( 
  idd   INT PRIMARY KEY , 
  iNAME VARCHAR(10), 
  grade INT  
) 
PARTITION  BY  RANGE (grade) 
( 
      PARTITION  part1 VALUES  LESS  THEN (1000) TABLESPACE  Part1_tb, 
      PARTITION  part2 VALUES  LESS  THEN (MAXVALUE) TABLESPACE  Part2_tb 
);
 
二.列表分区：
该分区的特点是某列的值只有几个，基于这样的特点我们可以采用列表分区。
例一
CREATE TABLE PROBLEM_TICKETS 
( 
    PROBLEM_ID   NUMBER(7) NOT NULL PRIMARY KEY, 
    DESCRIPTION  VARCHAR2(2000), 
    CUSTOMER_ID  NUMBER(7) NOT NULL, 
    DATE_ENTERED DATE NOT NULL, 
    STATUS       VARCHAR2(20) 
) 
PARTITION BY LIST (STATUS) 
( 
      PARTITION PROB_ACTIVE   VALUES ('ACTIVE') TABLESPACE PROB_TS01, 
      PARTITION PROB_INACTIVE VALUES ('INACTIVE') TABLESPACE PROB_TS02
例二
CREATE  TABLE  ListTable
( 
    id    INT  PRIMARY  KEY , 
    name  VARCHAR (20), 
    area  VARCHAR (10) 
) 
PARTITION  BY  LIST (area) 
( 
    PARTITION  part1 VALUES ('guangdong','beijing') TABLESPACE  Part1_tb, 
    PARTITION  part2 VALUES ('shanghai','nanjing')  TABLESPACE  Part2_tb 
);
)
 
三.散列分区：
这类分区是在列值上使用散列算法，以确定将行放入哪个分区中。当列的值没有合适的条件时，建议使用散列分区。
散列分区为通过指定分区编号来均匀分布数据的一种分区类型，因为通过在I/O设备上进行散列分区，使得这些分区大小一致。
例一：
CREATE TABLE HASH_TABLE 
( 
  COL NUMBER(8), 
  INF VARCHAR2(100) 
) 
PARTITION BY HASH (COL) 
( 
  PARTITION PART01 TABLESPACE HASH_TS01, 
  PARTITION PART02 TABLESPACE HASH_TS02, 
  PARTITION PART03 TABLESPACE HASH_TS03 
)
简写：
CREATE TABLE emp
(
    empno NUMBER (4),
    ename VARCHAR2 (30),
    sal   NUMBER 
)
PARTITION BY  HASH (empno) PARTITIONS 8
STORE IN (emp1,emp2,emp3,emp4,emp5,emp6,emp7,emp8);
 
hash分区最主要的机制是根据hash算法来计算具体某条纪录应该插入到哪个分区中,hash算法中最重要的是hash函数，Oracle中如果你要使用hash分区，只需指定分区的数量即可。建议分区的数量采用2的n次方，这样可以使得各个分区间数据分布更加均匀。
 
四.组合范围散列分区
这种分区是基于范围分区和列表分区，表首先按某列进行范围分区，然后再按某列进行列表分区，分区之中的分区被称为子分区。
CREATE TABLE SALES 
(
PRODUCT_ID VARCHAR2(5),
SALES_DATE DATE,
SALES_COST NUMBER(10),
STATUS VARCHAR2(20)
)
PARTITION BY RANGE(SALES_DATE) SUBPARTITION BY LIST (STATUS)
(
   PARTITION P1 VALUES LESS THAN(TO_DATE('2003-01-01','YYYY-MM-DD'))TABLESPACE rptfact2009 
          ( 
              SUBPARTITION P1SUB1 VALUES ('ACTIVE') TABLESPACE rptfact2009, 
              SUBPARTITION P1SUB2 VALUES ('INACTIVE') TABLESPACE rptfact2009 
          ), 
   PARTITION P2 VALUES LESS THAN (TO_DATE('2003-03-01','YYYY-MM-DD')) TABLESPACE rptfact2009 
          ( 
              SUBPARTITION P2SUB1 VALUES ('ACTIVE') TABLESPACE rptfact2009, 
              SUBPARTITION P2SUB2 VALUES ('INACTIVE') TABLESPACE rptfact2009 
          ) 
)
 
五.复合范围散列分区：
这种分区是基于范围分区和散列分区，表首先按某列进行范围分区，然后再按某列进行散列分区。
create table dinya_test 
 ( 
 transaction_id number primary key, 
 item_id number(8) not null, 
 item_description varchar2(300), 
 transaction_date date 
 ) 
 partition by range(transaction_date)subpartition by hash(transaction_id)  subpartitions 3 store in (dinya_space01,dinya_space02,dinya_space03) 
 ( 
     partition part_01 values less than(to_date(‘2006-01-01’,’yyyy-mm-dd’)), 
     partition part_02 values less than(to_date(‘2010-01-01’,’yyyy-mm-dd’)), 
     partition part_03 values less than(maxvalue) 
 );
 
(5).有关表分区的一些维护性操作： 
一、添加分区 
以下代码给SALES表添加了一个P3分区
ALTER TABLE SALES ADD PARTITION P3 VALUES LESS THAN(TO_DATE('2003-06-01','YYYY-MM-DD'));
注意：以上添加的分区界限应该高于最后一个分区界限。
以下代码给SALES表的P3分区添加了一个P3SUB1子分区
ALTER TABLE SALES MODIFY PARTITION P3 ADD SUBPARTITION P3SUB1 VALUES('COMPLETE');
二、删除分区 
以下代码删除了P3表分区：
ALTER TABLE SALES DROP PARTITION P3;
在以下代码删除了P4SUB1子分区：
ALTER TABLE SALES DROP SUBPARTITION P4SUB1;
注意：如果删除的分区是表中唯一的分区，那么此分区将不能被删除，要想删除此分区，必须删除表。
三、截断分区 
截断某个分区是指删除某个分区中的数据，并不会删除分区，也不会删除其它分区中的数据。当表中即使只有一个分区时，也可以截断该分区。通过以下代码截断分区：
ALTER TABLE SALES TRUNCATE PARTITION P2;
通过以下代码截断子分区：
ALTER TABLE SALES TRUNCATE SUBPARTITION P2SUB2;
四、合并分区 
合并分区是将相邻的分区合并成一个分区，结果分区将采用较高分区的界限，值得注意的是，不能将分区合并到界限较低的分区。以下代码实现了P1 P2分区的合并：
ALTER TABLE SALES MERGE PARTITIONS P1,P2 INTO PARTITION P2;
五、拆分分区 
拆分分区将一个分区拆分两个新分区，拆分后原来分区不再存在。注意不能对HASH类型的分区进行拆分。
ALTER TABLE SALES SBLIT PARTITION P2 AT(TO_DATE('2003-02-01','YYYY-MM-DD')) INTO (PARTITION P21,PARTITION P22);
六、接合分区(coalesca) 
结合分区是将散列分区中的数据接合到其它分区中，当散列分区中的数据比较大时，可以增加散列分区，然后进行接合，值得注意的是，接合分区只能用于散列分区中。通过以下代码进行接合分区：
ALTER TABLE SALES COALESCA PARTITION;
七、重命名表分区 
以下代码将P21更改为P2
ALTER TABLE SALES RENAME PARTITION P21 TO P2;
八、相关查询
跨分区查询
select sum( *) from
(select count(*) cn from t_table_SS PARTITION (P200709_1)
union all
select count(*) cn from t_table_SS PARTITION (P200709_2)
);
查询表上有多少分区
SELECT * FROM useR_TAB_PARTITIONS WHERE TABLE_NAME='tableName'
查询索引信息
select object_name,object_type,tablespace_name,sum(value)
from v$segment_statistics
where statistic_name IN ('physical reads','physical write','logical reads')and object_type='INDEX'
group by object_name,object_type,tablespace_name
order by 4 desc
 
--显示数据库所有分区表的信息：
select * from DBA_PART_TABLES
 
--显示当前用户可访问的所有分区表信息:
select * from ALL_PART_TABLES
 
--显示当前用户所有分区表的信息：
select * from USER_PART_TABLES
 
--显示表分区信息 显示数据库所有分区表的详细分区信息：
select * from DBA_TAB_PARTITIONS
 
--显示当前用户可访问的所有分区表的详细分区信息：
select * from ALL_TAB_PARTITIONS
 
--显示当前用户所有分区表的详细分区信息：
select * from USER_TAB_PARTITIONS
 
--显示子分区信息 显示数据库所有组合分区表的子分区信息：
select * from DBA_TAB_SUBPARTITIONS
 
--显示当前用户可访问的所有组合分区表的子分区信息：
select * from ALL_TAB_SUBPARTITIONS
 
--显示当前用户所有组合分区表的子分区信息：
select * from USER_TAB_SUBPARTITIONS
 
--显示分区列 显示数据库所有分区表的分区列信息：
select * from DBA_PART_KEY_COLUMNS
 
--显示当前用户可访问的所有分区表的分区列信息：
select * from ALL_PART_KEY_COLUMNS
 
--显示当前用户所有分区表的分区列信息：
select * from USER_PART_KEY_COLUMNS
 
--显示子分区列 显示数据库所有分区表的子分区列信息：
select * from DBA_SUBPART_KEY_COLUMNS
 
--显示当前用户可访问的所有分区表的子分区列信息：
select * from ALL_SUBPART_KEY_COLUMNS
 
--显示当前用户所有分区表的子分区列信息：
select * from USER_SUBPART_KEY_COLUMNS
 
--怎样查询出oracle数据库中所有的的分区表
select * from user_tables a where a.partitioned='YES'
 
--删除一个表的数据是
truncate table table_name;
 
--删除分区表一个分区的数据是
alter table table_name truncate partition p5;
本文出自 “天知道的技术博客” 博客，转载请与作者联系！

------------

1，WHILE

WHILE TO_DATE(VAR_DAY,'YYYY-MM-DD HH24:MI;SS')<SYSDATE  --没有分号

LOOP
	............
	VAR_DAY:=TO_CHAR(TO_DATE(VAR_DAY,'YYYY-MM-DD')+1,'YYYY-MM-DD');
	
END LOOP;

	
2，	FOR

BEGIN
 FOR I IN 1..10
	





------------

1，CREATE OR REPLACE PROCEDURE TEST
AS

CURSOR MY_CURSOR IS
	SELECT * FROM USERS;
VAR_USERS USERS%ROWTYPE;
	
BEGIN
	
	OPEN MY_CURSOR;
	
	LOOP
		FETCH MY_CURSOR IN TO VAR_USERS;
		
		EXIT WHEN MY_CURSOR%NOTFOUND;
		
		.....
		
	END LOOP;
	
END TEST;	

														
2，
  DECLARE
  	CURSOR JOB_CURS IS SELECT * FROM USERS;
  BEGIN 
  
  FOR JOB_CUR IN JOB_CURS
  LOOP
  	DBMS_JOB.REMOVE(JOB_CUR.JOB);
  END LOOP;
  
  END;
  
  	 	 
  														



------------

create table test
(id number,
name varchar2(10),
age number,
phone varchar2(50),
);

/*新建检查*/
alter table test add constraint test_ck check(age>6 and age<14)；

/*删除检查*/

alter table test drop constraint test_ck;

/*给表列增加主键*/

alter table test add constraint c_t primary key (name);



------------

 Oracle 参数 游标[游标更新删除数据]
分类： Oracle 2011-06-02 15:15 999人阅读 评论(0) 收藏 举报
oracledeletereferencetablesql
一、参数游标 
   参数游标是带有参数的游标，在定义参数游标之后，当使用不同参数值多次打开游标时，可以产生不同的结果集，语法如下： 
cursor cursor_name(parameter_name datatype) is select_statement; 
定义参数游标时，游标参数只能指定数据类型，而不能指定长度。 
示例如下：

Oracle代码 
1.declare   
2.cursor temp_cursor(no number) is select name from cip_temps where id=no;   
3.v_name cip_temps.name%type;    
4.begin   
5.open temp_cursor(1);   
6.loop   
7.fetch temp_cursor into v_name;   
8.exit when temp_cursor%notfound;   
9.dbms_output.put_line(v_name);   
10.end loop;   
11.close temp_cursor;   
12.end;  
declare
cursor temp_cursor(no number) is select name from cip_temps where id=no;
v_name cip_temps.name%type; 
begin
open temp_cursor(1);
loop
fetch temp_cursor into v_name;
exit when temp_cursor%notfound;
dbms_output.put_line(v_name);
end loop;
close temp_cursor;
end;

二、使用游标更新或删除数据 
通过使用显示游标，不仅可以一行一行的处理select语句结果，而且也可以更新或删除当前游标的数据，注意，如果要通过游标更新或删除数据，在定义游标时一定要带有for update子句，语法如下： 
cursor cursor_name(parameter_name datatype) is select_statement for updae [of column_reference][nowait];如上所示：for update子句用于在游标结果集数据上加行共享锁，以防止其他用户在相应行上执行DML操作，当select语句要引用到多张表是，使用of子句可以确定哪些表要加锁，如果没有of子句，则会在select语句所引用的全部表上加锁，nowait用于指定不等待锁，为了更新或删除当前游标行数据，必须在update 或delete语句中引用where current of 子句，语法如下： 
update table_name set column=.. where current of cursor_name; 
delete from table_name  where current of cursor_name; 
1、使用游标更新数据

Oracle代码 
1.declare   
2.cursor temp_cursor is select name,address,id from cip_temps for update;   
3.v_name cip_temps.name%type;   
4.v_address cip_temps.ADDRESS%type;   
5.v_id cip_temps.id%type;   
6.begin   
7.open temp_cursor;   
8.loop   
9.fetch temp_cursor into v_name,v_address,v_id;   
10.exit when temp_cursor%NOTFOUND;   
11.if(v_id>4) then   
12.update cip_temps set name='name'||to_char(v_id),address='address'||to_char(v_id) where current of temp_cursor;   
13.end if;   
14.end loop;   
15.close temp_cursor;   
16.end;  
declare
cursor temp_cursor is select name,address,id from cip_temps for update;
v_name cip_temps.name%type;
v_address cip_temps.ADDRESS%type;
v_id cip_temps.id%type;
begin
open temp_cursor;
loop
fetch temp_cursor into v_name,v_address,v_id;
exit when temp_cursor%NOTFOUND;
if(v_id>4) then
update cip_temps set name='name'||to_char(v_id),address='address'||to_char(v_id) where current of temp_cursor;
end if;
end loop;
close temp_cursor;
end;

2、使用游标删除数据  

Oracle代码 
1.declare   
2.cursor temp_cursor is select name,address,id from cip_temps for update;   
3.v_name cip_temps.name%type;   
4.v_address cip_temps.ADDRESS%type;   
5.v_id cip_temps.id%type;   
6.begin   
7.open temp_cursor;   
8.loop   
9.fetch temp_cursor into v_name,v_address,v_id;   
10.exit when temp_cursor%NOTFOUND;   
11.if(v_id>2) then   
12.delete from cip_temps where current of temp_cursor;   
13.end if;   
14.end loop;   
15.close temp_cursor;   
16.end;  
declare
cursor temp_cursor is select name,address,id from cip_temps for update;
v_name cip_temps.name%type;
v_address cip_temps.ADDRESS%type;
v_id cip_temps.id%type;
begin
open temp_cursor;
loop
fetch temp_cursor into v_name,v_address,v_id;
exit when temp_cursor%NOTFOUND;
if(v_id>2) then
delete from cip_temps where current of temp_cursor;
end if;
end loop;
close temp_cursor;
end;

3、使用of子句在特定表加行共享锁。 
如果使用子查询涉及到多张表，那么默认情况下会在所有表上加行共享锁，为了只在特定表上加行共享锁，需要在for update子句后带有of子句，of后面跟字段名，如果跟表名或游标名称，则会报错：标示符无效。示例如下：

Oracle代码 
1.declare   
2.cursor gData is select name,address,cip_temps.id from cip_temps,cip_t    
3.where cip_temps.id=cip_t.id for update  of address;   
4.rs gData%rowtype;   
5.begin   
6.  open gData;   
7.  loop   
8.     fetch gData into rs;   
9.     exit when gData%notfound;   
10.         if rs.id=1 then   
11.            delete from cip_temps where current of gData;    
12.         else   
13.            update cip_temps set name='塞北的雪' where current of gData;   
14.         end if;   
15.     
16.  end loop;   
17.  close gData;   
18.end;  
declare
cursor gData is select name,address,cip_temps.id from cip_temps,cip_t 
where cip_temps.id=cip_t.id for update  of address;
rs gData%rowtype;
begin
  open gData;
  loop
     fetch gData into rs;
     exit when gData%notfound;
         if rs.id=1 then
            delete from cip_temps where current of gData; 
         else
            update cip_temps set name='塞北的雪' where current of gData;
         end if;
  
  end loop;
  close gData;
end;

4、使用nowait子句 
使用for update语句对被作用于行加锁，如果其他会话已经在被作用于行上加锁，那么默认情况下当前会话要一直等待对方释放锁，通过在for update子句中指定 nowait语句，可以避免等待锁，当指定了nowait子句之后，如果其他会话已经在被作用行加锁，那么当前会话会显示错误提示信息，并退出PL/SQL,示例如下：

Oracle代码 
1.declare   
2.cursor gData is select name,address,cip_temps.id from cip_temps,cip_t    
3.where cip_temps.id=cip_t.id for update  nowait;   
4.rs gData%rowtype;   
5.begin   
6.  open gData;   
7.  loop   
8.     fetch gData into rs;   
9.     exit when gData%notfound;   
10.         if rs.id=1 then   
11.            delete from cip_temps where current of gData;    
12.         else   
13.            update cip_temps set name='塞北的雪' where current of gData;   
14.         end if;   
15.     
16.  end loop;   
17.  close gData;   
18.end;  
declare
cursor gData is select name,address,cip_temps.id from cip_temps,cip_t 
where cip_temps.id=cip_t.id for update  nowait;
rs gData%rowtype;
begin
  open gData;
  loop
     fetch gData into rs;
     exit when gData%notfound;
         if rs.id=1 then
            delete from cip_temps where current of gData; 
         else
            update cip_temps set name='塞北的雪' where current of gData;
         end if;
  
  end loop;
  close gData;
end;

三、游标for循环 
   使用游标for循环是循环游标最简单的方法，oracle会隐含打开游标、循环提取数据、关闭游标，语法如下： 
     for record_name  in cursor_name  loop 
           .......... 
     end loop; 
如上所示：cursor_name是已经定义的游标名称，record_name是oracle隐含定义的记录变量。 
1、使用游标for循环 
   当使用游标开发程序时，建议使用for循环，从而简化代码程序，示例如下：

Oracle代码 
1.declare   
2.cursor temp_cursor is  select name,age,address,id from cip_temps;   
3.begin   
4.for emp_record in temp_cursor loop   
5.dbms_output.put_line(temp_cursor%rowcount||'第一行数据:'||emp_record.name||':'|| emp_record.age||':'||  emp_record.address||':'|| emp_record.id);   
6.end loop;   
7.end;  
declare
cursor temp_cursor is  select name,age,address,id from cip_temps;
begin
for emp_record in temp_cursor loop
dbms_output.put_line(temp_cursor%rowcount||'第一行数据:'||emp_record.name||':'|| emp_record.age||':'||  emp_record.address||':'|| emp_record.id);
end loop;
end;

2、在游标for循环时直接使用子查询

Sql代码 
1.declare      
2.begin      
3.for emp_record in (select * from cip_temps) loop      
4.dbms_output.put_line('第一行数据:'||emp_record.name||':'|| emp_record.age||':'||  emp_record.address||':'|| emp_record.id);      
5.end loop;      
6.end;

------------

ORACLE如何停止一个JOB
 
1      相关表、视图
　dba_jobs
　　all_jobs
　　user_jobs 包含登录用户所有的JOB信息
　　dba_jobs_running 包含正在运行job相关信息
注意
  须使用oracle的sys用户登录到数据库，才能查看dba_jobs_running, v$process, v$session表的信息。同时，登录操作系统时，要用oracle用户。
2      问题描述
为同事解决一个因为网络连接情况不佳时，执行一个超长时间的SQL插入操作。
既然网络状况不好，就选择了使用一次性使用JOB来完成该插入操作。在JOB执行一段时间后，我发现被插入表有些问题（惭愧，当时也没有先检查检查就做了）。准备停止JOB，因为在JOB运行情况下，我的所有修改都会报系统资源忙的错误。
强行KILL SESSION是行不通的，因为过会儿，JOB还会重新启动，如果执行的SQL也被KILL了通过重新启动的JOB还是会被再次新执行的。
3      解决办法
   比较好的方法应该是;
1. 首先确定要停止的JOB号
    在10g中可通过Dba_Jobs_Running进行确认。
    查找正在运行的JOB:
    select sid from dba_jobs_running;
 
    查找到正在运行的JOB的spid:
    select a.spid from v$process a ,v$session b where a.addr=b.paddr  and b.sid in (select sid from dba_jobs_running);
 
 2. Broken你确认的JOB    
    注意使用DBMS_JOB包来标识你的JOB为BROKEN。
    SQL> EXEC DBMS_JOB.BROKEN(job#,TRUE);
   注意：当执行完该命令你选择的这个JOB还是在运行着的。
 
3. Kill 对应的Oracle Session
    应为BROKEN后该JOB还在运行，如果要求该JOB立刻停止，就需要找到该job的对应SESSION(SID,SERIAL#)，然后执行以下命令：
    ALTER SYSTEM KILL SESSION 'sid,serial#';
     或者直接KILL对应的操作系统的SESSION，如果使用ALTER SYSTEM KILL SESSION执行很长时间，其实可以使用OS的命令来快速KILL掉SESSION.
     For Windows, at the DOS Prompt: orakill sid spid
     For UNIX at the command line> kill –9 spid
 
4. 检查你的JOB是否还在运行
   检查你要停止的JOB是否还在运行，其实多数情况下，应该都已经停止了。尤其执行的第三步的“杀手”命令。如果真的还是没有停止，只好从第一道第三步重新做一下了。
 
5. 将Job Queue Processes的数目修改为0  
    首先确认当前的Job Queue Processes的数目
    SQL> col value for a10
    SQL> select name,value from v$parameter where name ='job_queue_processes';     
    然后将Job Queue Processes的数目修改为0
    SQL> ALTER SYSTEM SET job_queue_processes = 0;
     保证所有的JOB都会停止。
 
6. 修改你要修改的任何东西，甚至是JOB内的内容。
 
7. 修改完成后，将job的BROKEN状态停止。
SQL>EXEC DBMS_JOB.BROKEN(job#,FALSE):
 
8. 恢复job_queue_processes的原始值
     ALTER SYSTEM SET job_queue_processes = original_value;
    至此整个停止并修改JOB完成.
    
    但是需要另外注意一下的是，在MARK一个BROKEN状态的时候，因为JOB内部执行SQL的原因，所以执行时或许要“煎熬”一段时间。所以在建立JOB时一定要仔细考虑，同时如果可能可以在你设计的PL/SQL代码中，增加一些判断“停止信号”的部分。来避免费力执行上面的步骤。
    毕竟，ORACLE在执行JOB时，还是很“倔强”的 -:)
 
4      附件：ORAKILL用法
很多时候遇到某个session一直处于active，使得CPU一直处于搞使用状态，虽然kill 了，但是却不能够使得使得线程结束。 kill session只是kill这个进程，但是线程一直处于活动状态。需要真正的kill线程才能够解决cpu使用率高的问题。
os ：windows2003
ORAKILL用法是 orakill sid spid 其中sid为实例名，spid为线程号。
怎么样取得这个spid呢？
以下给出查找spid的语句。
select spid, osuser, s.program from  v$process p, v$session s
where p.addr=s.paddr  and s.sid = XXX;
--说明:XXX为session的sid (不是数据库SID 呵呵)。自己输入就可以。
orakill instance_name spid
这样就能够成功解决cpu使用率高的问题

------------

TEST_INS_EVT_LOG_RTIME_4_SIT
TEST_INS_EVT_LOG_R_U_4_UAT




------------

1.查询数据库当前进程的连接数： 

select count(*) from v$process; 

2.查看数据库当前会话的连接数： 

select count(*) from v$session; 

3.查看数据库的并发连接数： 

select count(*) from v$session where status='ACTIVE'; 

4.查看当前数据库建立的会话情况： 

select sid,serial#,username,program,machine,status from v$session; 

5.查询数据库允许的最大连接数： 

select value from v$parameter where name = 'processes'; 

或者命令：show parameter processes; 

6.修改数据库允许的最大连接数： 

alter system set processes = 300 scope = spfile;



查看一下数据库现有的进程数，是否已经达到参数processes的大小。
1.select count(*) from v$process;取得数据库目前的进程数。
2.select value from v$parameter where name = 'processes';取得进程数的上限。

alter system set session_cached_c	ursors=200 scope=spfile;
alter system set session_max_open_files=200 scope=spfile;
alter system set sessions=20 scope=spfile;
alter system set license_max_sessions=200 scope=spfile;
alter system set license_sessions_warning=200 scope=spfile;
alter system set processes=200 scope=spfile;


2、查询Oracle游标使用情况的方法
   select * from v$open_cursor where user_name = '用户名'；
3、查询Oracle会话的方法
   select * from v$sessionSELECT   /*+ ORDERED */
         sql_text
    FROM v$sqltext a
   WHERE (a.hash_value, a.address) IN (
            SELECT DECODE (sql_hash_value,
                           0, prev_hash_value,
                           sql_hash_value
                          ),
                   DECODE (sql_hash_value, 0, prev_sql_addr, sql_address)
              FROM v$session b
             WHERE b.paddr = (SELECT addr
                                FROM v$process c
                               WHERE c.spid = '&pid'))
ORDER BY piece ASC
/

1.	查看数据库中NOW耗费资源TOP10的SQL_TXT.
select  * from 
(select   ses.SID, ses.username,ses.machine,ses.program,
          sql.sql_text,sn.NAME, sest.VALUE
from     v$session ses, v$statname sn, v$sesstat sest,
          v$sqlarea sql
where    ses.SID = sest.SID
and      sn.STATISTIC# = sest.STATISTIC#
and      ses.sql_address=sql.address
and      sest.VALUE is not null
and      sest.VALUE != 0  
order by sest.value desc)
where rownum<11;


2.	查看数据库中现在CPU占用过高的TOP10 SESSION
SELECT * FROM 
(select   nvl(ss.USERNAME,'ORACLE PROC'),
         se.SID,
         VALUE
from     V$session ss, V$sesstat se, V$statname sn
where    se.STATISTIC# = sn.STATISTIC#
and      NAME like '%CPU used by this session%'
and      se.SID = ss.SID
order by VALUE desc)
WHERE ROWNUM<11;


3.	查看耗费内存的SQPID
select a.sid,a.serial#,a.terminal,a.program ,b.sql_text,
b.buffer_gets 
from v$session a ,v$sqlarea b
 where a.sql_address=b.address  order by b.buffer_gets desc;
此sql在oracle数据库中alter kill oracle进程所用。
 
 
4.	根据13查询的SQPID查询正在运行的此SQPID的SQL_TXT内容
SELECT   /*+ ORDERED */
         sql_text
    FROM v$sqltext a
   WHERE (a.hash_value, a.address) IN (
            SELECT DECODE (sql_hash_value,
                           0, prev_hash_value,
                           sql_hash_value
                          ),
                   DECODE (sql_hash_value, 0, prev_sql_addr, sql_address)
              FROM v$session b
             WHERE b.paddr = (SELECT addr
                                FROM v$process c
                               WHERE c.spid = '&pid'))
ORDER BY piece ASC
/
此SQL需要首先查找到系统现有的PID，使用topas抓去占用CPU%较高的PID，使用SYS运行SQL，将被要求输入PID，结束后，后台会抓去此PID对应的后台正在运行的SQL。


------------

如何动态扩大oracle 9i SGA区中的内存空间？


Oracle 9i 具有动态SGA的功能，用操作系统命令查看系统内存时，发现系统中还有空闲内存. 但为什么有时使用oracle 9i 的 
sql > alter system set db_cache_size=xxxxM 
命令时数据库会报告错 -- 没有足够的内存. 这是由操作系统引起的吗？ 

不是，原因在于此时SGA区中没有多余空闲内存。尽管系统中有空闲内存，但未分配给SGA 区。 
在oracle 9i 中 动态SGA的概念是无需经过 关闭实例（instance）, 修改初始化参数文件和重启实例这一过程，就可动态调整 buffer cache 和 share pool 的大小。 另外，动态SGA允许在实例运行时设置，下次启动时将有多少物理内存分配给SGA 这一数据库参数。 SGA 可用最大物理内存是由SGA_MAX_SIZE 参数来决定的。 
在启动实例时，大小为SGA_MAX_SIZE 的内存就分配给了SGA，SGA成员（buffer cache, share pool等）根据参数值也会获得相应的内存。 
实例启动后SGA的各成员所用内存之和可以小于SGA_MAX_SIZE。 数据库管理员通过使用 alter system 命令来调整SGA成员间的内存分配。 当SGA中有足够多的空闲内存时，增大share pool 或 buffer cache 才能完成，否则会报内存不足。 
另外Share pool 和 buffer cache 的尺寸也可动态缩小。 当实例已启动，SGA已达到 SGA_MAX_SIZE值，可通过先减少某一成员的内存，再增加另一成员的内存来完成。 
SGA成员间是相互独立的，在成员间分配内存时，其和一定不能大于 SGA_MAX_SIZE ， 并且db_cache_size 参数不能等于0。 

在OLAP与OLTP混合型的应用环境中，利用动态SGA的功能，可以根据不同时刻应用的优先级，来动态的调整buffer cache 和 share pool 的尺寸，以提高系统的性能 ： 
a. 当OLTP 应用 优先级高时，缩小 buffer cache 的值，增大 share pool 的值； 
b. 当 OLAP 应用优先级高时，缩小 share pool 的值，增大buffer cache 的值。 

例如： 
1． 增大buffer cache 尺寸 
SQL> show parameter db_cache_size; 显示当前 buffer chache 的大小 
NAME TYPE VALUE 
-------------------------- ----------- ----------------- 
db_cache_size big integer 4194304 
SQL> alter system set db_cache_size=8M; 增大buffer cache 到8MB。 
System altered. 
SQL> show parameter db_cache_size; 
NAME TYPE VALUE 
-------------------------- ----------- ----------------- 
db_cache_size big integer 8388608 

2. 调整参数 SGA_MAX_SIZE (需重启实例) 
SQL> alter system set SGA_MAX_SIZE= 1000M scope=spfile; 
System altered. 

3． 增大shared_pool_size 尺寸 
假设，初始参数值为： 
SGA_MAX_SIZE=128M 
DB_CACHE_SIZE=88M 
SHARED_POOL_SIZE=32M 

SQL>ALTER SYSTEM SET SHARED_POOL_SIZE=64M; 设置share_pool 的内存为64M 
Error ORA-04033, insufficient memory 

SQL>ALTER SYSTEM SET DB_CACHE_SIZE=56M; 减少buffer cache 的大小 
SQL>ALTER SYSTEM SET SHARED_POOL_SIZE=64M; 
Error ORA-04033, insufficient memory 
需要等 buffer cache 释放完，才可扩大 share pool 的大小 

SQL> select * from v$buffer_pool ; 检查内存释放是否完成。 

SQL>ALTER SYSTEM SET SHARED_POOL_SIZE=64M; 
System altered. 

------------

我们知道，用户拥有的role权限在存储过程是不可用的。如： 
SQL> select * from dba_role_privs where grantee='SUK';
GRANTEE GRANTED_ROLE ADMIN_OPTION DEFAULT_ROLE
------------ ------------ ------------ ------------
SUK DBA NO YES
SUK CONNECT NO YES
SUK RESOURCE NO YES
--用户SUK拥有DBA这个role
--再创建一个测试存储过程：
create or replace procedure p_create_table 
is
begin
Execute Immediate 'create table create_table(id int)';
end p_create_table;
--然后测试
SQL> exec p_create_table;
begin p_create_table; end;
ORA-01031: 权限不足
ORA-06512: 在"SUK.P_CREATE_TABLE", line 3
ORA-06512: 在line 1
--可以看到，即使拥有DBA role，也不能创建表。role在存储过程中不可用。
--遇到这种情况，我们一般需要显式进行系统权限，如grant create table to suk;
--但这种方法太麻烦，有时候可能需要进行非常多的授权才能执行存储过程
--实际上，oracle给我们提供了在存储过程中使用role权限的方法：
--修改存储过程，加入Authid Current_User时存储过程可以使用role权限。
create or replace procedure p_create_table 
Authid Current_User is
begin
Execute Immediate 'create table create_table(id int)';
end p_create_table;
--再尝试执行：
SQL> exec p_create_table;
PL/SQL procedure successfully completed
--已经可以执行了。

------------

Oracle数据库数据导出dump方式
 
linux下   www.2cto.com  
Java代码  
[root@infodb111 ~]# su - oracle  
[oracle@infodb111 /]$ mkdir /oracle/dump_dir  
[oracle@infodb111 /]$ sqlplus / as sysdba  
SQL> create directory dump_dir as '/oracle/dump_dir';  
SQL> grant read,write on directory dump_dir to scott;  
Grant succeeded  
SQL> grant read,write on directory biappdump to maxthonbi;  
 
创建脚本文件 
  www.2cto.com  
Java代码  
   
[root@infodb111 ~]# vim biappdbback.sh   
  
#!/bin/sh  
D=maxthon_$(date +%Y%m%d);  
export D;  
expdp 'maxthon/maxthon@orcl' directory=biappdump dumpfile=${D}.dmp  
  
//保存退出  
  
授权：  
  
[root@infodb111 ~]# chown oracle:dba biappdbback.sh   
[root@infodb111 ~]# chmod 775 biappdbback.sh   
 
 
 
运行 
Java代码  
[root@infodb111 ~]$ ./biappdbback.sh  
  
Export: Release 10.2.0.4.0 - Production on Wednesday, 26 May, 2010 11:02:10  
  
Copyright (c) 2003, 2007, Oracle. All rights reserved.  
  
Connected to: Oracle Database 10g Enterprise Edition Release 10.2.0.4.0 - Production  
With the Partitioning, OLAP, Data Mining and Real Application Testing options  
ORA-39006: internal error  
ORA-39213: Metadata processing is not available  
 
发现有错误，查找错误原因 
Java代码  
[oracle@infodb111 /]$ oerr ora 39006  
39006, 00000, "internal error"  
// *Cause: An unexpected error occurred while processing a Data Pump job.  
//          Subsequent messages supplied by DBMS_DATAPUMP.GET_STATUS  
//          will further describe the error.  
// *Action: Contact Oracle Customer Support.  
[oracle@infodb111 /]$ oerr ora 39213  
39213, 00000, "Metadata processing is not available"  
// *Cause: The Data Pump could not use the Metadata API. Typically,  
//          this is caused by the XSL stylesheets not being set up properly.  
// *Action: Connect AS SYSDBA and execute dbms_metadata_util.load_stylesheets  
//          to reload the stylesheets.  
 
根据oerr ora 39213提示，执行exec dbms_metadata_util.load_stylesheets; 
 
再进行导出正常，问题解决。 
 

------------

-- alter table event_log_50 nologging;使用于中间表
 
 
 insert /*+ APPEND */ into EVENT_LOG_50
 
   select 
     event_id, event_time, ip_address, event_type, user_defined_event_type, risk_score, policy_action, challenge_auth_method, challenge_successful, policy_rule_id, short_date, sys_creation_date, lastmodified, user_id, user_hash, preliminary_score, ip_country, ip_city, channel_indicator, operating_system, browser_type, amount_original, amount_currency, user_acct_number, ext_acct_number, ext_acct_owner_name, flagged, resolution, cdf_s_1, cdf_s_2, cdf_s_3, cdf_s_4, cdf_s_5, cdf_s_6, cdf_s_7, cdf_s_8, cdf_s_9, cdf_s_10, cdf_s_11, cdf_s_12, cdf_s_13, cdf_s_14, cdf_s_15, cdf_s_16, cdf_s_17, cdf_s_18, cdf_s_19, cdf_s_20, org_id, is_device_bound, cookie, ip_region

    from event_log_test as  of scn 348278059;select * from v$transaction;--事务

select paddr,p.spid,s.sid from v$session s, v$process p where s.PADDR=p.addr and taddr='070000022076FF30';
select * from v$process where addr='07000002313B8560';
select * from v$sql where address='07000002383D3B50';



select * from  event_log_test;

select count(1) from EVENT_LOG_TEST2;SQL> select to_char(current_scn) from v$database;

TO_CHAR(CURRENT_SCN)
----------------------------------------
348278059


expdp tmrpt/tmrpt dumpfile=event_test222.dmp directory=DUMPDIR TABLES=tmrpt.event_log_test logfile=event_test222.log job_name=event_test parallel=4 FLASHBACK_SCN=348278059

 exp rsa_core/rsa_core file=/rsatm/dump/event_test111.dmp log=/rsatm/dump/event_test111.log  TABLES=rsa_core.event_log_test2 
 
 

------------

源贴地址:http://topic.csdn.net/u/20090520/15/08a03d2e-a537-4c06-b79a-7e2f7ed5f898.html

1,

+ expand sourceview plaincopy to clipboardPRint?
ASCII    
返回与指定的字符对应的十进制数;    
SQL> select ascii(A) A,ascii(a) a,ascii(0) zero,ascii( ) space from dual;    
A A ZERO SPACE    
--------- --------- --------- ---------    
65 97 48 32    
  
2. CHR    
给出整数,返回对应的字符;    
SQL> select chr(54740) zhao,chr(65) chr65 from dual;    
ZH C    
-- -    
赵 A    
3. CONCAT    
连接两个字符串;    
SQL> select concat(010-,88888888)||转23 高乾竞电话 from dual;    
高乾竞电话    
----------------    
010-88888888转23    
4. INITCAP    
返回字符串并将字符串的第一个字母变为大写;    
SQL> select initcap(smith) upp from dual;    
UPP    
-----    
Smith    
  
5.INSTR(C1,C2,I,J)    
在一个字符串中搜索指定的字符,返回发现指定的字符的位置;    
C1 被搜索的字符串    
C2 希望搜索的字符串    
I 搜索的开始位置,默认为1    
J 出现的位置,默认为1    
SQL> select instr(Oracle traning,ra,1,2) instring from dual;    
INSTRING    
---------    
9    
  
6.LENGTH    
返回字符串的长度;    
SQL> select name,length(name),addr,length(addr),sal,length(to_char(sal)) from gao.nchar_tst;    
NAME LENGTH(NAME) ADDR LENGTH(ADDR) SAL LENGTH(TO_CHAR(SAL))    
------ ------------ ---------------- ------------ --------- --------------------    
高乾竞 3 北京市海锭区 6 9999.99 7    
  
7.LOWER    
返回字符串,并将所有的字符小写    
SQL> select lower(AaBbCcDd)AaBbCcDd from dual;    
AABBCCDD    
--------    
aabbccdd    
  
8.UPPER    
返回字符串,并将所有的字符大写    
SQL> select upper(AaBbCcDd) upper from dual;    
UPPER    
--------    
AABBCCDD    
  
9.RPAD和LPAD(粘贴字符)    
RPAD 在列的右边粘贴字符    
LPAD 在列的左边粘贴字符    
SQL> select lpad(rpad(gao,10,*),17,*)from dual;    
LPAD(RPAD(GAO,1    
-----------------    
*******gao*******    
不够字符则用*来填满    
  
10.LTRIM和RTRIM    
LTRIM 删除左边出现的字符串    
RTRIM 删除右边出现的字符串    
SQL> select ltrim(rtrim( gao qian jing , ), ) from dual;    
LTRIM(RTRIM(    
-------------    
gao qian jing    
  
11.SUBSTR(string,start,count)    
取子字符串,从start开始,取count个    
SQL> select substr(13088888888,3,8) from dual;    
SUBSTR(    
--------    
08888888    
  
12.REPLACE(string,s1,s2)    
string 希望被替换的字符或变量    
s1 被替换的字符串    
s2 要替换的字符串    
SQL> select replace(he love you,he,i) from dual;    
REPLACE(H    
----------    
i love you    
  
13.SOUNDEX    
返回一个与给定的字符串读音相同的字符串    
SQL> create table table1(xm varchar(8));    
SQL> insert into table1 values(weather);    
SQL> insert into table1 values(wether);    
SQL> insert into table1 values(gao);    
SQL> select xm from table1 where soundex(xm)=soundex(weather);    
XM    
--------    
weather    
wether    
&#8226; 14.TRIM(s from string)    
LEADING 剪掉前面的字符    
TRAILING 剪掉后面的字符    
如果不指定,默认为空格符    
15.ABS    
返回指定值的绝对值    
SQL> select abs(100),abs(-100) from dual;    
ABS(100) ABS(-100)    
--------- ---------    
100 100    
  
16.ACOS    
给出反余弦的值    
SQL> select acos(-1) from dual;    
ACOS(-1)    
---------    
3.1415927    
  
17.ASIN    
给出反正弦的值    
SQL> select asin(0.5) from dual;    
ASIN(0.5)    
---------    
.52359878    
  
18.ATAN    
返回一个数字的反正切值    
SQL> select atan(1) from dual;    
ATAN(1)    
---------    
.78539816    
  
19.CEIL    
返回大于或等于给出数字的最小整数    
SQL> select ceil(3.1415927) from dual;    
CEIL(3.1415927)    
---------------    
4    
  
20.COS    
返回一个给定数字的余弦    
SQL> select cos(-3.1415927) from dual;    
COS(-3.1415927)    
---------------    
-1    
ASCII 
返回与指定的字符对应的十进制数; 
SQL> select ascii(A) A,ascii(a) a,ascii(0) zero,ascii( ) space from dual; 
A A ZERO SPACE 
--------- --------- --------- --------- 
65 97 48 32 

2. CHR 
给出整数,返回对应的字符; 
SQL> select chr(54740) zhao,chr(65) chr65 from dual; 
ZH C 
-- - 
赵 A 
3. CONCAT 
连接两个字符串; 
SQL> select concat(010-,88888888)||转23 高乾竞电话 from dual; 
高乾竞电话 
---------------- 
010-88888888转23 
4. INITCAP 
返回字符串并将字符串的第一个字母变为大写; 
SQL> select initcap(smith) upp from dual; 
UPP 
----- 
Smith 

5.INSTR(C1,C2,I,J) 
在一个字符串中搜索指定的字符,返回发现指定的字符的位置; 
C1 被搜索的字符串 
C2 希望搜索的字符串 
I 搜索的开始位置,默认为1 
J 出现的位置,默认为1 
SQL> select instr(oracle traning,ra,1,2) instring from dual; 
INSTRING 
--------- 
9 

6.LENGTH 
返回字符串的长度; 
SQL> select name,length(name),addr,length(addr),sal,length(to_char(sal)) from gao.nchar_tst; 
NAME LENGTH(NAME) ADDR LENGTH(ADDR) SAL LENGTH(TO_CHAR(SAL)) 
------ ------------ ---------------- ------------ --------- -------------------- 
高乾竞 3 北京市海锭区 6 9999.99 7 

7.LOWER 
返回字符串,并将所有的字符小写 
SQL> select lower(AaBbCcDd)AaBbCcDd from dual; 
AABBCCDD 
-------- 
aabbccdd 

8.UPPER 
返回字符串,并将所有的字符大写 
SQL> select upper(AaBbCcDd) upper from dual; 
UPPER 
-------- 
AABBCCDD 

9.RPAD和LPAD(粘贴字符) 
RPAD 在列的右边粘贴字符 
LPAD 在列的左边粘贴字符 
SQL> select lpad(rpad(gao,10,*),17,*)from dual; 
LPAD(RPAD(GAO,1 
----------------- 
*******gao******* 
不够字符则用*来填满 

10.LTRIM和RTRIM 
LTRIM 删除左边出现的字符串 
RTRIM 删除右边出现的字符串 
SQL> select ltrim(rtrim( gao qian jing , ), ) from dual; 
LTRIM(RTRIM( 
------------- 
gao qian jing 

11.SUBSTR(string,start,count) 
取子字符串,从start开始,取count个 
SQL> select substr(13088888888,3,8) from dual; 
SUBSTR( 
-------- 
08888888 

12.REPLACE(string,s1,s2) 
string 希望被替换的字符或变量 
s1 被替换的字符串 
s2 要替换的字符串 
SQL> select replace(he love you,he,i) from dual; 
REPLACE(H 
---------- 
i love you 

13.SOUNDEX 
返回一个与给定的字符串读音相同的字符串 
SQL> create table table1(xm varchar(8)); 
SQL> insert into table1 values(weather); 
SQL> insert into table1 values(wether); 
SQL> insert into table1 values(gao); 
SQL> select xm from table1 where soundex(xm)=soundex(weather); 
XM 
-------- 
weather 
wether 
&#8226; 14.TRIM(s from string) 
LEADING 剪掉前面的字符 
TRAILING 剪掉后面的字符 
如果不指定,默认为空格符 
15.ABS 
返回指定值的绝对值 
SQL> select abs(100),abs(-100) from dual; 
ABS(100) ABS(-100) 
--------- --------- 
100 100 

16.ACOS 
给出反余弦的值 
SQL> select acos(-1) from dual; 
ACOS(-1) 
--------- 
3.1415927 

17.ASIN 
给出反正弦的值 
SQL> select asin(0.5) from dual; 
ASIN(0.5) 
--------- 
.52359878 

18.ATAN 
返回一个数字的反正切值 
SQL> select atan(1) from dual; 
ATAN(1) 
--------- 
.78539816 

19.CEIL 
返回大于或等于给出数字的最小整数 
SQL> select ceil(3.1415927) from dual; 
CEIL(3.1415927) 
--------------- 
4 

20.COS 
返回一个给定数字的余弦 
SQL> select cos(-3.1415927) from dual; 
COS(-3.1415927) 
--------------- 
-1  


2,

+ expand sourceview plaincopy to clipboardprint?
21.COSH    
返回一个数字反余弦值    
SQL> select cosh(20) from dual;    
COSH(20)    
---------    
242582598    
  
22.EXP    
返回一个数字e的n次方根    
SQL> select exp(2),exp(1) from dual;    
EXP(2) EXP(1)    
--------- ---------    
7.3890561 2.7182818    
  
23.FLOOR    
对给定的数字取整数    
SQL> select floor(2345.67) from dual;    
FLOOR(2345.67)    
--------------    
2345    
  
24.LN    
返回一个数字的对数值    
SQL> select ln(1),ln(2),ln(2.7182818) from dual;    
LN(1) LN(2) LN(2.7182818)    
--------- --------- -------------    
0 .69314718 .99999999    
  
25.LOG(n1,n2)    
返回一个以n1为底n2的对数    
SQL> select log(2,1),log(2,4) from dual;    
LOG(2,1) LOG(2,4)    
--------- ---------    
0 2    
  
26.MOD(n1,n2)    
返回一个n1除以n2的余数    
SQL> select mod(10,3),mod(3,3),mod(2,3) from dual;    
MOD(10,3) MOD(3,3) MOD(2,3)    
--------- --------- ---------    
1 0 2    
  
27.POWER    
返回n1的n2次方根    
SQL> select power(2,10),power(3,3) from dual;    
POWER(2,10) POWER(3,3)    
----------- ----------    
1024 27    
  
28.ROUND和TRUNC    
按照指定的精度进行舍入    
SQL> select round(55.5),round(-55.4),trunc(55.5),trunc(-55.5) from dual;    
ROUND(55.5) ROUND(-55.4) TRUNC(55.5) TRUNC(-55.5)    
----------- ------------ ----------- ------------    
56 -55 55 -55    
  
29.SIGN    
取数字n的符号,大于0返回1,小于0返回-1,等于0返回0    
SQL> select sign(123),sign(-100),sign(0) from dual;    
SIGN(123) SIGN(-100) SIGN(0)    
--------- ---------- ---------    
1 -1 0    
  
30.SIN    
返回一个数字的正弦值    
SQL> select sin(1.57079) from dual;    
SIN(1.57079)    
------------    
1    
&#8226; 31.SIGH    
返回双曲正弦的值    
SQL> select sin(20),sinh(20) from dual;    
SIN(20) SINH(20)    
--------- ---------    
.91294525 242582598    
  
32.SQRT    
返回数字n的根    
SQL> select sqrt(64),sqrt(10) from dual;    
SQRT(64) SQRT(10)    
--------- ---------    
8 3.1622777    
  
33.TAN    
返回数字的正切值    
SQL> select tan(20),tan(10) from dual;    
TAN(20) TAN(10)    
--------- ---------    
2.2371609 .64836083    
  
34.TANH    
返回数字n的双曲正切值    
SQL> select tanh(20),tan(20) from dual;    
TANH(20) TAN(20)    
--------- ---------    
1 2.2371609    
  
35.TRUNC    
按照指定的精度截取一个数    
SQL> select trunc(124.1666,-2) trunc1,trunc(124.16666,2) from dual;    
TRUNC1 TRUNC(124.16666,2)    
--------- ------------------    
100 124.16    
  
36.ADD_MONTHS    
增加或减去月份    
SQL> select to_char(add_months(to_date(199912,yyyymm),2),yyyymm) from dual;    
TO_CHA    
------    
200002    
SQL> select to_char(add_months(to_date(199912,yyyymm),-2),yyyymm) from dual;    
TO_CHA    
------    
199910    
  
37.LAST_DAY    
返回日期的最后一天    
SQL> select to_char(sysdate,yyyy.mm.dd),to_char((sysdate)+1,yyyy.mm.dd) from dual;    
TO_CHAR(SY TO_CHAR((S    
---------- ----------    
2004.05.09 2004.05.10    
SQL> select last_day(sysdate) from dual;    
LAST_DAY(S    
----------    
31-5月 -04    
  
38.MONTHS_BETWEEN(date2,date1)    
给出date2-date1的月份    
SQL> select months_between(19-12月-1999,19-3月-1999) mon_between from dual;    
MON_BETWEEN    
-----------    
9    
SQL>selectmonths_between(to_date(2000.05.20,yyyy.mm.dd),to_date(2005.05.20,yyyy.mm.dd)) mon_betw from dual;    
MON_BETW    
---------    
-60    
  
39.NEW_TIME(date,this,that)    
给出在this时区=other时区的日期和时间    
SQL> select to_char(sysdate,yyyy.mm.dd hh24:mi:ss) bj_time,to_char(new_time    
2 (sysdate,PDT,GMT),yyyy.mm.dd hh24:mi:ss) los_angles from dual;    
BJ_TIME LOS_ANGLES    
------------------- -------------------    
2004.05.09 11:05:32 2004.05.09 18:05:32    
  
40.NEXT_DAY(date,day)    
给出日期date和星期x之后计算下一个星期的日期    
SQL> select next_day('18-5月-2001','星期五') next_day from dual;    
NEXT_DAY    
----------    
25-5月 -01    
  
41.SYSDATE    
用来得到系统的当前日期    
SQL> select to_char(sysdate,dd-mm-yyyy day) from dual;    
TO_CHAR(SYSDATE,    
-----------------    
09-05-2004 星期日    
trunc(date,fmt)按照给出的要求将日期截断,如果fmt=mi表示保留分,截断秒    
SQL> select to_char(trunc(sysdate,hh),yyyy.mm.dd hh24:mi:ss) hh,    
2 to_char(trunc(sysdate,mi),yyyy.mm.dd hh24:mi:ss) hhmm from dual;    
HH HHMM    
------------------- -------------------    
2004.05.09 11:00:00 2004.05.09 11:17:00    
  
42.CHARTOROWID    
将字符数据类型转换为ROWID类型    
SQL> select rowid,rowidtochar(rowid),ename from scott.emp;    
ROWID ROWIDTOCHAR(ROWID) ENAME    
------------------ ------------------ ----------    
AAAAfKAACAAAAEqAAA AAAAfKAACAAAAEqAAA SMITH    
AAAAfKAACAAAAEqAAB AAAAfKAACAAAAEqAAB ALLEN    
AAAAfKAACAAAAEqAAC AAAAfKAACAAAAEqAAC WARD    
AAAAfKAACAAAAEqAAD AAAAfKAACAAAAEqAAD JONES    
  
43.CONVERT(c,dset,sset)    
将源字符串 sset从一个语言字符集转换到另一个目的dset字符集    
SQL> select convert(strutz,we8hp,f7dec) "conversion" from dual;    
conver    
------    
strutz    
  
44.HEXTORAW    
将一个十六进制构成的字符串转换为二进制    
  
45.RAWTOHEXT    
将一个二进制构成的字符串转换为十六进制    
  
46.ROWIDTOCHAR    
将ROWID数据类型转换为字符类型    
  
47.TO_CHAR(date,format)    
SQL> select to_char(sysdate,yyyy/mm/dd hh24:mi:ss) from dual;    
TO_CHAR(SYSDATE,YY    
-------------------    
2004/05/09 21:14:41    
&#8226; 48.TO_DATE(string,format)    
将字符串转化为ORACLE中的一个日期    
  
49.TO_MULTI_BYTE    
将字符串中的单字节字符转化为多字节字符    
SQL> select to_multi_byte(高) from dual;    
TO    
--    
高    
  
50.TO_NUMBER    
将给出的字符转换为数字    
SQL> select to_number(1999) year from dual;    
YEAR    
---------    
1999   
21.COSH 
返回一个数字反余弦值 
SQL> select cosh(20) from dual; 
COSH(20) 
--------- 
242582598 

22.EXP 
返回一个数字e的n次方根 
SQL> select exp(2),exp(1) from dual; 
EXP(2) EXP(1) 
--------- --------- 
7.3890561 2.7182818 

23.FLOOR 
对给定的数字取整数 
SQL> select floor(2345.67) from dual; 
FLOOR(2345.67) 
-------------- 
2345 

24.LN 
返回一个数字的对数值 
SQL> select ln(1),ln(2),ln(2.7182818) from dual; 
LN(1) LN(2) LN(2.7182818) 
--------- --------- ------------- 
0 .69314718 .99999999 

25.LOG(n1,n2) 
返回一个以n1为底n2的对数 
SQL> select log(2,1),log(2,4) from dual; 
LOG(2,1) LOG(2,4) 
--------- --------- 
0 2 

26.MOD(n1,n2) 
返回一个n1除以n2的余数 
SQL> select mod(10,3),mod(3,3),mod(2,3) from dual; 
MOD(10,3) MOD(3,3) MOD(2,3) 
--------- --------- --------- 
1 0 2 

27.POWER 
返回n1的n2次方根 
SQL> select power(2,10),power(3,3) from dual; 
POWER(2,10) POWER(3,3) 
----------- ---------- 
1024 27 

28.ROUND和TRUNC 
按照指定的精度进行舍入 
SQL> select round(55.5),round(-55.4),trunc(55.5),trunc(-55.5) from dual; 
ROUND(55.5) ROUND(-55.4) TRUNC(55.5) TRUNC(-55.5) 
----------- ------------ ----------- ------------ 
56 -55 55 -55 

29.SIGN 
取数字n的符号,大于0返回1,小于0返回-1,等于0返回0 
SQL> select sign(123),sign(-100),sign(0) from dual; 
SIGN(123) SIGN(-100) SIGN(0) 
--------- ---------- --------- 
1 -1 0 

30.SIN 
返回一个数字的正弦值 
SQL> select sin(1.57079) from dual; 
SIN(1.57079) 
------------ 
1 
&#8226; 31.SIGH 
返回双曲正弦的值 
SQL> select sin(20),sinh(20) from dual; 
SIN(20) SINH(20) 
--------- --------- 
.91294525 242582598 

32.SQRT 
返回数字n的根 
SQL> select sqrt(64),sqrt(10) from dual; 
SQRT(64) SQRT(10) 
--------- --------- 
8 3.1622777 

33.TAN 
返回数字的正切值 
SQL> select tan(20),tan(10) from dual; 
TAN(20) TAN(10) 
--------- --------- 
2.2371609 .64836083 

34.TANH 
返回数字n的双曲正切值 
SQL> select tanh(20),tan(20) from dual; 
TANH(20) TAN(20) 
--------- --------- 
1 2.2371609 

35.TRUNC 
按照指定的精度截取一个数 
SQL> select trunc(124.1666,-2) trunc1,trunc(124.16666,2) from dual; 
TRUNC1 TRUNC(124.16666,2) 
--------- ------------------ 
100 124.16 

36.ADD_MONTHS 
增加或减去月份 
SQL> select to_char(add_months(to_date(199912,yyyymm),2),yyyymm) from dual; 
TO_CHA 
------ 
200002 
SQL> select to_char(add_months(to_date(199912,yyyymm),-2),yyyymm) from dual; 
TO_CHA 
------ 
199910 

37.LAST_DAY 
返回日期的最后一天 
SQL> select to_char(sysdate,yyyy.mm.dd),to_char((sysdate)+1,yyyy.mm.dd) from dual; 
TO_CHAR(SY TO_CHAR((S 
---------- ---------- 
2004.05.09 2004.05.10 
SQL> select last_day(sysdate) from dual; 
LAST_DAY(S 
---------- 
31-5月 -04 

38.MONTHS_BETWEEN(date2,date1) 
给出date2-date1的月份 
SQL> select months_between(19-12月-1999,19-3月-1999) mon_between from dual; 
MON_BETWEEN 
----------- 
9 
SQL>selectmonths_between(to_date(2000.05.20,yyyy.mm.dd),to_date(2005.05.20,yyyy.mm.dd)) mon_betw from dual; 
MON_BETW 
--------- 
-60 

39.NEW_TIME(date,this,that) 
给出在this时区=other时区的日期和时间 
SQL> select to_char(sysdate,yyyy.mm.dd hh24:mi:ss) bj_time,to_char(new_time 
2 (sysdate,PDT,GMT),yyyy.mm.dd hh24:mi:ss) los_angles from dual; 
BJ_TIME LOS_ANGLES 
------------------- ------------------- 
2004.05.09 11:05:32 2004.05.09 18:05:32 

40.NEXT_DAY(date,day) 
给出日期date和星期x之后计算下一个星期的日期 
SQL> select next_day('18-5月-2001','星期五') next_day from dual; 
NEXT_DAY 
---------- 
25-5月 -01 

41.SYSDATE 
用来得到系统的当前日期 
SQL> select to_char(sysdate,dd-mm-yyyy day) from dual; 
TO_CHAR(SYSDATE, 
----------------- 
09-05-2004 星期日 
trunc(date,fmt)按照给出的要求将日期截断,如果fmt=mi表示保留分,截断秒 
SQL> select to_char(trunc(sysdate,hh),yyyy.mm.dd hh24:mi:ss) hh, 
2 to_char(trunc(sysdate,mi),yyyy.mm.dd hh24:mi:ss) hhmm from dual; 
HH HHMM 
------------------- ------------------- 
2004.05.09 11:00:00 2004.05.09 11:17:00 

42.CHARTOROWID 
将字符数据类型转换为ROWID类型 
SQL> select rowid,rowidtochar(rowid),ename from scott.emp; 
ROWID ROWIDTOCHAR(ROWID) ENAME 
------------------ ------------------ ---------- 
AAAAfKAACAAAAEqAAA AAAAfKAACAAAAEqAAA SMITH 
AAAAfKAACAAAAEqAAB AAAAfKAACAAAAEqAAB ALLEN 
AAAAfKAACAAAAEqAAC AAAAfKAACAAAAEqAAC WARD 
AAAAfKAACAAAAEqAAD AAAAfKAACAAAAEqAAD JONES 

43.CONVERT(c,dset,sset) 
将源字符串 sset从一个语言字符集转换到另一个目的dset字符集 
SQL> select convert(strutz,we8hp,f7dec) "conversion" from dual; 
conver 
------ 
strutz 

44.HEXTORAW 
将一个十六进制构成的字符串转换为二进制 

45.RAWTOHEXT 
将一个二进制构成的字符串转换为十六进制 

46.ROWIDTOCHAR 
将ROWID数据类型转换为字符类型 

47.TO_CHAR(date,format) 
SQL> select to_char(sysdate,yyyy/mm/dd hh24:mi:ss) from dual; 
TO_CHAR(SYSDATE,YY 
------------------- 
2004/05/09 21:14:41 
&#8226; 48.TO_DATE(string,format) 
将字符串转化为ORACLE中的一个日期 

49.TO_MULTI_BYTE 
将字符串中的单字节字符转化为多字节字符 
SQL> select to_multi_byte(高) from dual; 
TO 
-- 
高 

50.TO_NUMBER 
将给出的字符转换为数字 
SQL> select to_number(1999) year from dual; 
YEAR 
--------- 
1999  

3,

+ expand sourceview plaincopy to clipboardprint?
51.BFILENAME(dir,file)    
指定一个外部二进制文件    
SQL>insert into file_tb1 values(bfilename(lob_dir1,image1.gif));    
  
52.CONVERT(x,desc,source)    
将x字段或变量的源source转换为desc    
SQL> select sid,serial#,username,decode(command,    
2 0,none,    
3 2,insert,    
4 3,    
5 select,    
6 6,update,    
7 7,delete,    
8 8,drop,    
9 other) cmd from v$session where type!=background;    
SID SERIAL# USERNAME CMD    
--------- --------- ------------------------------ ------    
1 1 none    
2 1 none    
3 1 none    
4 1 none    
5 1 none    
6 1 none    
7 1275 none    
8 1275 none    
9 20 GAO select    
10 40 GAO none    
  
53.DUMP(s,fmt,start,length)    
DUMP函数以fmt指定的内部数字格式返回一个VARCHAR2类型的值    
SQL> col global_name for a30    
SQL> col dump_string for a50    
SQL> set lin 200    
SQL> select global_name,dump(global_name,1017,8,5) dump_string from global_name;    
GLOBAL_NAME DUMP_STRING    
------------------------------ --------------------------------------------------    
ORACLE.WORLD Typ=1 Len=12 CharacterSet=ZHS16GBK: W,O,R,L,D    
  
54.EMPTY_BLOB()和EMPTY_CLOB()    
这两个函数都是用来对大数据类型字段进行初始化操作的函数    
  
55.GREATEST    
返回一组表达式中的最大值,即比较字符的编码大小.    
SQL> select greatest(AA,AB,AC) from dual;    
GR    
--    
AC    
SQL> select greatest(啊,安,天) from dual;    
GR    
--    
天    
  
56.LEAST    
返回一组表达式中的最小值    
SQL> select least(啊,安,天) from dual;    
LE    
--    
啊    
  
57.UID    
返回标识当前用户的唯一整数    
SQL> show user    
USER 为"GAO"    
SQL> select username,user_id from dba_users where user_id=uid;    
USERNAME USER_ID    
------------------------------ ---------    
GAO 25    
  
58.USER    
返回当前用户的名字    
SQL> select user from dual;    
USER    
------------------------------    
GAO    
  
59.USEREVN    
返回当前用户环境的信息,opt可以是:    
ENTRYID,SESSIONID,TERMINAL,ISDBA,LABLE,LANGUAGE,CLIENT_INFO,LANG,VSIZE    
ISDBA 查看当前用户是否是DBA如果是则返回true    
SQL> select userenv(isdba) from dual;    
USEREN    
------    
FALSE    
SQL> select userenv(isdba) from dual;    
USEREN    
------    
TRUE    
SESSION    
返回会话标志    
SQL> select userenv(sessionid) from dual;    
USERENV(SESSIONID)    
--------------------    
152    
ENTRYID    
返回会话人口标志    
SQL> select userenv(entryid) from dual;    
USERENV(ENTRYID)    
------------------    
0    
INSTANCE    
返回当前INSTANCE的标志    
SQL> select userenv(instance) from dual;    
USERENV(INSTANCE)    
-------------------    
1    
LANGUAGE    
返回当前环境变量    
SQL> select userenv(language) from dual;    
USERENV(LANGUAGE)    
----------------------------------------------------    
SIMPLIFIED CHINESE_CHINA.ZHS16GBK    
LANG    
返回当前环境的语言的缩写    
SQL> select userenv(lang) from dual;    
USERENV(LANG)    
----------------------------------------------------    
ZHS    
TERMINAL    
返回用户的终端或机器的标志    
SQL> select userenv(terminal) from dual;    
USERENV(TERMINA    
----------------    
GAO    
VSIZE(X)    
返回X的大小(字节)数    
SQL> select vsize(user),user from dual;    
VSIZE(USER) USER    
----------- ------------------------------    
6 SYSTEM    
&#8226; 60.AVG(DISTINCT|ALL)    
all表示对所有的值求平均值,distinct只对不同的值求平均值    
SQLWKS> create table table3(xm varchar(8),sal number(7,2));    
语句已处理。    
SQLWKS> insert into table3 values(gao,1111.11);    
SQLWKS> insert into table3 values(gao,1111.11);    
SQLWKS> insert into table3 values(zhu,5555.55);    
SQLWKS> commit;    
SQL> select avg(distinct sal) from gao.table3;    
AVG(DISTINCTSAL)    
----------------    
3333.33    
SQL> select avg(all sal) from gao.table3;    
AVG(ALLSAL)    
-----------    
2592.59    
  
61.MAX(DISTINCT|ALL)    
求最大值,ALL表示对所有的值求最大值,DISTINCT表示对不同的值求最大值,相同的只取一次    
SQL> select max(distinct sal) from scott.emp;    
MAX(DISTINCTSAL)    
----------------    
5000    
  
62.MIN(DISTINCT|ALL)    
求最小值,ALL表示对所有的值求最小值,DISTINCT表示对不同的值求最小值,相同的只取一次    
SQL> select min(all sal) from gao.table3;    
MIN(ALLSAL)    
-----------    
1111.11    
  
63.STDDEV(distinct|all)    
求标准差,ALL表示对所有的值求标准差,DISTINCT表示只对不同的值求标准差    
SQL> select stddev(sal) from scott.emp;    
STDDEV(SAL)    
-----------    
1182.5032    
SQL> select stddev(distinct sal) from scott.emp;    
STDDEV(DISTINCTSAL)    
-------------------    
1229.951    
  
64.VARIANCE(DISTINCT|ALL)    
求协方差    
SQL> select variance(sal) from scott.emp;    
VARIANCE(SAL)    
-------------    
1398313.9    
  
65.GROUP BY    
主要用来对一组数进行统计    
SQL> select deptno,count(*),sum(sal) from scott.emp group by deptno;    
DEPTNO COUNT(*) SUM(SAL)    
--------- --------- ---------    
10 3 8750    
20 5 10875    
30 6 9400    
  
66.HAVING    
对分组统计再加限制条件    
SQL> select deptno,count(*),sum(sal) from scott.emp group by deptno having count(*)>=5;    
DEPTNO COUNT(*) SUM(SAL)    
--------- --------- ---------    
20 5 10875    
30 6 9400    
SQL> select deptno,count(*),sum(sal) from scott.emp having count(*)>=5 group by deptno ;    
DEPTNO COUNT(*) SUM(SAL)    
--------- --------- ---------    
20 5 10875    
30 6 9400    
  
67.ORDER BY    
用于对查询到的结果进行排序输出    
SQL> select deptno,ename,sal from scott.emp order by deptno,sal desc;    
DEPTNO ENAME SAL    
--------- ---------- ---------    
10 KING 5000    
10 CLARK 2450    
10 MILLER 1300    
20 SCOTT 3000    
20 FORD 3000    
20 JONES 2975    
20 ADAMS 1100    
20 SMITH 800    
30 BLAKE 2850    
30 ALLEN 1600    
30 TURNER 1500    
30 WARD 1250    
30 MARTIN 1250    
30 JAMES 950    
68. pl/sql中的case语句    
select  (case  when  DUMMY='X'  then  0  else  1  end)  as  flag  from  dual;    
case的第1种用法：    
case col when 'a' then 1    
when 'b' then 2    
else 0 end    
这种用法跟decode一样没什么区别    
case的第2种用法：    
case when score <60 then 'd'    
when score >=60 and score <70 then 'c'    
when score >=70 and score <80 then 'b'    
else 'a' end    
69.NVL(expr1, expr2)    
NVL(expr1, expr2)->expr1为NULL，返回expr2；不为NULL，返回expr1。注意两者的类型要一致    
NVL2 (expr1, expr2, expr3) ->expr1不为NULL，返回expr2；为NULL，返回expr3。expr2和expr3类型不同的话，expr3会转换为expr2的类型    
NULLIF (expr1, expr2) ->相等返回NULL，不等返回expr1    
&#8226; Oracle分析函数参考手册    
=============================================    
作者: xsb([url]http://xsb.itpub.net)[/url]    
发表于:2006.03.01 12:22    
分类: DW&BI    
出处：http://xsb.itpub.net/post/419/33028    
---------------------------------------------------------------    
    Oracle从8.1.6开始提供分析函数，分析函数用于计算基于组的某种聚合值，它和聚合函数的不同之处是对于每个组返回多行，    
而聚合函数对于每个组只返回一行。    
常用的分析函数如下所列:    
row_number() over(partition by ... order by ...)    
rank() over(partition by ... order by ...)    
dense_rank() over(partition by ... order by ...)    
count() over(partition by ... order by ...)    
max() over(partition by ... order by ...)    
min() over(partition by ... order by ...)    
sum() over(partition by ... order by ...)    
avg() over(partition by ... order by ...)    
first_value() over(partition by ... order by ...)    
last_value() over(partition by ... order by ...)    
lag() over(partition by ... order by ...)    
lead() over(partition by ... order by ...)    
  
    下面例子中使用的表来自Oracle自带的HR用户下的表，如果没有安装该用户，可以在SYS用户下运行    
$ORACLE_HOME/demo/schema/human_resources/hr_main.sql来创建。    
除本文内容外，你还可参考：    
ROLLUP与CUBE [url]http://xsb.itpub.net/post/419/29159[/url]    
分析函数使用例子介绍：[url]http://xsb.itpub.net/post/419/44634[/url]    
本文如果未指明，缺省是在HR用户下运行例子。    
开窗函数的的理解：    
开窗函数指定了分析函数工作的数据窗口大小，这个数据窗口大小可能会随着行的变化而变化，举例如下：    
over（order by salary） 按照salary排序进行累计，order by是个默认的开窗函数    
over（partition by deptno）按照部门分区    
over（order by salary range between 50 preceding and 150 following）    
每行对应的数据窗口是之前行幅度值不超过50，之后行幅度值不超过150    
over（order by salary rows between 50 preceding and 150 following）    
每行对应的数据窗口是之前50行，之后150行    
over（order by salary rows between unbounded preceding and unbounded following）    
每行对应的数据窗口是从第一行到最后一行，等效：    
over（order by salary range between unbounded preceding and unbounded following）    
主要参考资料：《expert one-on-one》 Tom Kyte 《Oracle9i SQL Reference》第6章    
ohwww 2007-3-12 09:19    
  
续   
51.BFILENAME(dir,file) 
指定一个外部二进制文件 
SQL>insert into file_tb1 values(bfilename(lob_dir1,image1.gif)); 

52.CONVERT(x,desc,source) 
将x字段或变量的源source转换为desc 
SQL> select sid,serial#,username,decode(command, 
2 0,none, 
3 2,insert, 
4 3, 
5 select, 
6 6,update, 
7 7,delete, 
8 8,drop, 
9 other) cmd from v$session where type!=background; 
SID SERIAL# USERNAME CMD 
--------- --------- ------------------------------ ------ 
1 1 none 
2 1 none 
3 1 none 
4 1 none 
5 1 none 
6 1 none 
7 1275 none 
8 1275 none 
9 20 GAO select 
10 40 GAO none 

53.DUMP(s,fmt,start,length) 
DUMP函数以fmt指定的内部数字格式返回一个VARCHAR2类型的值 
SQL> col global_name for a30 
SQL> col dump_string for a50 
SQL> set lin 200 
SQL> select global_name,dump(global_name,1017,8,5) dump_string from global_name; 
GLOBAL_NAME DUMP_STRING 
------------------------------ -------------------------------------------------- 
ORACLE.WORLD Typ=1 Len=12 CharacterSet=ZHS16GBK: W,O,R,L,D 

54.EMPTY_BLOB()和EMPTY_CLOB() 
这两个函数都是用来对大数据类型字段进行初始化操作的函数 

55.GREATEST 
返回一组表达式中的最大值,即比较字符的编码大小. 
SQL> select greatest(AA,AB,AC) from dual; 
GR 
-- 
AC 
SQL> select greatest(啊,安,天) from dual; 
GR 
-- 
天 

56.LEAST 
返回一组表达式中的最小值 
SQL> select least(啊,安,天) from dual; 
LE 
-- 
啊 

57.UID 
返回标识当前用户的唯一整数 
SQL> show user 
USER 为"GAO" 
SQL> select username,user_id from dba_users where user_id=uid; 
USERNAME USER_ID 
------------------------------ --------- 
GAO 25 

58.USER 
返回当前用户的名字 
SQL> select user from dual; 
USER 
------------------------------ 
GAO 

59.USEREVN 
返回当前用户环境的信息,opt可以是: 
ENTRYID,SESSIONID,TERMINAL,ISDBA,LABLE,LANGUAGE,CLIENT_INFO,LANG,VSIZE 
ISDBA 查看当前用户是否是DBA如果是则返回true 
SQL> select userenv(isdba) from dual; 
USEREN 
------ 
FALSE 
SQL> select userenv(isdba) from dual; 
USEREN 
------ 
TRUE 
SESSION 
返回会话标志 
SQL> select userenv(sessionid) from dual; 
USERENV(SESSIONID) 
-------------------- 
152 
ENTRYID 
返回会话人口标志 
SQL> select userenv(entryid) from dual; 
USERENV(ENTRYID) 
------------------ 
0 
INSTANCE 
返回当前INSTANCE的标志 
SQL> select userenv(instance) from dual; 
USERENV(INSTANCE) 
------------------- 
1 
LANGUAGE 
返回当前环境变量 
SQL> select userenv(language) from dual; 
USERENV(LANGUAGE) 
---------------------------------------------------- 
SIMPLIFIED CHINESE_CHINA.ZHS16GBK 
LANG 
返回当前环境的语言的缩写 
SQL> select userenv(lang) from dual; 
USERENV(LANG) 
---------------------------------------------------- 
ZHS 
TERMINAL 
返回用户的终端或机器的标志 
SQL> select userenv(terminal) from dual; 
USERENV(TERMINA 
---------------- 
GAO 
VSIZE(X) 
返回X的大小(字节)数 
SQL> select vsize(user),user from dual; 
VSIZE(USER) USER 
----------- ------------------------------ 
6 SYSTEM 
&#8226; 60.AVG(DISTINCT|ALL) 
all表示对所有的值求平均值,distinct只对不同的值求平均值 
SQLWKS> create table table3(xm varchar(8),sal number(7,2)); 
语句已处理。 
SQLWKS> insert into table3 values(gao,1111.11); 
SQLWKS> insert into table3 values(gao,1111.11); 
SQLWKS> insert into table3 values(zhu,5555.55); 
SQLWKS> commit; 
SQL> select avg(distinct sal) from gao.table3; 
AVG(DISTINCTSAL) 
---------------- 
3333.33 
SQL> select avg(all sal) from gao.table3; 
AVG(ALLSAL) 
----------- 
2592.59 

61.MAX(DISTINCT|ALL) 
求最大值,ALL表示对所有的值求最大值,DISTINCT表示对不同的值求最大值,相同的只取一次 
SQL> select max(distinct sal) from scott.emp; 
MAX(DISTINCTSAL) 
---------------- 
5000 

62.MIN(DISTINCT|ALL) 
求最小值,ALL表示对所有的值求最小值,DISTINCT表示对不同的值求最小值,相同的只取一次 
SQL> select min(all sal) from gao.table3; 
MIN(ALLSAL) 
----------- 
1111.11 

63.STDDEV(distinct|all) 
求标准差,ALL表示对所有的值求标准差,DISTINCT表示只对不同的值求标准差 
SQL> select stddev(sal) from scott.emp; 
STDDEV(SAL) 
----------- 
1182.5032 
SQL> select stddev(distinct sal) from scott.emp; 
STDDEV(DISTINCTSAL) 
------------------- 
1229.951 

64.VARIANCE(DISTINCT|ALL) 
求协方差 
SQL> select variance(sal) from scott.emp; 
VARIANCE(SAL) 
------------- 
1398313.9 

65.GROUP BY 
主要用来对一组数进行统计 
SQL> select deptno,count(*),sum(sal) from scott.emp group by deptno; 
DEPTNO COUNT(*) SUM(SAL) 
--------- --------- --------- 
10 3 8750 
20 5 10875 
30 6 9400 

66.HAVING 
对分组统计再加限制条件 
SQL> select deptno,count(*),sum(sal) from scott.emp group by deptno having count(*)>=5; 
DEPTNO COUNT(*) SUM(SAL) 
--------- --------- --------- 
20 5 10875 
30 6 9400 
SQL> select deptno,count(*),sum(sal) from scott.emp having count(*)>=5 group by deptno ; 
DEPTNO COUNT(*) SUM(SAL) 
--------- --------- --------- 
20 5 10875 
30 6 9400 

67.ORDER BY 
用于对查询到的结果进行排序输出 
SQL> select deptno,ename,sal from scott.emp order by deptno,sal desc; 
DEPTNO ENAME SAL 
--------- ---------- --------- 
10 KING 5000 
10 CLARK 2450 
10 MILLER 1300 
20 SCOTT 3000 
20 FORD 3000 
20 JONES 2975 
20 ADAMS 1100 
20 SMITH 800 
30 BLAKE 2850 
30 ALLEN 1600 
30 TURNER 1500 
30 WARD 1250 
30 MARTIN 1250 
30 JAMES 950 
68. pl/sql中的case语句 
select  (case  when  DUMMY='X'  then  0  else  1  end)  as  flag  from  dual; 
case的第1种用法： 
case col when 'a' then 1 
when 'b' then 2 
else 0 end 
这种用法跟decode一样没什么区别 
case的第2种用法： 
case when score <60 then 'd' 
when score >=60 and score <70 then 'c' 
when score >=70 and score <80 then 'b' 
else 'a' end 
69.NVL(expr1, expr2) 
NVL(expr1, expr2)->expr1为NULL，返回expr2；不为NULL，返回expr1。注意两者的类型要一致 
NVL2 (expr1, expr2, expr3) ->expr1不为NULL，返回expr2；为NULL，返回expr3。expr2和expr3类型不同的话，expr3会转换为expr2的类型 
NULLIF (expr1, expr2) ->相等返回NULL，不等返回expr1 
&#8226; Oracle分析函数参考手册 
============================================= 
作者: xsb([url]http://xsb.itpub.net)[/url] 
发表于:2006.03.01 12:22 
分类: DW&BI 
出处：http://xsb.itpub.net/post/419/33028 
--------------------------------------------------------------- 
    Oracle从8.1.6开始提供分析函数，分析函数用于计算基于组的某种聚合值，它和聚合函数的不同之处是对于每个组返回多行， 
而聚合函数对于每个组只返回一行。 
常用的分析函数如下所列: 
row_number() over(partition by ... order by ...) 
rank() over(partition by ... order by ...) 
dense_rank() over(partition by ... order by ...) 
count() over(partition by ... order by ...) 
max() over(partition by ... order by ...) 
min() over(partition by ... order by ...) 
sum() over(partition by ... order by ...) 
avg() over(partition by ... order by ...) 
first_value() over(partition by ... order by ...) 
last_value() over(partition by ... order by ...) 
lag() over(partition by ... order by ...) 
lead() over(partition by ... order by ...) 

    下面例子中使用的表来自Oracle自带的HR用户下的表，如果没有安装该用户，可以在SYS用户下运行 
$ORACLE_HOME/demo/schema/human_resources/hr_main.sql来创建。 
除本文内容外，你还可参考： 
ROLLUP与CUBE [url]http://xsb.itpub.net/post/419/29159[/url] 
分析函数使用例子介绍：[url]http://xsb.itpub.net/post/419/44634[/url] 
本文如果未指明，缺省是在HR用户下运行例子。 
开窗函数的的理解： 
开窗函数指定了分析函数工作的数据窗口大小，这个数据窗口大小可能会随着行的变化而变化，举例如下： 
over（order by salary） 按照salary排序进行累计，order by是个默认的开窗函数 
over（partition by deptno）按照部门分区 
over（order by salary range between 50 preceding and 150 following） 
每行对应的数据窗口是之前行幅度值不超过50，之后行幅度值不超过150 
over（order by salary rows between 50 preceding and 150 following） 
每行对应的数据窗口是之前50行，之后150行 
over（order by salary rows between unbounded preceding and unbounded following） 
每行对应的数据窗口是从第一行到最后一行，等效： 
over（order by salary range between unbounded preceding and unbounded following） 
主要参考资料：《expert one-on-one》 Tom Kyte 《Oracle9i SQL Reference》第6章 
ohwww 2007-3-12 09:19 

续 


4,

+ expand sourceview plaincopy to clipboardprint?
70。AVG    
功能描述：用于计算一个组和数据窗口内表达式的平均值。    
SAMPLE：下面的例子中列c_mavg计算员工表中每个员工的平均薪水报告，该平均值由当前员工和与之具有相同经理的前一个和后一个三者的平均数得来；    
SELECT manager_id, last_name, hire_date, salary,    
AVG(salary) OVER (PARTITION BY manager_id ORDER BY hire_date    
ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS c_mavg    
FROM employees;    
MANAGER_ID LAST_NAME HIRE_DATE SALARY C_MAVG    
---------- ------------------------- --------- ---------- ----------    
100 Kochhar 21-SEP-89 17000 17000    
100 De Haan 13-JAN-93 17000 15000    
100 Raphaely 07-DEC-94 11000 11966.6667    
100 Kaufling 01-MAY-95 7900 10633.3333    
100 Hartstein 17-FEB-96 13000 9633.33333    
100 Weiss 18-JUL-96 8000 11666.6667    
100 Russell 01-OCT-96 14000 11833.3333    
71。CORR    
功能描述：返回一对表达式的相关系数，它是如下的缩写：    
COVAR_POP(expr1,expr2)/STDDEV_POP(expr1)*STDDEV_POP(expr2))    
从统计上讲，相关性是变量之间关联的强度，变量之间的关联意味着在某种程度    
上一个变量的值可由其它的值进行预测。通过返回一个-1~1之间的一个数, 相关    
系数给出了关联的强度，0表示不相关。    
SAMPLE：下例返回1998年月销售收入和月单位销售的关系的累积系数（本例在SH用户下运行）    
SELECT t.calendar_month_number,    
CORR (SUM(s.amount_sold), SUM(s.quantity_sold))    
OVER (ORDER BY t.calendar_month_number) as CUM_CORR    
FROM sales s, times t    
WHERE s.time_id = t.time_id AND calendar_year = 1998    
GROUP BY t.calendar_month_number    
ORDER BY t.calendar_month_number;    
CALENDAR_MONTH_NUMBER CUM_CORR    
--------------------- ----------    
1    
2 1    
3 .994309382    
4 .852040875    
5 .846652204    
6 .871250628    
7 .910029803    
8 .917556399    
9 .920154356    
10 .86720251    
11 .844864765    
12 .903542662    
  
72。COVAR_POP    
功能描述：返回一对表达式的总体协方差。    
SAMPLE：下例CUM_COVP返回定价和最小产品价格的累积总体协方差    
SELECT product_id, supplier_id,    
COVAR_POP(list_price, min_price)    
OVER (ORDER BY product_id, supplier_id) AS CUM_COVP,    
COVAR_SAMP(list_price, min_price)    
OVER (ORDER BY product_id, supplier_id) AS CUM_COVS    
FROM product_information p    
WHERE category_id = 29    
ORDER BY product_id, supplier_id;    
PRODUCT_ID SUPPLIER_ID CUM_COVP CUM_COVS    
---------- ----------- ---------- ----------    
1774 103088 0    
1775 103087 1473.25 2946.5    
1794 103096 1702.77778 2554.16667    
1825 103093 1926.25 2568.33333    
2004 103086 1591.4 1989.25    
2005 103086 1512.5 1815    
2416 103088 1475.97959 1721.97619    
.    
.    
  
73。COVAR_SAMP    
功能描述：返回一对表达式的样本协方差    
SAMPLE：下例CUM_COVS返回定价和最小产品价格的累积样本协方差    
SELECT product_id, supplier_id,    
COVAR_POP(list_price, min_price)    
OVER (ORDER BY product_id, supplier_id) AS CUM_COVP,    
COVAR_SAMP(list_price, min_price)    
OVER (ORDER BY product_id, supplier_id) AS CUM_COVS    
FROM product_information p    
WHERE category_id = 29    
ORDER BY product_id, supplier_id;    
PRODUCT_ID SUPPLIER_ID CUM_COVP CUM_COVS    
---------- ----------- ---------- ----------    
1774 103088 0    
1775 103087 1473.25 2946.5    
1794 103096 1702.77778 2554.16667    
1825 103093 1926.25 2568.33333    
2004 103086 1591.4 1989.25    
2005 103086 1512.5 1815    
2416 103088 1475.97959 1721.97619    
&#8226; 74。COUNT    
功能描述：对一组内发生的事情进行累积计数，如果指定*或一些非空常数，count将对所有行计数，如果指定一个表达式，count    
返回表达式非空赋值的计数，当有相同值出现时，这些相等的值都会被纳入被计算的值；可以使用DISTINCT来记录去掉一组中完全    
相同的数据后出现的行数。    
SAMPLE：下面例子中计算每个员工在按薪水排序中当前行附近薪水在[n-50,n+150]之间的行数，n表示当前行的薪水    
例如，Philtanker的薪水2200，排在他之前的行中薪水大于等于2200-50的有1行，排在他之后的行中薪水小于等于2200＋150的行    
没有，所以count计数值cnt3为2（包括自己当前行）；cnt2值相当于小于等于当前行的SALARY值的所有行数    
SELECT last_name, salary, COUNT(*) OVER () AS cnt1,    
COUNT(*) OVER (ORDER BY salary) AS cnt2,    
COUNT(*) OVER (ORDER BY salary RANGE BETWEEN 50 PRECEDING    
AND 150 FOLLOWING) AS cnt3 FROM employees;    
LAST_NAME SALARY CNT1 CNT2 CNT3    
------------------------- ---------- ---------- ---------- ----------    
Olson 2100 107 1 3    
Markle 2200 107 3 2    
Philtanker 2200 107 3 2    
Landry 2400 107 5 8    
Gee 2400 107 5 8    
Colmenares 2500 107 11 10    
Patel 2500 107 11 10    
.    
.    
75。CUME_DIST    
功能描述：计算一行在组中的相对位置，CUME_DIST总是返回大于0、小于或等于1的数，该数表示该行在N行中的位置。例如，    
在一个3行的组中，返回的累计分布值为1/3、2/3、3/3    
SAMPLE：下例中计算每个工种的员工按薪水排序依次累积出现的分布百分比    
SELECT job_id, last_name, salary, CUME_DIST()    
OVER (PARTITION BY job_id ORDER BY salary) AS cume_dist    
FROM employees WHERE job_id LIKE 'PU%';    
JOB_ID LAST_NAME SALARY CUME_DIST    
---------- ------------------------- ---------- ----------    
PU_CLERK Colmenares 2500 .2    
PU_CLERK Himuro 2600 .4    
PU_CLERK Tobias 2800 .6    
PU_CLERK Baida 2900 .8    
PU_CLERK Khoo 3100 1    
PU_MAN Raphaely 11000 1    
76。DENSE_RANK    
功能描述：根据ORDER BY子句中表达式的值，从查询返回的每一行，计算它们与其它行的相对位置。组内的数据按ORDER BY子句排序，然后给每一行赋一个号，从而形成一个序列，该序列从1开始，往后累加。每次ORDER BY表达式的值发生变化时，该序列也随之增加。有同样值的行得到同样的数字序号（认为null时相等的）。密集的序列返回的时没有间隔的数    
SAMPLE：下例中计算每个员工按部门分区再按薪水排序，依次出现的序列号（注意与RANK函数的区别）    
SELECT d.department_id , e.last_name, e.salary, DENSE_RANK()    
OVER (PARTITION BY e.department_id ORDER BY e.salary) as drank    
FROM employees e, departments d    
WHERE e.department_id = d.department_id    
AND d.department_id IN ('60', '90');    
DEPARTMENT_ID LAST_NAME SALARY DRANK    
------------- ------------------------- ---------- ----------    
60 Lorentz 4200 1    
60 Austin 4800 2    
60 Pataballa 4800 2    
60 Ernst 6000 3    
60 Hunold 9000 4    
90 Kochhar 17000 1    
90 De Haan 17000 1    
90 King 24000 2    
  
77。FIRST    
功能描述：从DENSE_RANK返回的集合中取出排在最前面的一个值的行（可能多行，因为值可能相等），因此完整的语法需要在开始处加上一个集合函数以从中取出记录    
SAMPLE：下面例子中DENSE_RANK按部门分区，再按佣金commission_pct排序，FIRST取出佣金最低的对应的所有行，然后前面的MAX函数从这个集合中取出薪水最低的值；LAST取出佣金最高的对应的所有行，然后前面的MIN函数从这个集合中取出薪水最高的值    
SELECT last_name, department_id, salary,    
MIN(salary) KEEP (DENSE_RANK FIRST ORDER BY commission_pct)    
OVER (PARTITION BY department_id) "Worst",    
MAX(salary) KEEP (DENSE_RANK LAST ORDER BY commission_pct)    
OVER (PARTITION BY department_id) "Best"    
FROM employees    
WHERE department_id in (20,80)    
ORDER BY department_id, salary;    
LAST_NAME DEPARTMENT_ID SALARY Worst Best    
------------------------- ------------- ---------- ---------- ----------    
Fay 20 6000 6000 13000    
Hartstein 20 13000 6000 13000    
Kumar 80 6100 6100 14000    
Banda 80 6200 6100 14000    
Johnson 80 6200 6100 14000    
Ande 80 6400 6100 14000    
Lee 80 6800 6100 14000    
Tuvault 80 7000 6100 14000    
Sewall 80 7000 6100 14000    
Marvins 80 7200 6100 14000    
Bates 80 7300 6100 14000    
.    
.    
.    
78。FIRST_VALUE    
功能描述：返回组中数据窗口的第一个值。    
SAMPLE：下面例子计算按部门分区按薪水排序的数据窗口的第一个值对应的名字，如果薪水的第一个值有多个，则从多个对应的名字中取缺省排序的第一个名字    
SELECT department_id, last_name, salary, FIRST_VALUE(last_name)    
OVER (PARTITION BY department_id ORDER BY salary ASC ) AS lowest_sal    
FROM employees    
WHERE department_id in(20,30);    
DEPARTMENT_ID LAST_NAME SALARY LOWEST_SAL    
------------- ------------------------- ---------- --------------    
20 Fay 6000 Fay    
20 Hartstein 13000 Fay    
30 Colmenares 2500 Colmenares    
30 Himuro 2600 Colmenares    
30 Tobias 2800 Colmenares    
30 Baida 2900 Colmenares    
30 Khoo 3100 Colmenares    
30 Raphaely 11000 Colmenares    
  
79。LAG    
功能描述：可以访问结果集中的其它行而不用进行自连接。它允许去处理游标，就好像游标是一个数组一样。在给定组中可参考当前行之前的行，这样就可以从组中与当前行一起选择以前的行。Offset是一个正整数，其默认值为1，若索引超出窗口的范围，就返回默认值（默认返回的是组中第一行），其相反的函数是LEAD    
SAMPLE：下面的例子中列prev_sal返回按hire_date排序的前1行的salary值    
SELECT last_name, hire_date, salary,    
LAG(salary, 1, 0) OVER (ORDER BY hire_date) AS prev_sal    
FROM employees    
WHERE job_id = 'PU_CLERK';    
LAST_NAME HIRE_DATE SALARY PREV_SAL    
------------------------- ---------- ---------- ----------    
Khoo 18-5月 -95 3100 0    
Tobias 24-7月 -97 2800 3100    
Baida 24-12月-97 2900 2800    
Himuro 15-11月-98 2600 2900    
Colmenares 10-8月 -99 2500 2600   
70。AVG 
功能描述：用于计算一个组和数据窗口内表达式的平均值。 
SAMPLE：下面的例子中列c_mavg计算员工表中每个员工的平均薪水报告，该平均值由当前员工和与之具有相同经理的前一个和后一个三者的平均数得来； 
SELECT manager_id, last_name, hire_date, salary, 
AVG(salary) OVER (PARTITION BY manager_id ORDER BY hire_date 
ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS c_mavg 
FROM employees; 
MANAGER_ID LAST_NAME HIRE_DATE SALARY C_MAVG 
---------- ------------------------- --------- ---------- ---------- 
100 Kochhar 21-SEP-89 17000 17000 
100 De Haan 13-JAN-93 17000 15000 
100 Raphaely 07-DEC-94 11000 11966.6667 
100 Kaufling 01-MAY-95 7900 10633.3333 
100 Hartstein 17-FEB-96 13000 9633.33333 
100 Weiss 18-JUL-96 8000 11666.6667 
100 Russell 01-OCT-96 14000 11833.3333 
71。CORR 
功能描述：返回一对表达式的相关系数，它是如下的缩写： 
COVAR_POP(expr1,expr2)/STDDEV_POP(expr1)*STDDEV_POP(expr2)) 
从统计上讲，相关性是变量之间关联的强度，变量之间的关联意味着在某种程度 
上一个变量的值可由其它的值进行预测。通过返回一个-1~1之间的一个数, 相关 
系数给出了关联的强度，0表示不相关。 
SAMPLE：下例返回1998年月销售收入和月单位销售的关系的累积系数（本例在SH用户下运行） 
SELECT t.calendar_month_number, 
CORR (SUM(s.amount_sold), SUM(s.quantity_sold)) 
OVER (ORDER BY t.calendar_month_number) as CUM_CORR 
FROM sales s, times t 
WHERE s.time_id = t.time_id AND calendar_year = 1998 
GROUP BY t.calendar_month_number 
ORDER BY t.calendar_month_number; 
CALENDAR_MONTH_NUMBER CUM_CORR 
--------------------- ---------- 
1 
2 1 
3 .994309382 
4 .852040875 
5 .846652204 
6 .871250628 
7 .910029803 
8 .917556399 
9 .920154356 
10 .86720251 
11 .844864765 
12 .903542662 

72。COVAR_POP 
功能描述：返回一对表达式的总体协方差。 
SAMPLE：下例CUM_COVP返回定价和最小产品价格的累积总体协方差 
SELECT product_id, supplier_id, 
COVAR_POP(list_price, min_price) 
OVER (ORDER BY product_id, supplier_id) AS CUM_COVP, 
COVAR_SAMP(list_price, min_price) 
OVER (ORDER BY product_id, supplier_id) AS CUM_COVS 
FROM product_information p 
WHERE category_id = 29 
ORDER BY product_id, supplier_id; 
PRODUCT_ID SUPPLIER_ID CUM_COVP CUM_COVS 
---------- ----------- ---------- ---------- 
1774 103088 0 
1775 103087 1473.25 2946.5 
1794 103096 1702.77778 2554.16667 
1825 103093 1926.25 2568.33333 
2004 103086 1591.4 1989.25 
2005 103086 1512.5 1815 
2416 103088 1475.97959 1721.97619 
. 
. 

73。COVAR_SAMP 
功能描述：返回一对表达式的样本协方差 
SAMPLE：下例CUM_COVS返回定价和最小产品价格的累积样本协方差 
SELECT product_id, supplier_id, 
COVAR_POP(list_price, min_price) 
OVER (ORDER BY product_id, supplier_id) AS CUM_COVP, 
COVAR_SAMP(list_price, min_price) 
OVER (ORDER BY product_id, supplier_id) AS CUM_COVS 
FROM product_information p 
WHERE category_id = 29 
ORDER BY product_id, supplier_id; 
PRODUCT_ID SUPPLIER_ID CUM_COVP CUM_COVS 
---------- ----------- ---------- ---------- 
1774 103088 0 
1775 103087 1473.25 2946.5 
1794 103096 1702.77778 2554.16667 
1825 103093 1926.25 2568.33333 
2004 103086 1591.4 1989.25 
2005 103086 1512.5 1815 
2416 103088 1475.97959 1721.97619 
&#8226; 74。COUNT 
功能描述：对一组内发生的事情进行累积计数，如果指定*或一些非空常数，count将对所有行计数，如果指定一个表达式，count 
返回表达式非空赋值的计数，当有相同值出现时，这些相等的值都会被纳入被计算的值；可以使用DISTINCT来记录去掉一组中完全 
相同的数据后出现的行数。 
SAMPLE：下面例子中计算每个员工在按薪水排序中当前行附近薪水在[n-50,n+150]之间的行数，n表示当前行的薪水 
例如，Philtanker的薪水2200，排在他之前的行中薪水大于等于2200-50的有1行，排在他之后的行中薪水小于等于2200＋150的行 
没有，所以count计数值cnt3为2（包括自己当前行）；cnt2值相当于小于等于当前行的SALARY值的所有行数 
SELECT last_name, salary, COUNT(*) OVER () AS cnt1, 
COUNT(*) OVER (ORDER BY salary) AS cnt2, 
COUNT(*) OVER (ORDER BY salary RANGE BETWEEN 50 PRECEDING 
AND 150 FOLLOWING) AS cnt3 FROM employees; 
LAST_NAME SALARY CNT1 CNT2 CNT3 
------------------------- ---------- ---------- ---------- ---------- 
Olson 2100 107 1 3 
Markle 2200 107 3 2 
Philtanker 2200 107 3 2 
Landry 2400 107 5 8 
Gee 2400 107 5 8 
Colmenares 2500 107 11 10 
Patel 2500 107 11 10 
. 
. 
75。CUME_DIST 
功能描述：计算一行在组中的相对位置，CUME_DIST总是返回大于0、小于或等于1的数，该数表示该行在N行中的位置。例如， 
在一个3行的组中，返回的累计分布值为1/3、2/3、3/3 
SAMPLE：下例中计算每个工种的员工按薪水排序依次累积出现的分布百分比 
SELECT job_id, last_name, salary, CUME_DIST() 
OVER (PARTITION BY job_id ORDER BY salary) AS cume_dist 
FROM employees WHERE job_id LIKE 'PU%'; 
JOB_ID LAST_NAME SALARY CUME_DIST 
---------- ------------------------- ---------- ---------- 
PU_CLERK Colmenares 2500 .2 
PU_CLERK Himuro 2600 .4 
PU_CLERK Tobias 2800 .6 
PU_CLERK Baida 2900 .8 
PU_CLERK Khoo 3100 1 
PU_MAN Raphaely 11000 1 
76。DENSE_RANK 
功能描述：根据ORDER BY子句中表达式的值，从查询返回的每一行，计算它们与其它行的相对位置。组内的数据按ORDER BY子句排序，然后给每一行赋一个号，从而形成一个序列，该序列从1开始，往后累加。每次ORDER BY表达式的值发生变化时，该序列也随之增加。有同样值的行得到同样的数字序号（认为null时相等的）。密集的序列返回的时没有间隔的数 
SAMPLE：下例中计算每个员工按部门分区再按薪水排序，依次出现的序列号（注意与RANK函数的区别） 
SELECT d.department_id , e.last_name, e.salary, DENSE_RANK() 
OVER (PARTITION BY e.department_id ORDER BY e.salary) as drank 
FROM employees e, departments d 
WHERE e.department_id = d.department_id 
AND d.department_id IN ('60', '90'); 
DEPARTMENT_ID LAST_NAME SALARY DRANK 
------------- ------------------------- ---------- ---------- 
60 Lorentz 4200 1 
60 Austin 4800 2 
60 Pataballa 4800 2 
60 Ernst 6000 3 
60 Hunold 9000 4 
90 Kochhar 17000 1 
90 De Haan 17000 1 
90 King 24000 2 

77。FIRST 
功能描述：从DENSE_RANK返回的集合中取出排在最前面的一个值的行（可能多行，因为值可能相等），因此完整的语法需要在开始处加上一个集合函数以从中取出记录 
SAMPLE：下面例子中DENSE_RANK按部门分区，再按佣金commission_pct排序，FIRST取出佣金最低的对应的所有行，然后前面的MAX函数从这个集合中取出薪水最低的值；LAST取出佣金最高的对应的所有行，然后前面的MIN函数从这个集合中取出薪水最高的值 
SELECT last_name, department_id, salary, 
MIN(salary) KEEP (DENSE_RANK FIRST ORDER BY commission_pct) 
OVER (PARTITION BY department_id) "Worst", 
MAX(salary) KEEP (DENSE_RANK LAST ORDER BY commission_pct) 
OVER (PARTITION BY department_id) "Best" 
FROM employees 
WHERE department_id in (20,80) 
ORDER BY department_id, salary; 
LAST_NAME DEPARTMENT_ID SALARY Worst Best 
------------------------- ------------- ---------- ---------- ---------- 
Fay 20 6000 6000 13000 
Hartstein 20 13000 6000 13000 
Kumar 80 6100 6100 14000 
Banda 80 6200 6100 14000 
Johnson 80 6200 6100 14000 
Ande 80 6400 6100 14000 
Lee 80 6800 6100 14000 
Tuvault 80 7000 6100 14000 
Sewall 80 7000 6100 14000 
Marvins 80 7200 6100 14000 
Bates 80 7300 6100 14000 
. 
. 
. 
78。FIRST_VALUE 
功能描述：返回组中数据窗口的第一个值。 
SAMPLE：下面例子计算按部门分区按薪水排序的数据窗口的第一个值对应的名字，如果薪水的第一个值有多个，则从多个对应的名字中取缺省排序的第一个名字 
SELECT department_id, last_name, salary, FIRST_VALUE(last_name) 
OVER (PARTITION BY department_id ORDER BY salary ASC ) AS lowest_sal 
FROM employees 
WHERE department_id in(20,30); 
DEPARTMENT_ID LAST_NAME SALARY LOWEST_SAL 
------------- ------------------------- ---------- -------------- 
20 Fay 6000 Fay 
20 Hartstein 13000 Fay 
30 Colmenares 2500 Colmenares 
30 Himuro 2600 Colmenares 
30 Tobias 2800 Colmenares 
30 Baida 2900 Colmenares 
30 Khoo 3100 Colmenares 
30 Raphaely 11000 Colmenares 

79。LAG 
功能描述：可以访问结果集中的其它行而不用进行自连接。它允许去处理游标，就好像游标是一个数组一样。在给定组中可参考当前行之前的行，这样就可以从组中与当前行一起选择以前的行。Offset是一个正整数，其默认值为1，若索引超出窗口的范围，就返回默认值（默认返回的是组中第一行），其相反的函数是LEAD 
SAMPLE：下面的例子中列prev_sal返回按hire_date排序的前1行的salary值 
SELECT last_name, hire_date, salary, 
LAG(salary, 1, 0) OVER (ORDER BY hire_date) AS prev_sal 
FROM employees 
WHERE job_id = 'PU_CLERK'; 
LAST_NAME HIRE_DATE SALARY PREV_SAL 
------------------------- ---------- ---------- ---------- 
Khoo 18-5月 -95 3100 0 
Tobias 24-7月 -97 2800 3100 
Baida 24-12月-97 2900 2800 
Himuro 15-11月-98 2600 2900 
Colmenares 10-8月 -99 2500 2600 


5,

+ expand sourceview plaincopy to clipboardprint?
&#8226; 80。LAST    
功能描述：从DENSE_RANK返回的集合中取出排在最后面的一个值的行（可能多行，因为值可能相等），因此完整的语法需要在开始处加上一个集合函数以从中取出记录    
SAMPLE：下面例子中DENSE_RANK按部门分区，再按佣金commission_pct排序，FIRST取出佣金最低的对应的所有行，然后前面的MAX函数从这个集合中取出薪水最低的值；LAST取出佣金最高的对应的所有行，然后前面的MIN函数从这个集合中取出薪水最高的值    
SELECT last_name, department_id, salary,    
MIN(salary) KEEP (DENSE_RANK FIRST ORDER BY commission_pct)    
OVER (PARTITION BY department_id) "Worst",    
MAX(salary) KEEP (DENSE_RANK LAST ORDER BY commission_pct)    
OVER (PARTITION BY department_id) "Best"    
FROM employees    
WHERE department_id in (20,80)    
ORDER BY department_id, salary;    
LAST_NAME DEPARTMENT_ID SALARY Worst Best    
------------------------- ------------- ---------- ---------- ----------    
Fay 20 6000 6000 13000    
Hartstein 20 13000 6000 13000    
Kumar 80 6100 6100 14000    
Banda 80 6200 6100 14000    
Johnson 80 6200 6100 14000    
Ande 80 6400 6100 14000    
Lee 80 6800 6100 14000    
Tuvault 80 7000 6100 14000    
Sewall 80 7000 6100 14000    
Marvins 80 7200 6100 14000    
Bates 80 7300 6100 14000    
.    
81。LAST_VALUE    
功能描述：返回组中数据窗口的最后一个值。    
SAMPLE：下面例子计算按部门分区按薪水排序的数据窗口的最后一个值对应的名字，如果薪水的最后一个值有多个，则从多个对应的名字中取缺省排序的最后一个名字    
SELECT department_id, last_name, salary, LAST_VALUE(last_name)    
OVER(PARTITION BY department_id ORDER BY salary) AS highest_sal    
FROM employees    
WHERE department_id in(20,30);    
DEPARTMENT_ID LAST_NAME SALARY HIGHEST_SAL    
------------- ------------------------- ---------- ------------    
20 Fay 6000 Fay    
20 Hartstein 13000 Hartstein    
30 Colmenares 2500 Colmenares    
30 Himuro 2600 Himuro    
30 Tobias 2800 Tobias    
30 Baida 2900 Baida    
30 Khoo 3100 Khoo    
30 Raphaely 11000 Raphaely    
82。LEAD    
功能描述：LEAD与LAG相反，LEAD可以访问组中当前行之后的行。Offset是一个正整数，其默认值为1，若索引超出窗口的范围，就返回默认值（默认返回的是组中第一行）    
SAMPLE：下面的例子中每行的"NextHired"返回按hire_date排序的下一行的hire_date值    
SELECT last_name, hire_date,    
LEAD(hire_date, 1) OVER (ORDER BY hire_date) AS "NextHired"    
FROM employees WHERE department_id = 30;    
LAST_NAME HIRE_DATE NextHired    
------------------------- --------- ---------    
Raphaely 07-DEC-94 18-MAY-95    
Khoo 18-MAY-95 24-JUL-97    
Tobias 24-JUL-97 24-DEC-97    
Baida 24-DEC-97 15-NOV-98    
Himuro 15-NOV-98 10-AUG-99    
Colmenares 10-AUG-99    
  
83。MAX    
功能描述：在一个组中的数据窗口中查找表达式的最大值。    
SAMPLE：下面例子中dept_max返回当前行所在部门的最大薪水值    
SELECT department_id, last_name, salary,    
MAX(salary) OVER (PARTITION BY department_id) AS dept_max    
FROM employees WHERE department_id in (10,20,30);    
DEPARTMENT_ID LAST_NAME SALARY DEPT_MAX    
------------- ------------------------- ---------- ----------    
10 Whalen 4400 4400    
20 Hartstein 13000 13000    
20 Fay 6000 13000    
30 Raphaely 11000 11000    
30 Khoo 3100 11000    
30 Baida 2900 11000    
30 Tobias 2800 11000    
30 Himuro 2600 11000    
30 Colmenares 2500 11000    
  
84。MIN    
功能描述：在一个组中的数据窗口中查找表达式的最小值。    
SAMPLE：下面例子中dept_min返回当前行所在部门的最小薪水值    
SELECT department_id, last_name, salary,    
MIN(salary) OVER (PARTITION BY department_id) AS dept_min    
FROM employees WHERE department_id in (10,20,30);    
DEPARTMENT_ID LAST_NAME SALARY DEPT_MIN    
------------- ------------------------- ---------- ----------    
10 Whalen 4400 4400    
20 Hartstein 13000 6000    
20 Fay 6000 6000    
30 Raphaely 11000 2500    
30 Khoo 3100 2500    
30 Baida 2900 2500    
30 Tobias 2800 2500    
30 Himuro 2600 2500    
30 Colmenares 2500 2500    
  
85。NTILE    
功能描述：将一个组分为"表达式"的散列表示，例如，如果表达式=4，则给组中的每一行分配一个数（从1到4），如果组中有20行，则给前5行分配1，给下5行分配2等等。如果组的基数不能由表达式值平均分开，则对这些行进行分配时，组中就没有任何percentile的行数比其它percentile的行数超过一行，最低的percentile是那些拥有额外行的percentile。例如，若表达式=4，行数=21，则percentile=1的有5行，percentile=2的有5行等等。    
SAMPLE：下例中把6行数据分为4份    
SELECT last_name, salary,    
NTILE(4) OVER (ORDER BY salary DESC) AS quartile FROM employees    
WHERE department_id = 100;    
LAST_NAME SALARY QUARTILE    
------------------------- ---------- ----------    
Greenberg 12000 1    
Faviet 9000 1    
Chen 8200 2    
Urman 7800 2    
Sciarra 7700 3    
Popp 6900 4    
  
86。PERCENT_RANK    
功能描述：和CUME_DIST（累积分配）函数类似，对于一个组中给定的行来说，在计算那行的序号时，先减1，然后除以n-1（n为组中所有的行数）。该函数总是返回0～1（包括1）之间的数。    
SAMPLE：下例中如果Khoo的salary为2900，则pr值为0.6，因为RANK函数对于等值的返回序列值是一样的    
SELECT department_id, last_name, salary,    
PERCENT_RANK()    
OVER (PARTITION BY department_id ORDER BY salary) AS pr    
FROM employees    
WHERE department_id < 50    
ORDER BY department_id,salary;    
DEPARTMENT_ID LAST_NAME SALARY PR    
------------- ------------------------- ---------- ----------    
10 Whalen 4400 0    
20 Fay 6000 0    
20 Hartstein 13000 1    
30 Colmenares 2500 0    
30 Himuro 2600 0.2    
30 Tobias 2800 0.4    
30 Baida 2900 0.6    
30 Khoo 3100 0.8    
30 Raphaely 11000 1    
40 Mavris 6500 0    
&#8226; 87。PERCENTILE_CONT    
功能描述：返回一个与输入的分布百分比值相对应的数据值，分布百分比的计算方法见函数PERCENT_RANK，如果没有正好对应的数据值，就通过下面算法来得到值：    
RN = 1+ (P*(N-1)) 其中P是输入的分布百分比值，N是组内的行数    
CRN = CEIL(RN) FRN = FLOOR(RN)    
if (CRN = FRN = RN) then    
(value of expression from row at RN)    
else    
(CRN - RN) * (value of expression for row at FRN) +    
(RN - FRN) * (value of expression for row at CRN)    
注意：本函数与PERCENTILE_DISC的区别在找不到对应的分布值时返回的替代值的计算方法不同    
SAMPLE：在下例中，对于部门60的Percentile_Cont值计算如下：    
P=0.7 N=5 RN =1+ (P*(N-1)=1+(0.7*(5-1))=3.8 CRN = CEIL(3.8)=4    
FRN = FLOOR(3.8)=3    
（4 - 3.8）* 4800 + (3.8 - 3) * 6000 = 5760    
SELECT last_name, salary, department_id,    
PERCENTILE_CONT(0.7) WITHIN GROUP (ORDER BY salary)    
OVER (PARTITION BY department_id) "Percentile_Cont",    
PERCENT_RANK()    
OVER (PARTITION BY department_id ORDER BY salary) "Percent_Rank"    
FROM employees WHERE department_id IN (30, 60);    
LAST_NAME SALARY DEPARTMENT_ID Percentile_Cont Percent_Rank    
------------------------- ---------- ------------- --------------- ------------    
Colmenares 2500 30 3000 0    
Himuro 2600 30 3000 0.2    
Tobias 2800 30 3000 0.4    
Baida 2900 30 3000 0.6    
Khoo 3100 30 3000 0.8    
Raphaely 11000 30 3000 1    
Lorentz 4200 60 5760 0    
Austin 4800 60 5760 0.25    
Pataballa 4800 60 5760 0.25    
Ernst 6000 60 5760 0.75    
Hunold 9000 60 5760 1    
  
88。PERCENTILE_DISC    
功能描述：返回一个与输入的分布百分比值相对应的数据值，分布百分比的计算方法见函数CUME_DIST，如果没有正好对应的数据值，就取大于该分布值的下一个值。    
注意：本函数与PERCENTILE_CONT的区别在找不到对应的分布值时返回的替代值的计算方法不同    
SAMPLE：下例中0.7的分布值在部门30中没有对应的Cume_Dist值，所以就取下一个分布值0.83333333所对应的SALARY来替代    
SELECT last_name, salary, department_id,    
PERCENTILE_DISC(0.7) WITHIN GROUP (ORDER BY salary )    
OVER (PARTITION BY department_id) "Percentile_Disc",    
CUME_DIST() OVER (PARTITION BY department_id ORDER BY salary) "Cume_Dist"    
FROM employees    
WHERE department_id in (30, 60);    
LAST_NAME SALARY DEPARTMENT_ID Percentile_Disc Cume_Dist    
------------------------- ---------- ------------- --------------- ----------    
Colmenares 2500 30 3100 .166666667    
Himuro 2600 30 3100 .333333333    
Tobias 2800 30 3100 .5    
Baida 2900 30 3100 .666666667    
Khoo 3100 30 3100 .833333333    
Raphaely 11000 30 3100 1    
Lorentz 4200 60 6000 .2    
Austin 4800 60 6000 .6    
Pataballa 4800 60 6000 .6    
Ernst 6000 60 6000 .8    
Hunold 9000 60 6000 1    
89。RANK    
功能描述：根据ORDER BY子句中表达式的值，从查询返回的每一行，计算它们与其它行的相对位置。组内的数据按ORDER BY子句排序，    
然后给每一行赋一个号，从而形成一个序列，该序列从1开始，往后累加。每次ORDER BY表达式的值发生变化时，该序列也随之增加。    
有同样值的行得到同样的数字序号（认为null时相等的）。然而，如果两行的确得到同样的排序，则序数将随后跳跃。若两行序数为1，    
则没有序数2，序列将给组中的下一行分配值3，DENSE_RANK则没有任何跳跃。    
SAMPLE：下例中计算每个员工按部门分区再按薪水排序，依次出现的序列号（注意与DENSE_RANK函数的区别）    
SELECT d.department_id , e.last_name, e.salary, RANK()    
OVER (PARTITION BY e.department_id ORDER BY e.salary) as drank    
FROM employees e, departments d    
WHERE e.department_id = d.department_id    
AND d.department_id IN ('60', '90');    
DEPARTMENT_ID LAST_NAME SALARY DRANK    
------------- ------------------------- ---------- ----------    
60 Lorentz 4200 1    
60 Austin 4800 2    
60 Pataballa 4800 2    
60 Ernst 6000 4    
60 Hunold 9000 5    
90 Kochhar 17000 1    
90 De Haan 17000 1    
90 King 24000 3   
&#8226; 80。LAST 
功能描述：从DENSE_RANK返回的集合中取出排在最后面的一个值的行（可能多行，因为值可能相等），因此完整的语法需要在开始处加上一个集合函数以从中取出记录 
SAMPLE：下面例子中DENSE_RANK按部门分区，再按佣金commission_pct排序，FIRST取出佣金最低的对应的所有行，然后前面的MAX函数从这个集合中取出薪水最低的值；LAST取出佣金最高的对应的所有行，然后前面的MIN函数从这个集合中取出薪水最高的值 
SELECT last_name, department_id, salary, 
MIN(salary) KEEP (DENSE_RANK FIRST ORDER BY commission_pct) 
OVER (PARTITION BY department_id) "Worst", 
MAX(salary) KEEP (DENSE_RANK LAST ORDER BY commission_pct) 
OVER (PARTITION BY department_id) "Best" 
FROM employees 
WHERE department_id in (20,80) 
ORDER BY department_id, salary; 
LAST_NAME DEPARTMENT_ID SALARY Worst Best 
------------------------- ------------- ---------- ---------- ---------- 
Fay 20 6000 6000 13000 
Hartstein 20 13000 6000 13000 
Kumar 80 6100 6100 14000 
Banda 80 6200 6100 14000 
Johnson 80 6200 6100 14000 
Ande 80 6400 6100 14000 
Lee 80 6800 6100 14000 
Tuvault 80 7000 6100 14000 
Sewall 80 7000 6100 14000 
Marvins 80 7200 6100 14000 
Bates 80 7300 6100 14000 
. 
81。LAST_VALUE 
功能描述：返回组中数据窗口的最后一个值。 
SAMPLE：下面例子计算按部门分区按薪水排序的数据窗口的最后一个值对应的名字，如果薪水的最后一个值有多个，则从多个对应的名字中取缺省排序的最后一个名字 
SELECT department_id, last_name, salary, LAST_VALUE(last_name) 
OVER(PARTITION BY department_id ORDER BY salary) AS highest_sal 
FROM employees 
WHERE department_id in(20,30); 
DEPARTMENT_ID LAST_NAME SALARY HIGHEST_SAL 
------------- ------------------------- ---------- ------------ 
20 Fay 6000 Fay 
20 Hartstein 13000 Hartstein 
30 Colmenares 2500 Colmenares 
30 Himuro 2600 Himuro 
30 Tobias 2800 Tobias 
30 Baida 2900 Baida 
30 Khoo 3100 Khoo 
30 Raphaely 11000 Raphaely 
82。LEAD 
功能描述：LEAD与LAG相反，LEAD可以访问组中当前行之后的行。Offset是一个正整数，其默认值为1，若索引超出窗口的范围，就返回默认值（默认返回的是组中第一行） 
SAMPLE：下面的例子中每行的"NextHired"返回按hire_date排序的下一行的hire_date值 
SELECT last_name, hire_date, 
LEAD(hire_date, 1) OVER (ORDER BY hire_date) AS "NextHired" 
FROM employees WHERE department_id = 30; 
LAST_NAME HIRE_DATE NextHired 
------------------------- --------- --------- 
Raphaely 07-DEC-94 18-MAY-95 
Khoo 18-MAY-95 24-JUL-97 
Tobias 24-JUL-97 24-DEC-97 
Baida 24-DEC-97 15-NOV-98 
Himuro 15-NOV-98 10-AUG-99 
Colmenares 10-AUG-99 

83。MAX 
功能描述：在一个组中的数据窗口中查找表达式的最大值。 
SAMPLE：下面例子中dept_max返回当前行所在部门的最大薪水值 
SELECT department_id, last_name, salary, 
MAX(salary) OVER (PARTITION BY department_id) AS dept_max 
FROM employees WHERE department_id in (10,20,30); 
DEPARTMENT_ID LAST_NAME SALARY DEPT_MAX 
------------- ------------------------- ---------- ---------- 
10 Whalen 4400 4400 
20 Hartstein 13000 13000 
20 Fay 6000 13000 
30 Raphaely 11000 11000 
30 Khoo 3100 11000 
30 Baida 2900 11000 
30 Tobias 2800 11000 
30 Himuro 2600 11000 
30 Colmenares 2500 11000 

84。MIN 
功能描述：在一个组中的数据窗口中查找表达式的最小值。 
SAMPLE：下面例子中dept_min返回当前行所在部门的最小薪水值 
SELECT department_id, last_name, salary, 
MIN(salary) OVER (PARTITION BY department_id) AS dept_min 
FROM employees WHERE department_id in (10,20,30); 
DEPARTMENT_ID LAST_NAME SALARY DEPT_MIN 
------------- ------------------------- ---------- ---------- 
10 Whalen 4400 4400 
20 Hartstein 13000 6000 
20 Fay 6000 6000 
30 Raphaely 11000 2500 
30 Khoo 3100 2500 
30 Baida 2900 2500 
30 Tobias 2800 2500 
30 Himuro 2600 2500 
30 Colmenares 2500 2500 

85。NTILE 
功能描述：将一个组分为"表达式"的散列表示，例如，如果表达式=4，则给组中的每一行分配一个数（从1到4），如果组中有20行，则给前5行分配1，给下5行分配2等等。如果组的基数不能由表达式值平均分开，则对这些行进行分配时，组中就没有任何percentile的行数比其它percentile的行数超过一行，最低的percentile是那些拥有额外行的percentile。例如，若表达式=4，行数=21，则percentile=1的有5行，percentile=2的有5行等等。 
SAMPLE：下例中把6行数据分为4份 
SELECT last_name, salary, 
NTILE(4) OVER (ORDER BY salary DESC) AS quartile FROM employees 
WHERE department_id = 100; 
LAST_NAME SALARY QUARTILE 
------------------------- ---------- ---------- 
Greenberg 12000 1 
Faviet 9000 1 
Chen 8200 2 
Urman 7800 2 
Sciarra 7700 3 
Popp 6900 4 

86。PERCENT_RANK 
功能描述：和CUME_DIST（累积分配）函数类似，对于一个组中给定的行来说，在计算那行的序号时，先减1，然后除以n-1（n为组中所有的行数）。该函数总是返回0～1（包括1）之间的数。 
SAMPLE：下例中如果Khoo的salary为2900，则pr值为0.6，因为RANK函数对于等值的返回序列值是一样的 
SELECT department_id, last_name, salary, 
PERCENT_RANK() 
OVER (PARTITION BY department_id ORDER BY salary) AS pr 
FROM employees 
WHERE department_id < 50 
ORDER BY department_id,salary; 
DEPARTMENT_ID LAST_NAME SALARY PR 
------------- ------------------------- ---------- ---------- 
10 Whalen 4400 0 
20 Fay 6000 0 
20 Hartstein 13000 1 
30 Colmenares 2500 0 
30 Himuro 2600 0.2 
30 Tobias 2800 0.4 
30 Baida 2900 0.6 
30 Khoo 3100 0.8 
30 Raphaely 11000 1 
40 Mavris 6500 0 
&#8226; 87。PERCENTILE_CONT 
功能描述：返回一个与输入的分布百分比值相对应的数据值，分布百分比的计算方法见函数PERCENT_RANK，如果没有正好对应的数据值，就通过下面算法来得到值： 
RN = 1+ (P*(N-1)) 其中P是输入的分布百分比值，N是组内的行数 
CRN = CEIL(RN) FRN = FLOOR(RN) 
if (CRN = FRN = RN) then 
(value of expression from row at RN) 
else 
(CRN - RN) * (value of expression for row at FRN) + 
(RN - FRN) * (value of expression for row at CRN) 
注意：本函数与PERCENTILE_DISC的区别在找不到对应的分布值时返回的替代值的计算方法不同 
SAMPLE：在下例中，对于部门60的Percentile_Cont值计算如下： 
P=0.7 N=5 RN =1+ (P*(N-1)=1+(0.7*(5-1))=3.8 CRN = CEIL(3.8)=4 
FRN = FLOOR(3.8)=3 
（4 - 3.8）* 4800 + (3.8 - 3) * 6000 = 5760 
SELECT last_name, salary, department_id, 
PERCENTILE_CONT(0.7) WITHIN GROUP (ORDER BY salary) 
OVER (PARTITION BY department_id) "Percentile_Cont", 
PERCENT_RANK() 
OVER (PARTITION BY department_id ORDER BY salary) "Percent_Rank" 
FROM employees WHERE department_id IN (30, 60); 
LAST_NAME SALARY DEPARTMENT_ID Percentile_Cont Percent_Rank 
------------------------- ---------- ------------- --------------- ------------ 
Colmenares 2500 30 3000 0 
Himuro 2600 30 3000 0.2 
Tobias 2800 30 3000 0.4 
Baida 2900 30 3000 0.6 
Khoo 3100 30 3000 0.8 
Raphaely 11000 30 3000 1 
Lorentz 4200 60 5760 0 
Austin 4800 60 5760 0.25 
Pataballa 4800 60 5760 0.25 
Ernst 6000 60 5760 0.75 
Hunold 9000 60 5760 1 

88。PERCENTILE_DISC 
功能描述：返回一个与输入的分布百分比值相对应的数据值，分布百分比的计算方法见函数CUME_DIST，如果没有正好对应的数据值，就取大于该分布值的下一个值。 
注意：本函数与PERCENTILE_CONT的区别在找不到对应的分布值时返回的替代值的计算方法不同 
SAMPLE：下例中0.7的分布值在部门30中没有对应的Cume_Dist值，所以就取下一个分布值0.83333333所对应的SALARY来替代 
SELECT last_name, salary, department_id, 
PERCENTILE_DISC(0.7) WITHIN GROUP (ORDER BY salary ) 
OVER (PARTITION BY department_id) "Percentile_Disc", 
CUME_DIST() OVER (PARTITION BY department_id ORDER BY salary) "Cume_Dist" 
FROM employees 
WHERE department_id in (30, 60); 
LAST_NAME SALARY DEPARTMENT_ID Percentile_Disc Cume_Dist 
------------------------- ---------- ------------- --------------- ---------- 
Colmenares 2500 30 3100 .166666667 
Himuro 2600 30 3100 .333333333 
Tobias 2800 30 3100 .5 
Baida 2900 30 3100 .666666667 
Khoo 3100 30 3100 .833333333 
Raphaely 11000 30 3100 1 
Lorentz 4200 60 6000 .2 
Austin 4800 60 6000 .6 
Pataballa 4800 60 6000 .6 
Ernst 6000 60 6000 .8 
Hunold 9000 60 6000 1 
89。RANK 
功能描述：根据ORDER BY子句中表达式的值，从查询返回的每一行，计算它们与其它行的相对位置。组内的数据按ORDER BY子句排序， 
然后给每一行赋一个号，从而形成一个序列，该序列从1开始，往后累加。每次ORDER BY表达式的值发生变化时，该序列也随之增加。 
有同样值的行得到同样的数字序号（认为null时相等的）。然而，如果两行的确得到同样的排序，则序数将随后跳跃。若两行序数为1， 
则没有序数2，序列将给组中的下一行分配值3，DENSE_RANK则没有任何跳跃。 
SAMPLE：下例中计算每个员工按部门分区再按薪水排序，依次出现的序列号（注意与DENSE_RANK函数的区别） 
SELECT d.department_id , e.last_name, e.salary, RANK() 
OVER (PARTITION BY e.department_id ORDER BY e.salary) as drank 
FROM employees e, departments d 
WHERE e.department_id = d.department_id 
AND d.department_id IN ('60', '90'); 
DEPARTMENT_ID LAST_NAME SALARY DRANK 
------------- ------------------------- ---------- ---------- 
60 Lorentz 4200 1 
60 Austin 4800 2 
60 Pataballa 4800 2 
60 Ernst 6000 4 
60 Hunold 9000 5 
90 Kochhar 17000 1 
90 De Haan 17000 1 
90 King 24000 3 


6,

+ expand sourceview plaincopy to clipboardprint?
90。RATIO_TO_REPORT    
功能描述：该函数计算expression/(sum(expression))的值，它给出相对于总数的百分比，即当前行对sum(expression)的贡献。    
SAMPLE：下例计算每个员工的工资占该类员工总工资的百分比    
SELECT last_name, salary, RATIO_TO_REPORT(salary) OVER () AS rr    
FROM employees    
WHERE job_id = 'PU_CLERK';    
LAST_NAME SALARY RR    
------------------------- ---------- ----------    
Khoo 3100 .223021583    
Baida 2900 .208633094    
Tobias 2800 .201438849    
Himuro 2600 .18705036    
Colmenares 2500 .179856115    
&#8226; 91。REGR_ (Linear Regression) Functions    
功能描述：这些线性回归函数适合最小二乘法回归线，有9个不同的回归函数可使用。    
REGR_SLOPE：返回斜率，等于COVAR_POP(expr1, expr2) / VAR_POP(expr2)    
REGR_INTERCEPT：返回回归线的y截距，等于    
AVG(expr1) - REGR_SLOPE(expr1, expr2) * AVG(expr2)    
REGR_COUNT：返回用于填充回归线的非空数字对的数目    
REGR_R2：返回回归线的决定系数，计算式为：    
If VAR_POP(expr2) = 0 then return NULL    
If VAR_POP(expr1) = 0 and VAR_POP(expr2) != 0 then return 1    
If VAR_POP(expr1) > 0 and VAR_POP(expr2 != 0 then    
return POWER(CORR(expr1,expr),2)    
REGR_AVGX：计算回归线的自变量(expr2)的平均值，去掉了空对(expr1, expr2)后，等于AVG(expr2)    
REGR_AVGY：计算回归线的应变量(expr1)的平均值，去掉了空对(expr1, expr2)后，等于AVG(expr1)    
REGR_SXX： 返回值等于REGR_COUNT(expr1, expr2) * VAR_POP(expr2)    
REGR_SYY： 返回值等于REGR_COUNT(expr1, expr2) * VAR_POP(expr1)    
REGR_SXY: 返回值等于REGR_COUNT(expr1, expr2) * COVAR_POP(expr1, expr2)    
（下面的例子都是在SH用户下完成的）    
SAMPLE 1：下例计算1998年最后三个星期中两种产品（260和270）在周末的销售量中已开发票数量和总数量的累积斜率和回归线的截距    
SELECT t.fiscal_month_number "Month", t.day_number_in_month "Day",    
REGR_SLOPE(s.amount_sold, s.quantity_sold)    
OVER (ORDER BY t.fiscal_month_desc, t.day_number_in_month) AS CUM_SLOPE,    
REGR_INTERCEPT(s.amount_sold, s.quantity_sold)    
OVER (ORDER BY t.fiscal_month_desc, t.day_number_in_month) AS CUM_ICPT    
FROM sales s, times t    
WHERE s.time_id = t.time_id    
AND s.prod_id IN (270, 260)    
AND t.fiscal_year=1998    
AND t.fiscal_week_number IN (50, 51, 52)    
AND t.day_number_in_week IN (6,7)    
ORDER BY t.fiscal_month_desc, t.day_number_in_month;    
Month Day CUM_SLOPE CUM_ICPT    
---------- ---------- ---------- ----------    
12 12 -68 1872    
12 12 -68 1872    
12 13 -20.244898 1254.36735    
12 13 -20.244898 1254.36735    
12 19 -18.826087 1287    
12 20 62.4561404 125.28655    
12 20 62.4561404 125.28655    
12 20 62.4561404 125.28655    
12 20 62.4561404 125.28655    
12 26 67.2658228 58.9712313    
12 26 67.2658228 58.9712313    
12 27 37.5245541 284.958221    
12 27 37.5245541 284.958221    
12 27 37.5245541 284.958221    
SAMPLE 2：下例计算1998年4月每天的累积交易数量    
SELECT UNIQUE t.day_number_in_month,    
REGR_COUNT(s.amount_sold, s.quantity_sold)    
OVER (PARTITION BY t.fiscal_month_number ORDER BY t.day_number_in_month)    
"Regr_Count"    
FROM sales s, times t    
WHERE s.time_id = t.time_id    
AND t.fiscal_year = 1998 AND t.fiscal_month_number = 4;    
DAY_NUMBER_IN_MONTH Regr_Count    
------------------- ----------    
1 825    
2 1650    
3 2475    
4 3300   
90。RATIO_TO_REPORT 
功能描述：该函数计算expression/(sum(expression))的值，它给出相对于总数的百分比，即当前行对sum(expression)的贡献。 
SAMPLE：下例计算每个员工的工资占该类员工总工资的百分比 
SELECT last_name, salary, RATIO_TO_REPORT(salary) OVER () AS rr 
FROM employees 
WHERE job_id = 'PU_CLERK'; 
LAST_NAME SALARY RR 
------------------------- ---------- ---------- 
Khoo 3100 .223021583 
Baida 2900 .208633094 
Tobias 2800 .201438849 
Himuro 2600 .18705036 
Colmenares 2500 .179856115 
&#8226; 91。REGR_ (Linear Regression) Functions 
功能描述：这些线性回归函数适合最小二乘法回归线，有9个不同的回归函数可使用。 
REGR_SLOPE：返回斜率，等于COVAR_POP(expr1, expr2) / VAR_POP(expr2) 
REGR_INTERCEPT：返回回归线的y截距，等于 
AVG(expr1) - REGR_SLOPE(expr1, expr2) * AVG(expr2) 
REGR_COUNT：返回用于填充回归线的非空数字对的数目 
REGR_R2：返回回归线的决定系数，计算式为： 
If VAR_POP(expr2) = 0 then return NULL 
If VAR_POP(expr1) = 0 and VAR_POP(expr2) != 0 then return 1 
If VAR_POP(expr1) > 0 and VAR_POP(expr2 != 0 then 
return POWER(CORR(expr1,expr),2) 
REGR_AVGX：计算回归线的自变量(expr2)的平均值，去掉了空对(expr1, expr2)后，等于AVG(expr2) 
REGR_AVGY：计算回归线的应变量(expr1)的平均值，去掉了空对(expr1, expr2)后，等于AVG(expr1) 
REGR_SXX： 返回值等于REGR_COUNT(expr1, expr2) * VAR_POP(expr2) 
REGR_SYY： 返回值等于REGR_COUNT(expr1, expr2) * VAR_POP(expr1) 
REGR_SXY: 返回值等于REGR_COUNT(expr1, expr2) * COVAR_POP(expr1, expr2) 
（下面的例子都是在SH用户下完成的） 
SAMPLE 1：下例计算1998年最后三个星期中两种产品（260和270）在周末的销售量中已开发票数量和总数量的累积斜率和回归线的截距 
SELECT t.fiscal_month_number "Month", t.day_number_in_month "Day", 
REGR_SLOPE(s.amount_sold, s.quantity_sold) 
OVER (ORDER BY t.fiscal_month_desc, t.day_number_in_month) AS CUM_SLOPE, 
REGR_INTERCEPT(s.amount_sold, s.quantity_sold) 
OVER (ORDER BY t.fiscal_month_desc, t.day_number_in_month) AS CUM_ICPT 
FROM sales s, times t 
WHERE s.time_id = t.time_id 
AND s.prod_id IN (270, 260) 
AND t.fiscal_year=1998 
AND t.fiscal_week_number IN (50, 51, 52) 
AND t.day_number_in_week IN (6,7) 
ORDER BY t.fiscal_month_desc, t.day_number_in_month; 
Month Day CUM_SLOPE CUM_ICPT 
---------- ---------- ---------- ---------- 
12 12 -68 1872 
12 12 -68 1872 
12 13 -20.244898 1254.36735 
12 13 -20.244898 1254.36735 
12 19 -18.826087 1287 
12 20 62.4561404 125.28655 
12 20 62.4561404 125.28655 
12 20 62.4561404 125.28655 
12 20 62.4561404 125.28655 
12 26 67.2658228 58.9712313 
12 26 67.2658228 58.9712313 
12 27 37.5245541 284.958221 
12 27 37.5245541 284.958221 
12 27 37.5245541 284.958221 
SAMPLE 2：下例计算1998年4月每天的累积交易数量 
SELECT UNIQUE t.day_number_in_month, 
REGR_COUNT(s.amount_sold, s.quantity_sold) 
OVER (PARTITION BY t.fiscal_month_number ORDER BY t.day_number_in_month) 
"Regr_Count" 
FROM sales s, times t 
WHERE s.time_id = t.time_id 
AND t.fiscal_year = 1998 AND t.fiscal_month_number = 4; 
DAY_NUMBER_IN_MONTH Regr_Count 
------------------- ---------- 
1 825 
2 1650 
3 2475 
4 3300 


7,

+ expand sourceview plaincopy to clipboardprint?
26 21450    
30 22200    
SAMPLE 3：下例计算1998年每月销售量中已开发票数量和总数量的累积回归线决定系数    
SELECT t.fiscal_month_number,    
REGR_R2(SUM(s.amount_sold), SUM(s.quantity_sold))    
OVER (ORDER BY t.fiscal_month_number) "Regr_R2"    
FROM sales s, times t    
WHERE s.time_id = t.time_id    
AND t.fiscal_year = 1998    
GROUP BY t.fiscal_month_number    
ORDER BY t.fiscal_month_number;    
FISCAL_MONTH_NUMBER Regr_R2    
------------------- ----------    
1    
2 1    
3 .927372984    
4 .807019972    
5 .932745567    
6 .94682861    
7 .965342011    
8 .955768075    
9 .959542618    
10 .938618575    
11 .880931415    
12 .882769189    
SAMPLE 4：下例计算1998年12月最后两周产品260的销售量中已开发票数量和总数量的累积平均值    
SELECT t.day_number_in_month,    
REGR_AVGY(s.amount_sold, s.quantity_sold)    
OVER (ORDER BY t.fiscal_month_desc, t.day_number_in_month)    
"Regr_AvgY",    
REGR_AVGX(s.amount_sold, s.quantity_sold)    
OVER (ORDER BY t.fiscal_month_desc, t.day_number_in_month)    
"Regr_AvgX"    
FROM sales s, times t    
WHERE s.time_id = t.time_id    
AND s.prod_id = 260    
AND t.fiscal_month_desc = '1998-12'    
AND t.fiscal_week_number IN (51, 52)    
ORDER BY t.day_number_in_month;    
DAY_NUMBER_IN_MONTH Regr_AvgY Regr_AvgX    
------------------- ---------- ----------    
14 882 24.5    
14 882 24.5    
15 801 22.25    
15 801 22.25    
16 777.6 21.6    
18 642.857143 17.8571429    
18 642.857143 17.8571429    
20 589.5 16.375    
21 544 15.1111111    
22 592.363636 16.4545455    
22 592.363636 16.4545455    
24 553.846154 15.3846154    
24 553.846154 15.3846154    
26 522 14.5    
27 578.4 16.0666667    
SAMPLE 5：下例计算产品260和270在1998年2月周末销售量中已开发票数量和总数量的累积REGR_SXY, REGR_SXX, and REGR_SYY统计值    
SELECT t.day_number_in_month,    
REGR_SXY(s.amount_sold, s.quantity_sold)    
OVER (ORDER BY t.fiscal_year, t.fiscal_month_desc) "Regr_sxy",    
REGR_SYY(s.amount_sold, s.quantity_sold)    
OVER (ORDER BY t.fiscal_year, t.fiscal_month_desc) "Regr_syy",    
REGR_SXX(s.amount_sold, s.quantity_sold)    
OVER (ORDER BY t.fiscal_year, t.fiscal_month_desc) "Regr_sxx"    
FROM sales s, times t    
WHERE s.time_id = t.time_id    
AND prod_id IN (270, 260)    
AND t.fiscal_month_desc = '1998-02'    
AND t.day_number_in_week IN (6,7)    
ORDER BY t.day_number_in_month;    
DAY_NUMBER_IN_MONTH Regr_sxy Regr_syy Regr_sxx    
------------------- ---------- ---------- ----------    
1 18870.4 2116198.4 258.4    
1 18870.4 2116198.4 258.4    
1 18870.4 2116198.4 258.4    
1 18870.4 2116198.4 258.4    
7 18870.4 2116198.4 258.4    
8 18870.4 2116198.4 258.4    
14 18870.4 2116198.4 258.4    
15 18870.4 2116198.4 258.4    
21 18870.4 2116198.4 258.4    
22 18870.4 2116198.4 258.4   
26 21450 
30 22200 
SAMPLE 3：下例计算1998年每月销售量中已开发票数量和总数量的累积回归线决定系数 
SELECT t.fiscal_month_number, 
REGR_R2(SUM(s.amount_sold), SUM(s.quantity_sold)) 
OVER (ORDER BY t.fiscal_month_number) "Regr_R2" 
FROM sales s, times t 
WHERE s.time_id = t.time_id 
AND t.fiscal_year = 1998 
GROUP BY t.fiscal_month_number 
ORDER BY t.fiscal_month_number; 
FISCAL_MONTH_NUMBER Regr_R2 
------------------- ---------- 
1 
2 1 
3 .927372984 
4 .807019972 
5 .932745567 
6 .94682861 
7 .965342011 
8 .955768075 
9 .959542618 
10 .938618575 
11 .880931415 
12 .882769189 
SAMPLE 4：下例计算1998年12月最后两周产品260的销售量中已开发票数量和总数量的累积平均值 
SELECT t.day_number_in_month, 
REGR_AVGY(s.amount_sold, s.quantity_sold) 
OVER (ORDER BY t.fiscal_month_desc, t.day_number_in_month) 
"Regr_AvgY", 
REGR_AVGX(s.amount_sold, s.quantity_sold) 
OVER (ORDER BY t.fiscal_month_desc, t.day_number_in_month) 
"Regr_AvgX" 
FROM sales s, times t 
WHERE s.time_id = t.time_id 
AND s.prod_id = 260 
AND t.fiscal_month_desc = '1998-12' 
AND t.fiscal_week_number IN (51, 52) 
ORDER BY t.day_number_in_month; 
DAY_NUMBER_IN_MONTH Regr_AvgY Regr_AvgX 
------------------- ---------- ---------- 
14 882 24.5 
14 882 24.5 
15 801 22.25 
15 801 22.25 
16 777.6 21.6 
18 642.857143 17.8571429 
18 642.857143 17.8571429 
20 589.5 16.375 
21 544 15.1111111 
22 592.363636 16.4545455 
22 592.363636 16.4545455 
24 553.846154 15.3846154 
24 553.846154 15.3846154 
26 522 14.5 
27 578.4 16.0666667 
SAMPLE 5：下例计算产品260和270在1998年2月周末销售量中已开发票数量和总数量的累积REGR_SXY, REGR_SXX, and REGR_SYY统计值 
SELECT t.day_number_in_month, 
REGR_SXY(s.amount_sold, s.quantity_sold) 
OVER (ORDER BY t.fiscal_year, t.fiscal_month_desc) "Regr_sxy", 
REGR_SYY(s.amount_sold, s.quantity_sold) 
OVER (ORDER BY t.fiscal_year, t.fiscal_month_desc) "Regr_syy", 
REGR_SXX(s.amount_sold, s.quantity_sold) 
OVER (ORDER BY t.fiscal_year, t.fiscal_month_desc) "Regr_sxx" 
FROM sales s, times t 
WHERE s.time_id = t.time_id 
AND prod_id IN (270, 260) 
AND t.fiscal_month_desc = '1998-02' 
AND t.day_number_in_week IN (6,7) 
ORDER BY t.day_number_in_month; 
DAY_NUMBER_IN_MONTH Regr_sxy Regr_syy Regr_sxx 
------------------- ---------- ---------- ---------- 
1 18870.4 2116198.4 258.4 
1 18870.4 2116198.4 258.4 
1 18870.4 2116198.4 258.4 
1 18870.4 2116198.4 258.4 
7 18870.4 2116198.4 258.4 
8 18870.4 2116198.4 258.4 
14 18870.4 2116198.4 258.4 
15 18870.4 2116198.4 258.4 
21 18870.4 2116198.4 258.4 
22 18870.4 2116198.4 258.4 


8,

+ expand sourceview plaincopy to clipboardprint?
&#8226; 92。ROW_NUMBER    
功能描述：返回有序组中一行的偏移量，从而可用于按特定标准排序的行号。    
SAMPLE：下例返回每个员工再在每个部门中按员工号排序后的顺序号    
SELECT department_id, last_name, employee_id, ROW_NUMBER()    
OVER (PARTITION BY department_id ORDER BY employee_id) AS emp_id    
FROM employees    
WHERE department_id < 50;    
DEPARTMENT_ID LAST_NAME EMPLOYEE_ID EMP_ID    
------------- ------------------------- ----------- ----------    
10 Whalen 200 1    
20 Hartstein 201 1    
20 Fay 202 2    
30 Raphaely 114 1    
30 Khoo 115 2    
30 Baida 116 3    
30 Tobias 117 4    
30 Himuro 118 5    
30 Colmenares 119 6    
40 Mavris 203 1    
93。STDDEV    
功能描述：计算当前行关于组的标准偏离。（Standard Deviation）    
SAMPLE：下例返回部门30按雇佣日期排序的薪水值的累积标准偏离    
SELECT last_name, hire_date,salary,    
STDDEV(salary) OVER (ORDER BY hire_date) "StdDev"    
FROM employees    
WHERE department_id = 30;    
LAST_NAME HIRE_DATE SALARY StdDev    
------------------------- ---------- ---------- ----------    
Raphaely 07-12月-94 11000 0    
Khoo 18-5月 -95 3100 5586.14357    
Tobias 24-7月 -97 2800 4650.0896    
Baida 24-12月-97 2900 4035.26125    
Himuro 15-11月-98 2600 3649.2465    
Colmenares 10-8月 -99 2500 3362.58829    
94。STDDEV_POP    
功能描述：该函数计算总体标准偏离，并返回总体变量的平方根，其返回值与VAR_POP函数的平方根相同。（Standard Deviation－Population）    
SAMPLE：下例返回部门20、30、60的薪水值的总体标准偏差    
SELECT department_id, last_name, salary,    
STDDEV_POP(salary) OVER (PARTITION BY department_id) AS pop_std    
FROM employees    
WHERE department_id in (20,30,60);    
DEPARTMENT_ID LAST_NAME SALARY POP_STD    
------------- ------------------------- ---------- ----------    
20 Hartstein 13000 3500    
20 Fay 6000 3500    
30 Raphaely 11000 3069.6091    
30 Khoo 3100 3069.6091    
30 Baida 2900 3069.6091    
30 Colmenares 2500 3069.6091    
30 Himuro 2600 3069.6091    
30 Tobias 2800 3069.6091    
60 Hunold 9000 1722.32401    
60 Ernst 6000 1722.32401    
60 Austin 4800 1722.32401    
60 Pataballa 4800 1722.32401    
60 Lorentz 4200 1722.32401   
&#8226; 92。ROW_NUMBER 
功能描述：返回有序组中一行的偏移量，从而可用于按特定标准排序的行号。 
SAMPLE：下例返回每个员工再在每个部门中按员工号排序后的顺序号 
SELECT department_id, last_name, employee_id, ROW_NUMBER() 
OVER (PARTITION BY department_id ORDER BY employee_id) AS emp_id 
FROM employees 
WHERE department_id < 50; 
DEPARTMENT_ID LAST_NAME EMPLOYEE_ID EMP_ID 
------------- ------------------------- ----------- ---------- 
10 Whalen 200 1 
20 Hartstein 201 1 
20 Fay 202 2 
30 Raphaely 114 1 
30 Khoo 115 2 
30 Baida 116 3 
30 Tobias 117 4 
30 Himuro 118 5 
30 Colmenares 119 6 
40 Mavris 203 1 
93。STDDEV 
功能描述：计算当前行关于组的标准偏离。（Standard Deviation） 
SAMPLE：下例返回部门30按雇佣日期排序的薪水值的累积标准偏离 
SELECT last_name, hire_date,salary, 
STDDEV(salary) OVER (ORDER BY hire_date) "StdDev" 
FROM employees 
WHERE department_id = 30; 
LAST_NAME HIRE_DATE SALARY StdDev 
------------------------- ---------- ---------- ---------- 
Raphaely 07-12月-94 11000 0 
Khoo 18-5月 -95 3100 5586.14357 
Tobias 24-7月 -97 2800 4650.0896 
Baida 24-12月-97 2900 4035.26125 
Himuro 15-11月-98 2600 3649.2465 
Colmenares 10-8月 -99 2500 3362.58829 
94。STDDEV_POP 
功能描述：该函数计算总体标准偏离，并返回总体变量的平方根，其返回值与VAR_POP函数的平方根相同。（Standard Deviation－Population） 
SAMPLE：下例返回部门20、30、60的薪水值的总体标准偏差 
SELECT department_id, last_name, salary, 
STDDEV_POP(salary) OVER (PARTITION BY department_id) AS pop_std 
FROM employees 
WHERE department_id in (20,30,60); 
DEPARTMENT_ID LAST_NAME SALARY POP_STD 
------------- ------------------------- ---------- ---------- 
20 Hartstein 13000 3500 
20 Fay 6000 3500 
30 Raphaely 11000 3069.6091 
30 Khoo 3100 3069.6091 
30 Baida 2900 3069.6091 
30 Colmenares 2500 3069.6091 
30 Himuro 2600 3069.6091 
30 Tobias 2800 3069.6091 
60 Hunold 9000 1722.32401 
60 Ernst 6000 1722.32401 
60 Austin 4800 1722.32401 
60 Pataballa 4800 1722.32401 
60 Lorentz 4200 1722.32401 


9,

+ expand sourceview plaincopy to clipboardprint?
95。STDDEV_SAMP    
功能描述： 该函数计算累积样本标准偏离，并返回总体变量的平方根，其返回值与VAR_POP函数的平方根相同。（Standard Deviation－Sample）    
SAMPLE：下例返回部门20、30、60的薪水值的样本标准偏差    
SELECT department_id, last_name, hire_date, salary,    
STDDEV_SAMP(salary) OVER    
(PARTITION BY department_id ORDER BY hire_date    
ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS cum_sdev    
FROM employees    
WHERE department_id in (20,30,60);    
DEPARTMENT_ID LAST_NAME HIRE_DATE SALARY CUM_SDEV    
------------- ------------------------- ---------- ---------- ----------    
20 Hartstein 17-2月 -96 13000    
20 Fay 17-8月 -97 6000 4949.74747    
30 Raphaely 07-12月-94 11000    
30 Khoo 18-5月 -95 3100 5586.14357    
30 Tobias 24-7月 -97 2800 4650.0896    
30 Baida 24-12月-97 2900 4035.26125    
30 Himuro 15-11月-98 2600 3649.2465    
30 Colmenares 10-8月 -99 2500 3362.58829    
60 Hunold 03-1月 -90 9000    
60 Ernst 21-5月 -91 6000 2121.32034    
60 Austin 25-6月 -97 4800 2163.33077    
60 Pataballa 05-2月 -98 4800 1982.42276    
60 Lorentz 07-2月 -99 4200 1925.61678    
  
96。SUM    
功能描述：该函数计算组中表达式的累积和。    
SAMPLE：下例计算同一经理下员工的薪水累积值    
SELECT manager_id, last_name, salary,    
SUM (salary) OVER (PARTITION BY manager_id ORDER BY salary    
RANGE UNBOUNDED PRECEDING) l_csum    
FROM employees    
WHERE manager_id in (101,103,108);    
MANAGER_ID LAST_NAME SALARY L_CSUM    
---------- ------------------------- ---------- ----------    
101 Whalen 4400 4400    
101 Mavris 6500 10900    
101 Baer 10000 20900    
101 Greenberg 12000 44900    
101 Higgins 12000 44900    
103 Lorentz 4200 4200    
103 Austin 4800 13800    
103 Pataballa 4800 13800    
103 Ernst 6000 19800    
108 Popp 6900 6900    
108 Sciarra 7700 14600    
108 Urman 7800 22400    
108 Chen 8200 30600    
108 Faviet 9000 39600    
97。VAR_POP    
功能描述：（Variance Population）该函数返回非空集合的总体变量（忽略null），VAR_POP进行如下计算：    
(SUM(expr2) - SUM(expr)2 / COUNT(expr)) / COUNT(expr)    
SAMPLE：下例计算1998年每月销售的累积总体和样本变量（本例在SH用户下运行）    
SELECT t.calendar_month_desc,    
VAR_POP(SUM(s.amount_sold))    
OVER (ORDER BY t.calendar_month_desc) "Var_Pop",    
VAR_SAMP(SUM(s.amount_sold))    
OVER (ORDER BY t.calendar_month_desc) "Var_Samp"    
FROM sales s, times t    
WHERE s.time_id = t.time_id AND t.calendar_year = 1998    
GROUP BY t.calendar_month_desc;    
CALENDAR Var_Pop Var_Samp    
-------- ---------- ----------    
1998-01 0    
1998-02 6.1321E+11 1.2264E+12    
1998-03 4.7058E+11 7.0587E+11    
1998-04 4.6929E+11 6.2572E+11    
1998-05 1.5524E+12 1.9405E+12    
1998-06 2.3711E+12 2.8453E+12    
1998-07 3.7464E+12 4.3708E+12    
1998-08 3.7852E+12 4.3260E+12    
1998-09 3.5753E+12 4.0222E+12    
1998-10 3.4343E+12 3.8159E+12    
1998-11 3.4245E+12 3.7669E+12    
1998-12 4.8937E+12 5.3386E+12    
&#8226; 98。VAR_SAMP    
功能描述：（Variance Sample）该函数返回非空集合的样本变量（忽略null），VAR_POP进行如下计算：    
(SUM(expr*expr)-SUM(expr)*SUM(expr)/COUNT(expr))/(COUNT(expr)-1)    
SAMPLE：下例计算1998年每月销售的累积总体和样本变量    
SELECT t.calendar_month_desc,    
VAR_POP(SUM(s.amount_sold))    
OVER (ORDER BY t.calendar_month_desc) "Var_Pop",    
VAR_SAMP(SUM(s.amount_sold))    
OVER (ORDER BY t.calendar_month_desc) "Var_Samp"    
FROM sales s, times t    
WHERE s.time_id = t.time_id AND t.calendar_year = 1998    
GROUP BY t.calendar_month_desc;    
CALENDAR Var_Pop Var_Samp    
-------- ---------- ----------    
1998-01 0    
1998-02 6.1321E+11 1.2264E+12    
1998-03 4.7058E+11 7.0587E+11    
1998-04 4.6929E+11 6.2572E+11    
1998-05 1.5524E+12 1.9405E+12    
1998-06 2.3711E+12 2.8453E+12    
1998-07 3.7464E+12 4.3708E+12    
1998-08 3.7852E+12 4.3260E+12    
1998-09 3.5753E+12 4.0222E+12    
1998-10 3.4343E+12 3.8159E+12    
1998-11 3.4245E+12 3.7669E+12    
1998-12 4.8937E+12 5.3386E+12    
99。VARIANCE    
功能描述：该函数返回表达式的变量，Oracle计算该变量如下：    
如果表达式中行数为1，则返回0    
如果表达式中行数大于1，则返回VAR_SAMP    
SAMPLE：下例返回部门30按雇佣日期排序的薪水值的累积变化    
SELECT last_name, salary, VARIANCE(salary)    
OVER (ORDER BY hire_date) "Variance"    
FROM employees    
WHERE department_id = 30;    
LAST_NAME SALARY Variance    
------------------------- ---------- ----------    
Raphaely 11000 0    
Khoo 3100 31205000    
Tobias 2800 21623333.3    
Baida 2900 16283333.3    
Himuro 2600 13317000    
Colmenares 2500 11307000    
100。RANK    
功能描述：根据ORDER BY子句中表达式的值，从查询返回的每一行，计算它们与其它行的相对位置。组内的数据按ORDER BY子句排序，    
然后给每一行赋一个号，从而形成一个序列，该序列从1开始，往后累加。每次ORDER BY表达式的值发生变化时，该序列也随之增加。    
有同样值的行得到同样的数字序号（认为null时相等的）。然而，如果两行的确得到同样的排序，则序数将随后跳跃。若两行序数为1，    
则没有序数2，序列将给组中的下一行分配值3，DENSE_RANK则没有任何跳跃。    
SAMPLE：下例中计算每个员工按部门分区再按薪水排序，依次出现的序列号（注意与DENSE_RANK函数的区别）    
SELECT d.department_id , e.last_name, e.salary, RANK()    
OVER (PARTITION BY e.department_id ORDER BY e.salary) as drank    
FROM employees e, departments d    
WHERE e.department_id = d.department_id    
AND d.department_id IN ('60', '90');    
DEPARTMENT_ID LAST_NAME SALARY DRANK    
------------- ------------------------- ---------- ----------    
60 Lorentz 4200 1    
60 Austin 4800 2    
60 Pataballa 4800 2    
60 Ernst 6000 4    
60 Hunold 9000 5    
90 Kochhar 17000 1    
90 De Haan 17000 1    
90 King 24000 3   
95。STDDEV_SAMP 
功能描述： 该函数计算累积样本标准偏离，并返回总体变量的平方根，其返回值与VAR_POP函数的平方根相同。（Standard Deviation－Sample） 
SAMPLE：下例返回部门20、30、60的薪水值的样本标准偏差 
SELECT department_id, last_name, hire_date, salary, 
STDDEV_SAMP(salary) OVER 
(PARTITION BY department_id ORDER BY hire_date 
ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS cum_sdev 
FROM employees 
WHERE department_id in (20,30,60); 
DEPARTMENT_ID LAST_NAME HIRE_DATE SALARY CUM_SDEV 
------------- ------------------------- ---------- ---------- ---------- 
20 Hartstein 17-2月 -96 13000 
20 Fay 17-8月 -97 6000 4949.74747 
30 Raphaely 07-12月-94 11000 
30 Khoo 18-5月 -95 3100 5586.14357 
30 Tobias 24-7月 -97 2800 4650.0896 
30 Baida 24-12月-97 2900 4035.26125 
30 Himuro 15-11月-98 2600 3649.2465 
30 Colmenares 10-8月 -99 2500 3362.58829 
60 Hunold 03-1月 -90 9000 
60 Ernst 21-5月 -91 6000 2121.32034 
60 Austin 25-6月 -97 4800 2163.33077 
60 Pataballa 05-2月 -98 4800 1982.42276 
60 Lorentz 07-2月 -99 4200 1925.61678 

96。SUM 
功能描述：该函数计算组中表达式的累积和。 
SAMPLE：下例计算同一经理下员工的薪水累积值 
SELECT manager_id, last_name, salary, 
SUM (salary) OVER (PARTITION BY manager_id ORDER BY salary 
RANGE UNBOUNDED PRECEDING) l_csum 
FROM employees 
WHERE manager_id in (101,103,108); 
MANAGER_ID LAST_NAME SALARY L_CSUM 
---------- ------------------------- ---------- ---------- 
101 Whalen 4400 4400 
101 Mavris 6500 10900 
101 Baer 10000 20900 
101 Greenberg 12000 44900 
101 Higgins 12000 44900 
103 Lorentz 4200 4200 
103 Austin 4800 13800 
103 Pataballa 4800 13800 
103 Ernst 6000 19800 
108 Popp 6900 6900 
108 Sciarra 7700 14600 
108 Urman 7800 22400 
108 Chen 8200 30600 
108 Faviet 9000 39600 
97。VAR_POP 
功能描述：（Variance Population）该函数返回非空集合的总体变量（忽略null），VAR_POP进行如下计算： 
(SUM(expr2) - SUM(expr)2 / COUNT(expr)) / COUNT(expr) 
SAMPLE：下例计算1998年每月销售的累积总体和样本变量（本例在SH用户下运行） 
SELECT t.calendar_month_desc, 
VAR_POP(SUM(s.amount_sold)) 
OVER (ORDER BY t.calendar_month_desc) "Var_Pop", 
VAR_SAMP(SUM(s.amount_sold)) 
OVER (ORDER BY t.calendar_month_desc) "Var_Samp" 
FROM sales s, times t 
WHERE s.time_id = t.time_id AND t.calendar_year = 1998 
GROUP BY t.calendar_month_desc; 
CALENDAR Var_Pop Var_Samp 
-------- ---------- ---------- 
1998-01 0 
1998-02 6.1321E+11 1.2264E+12 
1998-03 4.7058E+11 7.0587E+11 
1998-04 4.6929E+11 6.2572E+11 
1998-05 1.5524E+12 1.9405E+12 
1998-06 2.3711E+12 2.8453E+12 
1998-07 3.7464E+12 4.3708E+12 
1998-08 3.7852E+12 4.3260E+12 
1998-09 3.5753E+12 4.0222E+12 
1998-10 3.4343E+12 3.8159E+12 
1998-11 3.4245E+12 3.7669E+12 
1998-12 4.8937E+12 5.3386E+12 
&#8226; 98。VAR_SAMP 
功能描述：（Variance Sample）该函数返回非空集合的样本变量（忽略null），VAR_POP进行如下计算： 
(SUM(expr*expr)-SUM(expr)*SUM(expr)/COUNT(expr))/(COUNT(expr)-1) 
SAMPLE：下例计算1998年每月销售的累积总体和样本变量 
SELECT t.calendar_month_desc, 
VAR_POP(SUM(s.amount_sold)) 
OVER (ORDER BY t.calendar_month_desc) "Var_Pop", 
VAR_SAMP(SUM(s.amount_sold)) 
OVER (ORDER BY t.calendar_month_desc) "Var_Samp" 
FROM sales s, times t 
WHERE s.time_id = t.time_id AND t.calendar_year = 1998 
GROUP BY t.calendar_month_desc; 
CALENDAR Var_Pop Var_Samp 
-------- ---------- ---------- 
1998-01 0 
1998-02 6.1321E+11 1.2264E+12 
1998-03 4.7058E+11 7.0587E+11 
1998-04 4.6929E+11 6.2572E+11 
1998-05 1.5524E+12 1.9405E+12 
1998-06 2.3711E+12 2.8453E+12 
1998-07 3.7464E+12 4.3708E+12 
1998-08 3.7852E+12 4.3260E+12 
1998-09 3.5753E+12 4.0222E+12 
1998-10 3.4343E+12 3.8159E+12 
1998-11 3.4245E+12 3.7669E+12 
1998-12 4.8937E+12 5.3386E+12 
99。VARIANCE 
功能描述：该函数返回表达式的变量，Oracle计算该变量如下： 
如果表达式中行数为1，则返回0 
如果表达式中行数大于1，则返回VAR_SAMP 
SAMPLE：下例返回部门30按雇佣日期排序的薪水值的累积变化 
SELECT last_name, salary, VARIANCE(salary) 
OVER (ORDER BY hire_date) "Variance" 
FROM employees 
WHERE department_id = 30; 
LAST_NAME SALARY Variance 
------------------------- ---------- ---------- 
Raphaely 11000 0 
Khoo 3100 31205000 
Tobias 2800 21623333.3 
Baida 2900 16283333.3 
Himuro 2600 13317000 
Colmenares 2500 11307000 
100。RANK 
功能描述：根据ORDER BY子句中表达式的值，从查询返回的每一行，计算它们与其它行的相对位置。组内的数据按ORDER BY子句排序， 
然后给每一行赋一个号，从而形成一个序列，该序列从1开始，往后累加。每次ORDER BY表达式的值发生变化时，该序列也随之增加。 
有同样值的行得到同样的数字序号（认为null时相等的）。然而，如果两行的确得到同样的排序，则序数将随后跳跃。若两行序数为1， 
则没有序数2，序列将给组中的下一行分配值3，DENSE_RANK则没有任何跳跃。 
SAMPLE：下例中计算每个员工按部门分区再按薪水排序，依次出现的序列号（注意与DENSE_RANK函数的区别） 
SELECT d.department_id , e.last_name, e.salary, RANK() 
OVER (PARTITION BY e.department_id ORDER BY e.salary) as drank 
FROM employees e, departments d 
WHERE e.department_id = d.department_id 
AND d.department_id IN ('60', '90'); 
DEPARTMENT_ID LAST_NAME SALARY DRANK 
------------- ------------------------- ---------- ---------- 
60 Lorentz 4200 1 
60 Austin 4800 2 
60 Pataballa 4800 2 
60 Ernst 6000 4 
60 Hunold 9000 5 
90 Kochhar 17000 1 
90 De Haan 17000 1 
90 King 24000 3 


10,

+ expand sourceview plaincopy to clipboardprint?
101。RATIO_TO_REPORT    
功能描述：该函数计算expression/(sum(expression))的值，它给出相对于总数的百分比，即当前行对sum(expression)的贡献。    
SAMPLE：下例计算每个员工的工资占该类员工总工资的百分比    
SELECT last_name, salary, RATIO_TO_REPORT(salary) OVER () AS rr    
FROM employees    
WHERE job_id = 'PU_CLERK';    
LAST_NAME SALARY RR    
------------------------- ---------- ----------    
Khoo 3100 .223021583    
Baida 2900 .208633094    
Tobias 2800 .201438849    
Himuro 2600 .18705036    
Colmenares 2500 .179856115    
&#8226; 102。REGR_ (Linear Regression) Functions    
功能描述：这些线性回归函数适合最小二乘法回归线，有9个不同的回归函数可使用。    
REGR_SLOPE：返回斜率，等于COVAR_POP(expr1, expr2) / VAR_POP(expr2)    
REGR_INTERCEPT：返回回归线的y截距，等于    
AVG(expr1) - REGR_SLOPE(expr1, expr2) * AVG(expr2)    
REGR_COUNT：返回用于填充回归线的非空数字对的数目    
REGR_R2：返回回归线的决定系数，计算式为：    
If VAR_POP(expr2) = 0 then return NULL    
If VAR_POP(expr1) = 0 and VAR_POP(expr2) != 0 then return 1    
If VAR_POP(expr1) > 0 and VAR_POP(expr2 != 0 then    
return POWER(CORR(expr1,expr),2)    
REGR_AVGX：计算回归线的自变量(expr2)的平均值，去掉了空对(expr1, expr2)后，等于AVG(expr2)    
REGR_AVGY：计算回归线的应变量(expr1)的平均值，去掉了空对(expr1, expr2)后，等于AVG(expr1)    
REGR_SXX： 返回值等于REGR_COUNT(expr1, expr2) * VAR_POP(expr2)    
REGR_SYY： 返回值等于REGR_COUNT(expr1, expr2) * VAR_POP(expr1)    
REGR_SXY: 返回值等于REGR_COUNT(expr1, expr2) * COVAR_POP(expr1, expr2)    
（下面的例子都是在SH用户下完成的）    
SAMPLE 1：下例计算1998年最后三个星期中两种产品（260和270）在周末的销售量中已开发票数量和总数量的累积斜率和回归线的截距    
SELECT t.fiscal_month_number "Month", t.day_number_in_month "Day",    
REGR_SLOPE(s.amount_sold, s.quantity_sold)    
OVER (ORDER BY t.fiscal_month_desc, t.day_number_in_month) AS CUM_SLOPE,    
REGR_INTERCEPT(s.amount_sold, s.quantity_sold)    
OVER (ORDER BY t.fiscal_month_desc, t.day_number_in_month) AS CUM_ICPT    
FROM sales s, times t    
WHERE s.time_id = t.time_id    
AND s.prod_id IN (270, 260)    
AND t.fiscal_year=1998    
AND t.fiscal_week_number IN (50, 51, 52)    
AND t.day_number_in_week IN (6,7)    
ORDER BY t.fiscal_month_desc, t.day_number_in_month;    
Month Day CUM_SLOPE CUM_ICPT    
---------- ---------- ---------- ----------    
12 12 -68 1872    
12 12 -68 1872    
12 13 -20.244898 1254.36735    
12 13 -20.244898 1254.36735    
12 19 -18.826087 1287    
12 20 62.4561404 125.28655    
12 20 62.4561404 125.28655    
12 20 62.4561404 125.28655    
12 20 62.4561404 125.28655    
12 26 67.2658228 58.9712313    
12 26 67.2658228 58.9712313    
12 27 37.5245541 284.958221    
12 27 37.5245541 284.958221    
12 27 37.5245541 284.958221    
SAMPLE 2：下例计算1998年4月每天的累积交易数量    
SELECT UNIQUE t.day_number_in_month,    
REGR_COUNT(s.amount_sold, s.quantity_sold)    
OVER (PARTITION BY t.fiscal_month_number ORDER BY t.day_number_in_month)    
"Regr_Count"    
FROM sales s, times t    
WHERE s.time_id = t.time_id    
AND t.fiscal_year = 1998 AND t.fiscal_month_number = 4;    
DAY_NUMBER_IN_MONTH Regr_Count    
------------------- ----------    
1 825    
2 1650    
3 2475    
4 3300    
.    
26 21450    
30 22200    
SAMPLE 3：下例计算1998年每月销售量中已开发票数量和总数量的累积回归线决定系数    
SELECT t.fiscal_month_number,    
REGR_R2(SUM(s.amount_sold), SUM(s.quantity_sold))    
OVER (ORDER BY t.fiscal_month_number) "Regr_R2"    
FROM sales s, times t    
WHERE s.time_id = t.time_id    
AND t.fiscal_year = 1998    
GROUP BY t.fiscal_month_number    
ORDER BY t.fiscal_month_number;    
FISCAL_MONTH_NUMBER Regr_R2    
------------------- ----------    
1    
2 1    
3 .927372984    
4 .807019972    
5 .932745567    
6 .94682861    
7 .965342011    
8 .955768075    
9 .959542618    
10 .938618575    
11 .880931415    
12 .882769189    
SAMPLE 4：下例计算1998年12月最后两周产品260的销售量中已开发票数量和总数量的累积平均值    
SELECT t.day_number_in_month,    
REGR_AVGY(s.amount_sold, s.quantity_sold)    
OVER (ORDER BY t.fiscal_month_desc, t.day_number_in_month)    
"Regr_AvgY",    
REGR_AVGX(s.amount_sold, s.quantity_sold)    
OVER (ORDER BY t.fiscal_month_desc, t.day_number_in_month)    
"Regr_AvgX"    
FROM sales s, times t    
WHERE s.time_id = t.time_id    
AND s.prod_id = 260    
AND t.fiscal_month_desc = '1998-12'    
AND t.fiscal_week_number IN (51, 52)    
ORDER BY t.day_number_in_month;    
DAY_NUMBER_IN_MONTH Regr_AvgY Regr_AvgX    
------------------- ---------- ----------    
14 882 24.5    
14 882 24.5    
15 801 22.25    
15 801 22.25    
16 777.6 21.6    
18 642.857143 17.8571429    
18 642.857143 17.8571429    
20 589.5 16.375    
21 544 15.1111111    
22 592.363636 16.4545455    
22 592.363636 16.4545455    
24 553.846154 15.3846154    
24 553.846154 15.3846154    
26 522 14.5    
27 578.4 16.0666667    
SAMPLE 5：下例计算产品260和270在1998年2月周末销售量中已开发票数量和总数量的累积REGR_SXY, REGR_SXX, and REGR_SYY统计值    
SELECT t.day_number_in_month,    
REGR_SXY(s.amount_sold, s.quantity_sold)    
OVER (ORDER BY t.fiscal_year, t.fiscal_month_desc) "Regr_sxy",    
REGR_SYY(s.amount_sold, s.quantity_sold)    
OVER (ORDER BY t.fiscal_year, t.fiscal_month_desc) "Regr_syy",    
REGR_SXX(s.amount_sold, s.quantity_sold)    
OVER (ORDER BY t.fiscal_year, t.fiscal_month_desc) "Regr_sxx"    
FROM sales s, times t    
WHERE s.time_id = t.time_id    
AND prod_id IN (270, 260)    
AND t.fiscal_month_desc = '1998-02'    
AND t.day_number_in_week IN (6,7)    
ORDER BY t.day_number_in_month;    
DAY_NUMBER_IN_MONTH Regr_sxy Regr_syy Regr_sxx    
------------------- ---------- ---------- ----------    
1 18870.4 2116198.4 258.4    
1 18870.4 2116198.4 258.4    
1 18870.4 2116198.4 258.4    
1 18870.4 2116198.4 258.4    
7 18870.4 2116198.4 258.4    
8 18870.4 2116198.4 258.4    
14 18870.4 2116198.4 258.4    
15 18870.4 2116198.4 258.4    
21 18870.4 2116198.4 258.4    
22 18870.4 2116198.4 258.4    
&#8226; 103。ROW_NUMBER    
功能描述：返回有序组中一行的偏移量，从而可用于按特定标准排序的行号。    
SAMPLE：下例返回每个员工再在每个部门中按员工号排序后的顺序号    
SELECT department_id, last_name, employee_id, ROW_NUMBER()    
OVER (PARTITION BY department_id ORDER BY employee_id) AS emp_id    
FROM employees    
WHERE department_id < 50;    
DEPARTMENT_ID LAST_NAME EMPLOYEE_ID EMP_ID    
------------- ------------------------- ----------- ----------    
10 Whalen 200 1    
20 Hartstein 201 1    
20 Fay 202 2    
30 Raphaely 114 1    
30 Khoo 115 2    
30 Baida 116 3    
30 Tobias 117 4    
30 Himuro 118 5    
30 Colmenares 119 6    
40 Mavris 203 1    
104。STDDEV    
功能描述：计算当前行关于组的标准偏离。（Standard Deviation）    
SAMPLE：下例返回部门30按雇佣日期排序的薪水值的累积标准偏离    
SELECT last_name, hire_date,salary,    
STDDEV(salary) OVER (ORDER BY hire_date) "StdDev"    
FROM employees    
WHERE department_id = 30;    
LAST_NAME HIRE_DATE SALARY StdDev    
------------------------- ---------- ---------- ----------    
Raphaely 07-12月-94 11000 0    
Khoo 18-5月 -95 3100 5586.14357    
Tobias 24-7月 -97 2800 4650.0896    
Baida 24-12月-97 2900 4035.26125    
Himuro 15-11月-98 2600 3649.2465    
Colmenares 10-8月 -99 2500 3362.58829   
101。RATIO_TO_REPORT 
功能描述：该函数计算expression/(sum(expression))的值，它给出相对于总数的百分比，即当前行对sum(expression)的贡献。 
SAMPLE：下例计算每个员工的工资占该类员工总工资的百分比 
SELECT last_name, salary, RATIO_TO_REPORT(salary) OVER () AS rr 
FROM employees 
WHERE job_id = 'PU_CLERK'; 
LAST_NAME SALARY RR 
------------------------- ---------- ---------- 
Khoo 3100 .223021583 
Baida 2900 .208633094 
Tobias 2800 .201438849 
Himuro 2600 .18705036 
Colmenares 2500 .179856115 
&#8226; 102。REGR_ (Linear Regression) Functions 
功能描述：这些线性回归函数适合最小二乘法回归线，有9个不同的回归函数可使用。 
REGR_SLOPE：返回斜率，等于COVAR_POP(expr1, expr2) / VAR_POP(expr2) 
REGR_INTERCEPT：返回回归线的y截距，等于 
AVG(expr1) - REGR_SLOPE(expr1, expr2) * AVG(expr2) 
REGR_COUNT：返回用于填充回归线的非空数字对的数目 
REGR_R2：返回回归线的决定系数，计算式为： 
If VAR_POP(expr2) = 0 then return NULL 
If VAR_POP(expr1) = 0 and VAR_POP(expr2) != 0 then return 1 
If VAR_POP(expr1) > 0 and VAR_POP(expr2 != 0 then 
return POWER(CORR(expr1,expr),2) 
REGR_AVGX：计算回归线的自变量(expr2)的平均值，去掉了空对(expr1, expr2)后，等于AVG(expr2) 
REGR_AVGY：计算回归线的应变量(expr1)的平均值，去掉了空对(expr1, expr2)后，等于AVG(expr1) 
REGR_SXX： 返回值等于REGR_COUNT(expr1, expr2) * VAR_POP(expr2) 
REGR_SYY： 返回值等于REGR_COUNT(expr1, expr2) * VAR_POP(expr1) 
REGR_SXY: 返回值等于REGR_COUNT(expr1, expr2) * COVAR_POP(expr1, expr2) 
（下面的例子都是在SH用户下完成的） 
SAMPLE 1：下例计算1998年最后三个星期中两种产品（260和270）在周末的销售量中已开发票数量和总数量的累积斜率和回归线的截距 
SELECT t.fiscal_month_number "Month", t.day_number_in_month "Day", 
REGR_SLOPE(s.amount_sold, s.quantity_sold) 
OVER (ORDER BY t.fiscal_month_desc, t.day_number_in_month) AS CUM_SLOPE, 
REGR_INTERCEPT(s.amount_sold, s.quantity_sold) 
OVER (ORDER BY t.fiscal_month_desc, t.day_number_in_month) AS CUM_ICPT 
FROM sales s, times t 
WHERE s.time_id = t.time_id 
AND s.prod_id IN (270, 260) 
AND t.fiscal_year=1998 
AND t.fiscal_week_number IN (50, 51, 52) 
AND t.day_number_in_week IN (6,7) 
ORDER BY t.fiscal_month_desc, t.day_number_in_month; 
Month Day CUM_SLOPE CUM_ICPT 
---------- ---------- ---------- ---------- 
12 12 -68 1872 
12 12 -68 1872 
12 13 -20.244898 1254.36735 
12 13 -20.244898 1254.36735 
12 19 -18.826087 1287 
12 20 62.4561404 125.28655 
12 20 62.4561404 125.28655 
12 20 62.4561404 125.28655 
12 20 62.4561404 125.28655 
12 26 67.2658228 58.9712313 
12 26 67.2658228 58.9712313 
12 27 37.5245541 284.958221 
12 27 37.5245541 284.958221 
12 27 37.5245541 284.958221 
SAMPLE 2：下例计算1998年4月每天的累积交易数量 
SELECT UNIQUE t.day_number_in_month, 
REGR_COUNT(s.amount_sold, s.quantity_sold) 
OVER (PARTITION BY t.fiscal_month_number ORDER BY t.day_number_in_month) 
"Regr_Count" 
FROM sales s, times t 
WHERE s.time_id = t.time_id 
AND t.fiscal_year = 1998 AND t.fiscal_month_number = 4; 
DAY_NUMBER_IN_MONTH Regr_Count 
------------------- ---------- 
1 825 
2 1650 
3 2475 
4 3300 
. 
26 21450 
30 22200 
SAMPLE 3：下例计算1998年每月销售量中已开发票数量和总数量的累积回归线决定系数 
SELECT t.fiscal_month_number, 
REGR_R2(SUM(s.amount_sold), SUM(s.quantity_sold)) 
OVER (ORDER BY t.fiscal_month_number) "Regr_R2" 
FROM sales s, times t 
WHERE s.time_id = t.time_id 
AND t.fiscal_year = 1998 
GROUP BY t.fiscal_month_number 
ORDER BY t.fiscal_month_number; 
FISCAL_MONTH_NUMBER Regr_R2 
------------------- ---------- 
1 
2 1 
3 .927372984 
4 .807019972 
5 .932745567 
6 .94682861 
7 .965342011 
8 .955768075 
9 .959542618 
10 .938618575 
11 .880931415 
12 .882769189 
SAMPLE 4：下例计算1998年12月最后两周产品260的销售量中已开发票数量和总数量的累积平均值 
SELECT t.day_number_in_month, 
REGR_AVGY(s.amount_sold, s.quantity_sold) 
OVER (ORDER BY t.fiscal_month_desc, t.day_number_in_month) 
"Regr_AvgY", 
REGR_AVGX(s.amount_sold, s.quantity_sold) 
OVER (ORDER BY t.fiscal_month_desc, t.day_number_in_month) 
"Regr_AvgX" 
FROM sales s, times t 
WHERE s.time_id = t.time_id 
AND s.prod_id = 260 
AND t.fiscal_month_desc = '1998-12' 
AND t.fiscal_week_number IN (51, 52) 
ORDER BY t.day_number_in_month; 
DAY_NUMBER_IN_MONTH Regr_AvgY Regr_AvgX 
------------------- ---------- ---------- 
14 882 24.5 
14 882 24.5 
15 801 22.25 
15 801 22.25 
16 777.6 21.6 
18 642.857143 17.8571429 
18 642.857143 17.8571429 
20 589.5 16.375 
21 544 15.1111111 
22 592.363636 16.4545455 
22 592.363636 16.4545455 
24 553.846154 15.3846154 
24 553.846154 15.3846154 
26 522 14.5 
27 578.4 16.0666667 
SAMPLE 5：下例计算产品260和270在1998年2月周末销售量中已开发票数量和总数量的累积REGR_SXY, REGR_SXX, and REGR_SYY统计值 
SELECT t.day_number_in_month, 
REGR_SXY(s.amount_sold, s.quantity_sold) 
OVER (ORDER BY t.fiscal_year, t.fiscal_month_desc) "Regr_sxy", 
REGR_SYY(s.amount_sold, s.quantity_sold) 
OVER (ORDER BY t.fiscal_year, t.fiscal_month_desc) "Regr_syy", 
REGR_SXX(s.amount_sold, s.quantity_sold) 
OVER (ORDER BY t.fiscal_year, t.fiscal_month_desc) "Regr_sxx" 
FROM sales s, times t 
WHERE s.time_id = t.time_id 
AND prod_id IN (270, 260) 
AND t.fiscal_month_desc = '1998-02' 
AND t.day_number_in_week IN (6,7) 
ORDER BY t.day_number_in_month; 
DAY_NUMBER_IN_MONTH Regr_sxy Regr_syy Regr_sxx 
------------------- ---------- ---------- ---------- 
1 18870.4 2116198.4 258.4 
1 18870.4 2116198.4 258.4 
1 18870.4 2116198.4 258.4 
1 18870.4 2116198.4 258.4 
7 18870.4 2116198.4 258.4 
8 18870.4 2116198.4 258.4 
14 18870.4 2116198.4 258.4 
15 18870.4 2116198.4 258.4 
21 18870.4 2116198.4 258.4 
22 18870.4 2116198.4 258.4 
&#8226; 103。ROW_NUMBER 
功能描述：返回有序组中一行的偏移量，从而可用于按特定标准排序的行号。 
SAMPLE：下例返回每个员工再在每个部门中按员工号排序后的顺序号 
SELECT department_id, last_name, employee_id, ROW_NUMBER() 
OVER (PARTITION BY department_id ORDER BY employee_id) AS emp_id 
FROM employees 
WHERE department_id < 50; 
DEPARTMENT_ID LAST_NAME EMPLOYEE_ID EMP_ID 
------------- ------------------------- ----------- ---------- 
10 Whalen 200 1 
20 Hartstein 201 1 
20 Fay 202 2 
30 Raphaely 114 1 
30 Khoo 115 2 
30 Baida 116 3 
30 Tobias 117 4 
30 Himuro 118 5 
30 Colmenares 119 6 
40 Mavris 203 1 
104。STDDEV 
功能描述：计算当前行关于组的标准偏离。（Standard Deviation） 
SAMPLE：下例返回部门30按雇佣日期排序的薪水值的累积标准偏离 
SELECT last_name, hire_date,salary, 
STDDEV(salary) OVER (ORDER BY hire_date) "StdDev" 
FROM employees 
WHERE department_id = 30; 
LAST_NAME HIRE_DATE SALARY StdDev 
------------------------- ---------- ---------- ---------- 
Raphaely 07-12月-94 11000 0 
Khoo 18-5月 -95 3100 5586.14357 
Tobias 24-7月 -97 2800 4650.0896 
Baida 24-12月-97 2900 4035.26125 
Himuro 15-11月-98 2600 3649.2465 
Colmenares 10-8月 -99 2500 3362.58829 


11,

105。STDDEV_POP    
功能描述：该函数计算总体标准偏离，并返回总体变量的平方根，其返回值与VAR_POP函数的平方根相同。（Standard Deviation－Population）    
SAMPLE：下例返回部门20、30、60的薪水值的总体标准偏差    
SELECT department_id, last_name, salary,    
STDDEV_POP(salary) OVER (PARTITION BY department_id) AS pop_std    
FROM employees    
WHERE department_id in (20,30,60);    
DEPARTMENT_ID LAST_NAME SALARY POP_STD    
------------- ------------------------- ---------- ----------    
20 Hartstein 13000 3500    
20 Fay 6000 3500    
30 Raphaely 11000 3069.6091    
30 Khoo 3100 3069.6091    
30 Baida 2900 3069.6091    
30 Colmenares 2500 3069.6091    
30 Himuro 2600 3069.6091    
30 Tobias 2800 3069.6091    
60 Hunold 9000 1722.32401    
60 Ernst 6000 1722.32401    
60 Austin 4800 1722.32401    
60 Pataballa 4800 1722.32401    
60 Lorentz 4200 1722.32401    
106。STDDEV_SAMP    
功能描述： 该函数计算累积样本标准偏离，并返回总体变量的平方根，其返回值与VAR_POP函数的平方根相同。（Standard Deviation－Sample）    
SAMPLE：下例返回部门20、30、60的薪水值的样本标准偏差    
SELECT department_id, last_name, hire_date, salary,    
STDDEV_SAMP(salary) OVER    
(PARTITION BY department_id ORDER BY hire_date    
ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS cum_sdev    
FROM employees    
WHERE department_id in (20,30,60);    
DEPARTMENT_ID LAST_NAME HIRE_DATE SALARY CUM_SDEV    
------------- ------------------------- ---------- ---------- ----------    
20 Hartstein 17-2月 -96 13000    
20 Fay 17-8月 -97 6000 4949.74747    
30 Raphaely 07-12月-94 11000    
30 Khoo 18-5月 -95 3100 5586.14357    
30 Tobias 24-7月 -97 2800 4650.0896    
30 Baida 24-12月-97 2900 4035.26125    
30 Himuro 15-11月-98 2600 3649.2465    
30 Colmenares 10-8月 -99 2500 3362.58829    
60 Hunold 03-1月 -90 9000    
60 Ernst 21-5月 -91 6000 2121.32034    
60 Austin 25-6月 -97 4800 2163.33077    
60 Pataballa 05-2月 -98 4800 1982.42276    
60 Lorentz 07-2月 -99 4200 1925.61678    
  
107。SUM    
功能描述：该函数计算组中表达式的累积和。    
SAMPLE：下例计算同一经理下员工的薪水累积值    
SELECT manager_id, last_name, salary,    
SUM (salary) OVER (PARTITION BY manager_id ORDER BY salary    
RANGE UNBOUNDED PRECEDING) l_csum    
FROM employees    
WHERE manager_id in (101,103,108);    
MANAGER_ID LAST_NAME SALARY L_CSUM    
---------- ------------------------- ---------- ----------    
101 Whalen 4400 4400    
101 Mavris 6500 10900    
101 Baer 10000 20900    
101 Greenberg 12000 44900    
101 Higgins 12000 44900    
103 Lorentz 4200 4200    
103 Austin 4800 13800    
103 Pataballa 4800 13800    
103 Ernst 6000 19800    
108 Popp 6900 6900    
108 Sciarra 7700 14600    
108 Urman 7800 22400    
108 Chen 8200 30600    
108 Faviet 9000 39600    
108。VAR_POP    
功能描述：（Variance Population）该函数返回非空集合的总体变量（忽略null），VAR_POP进行如下计算：    
(SUM(expr2) - SUM(expr)2 / COUNT(expr)) / COUNT(expr)    
SAMPLE：下例计算1998年每月销售的累积总体和样本变量（本例在SH用户下运行）    
SELECT t.calendar_month_desc,    
VAR_POP(SUM(s.amount_sold))    
OVER (ORDER BY t.calendar_month_desc) "Var_Pop",    
VAR_SAMP(SUM(s.amount_sold))    
OVER (ORDER BY t.calendar_month_desc) "Var_Samp"    
FROM sales s, times t    
WHERE s.time_id = t.time_id AND t.calendar_year = 1998    
GROUP BY t.calendar_month_desc;    
CALENDAR Var_Pop Var_Samp    
-------- ---------- ----------    
1998-01 0    
1998-02 6.1321E+11 1.2264E+12    
1998-03 4.7058E+11 7.0587E+11    
1998-04 4.6929E+11 6.2572E+11    
1998-05 1.5524E+12 1.9405E+12    
1998-06 2.3711E+12 2.8453E+12    
1998-07 3.7464E+12 4.3708E+12    
1998-08 3.7852E+12 4.3260E+12    
1998-09 3.5753E+12 4.0222E+12    
1998-10 3.4343E+12 3.8159E+12    
1998-11 3.4245E+12 3.7669E+12    
1998-12 4.8937E+12 5.3386E+12    
109。VAR_SAMP    
功能描述：（Variance Sample）该函数返回非空集合的样本变量（忽略null），VAR_POP进行如下计算：    
(SUM(expr*expr)-SUM(expr)*SUM(expr)/COUNT(expr))/(COUNT(expr)-1)    
SAMPLE：下例计算1998年每月销售的累积总体和样本变量    
SELECT t.calendar_month_desc,    
VAR_POP(SUM(s.amount_sold))    
OVER (ORDER BY t.calendar_month_desc) "Var_Pop",    
VAR_SAMP(SUM(s.amount_sold))    
OVER (ORDER BY t.calendar_month_desc) "Var_Samp"    
FROM sales s, times t    
WHERE s.time_id = t.time_id AND t.calendar_year = 1998    
GROUP BY t.calendar_month_desc;    
CALENDAR Var_Pop Var_Samp    
-------- ---------- ----------    
1998-01 0    
1998-02 6.1321E+11 1.2264E+12    
1998-03 4.7058E+11 7.0587E+11    
1998-04 4.6929E+11 6.2572E+11    
1998-05 1.5524E+12 1.9405E+12    
1998-06 2.3711E+12 2.8453E+12    
1998-07 3.7464E+12 4.3708E+12    
1998-08 3.7852E+12 4.3260E+12    
1998-09 3.5753E+12 4.0222E+12    
1998-10 3.4343E+12 3.8159E+12    
1998-11 3.4245E+12 3.7669E+12    
1998-12 4.8937E+12 5.3386E+12    
110。VARIANCE    
功能描述：该函数返回表达式的变量，Oracle计算该变量如下：    
如果表达式中行数为1，则返回0    
如果表达式中行数大于1，则返回VAR_SAMP    
SAMPLE：下例返回部门30按雇佣日期排序的薪水值的累积变化    
SELECT last_name, salary, VARIANCE(salary)    
OVER (ORDER BY hire_date) "Variance"    
FROM employees    
WHERE department_id = 30;    
LAST_NAME SALARY Variance    
------------------------- ---------- ----------    
Raphaely 11000 0    
Khoo 3100 31205000    
Tobias 2800 21623333.3    
Baida 2900 16283333.3    
Himuro 2600 13317000    
Colmenares 2500 11307000 
资料引用:file:///C:/Users/xinlei/Desktop/Oracle%20常用函数总结-Oracle教程.htm

------------

     
      1、创建数据表空间  
		create tablespace RPTDAT
		datafile 'd:\oracle\product\10.2.0\oradata\bocReport\RPTDAT.dbf' 
		size 50m  
		autoextend on  
		next 50m maxsize 20480m; 
      2、创建用户并指定表空间
		create user tmrpt identified by tmrpt
		default tablespace RPTDAT
		temporary tablespace temp; 
		
		 create tablespace RPTIND
		datafile 'd:\oracle\product\10.2.0\oradata\bocReport\RPTIND.dbf' 
		size 50m  
		autoextend on  
		next 50m maxsize 20480m;  
   		   
      3、给用户授予权限  
		grant dba to tmrpt;
		GRANT 
		　　CREATE SESSION, CREATE ANY TABLE, CREATE ANY VIEW ,CREATE ANY INDEX, CREATE ANY PROCEDURE,
		　　ALTER ANY TABLE, ALTER ANY PROCEDURE,
		　　DROP ANY TABLE, DROP ANY VIEW, DROP ANY INDEX, DROP ANY PROCEDURE,
		　　SELECT ANY TABLE, INSERT ANY TABLE, UPDATE ANY TABLE, DELETE ANY TABLE
		　　TO username;
	4、创建dblink
		create database link to_test
		　　connect to scott identified by tiger
		　　using '(DESCRIPTION =
		　　(ADDRESS_LIST =
		　　(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.1.5)(PORT = 1521))
		　　)
		　　(CONNECT_DATA =
		　　(SERVER = DEDICATED)
		　　(SERVICE_NAME = bylw)
		　　)
		　　)';
		　　
	5、查看用户
		查看所有用户
		查看所有用户
		SELECT * FROM DBA_USERS;
		SELECT * FROM ALL_USERS;
		SELECT * FROM USER_USERS;
		查看用户系统权限
		查看用户系统权限
		SELECT * FROM DBA_SYS_PRIVS;
		SELECT * FROM USER_SYS_PRIVS;
		查看用户对象或角色权限
		查看用户对象权限
		SELECT * FROM DBA_TAB_PRIVS;
		SELECT * FROM ALL_TAB_PRIVS;
		SELECT * FROM USER_TAB_PRIVS;
	　　
	      select suM(bytes)/1024/1024 from dba_segments where segment_name='EVENT_LOG' AND OWNER='RSA_CORE';
  
        ALTER TABLE event_log ADD PARTITION P2030010100 VALUES LESS THAN(TO_DATE('2030/01/01 00', 'YYYY-MM-DD HH24'));
        
       @?/rdbms/admin/awrrpt          --导出awr报告 　
       @?/rdbms/admin/awrrpt          --导出awr报告
       
       SQL>shutdown immediate; 

SQL>startup; 

  
job指定节点
exec dbms_job.instance(22,1)
　
　
*　查看SGA，PGA 
　
　show parameter sga;
　show parameter pga;
      
      
  *   指定sql语句前面的标志 set sqlprompt ‘SQL’ 
      
      TO_DATE(SUBSTR(TO_CHAR(TRANS_TIME,'YYYY-MM-DD HH24:MI:SS'),0,13),'YYYY-MM-DD HH24') 改换时间格式
      
  *    create table components2 as select * from components where 1=2;--复制表
        
  *      将表查询的权限给另外得用户：  grant select any table to 另一用户
        							select 'GRANT SELECT ON '||table_name||' to b;'  from user_tables
        							
  *     select sys_guid() from dual ;--得到guid		
  *       SET TRANSACTION NAME 'GET_DATA_FROM_REALTIM_2_MINUTE';--建立事务	
         
   *查看scn号  
     SQL> select to_char(current_scn) from v$database;

TO_CHAR(CURRENT_SCN)
----------------------------------------
348278059

 /*数据库block的大小*/
 *show parameter db_block_size

*  select *  from user_tab_partitions t  --查看分区
  
*黑窗口查看存储过程等用户资源 
 SELECT TEXT     FROM USER_SOURCE  WHERE NAME = 'PRODUCT_SCRIPT' ORDER BY LINE ;

* desc event_log ; --查看表结构  

 
 *SET autotrace on;--不用oracle工具查看sql执行计划 http://www.2cto.com/database/201208/147211.html

 * Oracle数据库数据导出dump方式
     expdp tmrpt/tmrpt dumpfile=event_test222.dmp directory=DUMPDIR TABLES=tmrpt.event_log_test logfile=event_test222.log job_name=event_test      parallel=4 FLASHBACK_SCN=348278059

 exp rsa_core/rsa_core file=/rsatm/dump/event_test111.dmp log=/rsatm/dump/event_test111.log  TABLES=rsa_core.event_log_test2  		
 
* 更改数据库表表名
	alert table customer rename to costomer2;
*需要为表customer添加主键约束，主键列为customer_id
	alert tbale customer add constraint pk_customer primary key "customer_id"
*查看表的主键信息
	SELECT TABLE_NAME ,CONSTRAINT_NAME,CONSTRAINT_TYPE,STATUS
		FROM USER_CONSTRAINTS
		WHERE TABLE_NAME='CUSTOMER';
		
SELECT NAME n,VALUE v,ROWNUM R FROM V$SGA  

select t.n,t.v from (SELECT NAME n,VALUE v,ROWNUM R FROM V$SGA ) t where t.r<4 and t.r>1

SELECT * FROM  ( SELECT A.*, rownum r FROM  (SELECT * FROM userlist ) A  WHERE rownum <= "+pageid+"*"+pagesize+" ) B  WHERE r >  "+(pageid-1)+"*"+pagesize+" order by id		
		 
         
       6.      如何定位重要(消耗资源多)的SQL
 
使用CPU多的用户session 
SELECT a.SID, spid, status, SUBSTR (a.program, 1, 40) prog, a.terminal,a.SQL_TEXT, osuser, VALUE / 60 / 100 VALUE 
FROM v$session a, v$process b, v$sesstat c 
WHERE c.statistic# = 12 AND c.SID = a.SID AND a.paddr = b.addr ORDER BY VALUE DESC;   
select sql_text from v$sql  where disk_reads &gt; 1000 or (executions &gt; 0 and buffer_gets/executions &gt; 30000);  						

------------

简介：
    本文全面详细介绍oracle执行计划的相关的概念，访问数据的存取方法，表之间的连接等内容。并有总结和概述，便于理解与记忆!
+++
目录
---
    一．相关的概念
    Rowid的概念
    Recursive Sql概念
    Predicate(谓词)
    DRiving Table(驱动表)
    Probed Table(被探查表)
    组合索引(concatenated index)
    可选择性(selectivity)
    聚簇因子(clustering factor)

    二．oracle访问数据的存取方法
    1） 全表扫描（Full Table Scans， FTS）
    2） 通过ROWID的表存取（Table Access by ROWID或rowid lookup）
    3）索引扫描（Index Scan或index lookup）有4种类型的索引扫描：
    　（1） 索引唯一扫描（index unique scan）
    　（2） 索引范围扫描（index range scan）
           在非唯一索引上都使用索引范围扫描。使用index rang scan的3种情况：
    　　  （a） 在唯一索引列上使用了range操作符（> < <> >= <= between）
    　　  （b） 在组合索引上，只使用部分列进行查询，导致查询出多行
    　　  （c） 对非唯一索引列上进行的任何查询。　　
    　（3） 索引全扫描（index full scan）
    　（4） 索引快速扫描（index fast full scan）
        （5）索引跳跃扫描(index skip scan)

    三、表之间的连接

    1，排序 - - 合并连接（Sort Merge Join， SMJ）
    2，嵌套循环（Nested Loops， NL）
    3，哈希连接（Hash Join， HJ）
    4，外联结
    另外，笛卡儿乘积（Cartesian Product）

    总结Oracle连接方法
    
    Oracle执行计划总结概述

+++

　　一．相关的概念
　　Rowid的概念：rowid是一个伪列，既然是伪列，那么这个列就不是用户定义，而是系统自己给加上的。 对每个表都有一个rowid的伪列，但是表中并不物理存储ROWID列的值。不过你可以像使用其它列那样使用它，但是不能删除改列，也不能对该列的值进行 修改、插入。一旦一行数据插入数据库，则rowid在该行的生命周期内是唯一的，即即使该行产生行迁移，行的rowid也不会改变。
　　Recursive SQL概念：有时为了执行用户发出的一个sql语句，Oracle必须执行一些额外的语句，我们将这些额外的语句称之为''recursive calls''或''recursive SQL statements''.如当一个DDL语句发出后，ORACLE总是隐含的发出一些recursive SQL语句，来修改数据字典信息，以便用户可以成功的执行该DDL语句。当需要的数据字典信息没有在共享内存中时，经常会发生Recursive calls，这些Recursive calls会将数据字典信息从硬盘读入内存中。用户不比关心这些recursive SQL语句的执行情况，在需要的时候，ORACLE会自动的在内部执行这些语句。当然DML语句与SELECT都可能引起recursive SQL.简单的说，我们可以将触发器视为recursive SQL.
　　Row Source（行源）：用在查询中，由上一操作返回的符合条件的行的集合，即可以是表的全部行数据的集合；也可以是表的部分行数据的集合；也可以为对上2个row source进行连接操作（如join连接）后得到的行数据集合。
　　Predicate（谓词）：一个查询中的WHERE限制条件
　　Driving Table（驱动表）：该表又称为外层表（OUTER TABLE）。这个概念用于嵌套与HASH连接中。如果该row source返回较多的行数据，则对所有的后续操作有负面影响。注意此处虽然翻译为驱动表，但实际上翻译为驱动行源（driving row source）更为确切。一般说来，是应用查询的限制条件后，返回较少行源的表作为驱动表，所以如果一个大表在WHERE条件有有限制条件（如等值限 制），则该大表作为驱动表也是合适的，所以并不是只有较小的表可以作为驱动表，正确说法应该为应用查询的限制条件后，返回较少行源的表作为驱动表。在执行 计划中，应该为靠上的那个row source，后面会给出具体说明。在我们后面的描述中，一般将该表称为连接操作的row source 1.
　　Probed Table（被探查表）：该表又称为内层表（INNER TABLE）。在我们从驱动表中得到具体一行的数据后，在该表中寻找符合连接条件的行。所以该表应当为大表（实际上应该为返回较大row source的表）且相应的列上应该有索引。在我们后面的描述中，一般将该表称为连接操作的row source 2.
　　组合索引（concatenated index）：由多个列构成的索引，如create index idx_emp on emp（col1， col2， col3， ……），则我们称idx_emp索引为组合索引。在组合索引中有一个重要的概念：引导列（leading column），在上面的例子中，col1列为引导列。当我们进行查询时可以使用“where col1 = ？ ”，也可以使用“where col1 = ？ and col2 = ？”，这样的限制条件都会使用索引，但是“where col2 = ？ ”查询就不会使用该索引。所以限制条件中包含先导列时，该限制条件才会使用该组合索引。
　　可选择性（selectivity）：比较一下列中唯一键的数量和表中的行数，就可以判断该列的可选择性。 如果该列的“唯一键的数量/表中的行数”的比值越接近1，则该列的可选择性越高，该列就越适合创建索引，同样索引的可选择性也越高。在可选择性高的列上进 行查询时，返回的数据就较少，比较适合使用索引查询。
   聚簇因子(clustering factor)：是表中建立了索引的数据排序优良的一个度量值。向优化器表明了具有同样索引值的数据行是不是存放在同一个或连续的一系列数据块中，或者数据行是否被分散存放在表的多个数据块中。聚簇因子与表中的数据块数目越接近，使用这个索引的时候所需要访问数据块数目的估计值就越少。聚簇因子与表中的数据行数目越接近，所需要访问的数据块数目的估计值就越大。

　　二．oracle访问数据的存取方法
　　1） 全表扫描（Full Table Scans， FTS）
　　为实现全表扫描，Oracle读取表中所有的行，并检查每一行是否满足语句的WHERE限制条件一个多块读操作可以使一次I/O能读取多块数据块（db_block_multiblock_read_count参数设定），而不是只读取一个数据块，这极大的减 少了I/O总次数，提高了系统的吞吐量，所以利用多块读的方法可以十分高效地实现全表扫描，而且只有在全表扫描的情况下才能使用多块读操作。在这种访问模 式下，每个数据块只被读一次。
　　使用FTS的前提条件：在较大的表上不建议使用全表扫描，除非取出数据的比较多，超过总量的5% —— 10%，或你想使用并行查询功能时。
　　使用全表扫描的例子： 
　　SQL> explain plan for select * from dual;
　　Query Plan
　　-----------------------------------------
　　SELECT STATEMENT[CHOOSE] Cost=
　　TABLE ACCESS FULL DUAL

　　2） 通过ROWID的表存取（Table Access by ROWID或rowid lookup）
　　行的ROWID指出了该行所在的数据文件、数据块以及行在该块中的位置，所以通过ROWID来存取数据可以快速定位到目标数据上，是Oracle存取单行数据的最快方法。
　　这种存取方法不会用到多块读操作，一次I/O只能读取一个数据块。我们会经常在执行计划中看到该存取方法，如通过索引查询数据。
　　使用ROWID存取的方法： 
　　SQL> explain plan for select * from dept where rowid = ''AAAAyGAADAAAAATAAF''；
 
　　Query Plan
　　------------------------------------
　　SELECT STATEMENT [CHOOSE] Cost=1
　　TABLE ACCESS BY ROWID DEPT [ANALYZED]

　　3）索引扫描（Index Scan或index lookup）
　　我们先通过index查找到数据对应的rowid值（对于非唯一索引可能返回多个rowid值），然后根据rowid直接从表中得到具体的数据，这 种查找方式称为索引扫描或索引查找（index lookup）。一个rowid唯一的表示一行数据，该行对应的数据块是通过一次i/o得到的，在此情况下该次i/o只会读取一个数据库块。
　　在索引中，除了存储每个索引的值外，索引还存储具有此值的行对应的ROWID值。
　　索引扫描可以由2步组成：
　　（1） 扫描索引得到对应的rowid值。
　　（2） 通过找到的rowid从表中读出具体的数据。
　　每步都是单独的一次I/O，但是对于索引，由于经常使用，绝大多数都已经CACHE到内存中，所以第1步的 I/O经常是逻辑I/O，即数据可以从内存中得到。但是对于第2步来说，如果表比较大，则其数据不可能全在内存中，所以其I/O很有可能是物理I/O，这 是一个机械操作，相对逻辑I/O来说，是极其费时间的。所以如果多大表进行索引扫描，取出的数据如果大于总量的5% —— 10%，使用索引扫描会效率下降很多。如下列所示：
　　SQL> explain plan for select empno， ename from emp where empno=10；
　　Query Plan
　　------------------------------------
　　SELECT STATEMENT [CHOOSE] Cost=1
　　TABLE ACCESS BY ROWID EMP [ANALYZED]
　　INDEX UNIQUE SCAN EMP_I1

　　但是如果查询的数据能全在索引中找到，就可以避免进行第2步操作，避免了不必要的I/O，此时即使通过索引扫描取出的数据比较多，效率还是很高的
　　SQL> explain plan for select empno from emp where empno=10;-- 只查询empno列值
　　Query Plan
　　------------------------------------
　　SELECT STATEMENT [CHOOSE] Cost=1
　　INDEX UNIQUE SCAN EMP_I1

　　进一步讲，如果sql语句中对索引列进行排序，因为索引已经预先排序好了，所以在执行计划中不需要再对索引列进行排序
　　SQL> explain plan for select empno, ename from emp
　　where empno > 7876 order by empno;
　　Query Plan
　　--------------------------------------------------------------------------------
　　SELECT STATEMENT[CHOOSE] Cost=1
　　TABLE ACCESS BY ROWID EMP [ANALYZED]
　　INDEX RANGE SCAN EMP_I1 [ANALYZED]

　　从这个例子中可以看到：因为索引是已经排序了的，所以将按照索引的顺序查询出符合条件的行，因此避免了进一步排序操作。
　　根据索引的类型与where限制条件的不同，有4种类型的索引扫描：
　　索引唯一扫描（index unique scan）
　　索引范围扫描（index range scan）
　　索引全扫描（index full scan）
　　索引快速扫描（index fast full scan）

　　（1） 索引唯一扫描（index unique scan）
　　通过唯一索引查找一个数值经常返回单个ROWID.如果存在UNIQUE 或PRIMARY KEY 约束（它保证了语句只存取单行）的话，Oracle经常实现唯一性扫描。
　　使用唯一性约束的例子：
　　SQL> explain plan for
　　select empno，ename from emp where empno=10；
　　Query Plan
　　------------------------------------
　　SELECT STATEMENT [CHOOSE] Cost=1
　　TABLE ACCESS BY ROWID EMP [ANALYZED]
　　INDEX UNIQUE SCAN EMP_I1

　　（2） 索引范围扫描（index range scan）
　　使用一个索引存取多行数据，在唯一索引上使用索引范围扫描的典型情况下是在谓词（where限制条件）中使用了范围操作符（如>、<、<>、>=、<=、between）
　　使用索引范围扫描的例子：
　　SQL> explain plan for select empno，ename from emp
　　where empno > 7876 order by empno；
　　Query Plan
　　--------------------------------------------------------------------------------
　　SELECT STATEMENT[CHOOSE] Cost=1
　　TABLE ACCESS BY ROWID EMP [ANALYZED]
　　INDEX RANGE SCAN EMP_I1 [ANALYZED]

　　在非唯一索引上，谓词col = 5可能返回多行数据，所以在非唯一索引上都使用索引范围扫描。
　　使用index rang scan的3种情况：
　　（a） 在唯一索引列上使用了range操作符（> < <> >= <= between）
　　（b） 在组合索引上，只使用部分列进行查询，导致查询出多行
　　（c） 对非唯一索引列上进行的任何查询。

　　（3） 索引全扫描（index full scan）
　　与全表扫描对应，也有相应的全索引扫描。而且此时查询出的数据都必须从索引中可以直接得到。
　　全索引扫描的例子：
　　An Index full scan will not perform single block i/o''s and so it may prove to be inefficient.
　　e.g.
　　Index BE_IX is a concatenated index on big_emp （empno， ename）
　　SQL> explain plan for select empno， ename from big_emp order by empno，ename；
　　Query Plan
　　--------------------------------------------------------------------------------
　　SELECT STATEMENT[CHOOSE] Cost=26
　　INDEX FULL SCAN BE_IX [ANALYZED]

　　（4） 索引快速扫描（index fast full scan）
　　扫描索引中的所有的数据块，与 index full scan很类似，但是一个显著的区别就是它不对查询出的数据进行排序，即数据不是以排序顺序被返回。在这种存取方法中，可以使用多块读功能，也可以使用并行读入，以便获得最大吞吐量与缩短执行时间。
　　索引快速扫描的例子：
　　BE_IX索引是一个多列索引： big_emp （empno，ename）
　　SQL> explain plan for select empno，ename from big_emp；
　　Query Plan
　　------------------------------------------
　　SELECT STATEMENT[CHOOSE] Cost=1
　　INDEX FAST FULL SCAN BE_IX [ANALYZED]

　　只选择多列索引的第2列：
　　SQL> explain plan for select ename from big_emp；
　　Query Plan
　　------------------------------------------
　　SELECT STATEMENT[CHOOSE] Cost=1
　　INDEX FAST FULL SCAN BE_IX [ANALYZED]
 
   （5）索引跳跃扫描(index skip scan)
     当谓语中包含位于索引中非引导列的条件，并且引导列的值是唯一的时候会选择索引跳跃扫描。在早期oracle版本中，如果一个谓语使用了索引中的非引导列，则该索引不能被选用。在oracle 9版本中这一情况通过索引跳跃扫描得到了改变。

　　三、表之间的连接
　　Join是一种试图将两个表结合在一起的谓词，一次只能连接2个表，表连接也可以被称为表关联。在后面的叙 述中，我们将会使用“row source”来代替“表”，因为使用row source更严谨一些，并且将参与连接的2个row source分别称为row source1和row source 2.Join过程的各个步骤经常是串行操作，即使相关的row source可以被并行访问，即可以并行的读取做join连接的两个row source的数据，但是在将表中符合限制条件的数据读入到内存形成row source后，join的其它步骤一般是串行的。有多种方法可以将2个表连接起来，当然每种方法都有自己的优缺点，每种连接类型只有在特定的条件下才会 发挥出其最大优势。
　　row source（表）之间的连接顺序对于查询的效率有非常大的影响。通过首先存取特定的表，即将该表作为驱动表，这样可以先应用某些限制条件，从而得到一个 较小的row source，使连接的效率较高，这也就是我们常说的要先执行限制条件的原因。一般是在将表读入内存时，应用where子句中对该表的限制条件。
　　根据2个row source的连接条件的中操作符的不同，可以将连接分为等值连接（如WHERE A.COL3 = B.COL4）、非等值连接（WHERE A.COL3 > B.COL4）、外连接（WHERE A.COL3 = B.COL4（+））。上面的各个连接的连接原理都基本一样，所以为了简单期间，下面以等值连接为例进行介绍。
　　在后面的介绍中，都以以下Sql为例进行说明：
　　SELECT A.COL1， B.COL2
　　FROM A， B
　　WHERE A.COL3 = B.COL4；
　　假设A表为Row Soruce1，则其对应的连接操作关联列为COL 3；
　　B表为Row Soruce2，则其对应的连接操作关联列为COL 4；

　　连接类型：
　　目前为止，无论连接操作符如何，典型的连接类型共有3种：
　　排序 - - 合并连接（Sort Merge Join （SMJ） ）
　　嵌套循环（Nested Loops （NL） ）
　　哈希连接（Hash Join）
　　另外，还有一种Cartesian product（笛卡尔积），一般情况下，尽量避免使用。

　　1，排序 - - 合并连接（Sort Merge Join， SMJ）
　　内部连接过程：
　　1） 首先生成row source1需要的数据，然后对这些数据按照连接操作关联列（如A.col3）进行排序。
　　2） 随后生成row source2需要的数据，然后对这些数据按照与sort source1对应的连接操作关联列（如B.col4）进行排序。
　　3） 最后两边已排序的行被放在一起执行合并操作，即将2个row source按照连接条件连接起来

　　下面是连接步骤的图形表示：
　　MERGE
　　/\
　　SORTSORT
　　||
　　Row Source 1Row Source 2

　　如果row source已经在连接关联列上被排序，则该连接操作就不需要再进行sort操作，这样可以大大提高这种连接操作的连接速度，因为排序是个极其费资源的操 作，特别是对于较大的表。预先排序的row source包括已经被索引的列（如a.col3或b.col4上有索引）或row source已经在前面的步骤中被排序了。尽管合并两个row source的过程是串行的，但是可以并行访问这两个row source（如并行读入数据，并行排序）。
　　SMJ连接的例子：
　　SQL> explain plan for
　　select /*+ ordered */ e.deptno， d.deptno
　　from emp e， dept d
　　where e.deptno = d.deptno
　　order by e.deptno， d.deptno；
　　Query Plan
　　-------------------------------------
　　SELECT STATEMENT [CHOOSE] Cost=17
　　MERGE JOIN
　　SORT JOIN
　　TABLE ACCESS FULL EMP [ANALYZED]
　　SORT JOIN
　　TABLE ACCESS FULL DEPT [ANALYZED]

　　排序是一个费时、费资源的操作，特别对于大表。基于这个原因，SMJ经常不是一个特别有效的连接方法，但是如果2个row source都已经预先排序，则这种连接方法的效率也是蛮高的。

　　2，嵌套循环（Nested Loops， NL）
　　这个连接方法有驱动表（外部表）的概念。其实，该连接过程就是一个2层嵌套循环，所以外层循环的次数越少越好，这也就是我们为什么将小表或返回较小 row source的表作为驱动表（用于外层循环）的理论依据。但是这个理论只是一般指导原则，因为遵循这个理论并不能总保证使语句产生的I/O次数最少。有时 不遵守这个理论依据，反而会获得更好的效率。如果使用这种方法，决定使用哪个表作为驱动表很重要。有时如果驱动表选择不正确，将会导致语句的性能很差、很差。
　　内部连接过程：
　　Row source1的Row 1 —— Probe ->Row source 2
　　Row source1的Row 2 —— Probe ->Row source 2
　　Row source1的Row 3 —— Probe ->Row source 2
　　……。
　　Row source1的Row n —— Probe ->Row source 2

　　从内部连接过程来看，需要用row source1中的每一行，去匹配row source2中的所有行，所以此时保持row source1尽可能的小与高效的访问row source2（一般通过索引实现）是影响这个连接效率的关键问题。这只是理论指导原则，目的是使整个连接操作产生最少的物理I/O次数，而且如果遵守这 个原则，一般也会使总的物理I/O数最少。但是如果不遵从这个指导原则，反而能用更少的物理I/O实现连接操作，那尽管违反指导原则吧！因为最少的物理 I/O次数才是我们应该遵从的真正的指导原则，在后面的具体案例分析中就给出这样的例子。
　　在上面的连接过程中，我们称Row source1为驱动表或外部表。Row Source2被称为被探查表或内部表。
　　在NESTED LOOPS连接中，Oracle读取row source1中的每一行，然后在row sourc2中检查是否有匹配的行，所有被匹配的行都被放到结果集中，然后处理row source1中的下一行。这个过程一直继续，直到row source1中的所有行都被处理。这是从连接操作中可以得到第一个匹配行的最快的方法之一，这种类型的连接可以用在需要快速响应的语句中，以响应速度为 主要目标。
　　如果driving row source（外部表）比较小，并且在inner row source（内部表）上有唯一索引，或有高选择性非唯一索引时，使用这种方法可以得到较好的效率。NESTED LOOPS有其它连接方法没有的的一个优点是：可以先返回已经连接的行，而不必等待所有的连接操作处理完才返回数据，这可以实现快速的响应时间。
　　如果不使用并行操作，最好的驱动表是那些应用了where 限制条件后，可以返回较少行数据的的表，所以大表也可能称为驱动表，关键看限制条件。对于并行查询，我们经常选择大表作为驱动表，因为大表可以充分利用并 行功能。当然，有时对查询使用并行操作并不一定会比查询不使用并行操作效率高，因为最后可能每个表只有很少的行符合限制条件，而且还要看你的硬件配置是否 可以支持并行（如是否有多个CPU，多个硬盘控制器），所以要具体问题具体对待。
　　NL连接的例子：
　　SQL> explain plan for
　　select a.dname，b.sql
　　from dept a，emp b
　　where a.deptno = b.deptno；
　　Query Plan
　　-------------------------
　　SELECT STATEMENT [CHOOSE] Cost=5
　　NESTED LOOPS
　　TABLE ACCESS FULL DEPT [ANALYZED]
　　TABLE ACCESS FULL EMP [ANALYZED]

　　3，哈希连接（Hash Join， HJ）
　　这种连接是在oracle 7.3以后引入的，从理论上来说比NL与SMJ更高效，而且只用在CBO优化器中。
　　较小的row source被用来构建hash table与bitmap，第2个row source被用来被hansed，并与第一个row source生成的hash table进行匹配，以便进行进一步的连接。Bitmap被用来作为一种比较快的查找方法，来检查在hash table中是否有匹配的行。特别的，当hash table比较大而不能全部容纳在内存中时，这种查找方法更为有用。这种连接方法也有NL连接中所谓的驱动表的概念，被构建为hash table与bitmap的表为驱动表，当被构建的hash table与bitmap能被容纳在内存中时，这种连接方式的效率极高。

　　HASH连接的例子：
　　SQL> explain plan for
　　select /*+ use_hash（emp） */ empno
　　from emp， dept
　　where emp.deptno = dept.deptno；
　　Query Plan
　　----------------------------
　　SELECT STATEMENT[CHOOSE] Cost=3
　　HASH JOIN
　　TABLE ACCESS FULL DEPT
　　TABLE ACCESS FULL EMP

　　要使哈希连接有效，需要设置HASH_JOIN_ENABLED=TRUE，缺省情况下该参数为TRUE，另外，不要忘了还要设置 hash_area_size参数，以使哈希连接高效运行，因为哈希连接会在该参数指定大小的内存中运行，过小的参数会使哈希连接的性能比其他连接方式还 要低。
 
   4，外联结
    外联结放回一张表的所有行以及另一张联结表中满足联结条件的行数据。外联结需要外联结表作为驱动表。这意味着有可能不能选用更加优化的联结执行顺序。

　　另外，笛卡儿乘积（Cartesian Product）
　　当两个row source做连接，但是它们之间没有关联条件时，就会在两个row source中做笛卡儿乘积，这通常由编写代码疏漏造成（即程序员忘了写关联条件）。笛卡尔乘积是一个表的每一行依次与另一个表中的所有行匹配。在特殊情况下我们可以使用笛卡儿乘积，如在星形连接中，除此之外，我们要尽量不使用笛卡儿乘积，否则，自己想结果是什么吧！
　　注意在下面的语句中，在2个表之间没有连接。
　　SQL> explain plan for
　　select emp.deptno，dept，deptno
　　from emp，dept
　　Query Plan
　　------------------------
　　SLECT STATEMENT [CHOOSE] Cost=5
　　MERGE JOIN CARTESIAN
　　TABLE ACCESS FULL DEPT
　　SORT JOIN
　　TABLE ACCESS FULL EMP

　　CARTESIAN关键字指出了在2个表之间做笛卡尔乘积。假如表emp有n行，dept表有m行，笛卡尔乘积的结果就是得到n * m行结果。

　　最后，总结一下，在哪种情况下用哪种连接方法比较好：

　　排序 - - 合并连接（Sort Merge Join， SMJ）：
　　a） 对于非等值连接，这种连接方式的效率是比较高的。
　　b） 如果在关联的列上都有索引，效果更好。
　　c） 对于将2个较大的row source做连接，该连接方法比NL连接要好一些。
　　d） 但是如果sort merge返回的row source过大，则又会导致使用过多的rowid在表中查询数据时，数据库性能下降，因为过多的I/O.

　　嵌套循环（Nested Loops， NL）：
　　a） 如果driving row source（外部表）比较小，并且在inner row source（内部表）上有唯一索引，或有高选择性非唯一索引时，使用这种方法可以得到较好的效率。
　　b） NESTED LOOPS有其它连接方法没有的的一个优点是：可以先返回已经连接的行，而不必等待所有的连接操作处理完才返回数据，这可以实现快速的响应时间。

　　哈希连接（Hash Join， HJ）：
　　a） 这种方法是在oracle7后来引入的，使用了比较先进的连接理论，一般来说，其效率应该好于其它2种连接，但是这种连接只能用在CBO优化器中，而且需要设置合适的hash_area_size参数，才能取得较好的性能。
　　b） 在2个较大的row source之间连接时会取得相对较好的效率，在一个row source较小时则能取得更好的效率。
　　c） 只能用于等值连接中


　　Oracle执行计划的概述

　　Oracle执行计划的相关概念：

　　Rowid：系统给oracle数据的每行附加的一个伪列，包含数据表名称，数据库id，存储数据库id以及一个流水号等信息，rowid在行的生命周期内唯一。
　　Recursive sql：为了执行用户语句，系统附加执行的额外操作语句，譬如对数据字典的维护等。
　　Row source（行源）：oracle执行步骤过程中，由上一个操作返回的符合条件的行的集合。
　　Predicate（谓词）：where后的限制条件。
　　Driving table（驱动表）：又称为连接的外层表，主要用于嵌套与hash连接中。一般来说是将应用限制条件后，返回较少行源的表作为驱动表。在后面的描述中，将driving table称为连接操作的row source 1。
　　Probed table（被探查表）：连接的内层表，在我们从driving table得到具体的一行数据后，在probed table中寻找符合条件的行，所以该表应该为较大的row source，并且对应连接条件的列上应该有索引。在后面的描述中，一般将该表称为连接操作的row source 2.
　　Concatenated index（组合索引）：一个索引如果由多列构成，那么就称为组合索引，组合索引的第一列为引导列，只有谓词中包含引导列时，索引才可用。
　　可选择性：表中某列的不同数值数量/表的总行数如果接近于1，则列的可选择性为高。

　　Oracle访问数据的存取方法：

　　Full table scans, FTS(全表扫描)：通过设置db_block_multiblock_read_count可以设置一次IO能读取的数据块个数，从而有效减少全表扫描时的IO总次数，也就是通过预读机制将将要访问的数据块预先读入内存中。只有在全表扫描情况下才能使用多块读操作。
　　Table Access by rowed（通过rowid存取表，rowid lookup）：由于rowid中记录了行存储的位置，所以这是oracle存取单行数据的最快方法。
　　Index scan（索引扫描index lookup）：在索引中，除了存储每个索引的值外，索引还存储具有此值的行对应的rowid值，索引扫描分两步1，扫描索引得到rowid；2，通过 rowid读取具体数据。每步都是单独的一次IO，所以如果数据经限制条件过滤后的总量大于原表总行数的5%－10％,则使用索引扫描效率下降很多。而如果结果数据能够全部在索引中找到，则可以避免第二步操作，从而加快检索速度。
　　根据索引类型与where限制条件的不同，有4种类型的索引扫描：
　　Index unique scan（索引唯一扫描）：存在unique或者primary key的情况下，返回单个rowid数据内容。
　　Index range scan（索引范围扫描）：1，在唯一索引上使用了range操作符（>,<,<>,>=,<=,between）；2，在组合索引上，只使用部分列进行查询；3，对非唯一索引上的列进行的查询。
　　Index full scan（索引全扫描）：需要查询的数据从索引中可以全部得到。
　　Index fast full scan（索引快速扫描）：与index full scan类似，但是这种方式下不对结果进行排序。

　　目前为止，典型的连接类型有3种：

　　Sort merge join（SMJ排序－合并连接）：首先生产driving table需要的数据，然后对这些数据按照连接操作关联列进行排序；然后生产probed table需要的数据，然后对这些数据按照与driving table对应的连接操作列进行排序；最后两边已经排序的行被放在一起执行合并操作。排序是一个费时、费资源的操作，特别对于大表。所以smj通常不是一个特别有效的连接方法，但是如果driving table和probed table都已经预先排序，则这种连接方法的效率也比较高。
　　Nested loops（NL嵌套循环）：连接过程就是将driving table和probed table进行一次嵌套循环的过程。就是用driving table的每一行去匹配probed table 的所有行。Nested loops可以先返回已经连接的行，而不必等待所有的连接操作处理完成才返回数据，这可以实现快速的响应时间。
　　Hash join（哈希连接）：较小的row source被用来构建hash table与bitmap，第二个row source用来被hashed，并与第一个row source生产的hash table进行匹配。以便进行进一步的连接。当被构建的hash table与bitmap能被容纳在内存中时，这种连接方式的效率极高。但需要设置合适的hash_area_size参数且只能用于等值连接中。
　　另外，还有一种连接类型：Cartesian product（笛卡尔积）：表的每一行依次与另外一表的所有行匹配，一般情况下，尽量避免使用。

转帖请注明：
http://blog.csdn.net/zq9017197/article/details/7663956


------------

固定数组   
declare   
  type type_array is varray(10) of varchar2(20);     --一维数组，字符串类型
 var_array type_array:=type_array('ggs','jjh','wsb','csl','dd','bb');   
begin   
  for i in 1..var_array.count loop                           --数组的长度用count
      dbms_output.put_line(var_array(i));   
  end loop;   
end;   
 
 
 
COUNT             返回集合中元素的个数    
DELETE            删除集合中所有元素    
DELETE(x)         删除元素下标为x的元素      对VARRAY非法     
DELETE(x,y)       删除元素下标从X到Y的元素   对VARRAY非法     
EXIST(x)          如果集合元素x已经初始化，则返回TRUE, 否则返回FALSE    
EXTEND            在集合末尾添加一个元素      对Index_by非法    
EXTEND(x)         在集合末尾添加x个元素       对Index_by非法    
EXTEND(x,n)       在集合末尾添加元素n的x个副本 对Index_by非法    
FIRST             返回集合中的第一个元素的下标号，对于VARRAY集合始终返回1。    
LAST              返回集合中最后一个元素的下标号, 对于VARRAY返回值始终等于COUNT.    
LIMIT             返回VARRY集合的最大的元素个数   Index_by集合和嵌套表无用    
NEXT(x)           返回在第x个元素之后及紧挨着它的元素值，如果x是最后一个元素，返回null.    
PRIOR(x)          返回在第x个元素之前紧挨着它的元素的值，如果x是第一个元素，则返回null。    
TRIM              从集合末端开始删除一个元素  对于index_by不合法    
TRIM(x)           从集合末端开始删除x个元素   
var_array.next(3);   //返回var_array(3)
可变数组   
declare    
type type_array is table of varchar2(20) index by binary_integer;   
var_array type_array;   
begin    
var_array(1):='aa';   
var_array(2):='bb';                     --下标必须是连续的
     
 for i in 1..var_array.count loop   
 dbms_output.put_line( var_array(i));   
end loop;   
     
end;   
 
declare
type type_array is table of t_user%rowtype index by binary_integer;   --类似二维数组
var_array type_array;
begin
     select * bulk collect into var_array from t_user;
     for i in 1..var_array.count loop
         dbms_output.put_line(var_array(i).user_id);          --二维数组的访问
         dbms_output.put_line(var_array(i).username);
     end loop;
end;

------------

select object_id,session_id,locked_mode from v$locked_object;
1、查看数据库锁,诊断锁的来源及类型： 
	select object_id,session_id,locked_mode from v$locked_object; 
	或者用以下命令： 
	select b.owner,b.object_name,l.session_id,l.locked_mode 
	from v$locked_object l, dba_objects b 
	where b.object_id=l.object_id 

	SELECT lpad(' ',decode(l.xidusn ,0,3,0))||l.oracle_username User_name, 
	o.owner,o.object_name,o.object_type,s.sid,s.serial# 
	FROM v$locked_object l,dba_objects o,v$session s 
	WHERE l.object_id=o.object_id 
	AND l.session_id=s.sid 
	ORDER BY o.object_id,xidusn DESC 
	
2、找出数据库的serial#,以备杀死： 
	select t2.username,t2.sid,t2.serial#,t2.logon_time 
	from v$locked_object t1,v$session t2 
	where t1.session_id=t2.sid order by t2.logon_time; 

3、杀死该session 
	alter system kill session 'sid,serial#' 
	用步骤2中查出来的记录，对应进该语句删除
	
	
	select xidusn, object_id, session_id, locked_mode from v$locked_object;

------------

--查看oracle的进程数量 select   s.username,   
  decode(l.type,'TM','TABLE   LOCK',   
                              'TX','ROW   LOCK',   
                              NULL)   LOCK_LEVEL,   
  o.owner,o.object_name,o.object_type,   
  s.sid,s.serial#,s.terminal,s.machine,s.program,s.osuser   
  from   v$session   s,v$lock   l,dba_objects   o   
  where   s.sid=l.sid   
  and   o.object_id=l.id1   
  and   s.username   is   not   null   

------------

按天分组：

select count(1),trunc(t.sys_creation_date, 'dd') from event_log t where t.sys_creation_date>add_months(sysdate,-4)  group by trunc(t.sys_creation_date, 'dd')


------------

CREATE OR REPLACE PROCEDURE purge_recyclebin
       AS
      
       VAR_SQL VARCHAR2(2000);
  BEGIN
      
               VAR_SQL :='purge recyclebin';
               execute immediate  VAR_SQL;
              

END purge_recyclebin;


------------

Declare 
Cursor MyCursor Is Select * From table;
   myRow MyCursor%Rowtype;
Begin
      For myRow In MyCursor Loop
      
      Update pptj_drumbeating Set PJ_description=myRow.reamrk2 Where PJ_ID=myRow.PJ_ID;
   End Loop;
End;





。。。。。。。。。。。。。。。。。。。。。。。。
http://blog.sina.com.cn/s/blog_67618c860100j0kh.html


[转载]Oracle数据库游标使用方法(转) (2010-06-08 21:36:17)转载▼
标签： 转载	分类： 数据库
原文地址：Oracle数据库游标使用方法(转)作者：点点
　游标有两种类型：显式游标和隐式游标。游标一旦打开，数据就从数据库中传送到游标变量中，然后应用程序再从游标变量中分解出需要的数据，并进行处理。本文中将对游标的使用进行一下讲解,希望可以和大家共同学习进步。

　　SQL是用于访问Oracle数据库的语言，PL/SQL扩展和加强了SQL的功能，它同时引入了更强的程序逻辑, 下面在本文中将对游标的使用进行一下讲解,希望可以和大家共同学习进步。
　　游标字面理解就是游动的光标。游标是SQL的一个内存工作区，由系统或用户以变量的形式定义。在某些情况下，需要把数据从存放在磁盘的表中调到计算机内存中进行处理，最后将处理结果显示出来或最终写回数据库。这样数据处理的速度才会提高，否则频繁的磁盘数据交换会降低效率。用数据库语言来描述游标就是映射在结果集中一行数据上的位置实体，有了游标，用户就可以访问结果集中的任意一行数据了，将游标放置到某行后，即可对该行数据进行操作，例如提取当前行的数据等。
　　游标有两种类型：显式游标和隐式游标。游标一旦打开，数据就从数据库中传送到游标变量中，然后应用程序再从游标变量中分解出需要的数据，并进行处理。
　　当系统使用一个隐式游标时，可以通过隐式游标的属性来了解操作的状态和结果，进而控制程序的流程。隐式游标可以使用名字SQL来访问，但要注意，通过SQL游标名总是只能访问前一个处理操作或单行SELECT操作的游标属性。所以通常在刚刚执行完操作之后，立即使用SQL游标名来访问属性。游标的属性有四种,分别是SQL %ISOPEN，SQL %FOUND，SQL %NOTFOUND，SQL %ROWCOUNT。
　　SQL%ISOPEN返回的类型为布尔型,判断游标是否被打开，如果打开%ISOPEN等于true,否则等于false,即执行过程中为真,结束后为假。
　　SQL%NOTFOUND返回值为布尔型,判断游标所在的行是否有效，如果有效，则%FOUNDD等于true，否则等于false,即与%FOUND属性返回值相反。
　　SQL%FOUND返回值的类型为布尔型，值为TRUE代表插入 删除 更新或单行查询操作成功。
　　SQL%ROWCOUNT返回值类型为整型，返回当前位置为止游标读取的记录行数,即成功执行的数据行数。 示例代码如下：
 
    set serveroutput on;
　　declare
　　varno varchar2(20);
　　varprice varchar2(20);
　　CURSOR mycur(vartype number) is
　　select emp_no,emp_zc from cus_emp_basic
　　where com_no = vartype;
　　begin
　　if mycur%isopen = false then
　　open mycur(043925);
　　end if;
　　fetch mycur into varno,varprice;
　　while mycur%found
　　loop
　　dbms_output.put_line(varno||','||varprice);
　　if mycur%rowcount=2 then
　　exit;
　　end if;
　　fetch mycur into varno,varprice;
　　end loop;
　　close mycur;
　　end;
 
　　记录并不保存在数据库中，它与变量一样，保存在内存空间中，在使用记录时候，要首先定义记录结构，然后声明记录变量。可以把PL/SQL记录看作是一个用户自定义的数据类型。
　　游标for循环是显示游标(非显式游标)的一种快捷使用方式，它使用for循环依次读取结果集中的行数据，当form循环开始时，游标自动打开(不需要open)，每循环一次系统自动读取游标当前行的数据(不需要fetch)，当退出for循环时，游标被自动关闭(不需要使用close)。使用游标for循环的时候不能使用open语句，fetch语句和close语句，否则会产生错误。
 
 
      set serveroutput on;
　　declare
　　cursor mycur(vartype number)is
　　select emp_no,emp_zc from cus_emp_basic
　　where com_no=vartype;
　　begin
　　for person in mycur(000627) loop
　　dbms_output.put_line('编号:'||person.emp_no||',住址:'||person.emp_zc);
　　end loop;
　　end;
 
　　显式游标的使用总共分4个步骤：
　　1.声明游标
　　在DECLEAR部分按以下格式声明游标：
　　CURSOR 游标名[(参数1 数据类型[参数2 数据类型...])]
　　IS SELECT语句;
　　参数是可选部分，所定义的参数可以出现在SELECT语句的WHERE子句中。如果定义了参数，则必须在打开游标时传递相应的实际参数。
　　SELECT语句是对表或视图的查询语句，甚至也可以是联合查询。可以带WHERE条件、ORDER BY或GROUP BY等子句，但不能使用INTO子句。在SELECT语句中可以使用在定义游标之前定义的变量。
　　例：
 
      DELCARE
　　CURSOR C_EMP IS SELECT empno,ename,salary
　　FROM emp 　　WHERE salary>1500
　　ORDER BY ename;
　　........
　　BEGIN
 
　　在游标定义中SELECT语句中不一定非要表可以是视图，也可以从多个表或视图中选择.
　　2.打开游标
　　使用游标中的值之前应该首先打开游标，打开游标初始化查询处理。打开游标的语法
　　OPEN 游标名[(实际参数1[实际参数2，...])];
　　打开游标时，SELECT语句的查询结果就被传送到了游标工作区。
　　例：　　OPEN C_EMP;
　　3.提取数据
　　从游标得到一行数据使用FETCH命令。每一次提取数据后，游标都指向结果集的下一
　　FETCH cursor_name INTO variable[,variable,...]
　　对于SELECT定义的游标的每一列，FETCH变量列表都应该有一个变量与之相对应，变
　　在可执行部分，按以下格式将游标工作区中的数据取到变量中。提取操作必须在打开游标之后进行。
　　FETCH 游标名 INTO 变量名1[变量名2，...];
　　或
　　FETCH 游标名 INTO 记录变量;
　　游标打开后有一个指针指向数据区，FETCH语句一次返回指针所指的一行数据，要返回多行需重复执行，可以使用循环语句来实现。控制循环可以通过判断游标的属性来进行。
　　下面对这两种格式进行说明：
　　第一种格式中的变量名是用来从游标中接收数据的变量，需要事先定义。变量的个数和类型应与SELECT语句中的字段变量的个数和类型一致。
　　第二种格式一次将一行数据取到记录变量中，需要使用%ROWTYPE事先定义记录变量，这种形式使用起来比较方便，不必分别定义和使用多个变量。
　　定义记录变量的方法如下：
　　变量名 表名|游标名%ROWTYPE;
　　其中的表必须存在，游标名也必须先定义。例如：
create or replace procedure update_regioncity is
  v_nUpdated     INT := 0;
  c_nCommitCount int := 1000;
  v_memberid     int;
  v_mobile       int;
  v_regioncityid   int;
  cursor pv_region is
    select t.id v_memberid, t.mobile v_mobile
      from t_home_members t
     where t.mobile is not null;
  HO        pv_region%ROWTYPE;
begin
  open pv_region;
  loop
    fetch pv_region into HO;
    exit when pv_region%notfound;
    begin
       select r.id into v_regioncityid
       from t_sys_mobilearea m, t_sys_regions r
      where r.region_name = m.city and m.num = substr(HO.v_mobile, 1, 7);
    exception when no_data_found then
      v_regioncityid := '';
   end;
   update t_home_members h set h.regioncity_id=v_regioncityid where h.id=HO.v_memberid;
   v_nUpdated := v_nUpdated + 1;
   if v_nUpdated = c_nCommitCount then
     insert into insert_log(a) values (1);
     commit;
  end if;
  end loop;
  CLOSE PV_REGION; 
  commit;
end update_regioncity;

begin... exception... end 是配套使用的，exception是捕捉begin开始的语句的错误的，这样的话，如果select执行没有结果，那么就会让v_regioncityid赋值为空
 
4.关闭游标
　　CLOSE 游标名;
　　例：
　　CLOSE C_EMP;
　　显式游标打开后，必须显式地关闭。游标一旦关闭，游标占用的资源就被释放，游标变成无效，必须重新打开才能使用。
　　Oracle支持动态SELECT语句和动态游标，动态的方法大大扩展了程序设计的能力。
　　对于查询结果为一行的SELECT语句，可以用动态生成查询语句字符串的方法，在程序执行阶段临时地生成并执行，语法是：
　　execute immediate 查询语句字符串 into 变量1[,变量2，...];
　　在变量声明部分定义的游标是静态的，不能在程序运行过程中修改。虽然可以通过参数传递来取得不同的数据，但还是有很大的局限性。通过采用动态游标，可以在程序运行阶段随时生成一个查询语句作为游标。要使用动态游标需要先定义一个游标类型，然后声明一个游标变量，游标对应的查询语句可以在程序的执行过程中动态地说明。
 以上部分摘自：http://database.ctocio.com.cn/tips/286/8265286.shtml

------------

1，not，<>,与null值进行比较这几种情况不能使用索引
2，like通配符只是出现在后面能够用得上索引（like 'luo%'）,通配符出现在前面用不上索引（like '%jun'）;
3，索引列的选择性不高的时候也用不上索引，例如一个表有个字段只有四种可能的值，数据表中有100万条记录，如果在这个只有四种可能的值的字段上面建立索引也不会使用到。
4，索引列是否是函数的参数，如果是，则使用不上，对于上面的sq如果写成下面的形式则也是用不上索引：
  select * from tb t where to_char（t.input_time,'yyyy-mm-dd'）<="2009-04-28"
  


------------

一、表空间管理
CREATE [BIGFILE|SMALLFILE] [TEMPORARY] TABLESPACE tablespace name -- 表空间名字
DATAFILE datafile spec | TEMPORARYFILE tempfile spec        -- 数据文件/临时文件说明
 [MINIMUM EXTENT minimum extent size]        -- 最小扩展空间
 [[BLOCKSIZE blocksize] DEFAULT STORAGE (defalut storage clause)]        -- （锁空间大小） 默认存储子句
 [LOGGING | NOLOGGING]        -- 有无日志
 [FORCE LOGGING]        -- 强制日志
 [ONLINE | OFFLINE]        -- 在线/不在线
 [EXTENT MANAGEMENT DICTIONARY | LOCAL [AUTOALLOCATE | UNIFORM SIZE size]]  -- 扩展管理字典/本地（自动定位/统一大小）
 [SEGMENT SPACE MANAGEMENT MANUAL | AUTO]  -- 管理extent中的block（设置为自动最佳）
 [FLASHBACK ON|OFF]         -- 删除文件是否可找回
1、1、创建永久表空间
 例：
 CREATE TABLESPACE MYTABLESPACE LOGGING
 DATAFILE 'D:\oracle\product\10.1.0\oradata\MYDB\MYTABLESPACE.DBF' SIZE 10M   REUSE 
 AUTOEXTEND ON NEXT 5M MAXSIZE UNLIMITED
 EXTENT MANAGEMENT LOCAL
1、2、创建临时表空间
 例：
 CREATE TEMPORARY TABLESPACE MYTEMP LOGGING
 TEMPFILE 'D:\oracle\product\10.1.0\oradata\MYDB\MYTEMP.DBF' SIZE 10M  REUSE 
 AUTOEXTEND ON NEXT 5M MAXSIZE UNLIMITED
 EXTENT MANAGEMENT LOCAL
 更改默认临时表空间
 alter database default temporary tablespace TEMP2;
1、3 删除表空间
 1）强行删除表空间，包括数据文件
 drop tablespace  mytemp including contents and datafiles cascade constraints
 2）表空间内无任何对象时才能删除
 drop tablespace  mytemp
1.4 为表空间增加文件
 alter tablespace users add datafile 'd:\oracle\oradata\....\users02.dbf' size 10m;
1.5 默认临时表空间
 在创建用户时，如果没有指定临时表空间，则会使用系统表空间作为临时表空间，如果指定了默认临时表空间，则在未指定临时表空间的情况下使用默认的临时表空间。
 alter database default temporary tablespace temp01
1.6 将表空间脱机
 alter tablespace users offline;
1.7 更改表空间的大小
 alter tablespace  datafile 'd:\oracle\....\xxx.dbf' resize 100m;
1.8 更改表空间文件的名称或路径
 1)先将对应表空间脱机
 2)将文件重命名或则移动到新的位置
 3)alter tablespace user01 rename datafile 'd:\oracle\oradata\fox\user01.dbf' to 'd:\oracle\oradata\fox\user02.dbf'
1.9 查看临时表空间的文件
 select * from dba_temp_files;
 or select * from v$tempfile;

二、表管理
2.1 建表
 CREATE TABLE emp
  (
  empno number(6) constraint emp_empno_pk primary key using index (create index emp_empno_pk on emp(empno) tablespace idx_ts), --不使用默认Primary 的索引
  firstname varchar(20),
  lastname varchar(25) constraint emp_last_name_nn not null,
  hire_date date default sysdate,
  salary number(8,2) constraint salary_ck check(salary>0),
  managerid number(6),
  deptno number(4) constraint emp_deptno_fk references deptment(deptno),  --定义外键约束
  email varchar(25),
  constraint emp_email_uq unique(email) --创建唯一约束
  )
 tablespace mytablespace  --制定表空间
    2.2 修改表
2.1.1 增加字段
     alter table emp add(birthday date default sysdate,ename varchar(20) constriant ename_ck check(ename<>'Admin'))
2.1.2 删除字段
 alter table emp drop column birthday
2.1.3 修改字段
 alter table emp modify ename varchar(30) default 'unknow'
2.1.4 修改列名
 alter table emp rename column ename to en_name
2.1.5 修改表名
 rename emp to employees  --其他对象通用
2.1.6 为(表)列添加描述
  -- 为表添加描述
 comment on table employees is '存放雇员的信息'
 comment on column employees.en_name is '存放雇员的英文名'
 -- 查询字段的描述
 select owner,table_name,column_name,comments from dba_col_comments where table_name='EMPLOYEES' --好象所有的值都大写
 -- 查询表的描述
 SELECT TABLE_NAME,COMMENTS FROM ALL_TAB_COMMENTS WHERE TABLE_NAME='EMPLOYEES'
2.1.7 截断表
 truncate table employees   --清除所有的数据，保留表结构，该操作不记录日志，请慎用
2.1.8 删除表
 DROP TABLE table_name [CASCADE CONSTRAINTS] [PURGE] -- CASCADE CONSTRAINTS 选项用于删除其他表的外键约束，[PURGE]选项用于彻底删除表
2.1.9 恢复被删除的表
 Flashback table employees to before drop

三、约束
3.1 创建约束
3.1.1   NOT NULL约束
 注:NOT NULL约束只能定义为列级约束，而不能为表级约束
eg: CREATE TABLE performance
   (
   student_no int not null,
   student_name varchar(10) constraint student_name_nn NOT NULL,
   performance number(6,2) 
   )
 -- 修改列为not null约束
 alter table performance modify performance not null
3.1.2 UNIQUE约束
eg: CREATE TABLE EMP
  (
   e_no int,
   name varchar(8),
   salary number(6,2),
   constraint name_unq UNIQUE(name)
   )
 -- 增加UNIQUE约束
 constraint emp_name_uk unique (e_no,name) 
3.1.3 PRIMARY KEY约束
eg: create table emp
  (
    emp_no int primary key,
    emp_name varchar(8),
    address varchar(20)
   )
 or
   create table emp
   (
    emp_no int,
    emp_name varchar(8),
    address varchar(20),
    constraint emp_no_pk primary key(emp_no)
   )
 -- 增加索引
 alter table emp add constraint emp_pk primary key (emp_no,emp_name)
3.1.3 foreign key 约束
  eg: create table salary
      (
       emp_no int,
       salary number(6,2) constraint emp_no_fk  references emp(emp_no)
      )
   or
      create table salary
      (
       emp_no int,
       salary number(6,2),
       constraint emp_no_fk foreign key (emp_no) references emp(emp_no)
      )
 -- 添加外键约束
 alter table emp add constraint emp_no_fk foreign key (emp_no)  references emp(emp_no) on delete cascade 
 -- 添加外键约束(双主键)
 alter table emp add constraint emp_no_fk foreign key (emp_no,emp_name)  references emp(emp_no,emp_name) on delete cascade
3.1.4 CKECK 约束
     create table salary
     (
       emp_no int,
       salary number(6,2) constraint salary_min check(salary>0)
      )
   or
     create table salary
     (
       emp_no int,
       salary number(6,2),
       constraint salary_min check(salary>0)
     )
 -- 添加CKECK约束
 alter table salary add constraint salary_min_chk check(salary>0)
3.2 修改约束
3.2.1 禁用/激活约束
  禁用/激活约束会引起删除和重建索引的操作
  alter table employees disable/enable unique email 
  alter table employees disable/enable constraint emp_ename_pk 
  alter tabel employees modify constraint emp_pk disable/enable 
  alter tabel employees modify constraint emp_ename_phone_uk disable/enable 
3.2.2 删除约束
  alter table salary drop constraint salary_min_chk
3.2.3 查询约束信息
  -- 约束及表信息
  select owner,constraint_name,table_name,search_condition from dba_constraints where owner='WENZI'
  --  约束及字段信息
  select owner,constraint_name,table_name,column_name,position from dba_cons_columns where owner='WENZI'

四、索引
索引和对应的表应该位于不同的表空间中,oracle能够并行读取位于不同硬盘上的数据，可以避免产生I/O冲突 
B树索引：在B树的叶节点中存储索引字段的值与ROWID. 
唯一索引和不唯一索引都只是针对B树索引而言. 
Oracle最多允许包含32个字段的复合索引
索引创建策略：
1.导入数据后再创建索引
2.不需要为很小的表创建索引
3.对于取值范围很小的字段（比如性别字段）应当建立位图索引
4.限制表中的索引的数目
5.为索引设置合适的PCTFREE值
6.存储索引的表空间最好单独设定
4.1 创建索引
4.1.1 创建不唯一索引
  create index emp_ename on employees(ename) tablespace users 
4.1.2 创建唯一索引
  create unique index emp_email on employees(email) tablespace users;
4.1.3 创建位图索引
  create bitmap index emp_sex on employees(sex) tablespace users;
4.1.4 创建反序索引
  create unique index order_reinx on orders(order_num,order_date) tablespace users reverse
4.1.5 创建函数索引
  create index emp_substr_empno on employees(substr(empno,1,2)) tablespace users; 
4.2 维护索引
4.2.1 修改索引
  由于定义约束时由oracle自动建立的索引通常是不知道名称的，对这类索引的修改经常是利用alter table ..using index语句进行的,而不是alter index语句。
  利用下面的语句将employees表中primary key约束对应的索引的PCTFREE参数修改为5：
  alter table employees enable primary key using index pctfree 5;
4.2.2 合并索引
  只是简单的将B树叶结点中的存储碎片合并在一起，并不会改变索引的物理组织结构
  alter index emp_pk coalesce;
4.2.3 重建索引
  不仅能够消除存储碎片,还可以改变索引的全部存储参数设置，并且可以将索引移动到其它的表空间中,重建索引 
  实际上就是再指定的表空间中重新建立一个新的索引,然后删除原来的索引。
  alter index emp_pk rebuild;
4.3 删除索引
  在删除一个表时,oracle会自动删除所有与该表相关的索引. 
  drop index emp_ename
4.4 查询索引的相关信息
  -- 索引名称及表：
  select owner,index_name,index_type,table_owner,table_type,tablespace_name,status from dba_indexes where owner='WENZI'
  -- 索引及字段
  select INDEX_OWNER,INDEX_NAME,TABLE_NAME,COLUMN_NAME,COLUMN_POSITION,DESCEND FROM dba_ind_columns where index_owner='WENZI'

五、视图
5.1 创建视图
 CREATE VIEW division1_staff AS
 SELECT ename, empno, job, dname FROM emp, dept
 WHERE emp.deptno IN (10, 30) AND emp.deptno = dept.deptno;
5.2 修改视图
 CREATE OR REPLACE VIEW sales_staff AS
 SELECT empno, ename, deptno FROM emp
 WHERE deptno = 30 WITH CHECK OPTION CONSTRAINT sales_staff_cnst;
5.3 删除视图
 DROP VIEW emp_dept;

六、序列
6.1 创建序列
  CREATE SEQUENCE emp_sequence
  INCREMENT BY 1
  START WITH 1
  NOMAXVALUE
  NOCYCLE
  CACHE 10;  --指定CACHE可以提高效率，但是当系统意外关闭时可能会发生跳号现象.
6.2 修改序列
  ALTER SEQUENCE emp_sequence
  INCREMENT BY 10
  MAXVALUE 10000
  CYCLE
  CACHE 20;
6.3 使用序列
  INSERT INTO Orders_tab (Orderno, Custno) VALUES (Order_seq.NEXTVAL, 1032);  --NEXTVAL 为序列的下一个编号，CURRVAL 为当前编号
  or
  UPDATE Orders_tab   SET Orderno = Order_seq.NEXTVAL  WHERE Orderno = 10112;
6.4 删除序列
  DROP SEQUENCE order_seq;

------------------------------------------------------------------------------------------------------------------------

create table test
(id number,
name varchar2(10),
age number,
phone varchar2(50),
);

/*新建检查*/
alter table test add constraint test_ck check(age>6 and age<14)；

/*删除检查*/

alter table test drop constraint test_ck;

/*给表列增加主键*/

alter table test add constraint c_t primary key (name);

---------------------------------------------------------------------------------------------------------------------------

1，CREATE OR REPLACE PROCEDURE TEST
AS

CURSOR MY_CURSOR IS
	SELECT * FROM USERS;
VAR_USERS USERS%ROWTYPE;
	
BEGIN
	
	OPEN MY_CURSOR;
	
	LOOP
		FETCH MY_CURSOR IN TO VAR_USERS;
		
		EXIT WHEN MY_CURSOR%NOTFOUND;
		
		.....
		
	END LOOP;
	
END TEST;	

														
2，
  DECLARE
  	CURSOR JOB_CURS IS SELECT * FROM USERS;
  BEGIN 
  
  FOR JOB_CUR IN JOB_CURS
  LOOP
  	DBMS_JOB.REMOVE(JOB_CUR.JOB);
  END LOOP;
  
  END;
  
  	 	 
  														

---------------------------------------------------------------------------------

1，WHILE

WHILE TO_DATE(VAR_DAY,'YYYY-MM-DD HH24:MI;SS')<SYSDATE  --没有分号

LOOP
	............
	VAR_DAY:=TO_CHAR(TO_DATE(VAR_DAY,'YYYY-MM-DD')+1,'YYYY-MM-DD');
	
END LOOP;

	
2，	FOR

BEGIN
 FOR I IN 1..10
	



------------------------------------------------------------------------------------

此文从以下几个方面来整理关于分区表的概念及操作:
        1.表空间及分区表的概念
        2.表分区的具体作用
        3.表分区的优缺点
        4.表分区的几种类型及操作方法
        5.对表分区的维护性操作.
(1.) 表空间及分区表的概念
表空间：
　　是一个或多个数据文件的集合，所有的数据对象都存放在指定的表空间中，但主要存放的是表， 所以称作表空间。
 
分区表： 
当表中的数据量不断增大，查询数据的速度就会变慢，应用程序的性能就会下降，这时就应该考虑对表进行分区。表进行分区后，逻辑上表仍然是一张完整的表，只是将表中的数据在物理上存放到多个表空间(物理文件上)，这样查询数据时，不至于每次都扫描整张表。
 
( 2).表分区的具体作用
Oracle的表分区功能通过改善可管理性、性能和可用性，从而为各式应用程序带来了极大的好处。通常，分区可以使某些查询以及维护操作的性能大大提高。此外,分区还可以极大简化常见的管理任务，分区是构建千兆字节数据系统或超高可用性系统的关键工具。
 
分区功能能够将表、索引或索引组织表进一步细分为段，这些数据库对象的段叫做分区。每个分区有自己的名称，还可以选择自己的存储特性。从数据库管理员的角度来看，一个分区后的对象具有多个段，这些段既可进行集体管理，也可单独管理，这就使数据库管理员在管理分区后的对象时有相当大的灵活性。但是，从应用程序的角度来看，分区后的表与非分区表完全相同，使用 SQL DML 命令访问分区后的表时，无需任何修改。
 
什么时候使用分区表：
1、表的大小超过2GB。
2、表中包含历史数据，新的数据被增加都新的分区中。
 
 (3).表分区的优缺点
表分区有以下优点： 
1、改善查询性能：对分区对象的查询可以仅搜索自己关心的分区，提高检索速度。
2、增强可用性：如果表的某个分区出现故障，表在其他分区的数据仍然可用；
3、维护方便：如果表的某个分区出现故障，需要修复数据，只修复该分区即可；
4、均衡I/O：可以把不同的分区映射到磁盘以平衡I/O，改善整个系统性能。
 
缺点： 
分区表相关：已经存在的表没有方法可以直接转化为分区表。不过 Oracle 提供了在线重定义表的功能。
 
(4).表分区的几种类型及操作方法
 一.范围分区：
范围分区将数据基于范围映射到每一个分区，这个范围是你在创建分区时指定的分区键决定的。这种分区方式是最为常用的，并且分区键经常采用日期。举个例子：你可能会将销售数据按照月份进行分区。
当使用范围分区时，请考虑以下几个规则：
1、每一个分区都必须有一个VALUES LESS THEN子句，它指定了一个不包括在该分区中的上限值。分区键的任何值等于或者大于这个上限值的记录都会被加入到下一个高一些的分区中。
2、所有分区，除了第一个，都会有一个隐式的下限值，这个值就是此分区的前一个分区的上限值。
3、在最高的分区中，MAXVALUE被定义。MAXVALUE代表了一个不确定的值。这个值高于其它分区中的任何分区键的值，也可以理解为高于任何分区中指定的VALUE LESS THEN的值，同时包括空值。
例一：
假设有一个CUSTOMER表，表中有数据200000行，我们将此表通过CUSTOMER_ID进行分区，每个分区存储100000行，我们将每个分区保存到单独的表空间中，这样数据文件就可以跨越多个物理磁盘。下面是创建表和分区的代码，如下：
CREATE TABLE CUSTOMER 
( 
    CUSTOMER_ID NUMBER NOT NULL PRIMARY KEY, 
    FIRST_NAME  VARCHAR2(30) NOT NULL, 
    LAST_NAME   VARCHAR2(30) NOT NULL, 
    PHONE        VARCHAR2(15) NOT NULL, 
    EMAIL        VARCHAR2(80), 
    STATUS       CHAR(1) 
) 
PARTITION BY RANGE (CUSTOMER_ID) 
( 
    PARTITION CUS_PART1 VALUES LESS THAN (100000) TABLESPACE CUS_TS01, 
    PARTITION CUS_PART2 VALUES LESS THAN (200000) TABLESPACE CUS_TS02 
)
例二：按时间划分
CREATE TABLE ORDER_ACTIVITIES 
( 
    ORDER_ID      NUMBER(7) NOT NULL, 
    ORDER_DATE    DATE, 
    TOTAL_AMOUNT NUMBER, 
    CUSTOTMER_ID NUMBER(7), 
    PAID           CHAR(1) 
) 
PARTITION BY RANGE (ORDER_DATE) 
(
  PARTITION ORD_ACT_PART01 VALUES LESS THAN (TO_DATE('01- MAY -2003','DD-MON-YYYY')) TABLESPACEORD_TS01,
  PARTITION ORD_ACT_PART02 VALUES LESS THAN (TO_DATE('01-JUN-2003','DD-MON-YYYY')) TABLESPACE ORD_TS02,
  PARTITION ORD_ACT_PART02 VALUES LESS THAN (TO_DATE('01-JUL-2003','DD-MON-YYYY')) TABLESPACE ORD_TS03
)
例三：MAXVALUE
CREATE TABLE RangeTable
( 
  idd   INT PRIMARY KEY , 
  iNAME VARCHAR(10), 
  grade INT  
) 
PARTITION  BY  RANGE (grade) 
( 
      PARTITION  part1 VALUES  LESS  THEN (1000) TABLESPACE  Part1_tb, 
      PARTITION  part2 VALUES  LESS  THEN (MAXVALUE) TABLESPACE  Part2_tb 
);
 
二.列表分区：
该分区的特点是某列的值只有几个，基于这样的特点我们可以采用列表分区。
例一
CREATE TABLE PROBLEM_TICKETS 
( 
    PROBLEM_ID   NUMBER(7) NOT NULL PRIMARY KEY, 
    DESCRIPTION  VARCHAR2(2000), 
    CUSTOMER_ID  NUMBER(7) NOT NULL, 
    DATE_ENTERED DATE NOT NULL, 
    STATUS       VARCHAR2(20) 
) 
PARTITION BY LIST (STATUS) 
( 
      PARTITION PROB_ACTIVE   VALUES ('ACTIVE') TABLESPACE PROB_TS01, 
      PARTITION PROB_INACTIVE VALUES ('INACTIVE') TABLESPACE PROB_TS02
例二
CREATE  TABLE  ListTable
( 
    id    INT  PRIMARY  KEY , 
    name  VARCHAR (20), 
    area  VARCHAR (10) 
) 
PARTITION  BY  LIST (area) 
( 
    PARTITION  part1 VALUES ('guangdong','beijing') TABLESPACE  Part1_tb, 
    PARTITION  part2 VALUES ('shanghai','nanjing')  TABLESPACE  Part2_tb 
);
)
 
三.散列分区：
这类分区是在列值上使用散列算法，以确定将行放入哪个分区中。当列的值没有合适的条件时，建议使用散列分区。
散列分区为通过指定分区编号来均匀分布数据的一种分区类型，因为通过在I/O设备上进行散列分区，使得这些分区大小一致。
例一：
CREATE TABLE HASH_TABLE 
( 
  COL NUMBER(8), 
  INF VARCHAR2(100) 
) 
PARTITION BY HASH (COL) 
( 
  PARTITION PART01 TABLESPACE HASH_TS01, 
  PARTITION PART02 TABLESPACE HASH_TS02, 
  PARTITION PART03 TABLESPACE HASH_TS03 
)
简写：
CREATE TABLE emp
(
    empno NUMBER (4),
    ename VARCHAR2 (30),
    sal   NUMBER 
)
PARTITION BY  HASH (empno) PARTITIONS 8
STORE IN (emp1,emp2,emp3,emp4,emp5,emp6,emp7,emp8);
 
hash分区最主要的机制是根据hash算法来计算具体某条纪录应该插入到哪个分区中,hash算法中最重要的是hash函数，Oracle中如果你要使用hash分区，只需指定分区的数量即可。建议分区的数量采用2的n次方，这样可以使得各个分区间数据分布更加均匀。
 
四.组合范围散列分区
这种分区是基于范围分区和列表分区，表首先按某列进行范围分区，然后再按某列进行列表分区，分区之中的分区被称为子分区。
CREATE TABLE SALES 
(
PRODUCT_ID VARCHAR2(5),
SALES_DATE DATE,
SALES_COST NUMBER(10),
STATUS VARCHAR2(20)
)
PARTITION BY RANGE(SALES_DATE) SUBPARTITION BY LIST (STATUS)
(
   PARTITION P1 VALUES LESS THAN(TO_DATE('2003-01-01','YYYY-MM-DD'))TABLESPACE rptfact2009 
          ( 
              SUBPARTITION P1SUB1 VALUES ('ACTIVE') TABLESPACE rptfact2009, 
              SUBPARTITION P1SUB2 VALUES ('INACTIVE') TABLESPACE rptfact2009 
          ), 
   PARTITION P2 VALUES LESS THAN (TO_DATE('2003-03-01','YYYY-MM-DD')) TABLESPACE rptfact2009 
          ( 
              SUBPARTITION P2SUB1 VALUES ('ACTIVE') TABLESPACE rptfact2009, 
              SUBPARTITION P2SUB2 VALUES ('INACTIVE') TABLESPACE rptfact2009 
          ) 
)
 
五.复合范围散列分区：
这种分区是基于范围分区和散列分区，表首先按某列进行范围分区，然后再按某列进行散列分区。
create table dinya_test 
 ( 
 transaction_id number primary key, 
 item_id number(8) not null, 
 item_description varchar2(300), 
 transaction_date date 
 ) 
 partition by range(transaction_date)subpartition by hash(transaction_id)  subpartitions 3 store in (dinya_space01,dinya_space02,dinya_space03) 
 ( 
     partition part_01 values less than(to_date(‘2006-01-01’,’yyyy-mm-dd’)), 
     partition part_02 values less than(to_date(‘2010-01-01’,’yyyy-mm-dd’)), 
     partition part_03 values less than(maxvalue) 
 );
 
(5).有关表分区的一些维护性操作： 
一、添加分区 
以下代码给SALES表添加了一个P3分区
ALTER TABLE SALES ADD PARTITION P3 VALUES LESS THAN(TO_DATE('2003-06-01','YYYY-MM-DD'));
注意：以上添加的分区界限应该高于最后一个分区界限。
以下代码给SALES表的P3分区添加了一个P3SUB1子分区
ALTER TABLE SALES MODIFY PARTITION P3 ADD SUBPARTITION P3SUB1 VALUES('COMPLETE');
二、删除分区 
以下代码删除了P3表分区：
ALTER TABLE SALES DROP PARTITION P3;
在以下代码删除了P4SUB1子分区：
ALTER TABLE SALES DROP SUBPARTITION P4SUB1;
注意：如果删除的分区是表中唯一的分区，那么此分区将不能被删除，要想删除此分区，必须删除表。
三、截断分区 
截断某个分区是指删除某个分区中的数据，并不会删除分区，也不会删除其它分区中的数据。当表中即使只有一个分区时，也可以截断该分区。通过以下代码截断分区：
ALTER TABLE SALES TRUNCATE PARTITION P2;
通过以下代码截断子分区：
ALTER TABLE SALES TRUNCATE SUBPARTITION P2SUB2;
四、合并分区 
合并分区是将相邻的分区合并成一个分区，结果分区将采用较高分区的界限，值得注意的是，不能将分区合并到界限较低的分区。以下代码实现了P1 P2分区的合并：
ALTER TABLE SALES MERGE PARTITIONS P1,P2 INTO PARTITION P2;
五、拆分分区 
拆分分区将一个分区拆分两个新分区，拆分后原来分区不再存在。注意不能对HASH类型的分区进行拆分。
ALTER TABLE SALES SBLIT PARTITION P2 AT(TO_DATE('2003-02-01','YYYY-MM-DD')) INTO (PARTITION P21,PARTITION P22);
六、接合分区(coalesca) 
结合分区是将散列分区中的数据接合到其它分区中，当散列分区中的数据比较大时，可以增加散列分区，然后进行接合，值得注意的是，接合分区只能用于散列分区中。通过以下代码进行接合分区：
ALTER TABLE SALES COALESCA PARTITION;
七、重命名表分区 
以下代码将P21更改为P2
ALTER TABLE SALES RENAME PARTITION P21 TO P2;
八、相关查询
跨分区查询
select sum( *) from
(select count(*) cn from t_table_SS PARTITION (P200709_1)
union all
select count(*) cn from t_table_SS PARTITION (P200709_2)
);
查询表上有多少分区
SELECT * FROM useR_TAB_PARTITIONS WHERE TABLE_NAME='tableName'
查询索引信息
select object_name,object_type,tablespace_name,sum(value)
from v$segment_statistics
where statistic_name IN ('physical reads','physical write','logical reads')and object_type='INDEX'
group by object_name,object_type,tablespace_name
order by 4 desc
 
--显示数据库所有分区表的信息：
select * from DBA_PART_TABLES
 
--显示当前用户可访问的所有分区表信息:
select * from ALL_PART_TABLES
 
--显示当前用户所有分区表的信息：
select * from USER_PART_TABLES
 
--显示表分区信息 显示数据库所有分区表的详细分区信息：
select * from DBA_TAB_PARTITIONS
 
--显示当前用户可访问的所有分区表的详细分区信息：
select * from ALL_TAB_PARTITIONS
 
--显示当前用户所有分区表的详细分区信息：
select * from USER_TAB_PARTITIONS
 
--显示子分区信息 显示数据库所有组合分区表的子分区信息：
select * from DBA_TAB_SUBPARTITIONS
 
--显示当前用户可访问的所有组合分区表的子分区信息：
select * from ALL_TAB_SUBPARTITIONS
 
--显示当前用户所有组合分区表的子分区信息：
select * from USER_TAB_SUBPARTITIONS
 
--显示分区列 显示数据库所有分区表的分区列信息：
select * from DBA_PART_KEY_COLUMNS
 
--显示当前用户可访问的所有分区表的分区列信息：
select * from ALL_PART_KEY_COLUMNS
 
--显示当前用户所有分区表的分区列信息：
select * from USER_PART_KEY_COLUMNS
 
--显示子分区列 显示数据库所有分区表的子分区列信息：
select * from DBA_SUBPART_KEY_COLUMNS
 
--显示当前用户可访问的所有分区表的子分区列信息：
select * from ALL_SUBPART_KEY_COLUMNS
 
--显示当前用户所有分区表的子分区列信息：
select * from USER_SUBPART_KEY_COLUMNS
 
--怎样查询出oracle数据库中所有的的分区表
select * from user_tables a where a.partitioned='YES'
 
--删除一个表的数据是
truncate table table_name;
 
--删除分区表一个分区的数据是
alter table table_name truncate partition p5;
本文出自 “天知道的技术博客” 博客，转载请与作者联系！

------------------------------------------------------------------------------------------------------


create table test (name varchar2(50),id number not null,sex char(1));

alter table test add constraint s_t check (sex='m' or sex='j')；

alter table test add (height number);

create table test_t as select * from test;

rename  test_t to test_t2;

alter table TEST_T2 rename column name2 to NAME3;


Flashback table test_t2 to before drop

drop table test_t2;

delete test t where rownum<(select max(rownum) from test t2 where t2.name=t.name and t2.id=t.id)


create table test(
	name varchar2(100),
	id number,
	sex char(1),
	born_time date
)
partition by range (born_time)(
	partition P2000000 values less than to_date('2000/01/01','yyyy-mm')
		tablespace rptdat
);

alter table test add partition p290202 values less than to_date('2000/01/01','yyyy-mm');


select count(*) from user_tab_partitions  t;

alter table  test truncate partition p20000;
alter table test drop partition p2000;


 DBMS_JOB.BROKEN(R.JOB,false,TO_DATE(TO_CHAR(SYSDATE+1,'YYYY-MM-DD'),'YYYY-MM-DD')+1/24);
 
 select * from user_jobs;
 
 select * from user_source where name='' order by line;
 
 
 

http://v.youku.com/v_show/id_XNjAxMTE5NjQ4.html?tpa=dW5pb25faWQ9MTAyMjEzXzEwMDAwMl8wMV8wMQ

-----------------------------------------------------------------------------

BEGIN TRANSACTION

END 

ROLLBACK

------------

批量解决Oracle锁等待的方法
2013-04-11 00:00中国IT实验室佚名
关键字：Oracle
　　批量解决oracle锁等待的方法

　　据我所知，oracle 10g之后的oracle版本不会因为使用者的操作原因，造成死锁。

　　大家通常会遇到这种现象，在自己web项目首页使用用户名，密码登陆系统时，始终停留在本页面，无法进入系统，或是在执行某些操作后，系统一直处在等待状态，不出结果，后台也无任何错误提醒。此时，很大的可能就是数据库锁等待，所要查询的包含用户名和密码的表或是用户正操作的表正在被占用造成的。

　　锁等待的现象：程序在执行的过程中，点击确定或保存按钮，程序没有响应，也没有出现报错。

　　网上有很多人把这种现象称为死锁，我认为是不合理的。此时的oracle并未发生任何死锁现象，只是它一直在等待使用者前一个操作的提交。

　　产生锁等待的原因：当对于数据库某个表的某一列做更新或删除等操作，执行完毕后该条语句不提交，另一条对于这一列数据做更新操作的语句在执行的时候就会处于等待状态，此时的现象是这条语句一直在执行，但一直没有执行成功，也没有报错。

　　锁等待定位方法：

　　Sql代码

　　select sql_text from v$sql where hash_value in

　　(select sql_hash_value from v$session where sid in

　　(select session_id from v$locked_object))

　　Sql代码

　　SELECT s.username,l.OBJECT_ID,l.SESSION_ID,s.SERIAL#,

　　l.ORACLE_USERNAME,l.OS_USER_NAME,l.PROCESS

　　FROM V$LOCKED_OBJECT l,V$SESSION S WHERE l.SESSION_ID=S.SID;

　　以上两种方法皆可以，不过查询出来的属性不同，可以根据个人需要选择。其中有一种方法速度较快，但我忘记是哪一种了，您若遇到数据库出现和锁等待相符的现象，可以用这两种方法查询试一下，若得到结果，则说明确实发生锁等待现象了。

　　单个解决锁等待的方法：

　　Sql代码

　　alter system kill session 'sid, serial#'

　　其中的sid和serial可以通过上面锁等待定位方法的第二个方法得到，sid对应SESSION_ID，serial#对应SERIAL#。例如：

　　Sql代码

　　alter system kill session '130,2';

　　我通常会遇到上千个锁，实在没办法一个一个的kill掉了，所以我通常使用下述批量解锁方法。

　　批量解锁方法：

　　注：此方法应在plsql中运行

　　Sql代码

　　declare cursor mycur is

　　select b.sid,b.serial#

　　from v$locked_object a,v$session b

　　where a.session_id = b.sid group by b.sid,b.serial#;

　　begin

　　for cur in mycur

　　loop

　　execute immediate ( 'alter system kill session '''||cur.sid || ','|| cur.SERIAL# ||''' ');

　　end loop;

　　end;

　　若读者在使用中出现问题，可能是中英文字符转换造成的，请读者注意。

------------

在黑窗口执行，实验为plsql上执行不了

1，查询数据库是否归档模式

 	select  log_mode from v$database;
 	
 	--------------
 	NOARCHIVELOG/ARCHIVELOG
 	
 2，关闭数据库
 
 	shutdown immediate;
 	
 3，将数据库启动到mount模式下
 
 	startup mount;
 	
 4，更改数据库为归档模式
 
 	alter database archivelog;		
 	
 5，打开数据库
 
 	alter database open;
 				

 
 http://blog.itpub.net/24234775/viewspace-681103/				
 将Oracle数据库设置为归档模式 2010-12-07 16:54:25
分类： Linux
将Oracle数据库从非归档状态设置成归档状态。

查看归档状态为非归档
sys@JSL> select log_mode from v$database;
LOG_MODE
------------
NOARCHIVELOG

archive状态Disabled
sys@JSL> archive log list
Database log mode              No Archive Mode
Automatic archival             Disabled
Archive destination            USE_DB_RECOVERY_FILE_DEST
Oldest online log sequence     2
Current log sequence           4

sys@JSL> select * from v$archive_processes;

   PROCESS STATUS     LOG_SEQUENCE STAT
---------- ---------- ------------ ----
         0 STOPPED               0 IDLE
         1 STOPPED               0 IDLE
         2 STOPPED               0 IDLE
         3 STOPPED               0 IDLE
    ...
    ...
        29 STOPPED               0 IDLE

修改为归档模式

首先要关闭数据库，启动到mount状态。
sys@JSL> shutdown immediate
Database closed.
Database dismounted.
ORACLE instance shut down.
sys@JSL> startup mount
ORACLE instance started.

Total System Global Area  184549376 bytes
Fixed Size                  1218412 bytes
Variable Size              62916756 bytes
Database Buffers          117440512 bytes
Redo Buffers                2973696 bytes
Database mounted.

修改为归档模式
sys@JSL> alter database archivelog;
Database altered.

oracle 9i还要设置log_archive_start 这是个静态参数
alter system set log_archive_start=true scope=spfile;
oracle 10g则不用设置了。

验证修改结果
sys@JSL> select log_mode from v$database;
LOG_MODE
------------
ARCHIVELOG

打开数据库
sys@JSL> alter database open;
Database altered.


设置归档格式
log_archive_format，是设置归档命名规则的静态参数，设置后重启数据库才生效。
对log_archive_dest和log_archive_dest_n指定的归档有效。

常用参数如下
%s log sequence number
%S log sequence number, zero filled
%t thread number
%T thread number, zero filled
%a activation ID
%d database ID
%r resetlogs ID
resetlogs，防止恢复的时候会报错，归档默认文件扩展名是dbf，习惯设置成arc
例如：<dbname>_%t_%s_%r.arc

sys@JSL> select name from v$database;
NAME
------------------------------
JSL
sys@JSL> alter system set log_archive_format='jsl_%t_%s_%r.arc' scope=spfile;
System altered.
重启数据库才生效。



sys@JSL> archive log list
Database log mode              Archive Mode
Automatic archival             Enabled
Archive destination            USE_DB_RECOVERY_FILE_DEST
Oldest online log sequence     2
Next log sequence to archive   4
Current log sequence           4
sys@JSL> alter system switch logfile;
System altered.

archive变成Enabled，我们没有设置归档目的地，
默认USE_DB_RECOVERY_FILE_DEST使用DB_RECOVERY_FILE_DEST目录，也就是我们常说的闪回目录。
sys@JSL> archive log list
Database log mode              Archive Mode
Automatic archival             Enabled
Archive destination            USE_DB_RECOVERY_FILE_DEST
Oldest online log sequence     3
Next log sequence to archive   5
Current log sequence           5

查看当前日志组
sys@JSL> select * from v$log;

GROUP# THREAD# SEQUENCE#    BYTES  MEMBERS ARC STATUS    FIRST_CHANGE# FIRST_TIME
------ ------- --------- -------- -------- --- --------- ------------- -----------------
     1       1         5 52428800        1 NO  CURRENT         1565953 20101206 17:57:21
     2       1         4 52428800        1 YES ACTIVE          1559083 20101206 15:07:00
     3       1         3 52428800        1 YES INACTIVE        1534317 20101206 10:44:06

切换日志
alter system archive log current; --先归档再切换
alter system switch logfile; --先切换至于能不能归档再说

sys@JSL> alter system switch logfile;
System altered.

查看已经归档的信息
sys@JSL> select RECID,NAME,DEST_ID,SEQUENCE#,RESETLOGS_CHANGE#,ARCHIVED,STATUS ,BACKUP_COUNT from v$archived_log;

RECID NAME                              DEST_ID  SEQUENCE# RESETLOGS_CHANGE# ARC S BACKUP_COUNT
----- ------------------------------ ---------- ---------- ----------------- --- - ------------
    1 /u01/app/oracle/flash_recovery         10          1           1484108 YES A            0
      _area/HYJT/archivelog/2010_12_
      05/o1_mf_1_1_6hq6z3db_.arc
    2 /u01/app/oracle/flash_recovery         10          4           1484108 YES A            0
      _area/JSL/archivelog/2010_12_0
      6/o1_mf_1_4_6hsdw1mv_.arc
    3 /u01/app/oracle/flash_recovery         10          5           1484108 YES A            0
      _area/JSL/archivelog/2010_12_0
      6/o1_mf_1_5_6hsdx63y_.arc

查看归档进程，开启了三个归档进程
sys@JSL> select * from v$archive_processes;

   PROCESS STATUS     LOG_SEQUENCE STAT
---------- ---------- ------------ ----
         0 ACTIVE                0 IDLE
         1 ACTIVE                0 IDLE
         2 ACTIVE                0 IDLE
         3 STOPPED               0 IDLE
    ...
    ...
        29 STOPPED               0 IDLE

如果归档进程报错，8i可以使用下面命令尝试解决
archive log stop;
archive log start;

10版本的archive log stop/start及alter system archive log stop/start命令已经不用了，只要在归档模式下就是自动归档模式


设置归档目录
    默认的归档目录（Archive destination）是： USE_DB_RECOVERY_FILE_DEST，
    如果取消DB_RECOVERY_FILE_DEST参数的设置，就会找standby_archive_dest参数，
    默认是'?/dbs/arch'但是没有真实目录存在，所以虽然能开启归档但是不能实现归档。
设置方式：
A: log_archive_dest_n (1-10) 这个参数与B是冲突的，可以设置本地和远程作为归档目标地址。
    下面有十个状态参数log_archive_dest_state_n (1-10)与之对应，enable才可用。
    例：  
    log_archive_dest_state_1=DEFER  
    log_archive_dest_state_2=ENABLE  
    此参数和log_archive_dest_n参数配对使用，缺省值为ENABLE，如果想停止使用一个归档目录，只需将其对应的log_archive_dest_state_n参数值设置为DEFER。
    log_archive_dest_n 其中n为1-5的整数，必需从低到高设置，下面举例说明：  
    log_archive_dest_1="LOCATION=/jia/arc MANDATORY REOPEN"  
    log_archive_dest_2="SERVICE=standby_db1 MANDATORY REOPEN=600"
    log_archive_dest_3="LOCATION=/jia/arc2 OPTIONAL" 
    location指的是本地目录。
    service是tnsname里指定的名称，可以实现连接到远程。
    MANDATORY 关键字说明联机日志文件必须要成功归档以后才能被覆盖。
    OPTIONAL 缺省为可选（OPTIONAL），即使归档没有成功也可以覆盖。
    在设置时应该至少有一个本地（LOCATION）强制（MANDATORY）归档目录。
    REOPEN 关键字说明如果归档不成功时系统要重新尝试归档，缺省每300秒尝试一次直到成功。
        reopen可以通过=n来指定尝试的时间间隔，如 log_archive_dest_2中的时间间隔为600秒，
        而log_archive_dest_1中的时间间隔为300 秒。
    alter system set log_archive_dest_1='location=/xxx/xxx/x/ mandatory reopen=500'; 
    
B: log_archive_dest和log_archive_duplex_dest 这个参数与A是冲突的，只能设置本地目录，
    log_archive_dest可以单独存在，但是log_archive_duplex_dest必须依附于log_archive_dest
    log_archive_dest这是一个静态参数，设置的时候要带scope=spfile
    sys@JSL> alter system set log_archive_dest='';
    alter system set log_archive_dest=''
    *
    ERROR at line 1:
    ORA-02097: parameter cannot be modified because specified value is invalid
    ORA-16018: cannot use LOG_ARCHIVE_DEST with LOG_ARCHIVE_DEST_n or DB_RECOVERY_FILE_DEST
    带上scope=spfile参数就不会有上面的报错信息了
    sys@JSL> alter system set log_archive_dest='/jia/arc' scope=spfile;        
    System altered.
    如果使用这种方式，则log_archive_dest是强制（MANDATORY）归档目录，而log_archive_duplex_dest为可选（OPTIONAL）目录。

C: db_recovery_file_dest 这个参数还有个辅助参数db_recovery_file_dest_size控制大小。

那么着三种方式是否可以同时设置，以及那个方式设置的生效呢？
我们用下图示加以说明：
A(n) B(y) C(y) -> oracle同时归档日志到log_archive_dest和db_recovery_file_dest指定的目录，C采用omf管理管理方式
A(n) B(y) C(n) -> 1份归档B
A(y) B(y) C(n) -> error A与B是冲突的
A(y) B(n) C(y) -> 1份归档A，如果设置了A，C就失效了。

在10g跟开归档跟flashback_on状态无关，但是反过来开数据库闪回功能必须先开归档。设置log_archive_dest以后重启数据库才生效。
 		 		 		

------------

ORACLE里锁有以下几种模式,v$locked_object,locked_mode 
2010-2-9 11:58:00 
3
推荐ORACLE里锁有以下几种模式:
0：none
1：null 空
2：Row-S 行共享(RS)：共享表锁，sub share 
3：Row-X 行独占(RX)：用于行的修改，sub exclusive 
4：Share 共享锁(S)：阻止其他DML操作，share
5：S/Row-X 共享行独占(SRX)：阻止其他事务操作，share/sub exclusive 
6：exclusive 独占(X)：独立访问使用，exclusive

数字越大锁级别越高, 影响的操作越多。

1级锁有：Select，有时会在v$locked_object出现。
2级锁有：Select for update,Lock For Update,Lock Row Share 
select for update当对话使用for update子串打开一个游标时，所有返回集中的数据行都将处于行级(Row-X)独占式锁定，其他对象只能查询这些数据行，不能进行update、delete或select for update操作。
3级锁有：Insert, Update, Delete, Lock Row Exclusive
没有commit之前插入同样的一条记录会没有反应, 因为后一个3的锁会一直等待上一个3的锁, 我们必须释放掉上一个才能继续工作。
4级锁有：Create Index, Lock Share
locked_mode为2,3,4不影响DML(insert,delete,update,select)操作, 但DDL(alter,drop等)操作会提示ora-00054错误。
00054, 00000, "resource busy and acquire with NOWAIT specified"
// *Cause: Resource interested is busy.
// *Action: Retry if necessary.
5级锁有：Lock Share Row Exclusive 
具体来讲有主外键约束时update / delete ... ; 可能会产生4,5的锁。
6级锁有：Alter table, Drop table, Drop Index, Truncate table, Lock Exclusive

以DBA角色, 查看当前数据库里锁的情况可以用如下SQL语句：

col owner for a12
col object_name for a16
select b.owner,b.object_name,l.session_id,l.locked_mode
from v$locked_object l, dba_objects b
where b.object_id=l.object_id
/

select t2.username,t2.sid,t2.serial#,t2.logon_time 
from v$locked_object t1,v$session t2 
where t1.session_id=t2.sid order by t2.logon_time
/

如果有长期出现的一列，可能是没有释放的锁。我们可以用下面SQL语句杀掉长期没有释放非正常的锁：

alter system kill session 'sid,serial#';

如果出现了锁的问题, 某个DML操作可能等待很久没有反应。

当你采用的是直接连接数据库的方式，也不要用OS系统命令 $kill process_num 或者 $kill -9 process_num来终止用户连接，因为一个用户进程可能产生一个以上的锁, 杀OS进程并不能彻底清除锁的问题。 
 

------------

1，查询锁的语句

select sql_text
  from v$sql
 where hash_value in
       (select sql_hash_value
          from v$session
         where sid in (select session_id from v$locked_object))
         
2，查看锁的类型

  select   s.username,   
  decode(l.type,'TM','TABLE   LOCK',   
                              'TX','ROW   LOCK',   
                              NULL)   LOCK_LEVEL,   
  o.owner,o.object_name,o.object_type,   
  s.sid,s.serial#,s.terminal,s.machine,s.program,s.osuser   
  from   v$session   s,v$lock   l,dba_objects   o   
  where   s.sid=l.sid   
  and   o.object_id=l.id1   
  and   s.username   is   not   null   
  
 3，查看正在运行的job
   
    select * from dba_jobs_running;
    
 4,杀死进程
 
  alter system kill session '29,57107';-------------
  EXEC sys.kill_session('11','1337');------------------


------------

日志路径
WebLogic10.3.2解决方案
weblogic

------------

/opt/Oracle/Middleware/user_projects/domains/base_domain/bin

------------

1、将web.xml中
<context-param>
<param-name>contextConfigLocation</param-name>
<param-value>
/WEB-INF/classes/spring/applicationContext.xml
</param-value>
</context-param>
spring配置文件改为绝对路径，并删除注释掉的其他路径

2、将antlr-2.7.6.jar包，放到weblogic用的jdk的jre的扩展包中
相对路径：${JAVA_HOME}/jre/lib/ext/
其中${JAVA_HOME}为weblogic所用的jdk目录

3、修改weblogic.xml
将文件中下面代码注释掉

            <package-name>antlr.*</package-name>
            <package-name>org.apache.commons.io.*</package-name>
            <package-name>com.ctc.wstx.*</package-name>
        </prefer-application-packages>


------------

查看进程
启动和停止
10.3.2 版本解决方案

------------

1、结合netstat -ntlp看端口和PID
2、startWeblogic.sh里面有个SERVER_NAME="Name1"可以设置名字的
3、ps -ef |grep weblogic
-Dweblogic.Name=${SERVER_NAME}

------------


启动和停止weblogic
/opt/Oracle/Middleware/user_projects/domains/base_domain/bin
张巧军 15:40:30
启动的时候：nohup ./startWeblogic.sh &

------------

1、将web.xml中
<context-param>
<param-name>contextConfigLocation</param-name>
<param-value>
/WEB-INF/classes/spring/applicationContext.xml
</param-value>
</context-param>
spring配置文件改为绝对路径，并删除注释掉的其他路径

2、将antlr-2.7.6.jar包，放到weblogic用的jdk的jre的扩展包中
相对路径：${JAVA_HOME}/jre/lib/ext/
其中${JAVA_HOME}为weblogic所用的jdk目录

3、修改weblogic.xml
将文件中下面代码注释掉

            <package-name>antlr.*</package-name>
            <package-name>org.apache.commons.io.*</package-name>
            <package-name>com.ctc.wstx.*</package-name>
        </prefer-application-packages>


------------

db2权限
检查db2
db2常用命令
db2大部分命令汇总

------------

[root@TSP-VM-246 ~]# usermod -G  db2iadm1 db2user
[root@TSP-VM-246 ~]# id db2user
uid=505(db2user) gid=506(db2user) groups=506(db2user),503(db2iadm1)







------------

solution:
1、Check whether firewall is stopped.
chkconfig iptables off  永久性关闭
service iptables stop  重启主机后失效
2、Check whether DB2 is started.
db2 list db directory
3、Check the DB2 listening port
db2 get dbm cfg |grep SVCENAME,查看TCP/IP服务名称和/etc/services中定义的db2服务名称是否匹配
4、Check the DB2COMM
db2set -all 检查DB2COMM是否是TCPIP

------------

启动db2：db2start
停止db2：db2stop
查看db2是否启动：db2
查看db2通信模式：db2set -all ： ##如果没有db2comm或者db2comm不等于tcpip，按照下面命令添加：db2set db2comm=tcpip
查看用户是否存在 ：id vpetl

创建用户（root权限）：useradd vpetl -m：  创建密码：passwd vpetl

--以下是db2inst1用户操作
--创建数据库所在的文件夹
mkdir /data/db2data/db2vpetl
--创建数据库
db2 "create database vpetldb AUTOMATIC STORAGE YES ON /data/db2data/db2vpetl using codeset UTF-8 territory CN PAGESIZE 32768"

--连接到数据库 db2 connect to vpetldb user vpetl using password
--创建BUFFERPOOL
db2 "CREATE BUFFERPOOL bp16k IMMEDIATE SIZE 6400 PAGESIZE 16K"
--创建系统临时表空间
db2 "CREATE SYSTEM TEMPORARY TABLESPACE TBS_TMP_16K PAGESIZE 16K MANAGED BY DATABASE USING (FILE '/data/db2data/vpetldb/tbs_tmp16k_01.dat' 5120M) EXTENTSIZE 8 BUFFERPOOL bp16k NO FILE SYSTEM CACHING DROPPED TABLE RECOVERY OFF"
--创建数据表空间的语句
db2 "CREATE REGULAR TABLESPACE TBS_DATA_16K PAGESIZE 16K MANAGED BY DATABASE USING (FILE '/data/db2data/vpetldb/tbs_data_16K_01.dat' 5120M, FILE '/data/db2data/vpetldb/tbs_data_16K_02.dat' 5120M) EXTENTSIZE 8 BUFFERPOOL bp16k NO FILE SYSTEM CACHING"
--创建索引表空间的语句
db2 "CREATE REGULAR TABLESPACE TBS_IDX_16K IN DATABASE PARTITION GROUP IBMDEFAULTGROUP PAGESIZE 16K MANAGED BY DATABASE USING (FILE '/data/db2data/vpetldb/tbs_idx_16K.dat' 2048M) EXTENTSIZE 8 BUFFERPOOL bp16k NO FILE SYSTEM CACHING"
--赋予vpetl用户对数据库vpetldb的操作权限
db2 "grant dbadm on database to user vpetl"
--创建schema
db2 "create schema etladmin authorization vpetl"
-----------------------------------------------------------------------------------------------------------------------------------
首先检查db2实例（客户端）字符集是否是utf-8：
命令：
db2set -all|grep DB2CODEPAGE
如果输出不是：[i] DB2CODEPAGE=1208，则说明客户端的编码不是utf-8.需要进行如下操作：
db2 connect to vpetldb
db2set db2codepage=1208
db2 terminate

----------------------导入脚本--------------------------
db2 -svtf 03.etl-table.sql


db2不支持的数据类型 varchar2 ，number


-------------------------------------------------------------------------

查看active的数据库：db2 list active databases 







------------

DB2相关数据库命令

1.数据库实例的启动
首先要启动数据库的实例,即切换到db2inst1用户(注:db2inst1用户为当前数据库的实例),然后执行db2start启动数据库的实例
[root@localhost instance]# su - db2inst1
[db2inst1@localhost ~]$ db2start
SQL1063N  DB2START processing was successful.
[db2inst1@localhost ~]$ 


2.数据库实例的关闭
首先在db2inst1用户下强制关闭实例上的所有应用程序,然后再关闭数据库实例
[db2inst1@localhost ~]$ db2 force application all
DB20000I  The FORCE APPLICATION command completed successfully.
DB21024I  This command is asynchronous and may not be effective immediately.

[db2inst1@localhost ~]$ db2stop
SQL1064N  DB2STOP processing was successful.
[db2inst1@localhost ~]$ 

强制停止
[db2inst1@localhost DB2]$ db2stop force
SQL1064N  DB2STOP processing was successful.
[db2inst1@localhost DB2]$

3.显示所有的实例
[db2inst1@localhost ~]$ db2ilist
db2inst1
[db2inst1@localhost ~]$

4.显示当前的实例
[db2inst1@localhost ~]$ db2 get instance

 The current database manager instance is:  db2inst1

[db2inst1@localhost ~]$ 

5.删除一个实例(注:需切换到root用户权限下)
[root@localhost ~]# cd /opt/ibm/db2/V9.7/instance
[root@localhost instance]# pwd
/opt/ibm/db2/V9.7/instance
[root@localhost instance]# ./db2idrop db2inst1
DBI1070I  Program db2idrop completed successfully.


[root@localhost instance]# 

6.列出当前实例中有哪些数据库
[root@localhost instance]# su - db2inst1
[db2inst1@localhost ~]$ db2 list db directory
SQL1031N  The database directory cannot be found on the indicated file system. 

SQLSTATE=58031
[db2inst1@localhost ~]$
注:上面信息说明实例中没有数据库

7.创建数据库
[root@localhost instance]# su - db2inst1
[db2inst1@localhost ~]$ db2 create database test
SQL1032N  No start database manager command was issued.  SQLSTATE=57019
[db2inst1@localhost ~]$
[db2inst1@localhost ~]$ db2start
SQL5043N  Support for one or more communications protocols failed to start successfully. However, core database manager functionality started successfully.
[db2inst1@localhost ~]$ db2 create database test
DB20000I  The CREATE DATABASE command completed successfully.
[db2inst1@localhost ~]$ db2 list db directory

 System Database Directory

 Number of entries in the directory = 1

Database 1 entry:

 Database alias                       = TEST
 Database name                        = TEST
 Local database directory             = /home/db2inst1
 Database release level               = d.00
 Comment                              =
 Directory entry type                 = Indirect
 Catalog database partition number    = 0
 Alternate server hostname            =
 Alternate server port number         =

[db2inst1@localhost ~]$
注:上面通过创建一个test的数据库,并说明了创建数据库时,要先启动数据库,然后创建数据库test成功后并列出了当前实例中的所有数据库,只存在数据库test

8.连接数据库
[db2inst1@localhost ~]$ db2 connect to test

   Database Connection Information

 Database server        = DB2/LINUX 9.7.1
 SQL authorization ID   = DB2INST1
 Local database alias   = TEST

[db2inst1@localhost ~]$ 

注:用密码情况下格式[db2inst1@localhost ~]$ db2 connect to test user username using password

db2 connect to <database> user <username> using  <password>

9.查看表的空间
[db2inst1@localhost ~]$ db2 list tablespaces [ show detail ]

           Tablespaces for Current Database

 Tablespace ID                        = 0
 Name                                 = SYSCATSPACE
 Type                                 = Database managed space
 Contents                             = All permanent data. Regular table space.
 State                                = 0x0000
   Detailed explanation:
     Normal

 Tablespace ID                        = 1
 Name                                 = TEMPSPACE1
 Type                                 = System managed space
 Contents                             = System Temporary data
 State                                = 0x0000
   Detailed explanation:
     Normal

 Tablespace ID                        = 2
 Name                                 = USERSPACE1
 Type                                 = Database managed space
 Contents                             = All permanent data. Large table space.
 State                                = 0x0000
   Detailed explanation:
     Normal

[db2inst1@localhost ~]$
注: show detail为可选项,显示更详细信息

或者 db2pd -tablespaces -db 数据库名
[db2inst1@localhost ~]$ db2pd -tablespaces -db test

Database Partition 0 -- Database TEST -- Active -- Up 0 days 00:03:11

Tablespace Configuration:
Address    Id    Type Content PageSz ExtentSz Auto Prefetch BufID BufIDDisk FSC NumCntrs MaxStripe  LastConsecPg Name
0x9DC2A060 0     DMS  Regular 4096   4        Yes  4        1     1         Off 1        0          3            SYSCATSPACE
0x9DC2B4B0 1     SMS  SysTmp  4096   32       Yes  32       1     1         On  1        0          31           TEMPSPACE1
0x9DC30940 2     DMS  Large   4096   32       Yes  32       1     1         Off 1        0          31           USERSPACE1

Tablespace Statistics:
Address    Id    TotalPgs   UsablePgs  UsedPgs    PndFreePgs FreePgs    HWM        Max HWM    State      MinRecTime NQuiescers PathsDropped
0x9DC2A060 0     24576      24572      18712      0          5860       18712      18712      0x00000000 0          0          No         
0x9DC2B4B0 1     1          1          1          0          0          0          0          0x00000000 0          0          No         
0x9DC30940 2     8192       8160       96         0          8064       96         96         0x00000000 0          0          No         

Tablespace Autoresize Statistics:
Address    Id    AS  AR  InitSize    IncSize     IIP MaxSize     LastResize                 LRF
0x9DC2A060 0     Yes Yes 33554432    -1          No  None        None                       No 
0x9DC2B4B0 1     Yes No  0           0           No  0                    None                       No 
0x9DC30940 2     Yes Yes 33554432    -1          No  None        None                       No 

Containers:
Address    TspId ContainNum Type    TotalPgs   UseablePgs PathID     StripeSet  Container
0x9B218F00 0     0          File    24576      24572      0          0          /home/db2inst1/db2inst1/NODE0000/TEST/T0000000/C0000000.CAT
0x9B219120 1     0          Path    1          1          0          0          /home/db2inst1/db2inst1/NODE0000/TEST/T0000001/C0000000.TMP
0x9B219390 2     0          File    8192       8160       0          0          /home/db2inst1/db2inst1/NODE0000/TEST/T0000002/C0000000.LRG
[db2inst1@localhost ~]$ 

10.显示数据库里有哪些表
[db2inst1@localhost ~]$ db2 connect to test

   Database Connection Information

 Database server        = DB2/LINUX 9.7.1
 SQL authorization ID   = DB2INST1
 Local database alias   = TEST

[db2inst1@localhost ~]$  db2 list tables

Table/View                      Schema          Type  Creation time            
------------------------------- --------------- ----- --------------------------

  0 record(s) selected.

[db2inst1@localhost ~]$ 

注:上面信息说明数据库test中还没有表

------------

常用命令
设置引擎
常用命令
设置编码格式
sql
索引规则

------------

命令

------------

1、连接Mysql
格式： mysql -h主机地址 -u用户名 －p用户密码

1、连接到本机上的MYSQL。
首先打开DOS窗口，然后进入目录mysql\bin，再键入命令mysql -u root -p，回车后提示你输密码.注意用户名前可以有空格也可以没有空格，但是密码前必须没有空格，否则让你重新输入密码。

如果刚安装好MYSQL，超级用户root是没有密码的，故直接回车即可进入到MYSQL中了，MYSQL的提示符是： mysql>

2、连接到远程主机上的MYSQL。假设远程主机的IP为：110.110.110.110，用户名为root,密码为abcd123。则键入以下命令：
    mysql -h110.110.110.110 -u root -p 123;（注:u与root之间可以不用加空格，其它也一样）

3、退出MYSQL命令： exit （回车）
 
2、修改密码
格式：mysqladmin -u用户名 -p旧密码 password 新密码

1、给root加个密码ab12。
首先在DOS下进入目录mysql\bin，然后键入以下命令
    mysqladmin -u root -password ab12
注：因为开始时root没有密码，所以-p旧密码一项就可以省略了。

2、再将root的密码改为djg345。
    mysqladmin -u root -p ab12 password djg345
3、增加新用户
注意：和上面不同，下面的因为是MYSQL环境中的命令，所以后面都带一个分号作为命令结束符

格式：grant select on 数据库.* to 用户名@登录主机 identified by “密码”

1、增加一个用户test1密码为abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。首先用root用户连入MYSQL，然后键入以下命令：
    grant select,insert,update,delete on *.* to test1@localhost  Identified by 'test';

但增加的用户是十分危险的，你想如某个人知道test1的密码，那么他就可以在internet上的任何一台电脑上登录你的mysql数据库并对你的数据可以为所欲为了，解决办法见2。

2、增加一个用户test2密码为abc,让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机），这样用户即使用知道test2的密码，他也无法从internet上直接访问数据库，只能通过MYSQL主机上的web页来访问了。
    grant select,insert,update,delete on mydb.* to [email=test2@localhost]test2@localhost[/email] identified by “abc”;

如果你不想test2有密码，可以再打一个命令将密码消掉。
    grant select,insert,update,delete on mydb.* to [email=test2@localhost]test2@localhost[/email] identified by “”;
 
4.1 创建数据库
注意：创建数据库之前要先连接Mysql服务器

命令：create database <数据库名>

例1：建立一个名为xhkdb的数据库
   mysql> create database xhkdb;

例2：创建数据库并分配用户

①CREATE DATABASE 数据库名;

②GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,ALTER ON 数据库名.* TO 数据库名@localhost IDENTIFIED BY '密码';

③SET PASSWORD FOR '数据库名'@'localhost' = OLD_PASSWORD('密码');

依次执行3个命令完成数据库创建。注意：中文 “密码”和“数据库”是户自己需要设置的。
4.2 显示数据库
命令：show databases （注意：最后有个s）
mysql> show databases;

注意：为了不再显示的时候乱码，要修改数据库默认编码。以下以GBK编码页面为例进行说明：

1、修改MYSQL的配置文件：my.ini里面修改default-character-set=gbk
2、代码运行时修改：
   ①Java代码：jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=gbk
   ②PHP代码：header("Content-Type:text/html;charset=gb2312");
   ③C语言代码：int mysql_set_character_set( MYSQL * mysql, char * csname)；
该函数用于为当前连接设置默认的字符集。字符串csname指定了1个有效的字符集名称。连接校对成为字符集的默认校对。该函数的工作方式与SET NAMES语句类似，但它还能设置mysql- > charset的值，从而影响了由mysql_real_escape_string() 设置的字符集。
4.3 删除数据库
命令：drop database <数据库名>
例如：删除名为 xhkdb的数据库
mysql> drop database xhkdb;

例子1：删除一个已经确定存在的数据库
   mysql> drop database drop_database;
   Query OK, 0 rows affected (0.00 sec)

例子2：删除一个不确定存在的数据库
   mysql> drop database drop_database;
   ERROR 1008 (HY000): Can't drop database 'drop_database'; database doesn't exist
      //发生错误，不能删除'drop_database'数据库，该数据库不存在。
   mysql> drop database if exists drop_database;
   Query OK, 0 rows affected, 1 warning (0.00 sec)//产生一个警告说明此数据库不存在
   mysql> create database drop_database;
   Query OK, 1 row affected (0.00 sec)
   mysql> drop database if exists drop_database;//if exists 判断数据库是否存在，不存在也不产生错误
   Query OK, 0 rows affected (0.00 sec)
4.4 连接数据库
命令： use <数据库名>

例如：如果xhkdb数据库存在，尝试存取它：
   mysql> use xhkdb;
屏幕提示：Database changed

use 语句可以通告MySQL把db_name数据库作为默认（当前）数据库使用，用于后续语句。该数据库保持为默认数据库，直到语段的结尾，或者直到发布一个不同的USE语句：
   mysql> USE db1;
   mysql> SELECT COUNT(*) FROM mytable;   # selects from db1.mytable
   mysql> USE db2;
   mysql> SELECT COUNT(*) FROM mytable;   # selects from db2.mytable

使用USE语句为一个特定的当前的数据库做标记，不会阻碍您访问其它数据库中的表。下面的例子可以从db1数据库访问作者表，并从db2数据库访问编辑表：
   mysql> USE db1;
   mysql> SELECT author_name,editor_name FROM author,db2.editor
       ->        WHERE author.editor_id = db2.editor.editor_id;

USE语句被设立出来，用于与Sybase相兼容。

有些网友问到，连接以后怎么退出。其实，不用退出来，use 数据库后，使用show databases就能查询所有数据库，如果想跳到其他数据库，用
   use 其他数据库名字
就可以了。
4.5 当前选择的数据库
命令：mysql> select database();

MySQL中SELECT命令类似于其他编程语言里的print或者write，你可以用它来显示一个字符串、数字、数学表达式的结果等等。如何使用MySQL中SELECT命令的特殊功能？

1.显示MYSQL的版本
mysql> select version(); 
+-----------------------+ 
| version()             | 
+-----------------------+ 
| 6.0.4-alpha-community | 
+-----------------------+ 
1 row in set (0.02 sec) 

2. 显示当前时间
mysql> select now(); 
+---------------------+ 
| now()               | 
+---------------------+ 
| 2009-09-15 22:35:32 | 
+---------------------+ 
1 row in set (0.04 sec) 

3. 显示年月日
SELECT DAYOFMONTH(CURRENT_DATE); 
+--------------------------+ 
| DAYOFMONTH(CURRENT_DATE) | 
+--------------------------+ 
|                       15 | 
+--------------------------+ 
1 row in set (0.01 sec) 
  
SELECT MONTH(CURRENT_DATE); 
+---------------------+ 
| MONTH(CURRENT_DATE) | 
+---------------------+ 
|                   9 | 
+---------------------+ 
1 row in set (0.00 sec) 
  
SELECT YEAR(CURRENT_DATE); 
+--------------------+ 
| YEAR(CURRENT_DATE) | 
+--------------------+ 
|               2009 | 
+--------------------+ 
1 row in set (0.00 sec) 

4. 显示字符串
mysql> SELECT "welecome to my blog!"; 
+----------------------+ 
| welecome to my blog! | 
+----------------------+ 
| welecome to my blog! | 
+----------------------+ 
1 row in set (0.00 sec) 

5. 当计算器用
select ((4 * 4) / 10 ) + 25; 
+----------------------+ 
| ((4 * 4) / 10 ) + 25 | 
+----------------------+ 
|                26.60 | 
+----------------------+ 
1 row in set (0.00 sec) 

6. 串接字符串
select CONCAT(f_name, " ", l_name) 
AS Name 
from employee_data 
where title = 'Marketing Executive'; 
+---------------+ 
| Name          | 
+---------------+ 
| Monica Sehgal | 
| Hal Simlai    | 
| Joseph Irvine | 
+---------------+ 
3 rows in set (0.00 sec) 
注意：这里用到CONCAT()函数，用来把字符串串接起来。另外，我们还用到以前学到的AS给结果列'CONCAT(f_name, " ", l_name)'起了个假名。
5.1 创建数据表
命令：create table <表名> ( <字段名1> <类型1> [,..<字段名n> <类型n>]);

例如，建立一个名为MyClass的表，
字段名	数字类型	数据宽度	是否为空	是否主键	自动增加	默认值
id	int	4	否	primary key	auto_increment	 
name	char	20	否	 	 	 
sex	int	4	否	 	 	0
degree	double	16	是	 	 	 
mysql> create table MyClass(
> id int(4) not null primary key auto_increment,
> name char(20) not null,
> sex int(4) not null default '0',
> degree double(16,2));
5.3 删除数据表
命令：drop table <表名>

例如：删除表名为 MyClass 的表
   mysql> drop table MyClass;

DROP TABLE用于取消一个或多个表。您必须有每个表的DROP权限。所有的表数据和表定义会被取消，所以使用本语句要小心！

注意：对于一个带分区的表，DROP TABLE会永久性地取消表定义，取消各分区，并取消储存在这些分区中的所有数据。DROP TABLE还会取消与被取消的表有关联的分区定义（.par）文件。

对与不存在的表，使用IF EXISTS用于防止错误发生。当使用IF EXISTS时，对于每个不存在的表，会生成一个NOTE。

RESTRICT和CASCADE可以使分区更容易。目前，RESTRICT和CASCADE不起作用。
5.4 表插入数据
命令：insert into <表名> [( <字段名1>[,..<字段名n > ])] values ( 值1 )[, ( 值n )]

例如：往表 MyClass中插入二条记录, 这二条记录表示：编号为1的名为Tom的成绩为96.45, 编号为2 的名为Joan 的成绩为82.99， 编号为3 的名为Wang 的成绩为96.5。
   mysql> insert into MyClass values(1,'Tom',96.45),(2,'Joan',82.99), (2,'Wang', 96.59);

注意：insert into每次只能向表中插入一条记录。
5.5 查询表中的数据
1)、查询所有行
命令： select <字段1，字段2，...> from < 表名 > where < 表达式 >
例如：查看表 MyClass 中所有数据
   mysql> select * from MyClass;

2）、查询前几行数据
例如：查看表 MyClass 中前2行数据
mysql> select * from MyClass order by id limit 0,2;

select一般配合where使用，以查询更精确更复杂的数据。
5.6 删除表中数据
 
 
 
命令：delete from 表名 where 表达式

例如：删除表 MyClass中编号为1 的记录
mysql> delete from MyClass where id=1;

下面是一个删除数据前后表的对比。
FirstName	LastName	Age
Peter	Griffin	35
Glenn	Quagmire	33
下面以PHP代码为例删除 "Persons" 表中所有 LastName='Griffin' 的记录：
<?php 
   $con = mysql_connect("localhost","peter","abc123"); 
   if (!$con) 
   {
      die('Could not connect: ' . mysql_error()); 
   } 
   mysql_select_db("my_db", $con); 
   mysql_query("DELETE FROM Persons WHERE LastName='Griffin'"); mysql_close($con); 
?>
在这次删除之后，表是这样的：
FirstName	LastName	Age
Glenn	Quagmire	33

5.7 修改表中数据
语法：update 表名 set 字段=新值,… where 条件
   mysql> update MyClass set name='Mary' where id=1;

例子1：单表的MySQL UPDATE语句：
   UPDATE [LOW_PRIORITY] [IGNORE] tbl_name SET col_name1=expr1 [, col_name2=expr2 ...] [WHERE where_definition] [ORDER BY ...] [LIMIT row_count]

例子2：多表的UPDATE语句：
UPDATE [LOW_PRIORITY] [IGNORE] table_references SET col_name1=expr1 [, col_name2=expr2 ...] [WHERE where_definition]

UPDATE语法可以用新值更新原有表行中的各列。SET子句指示要修改哪些列和要给予哪些值。WHERE子句指定应更新哪些行。如果没有WHERE子句，则更新所有的行。如果指定了ORDER BY子句，则按照被指定的顺序对行进行更新。LIMIT子句用于给定一个限值，限制可以被更新的行的数目。
 
5.8 增加字段
命令：alter table 表名 add字段 类型 其他;
例如：在表MyClass中添加了一个字段passtest，类型为int(4)，默认值为0
   mysql> alter table MyClass add passtest int(4) default '0'

加索引
   mysql> alter table 表名 add index 索引名 (字段名1[，字段名2 …]);
例子： mysql> alter table employee add index emp_name (name);

加主关键字的索引
  mysql> alter table 表名 add primary key (字段名);
例子： mysql> alter table employee add primary key(id);

加唯一限制条件的索引
   mysql> alter table 表名 add unique 索引名 (字段名);
例子： mysql> alter table employee add unique emp_name2(cardnumber);

删除某个索引
   mysql> alter table 表名 drop index 索引名;
例子： mysql>alter table employee drop index emp_name;

增加字段：
mysql> ALTER TABLE table_name ADD field_name field_type;

修改原字段名称及类型：
mysql> ALTER TABLE table_name CHANGE old_field_name new_field_name field_type;

删除字段：
MySQL ALTER TABLE table_name DROP field_name;
5.9 修改表名
命令：rename table 原表名 to 新表名;

例如：在表MyClass名字更改为YouClass
   mysql> rename table MyClass to YouClass;

当你执行 RENAME 时，你不能有任何锁定的表或活动的事务。你同样也必须有对原初表的 ALTER 和 DROP 权限，以及对新表的 CREATE 和 INSERT 权限。

如果在多表更名中，MySQL 遭遇到任何错误，它将对所有被更名的表进行倒退更名，将每件事物退回到最初状态。

RENAME TABLE 在 MySQL 3.23.23 中被加入。
6、备份数据库
命令在DOS的[url=file://\\mysql\\bin]\\mysql\\bin[/url]目录下执行

1.导出整个数据库
导出文件默认是存在mysql\bin目录下
    mysqldump -u 用户名 -p 数据库名 > 导出的文件名
    mysqldump -u user_name -p123456 database_name > outfile_name.sql

2.导出一个表
    mysqldump -u 用户名 -p 数据库名 表名> 导出的文件名
    mysqldump -u user_name -p database_name table_name > outfile_name.sql

3.导出一个数据库结构
    mysqldump -u user_name -p -d –add-drop-table database_name > outfile_name.sql
    -d 没有数据 –add-drop-table 在每个create语句之前增加一个drop table

4.带语言参数导出
    mysqldump -uroot -p –default-character-set=latin1 –set-charset=gbk –skip-opt database_name > outfile_name.sql

例如，将aaa库备份到文件back_aaa中：
　　[root@test1 root]# cd　/home/data/mysql
　　[root@test1 mysql]# mysqldump -u root -p --opt aaa > back_aaa
7.1 一个建库和建表的实例1
drop database if exists school; //如果存在SCHOOL则删除
create database school; //建立库SCHOOL
use school; //打开库SCHOOL
create table teacher //建立表TEACHER
(
    id int(3) auto_increment not null primary key,
    name char(10) not null,
    address varchar(50) default ‘深圳’,
    year date
); //建表结束

//以下为插入字段
insert into teacher values(”,’allen’,'大连一中’,'1976-10-10′);
insert into teacher values(”,’jack’,'大连二中’,'1975-12-23′);

如果你在mysql提示符键入上面的命令也可以，但不方便调试。
1、你可以将以上命令原样写入一个文本文件中，假设为school.sql，然后复制到c:\\下，并在DOS状态进入目录[url=file://\\mysql\\bin]\\mysql\\bin[/url]，然后键入以下命令：
    mysql -uroot -p密码 < c:\\school.sql
如果成功，空出一行无任何显示；如有错误，会有提示。（以上命令已经调试，你只要将//的注释去掉即可使用）。

2、或者进入命令行后使用 mysql> source c:\\school.sql; 也可以将school.sql文件导入数据库中。

7.2 一个建库和建表的实例2
drop database if exists school; //如果存在SCHOOL则删除
create database school; //建立库SCHOOL
use school; //打开库SCHOOL
create table teacher //建立表TEACHER
(
    id int(3) auto_increment not null primary key,
    name char(10) not null,
    address varchar(50) default ''深圳'',
    year date
); //建表结束

//以下为插入字段
insert into teacher values('''',''glchengang'',''深圳一中'',''1976-10-10'');
insert into teacher values('''',''jack'',''深圳一中'',''1975-12-23'');

注：在建表中
1、将ID设为长度为3的数字字段:int(3)；并让它每个记录自动加一:auto_increment；并不能为空:not null；而且让他成为主字段primary key。

2、将NAME设为长度为10的字符字段

3、将ADDRESS设为长度50的字符字段，而且缺省值为深圳。

4、将YEAR设为日期字段。
 

------------

mysql默认是关闭InnoDB存储引擎的使用的，将InnoDB设置为默认的引擎如下。
1. 查看mysql存储引擎情况： mysql>show engines。 InnoDB | YES，说明此mysql数据库服务器支持InnoDB引擎。
2. 设置InnoDB为默认引擎：在配置文件my.ini中的 [mysqld] 下面加入default-storage-engine=INNODB
3. 重启mysql服务器
4. 登录mysql数据库，mysql>show engines。如果出现 InnoDB |DEFAULT，则表示设置InnoDB为默认引擎成功。

------------

查询默认引擎：show engines
查询数据库所有表：show tables
查询表字段：desc tablename
查询表索引：show index from tablename


show create table trade;

show PROCESSLIST;
select concat('KILL ',id,';') from information_schema.processlist where user='readonly';
kill id;
explain;

查看sort_buffer_size、join_buffer_zise
show variables like '%join_buffer_zise%';
set SESSION sort_buffer_size=7000000;对话级修改，重启后失效
set GLOBAL sort_buffer_size = 7000000;全局修改，修改后并不变化，重启后生效





------------

1:改变数据库的默认编码配置，在MYSQL的安装目录中，找到my.ini，修改默认编码为：default-character-set=utf8
2:建立数据库时，CREATE DATABASE ms_db CHARACTER SET utf8 COLLATE utf8_general_ci;
3:执行脚本：指定编码格式set names utf8(注意，不是UTF-8)
4:如果你采用的是外部接入的方式，在连接中确定请求的编码格式如：jdbc:mysql://localhost:3306/ms_db?useUnicode=true&characterEncoding=UTF-8(不要出现任何空格，否则出错)这个是我今天遇到的问题
希望这些能帮助大家解决乱码问题

------------

explain select p.id,t.orderId from paycheck as p ,trade as t where p.orderId = t.orderId ;


explain select p.id,t.orderId 
from paycheck as p ,trade as t 
where  t.requestTime >= '2016-3-1 00:00:00'  and t.requestTime <= '2016-3-18 23:59:59'  and p.orderId = t.orderId ;


explain select p.id,t.orderId from paycheck as p ,trade as t where p.orderId = t.orderId 
 and t.requestTime >= '2016-3-1 00:00:00' 
and t.requestTime <= '2016-3-18 23:59:59' 
order by t.requestTime desc ;


explain select a.username,b.cardNum from bankcard b,account  a where  a.externalid =b.externalid and a.type =b.accounttype  order by b.accounttype, b.externalid;


------------

索引设计

 一般针对数据分散的关键字进行建立索引，比如ID、login_id,user_id,等建立索引没有意义

 尽量使用短索引，一般对int、char/varchar、date/time 等类型的字段建立索引

 需要的时候建立联合索引，但是要注意查询SQL语句的编写谨慎建立 unique 类型的索引（唯一索引）

 一般建议每条记录最好有一个能快速定位的独一无二定位的唯一标示（索引）

 不要过度索引，单表建立的索引不要超过5个，否则更新索引将很耗时

 能够快速缩小结果集的 WHERE 条件写在前面，如果有恒量条件，也尽量放在前面

 尽量避免使用 GROUP BY、DISTINCT、OR、IN等语句的使用，避免使用联表查询和子查询，因为将使执行效率大大下降能够使用索引的字段尽量进行有效的合理排列，如果使用了联合索引，请注意提取字段的前后顺序

 如果where子句的查询条件里有不等号（wherecolumns !=…）,mysql将无法使用索引

 类似地，在SQL里使用了MySQL部分自带函数，索引将失效，同时将无法使用 MySQL的 QueryCache，比如 LEFT(),SUBSTR(), TO_DAYS()DATE_FORMAT(), 等，如果使用了 OR 或 IN，索引也将失效

 在join操作中，mysql只有在主键和外键的数据类型相同时才能使用索引

 针对索引字段使用 >, >=, =, <, <=, IF NULL和BETWEEN 将会使用索引，  如果对某个索引字段进行 LIKE 查询和REGEXP，mysql只有在搜索模板的第一个字符不是通配符的情况下才能使用索引。比如说，使用 LIKE  ‘%abc%’不能使用索引，使用 LIKE ‘abc%’ 将能够使用索引

 在orderby操作中，mysql只有在排序条件不是一个查询条件表达式的情况下才使用索引


------------

命令
红领巾
工作周报
红领巾
百度知道
支付流程
git
后台管理系统
支付系统
mysql

------------

1. 生成不含密码保护的私钥：
genrsa -out private-rsa.key 1024
genrsa -des3 -out private-rsa.key 1024
2. 生成证书
req -new -x509 -key private-rsa.key -days 750 -out public-rsa.cer
3. 生成Keystore
3.1. 生成PKCS12 格式Keystore
pkcs12 -export -name test-alias -in public-rsa.cer -inkey private-rsa.key -out pgbc-rsa.pfx



pfx格式证书转换为pem格式命令
pkcs12 -in 99bill-rsa.pfx -passin pass:生成证书设置的密码 -nodes -out 99bill-rsa.pem


网页：http://snowolf.iteye.com/blog/735294；

pkcs12 -export –in public-rsa.crt -inkey private-rsa.key -out keys/client1.pfx 



1. 生成不含密码保护的私钥：
genrsa -out private-rsa.key 1024
genrsa -des3 -out private-rsa.key 1024
2. 生成证书
req -new -x509 -key private-rsa.key -days 750 -out public-rsa.cer
3. 生成Keystore
3.1. 生成PKCS12 格式Keystore
pkcs12 -export -name test-alias -in public-rsa.cer -inkey private-rsa.key -out pk-rsa.pfx



1. 生成不含密码保护的私钥：
genrsa -out private-hkrt.key 1024
genrsa -des3 -out private-rsa.key 1024
2. 生成证书
req -new -x509 -key private-rsa.key -days 36500 -out public-hkrt.cer
3. 生成Keystore
3.1. 生成PKCS12 格式Keystore
pkcs12 -export -name  hkrt-alias  -in public-hkrt.cer -inkey private-rsa.key -out hkrt-rsa.pfx











------------

ssh -keygen  -t  rsa  -C  "gaodebao@honglingjin.xyz"

------------

20151113
20151120
20151207
20151214
20151221
20151228
20160104
20160111
20160118
20160125
20160202
20160215
20160222
20160229
20160307
20160315
20160321
20160328
20160405
20160411
20160418
20160425
20160503
20160509
20160516
20160523
20160530
20160606

------------

完成工作：
本周三下午、周四主要是完成了项目环境搭建：搭建了git环境和git命令的使用，之后将paycenter（支付系统）下载到本地并简单的编写了git管理paycenter项目流程说明（http://wiki.honglingjinclub.com/pages/viewpage.action?pageId=7667762），并简单的运行了下项目代码。
周五主要是配合逸民整理了下短息对接平台的业务流程的一些细化。
工作总结：
本周也没做什么实际化的东西，就简单的编写了paycenter项目搭建流程，会随着日后git使用的，逐渐将内容进行完善，以此来减少每次同事入职都不知该如何入手搭建使用git管理此系统尴尬局面。
但是因为之前没有用过git和wiki等工具，所以工作效率有些低，不过本周末会将这部分欠缺的充实下。
下周工作计划：
下周主要熟悉paycenter业务和代码的同时，尝试进行微信、支付宝对app支付业务的代码编写（暂定）。

------------

1、主要是熟悉了下paycenter项目设计（通过spring注解管理）和代码
2、编写调试wxApp，aliApp支付接口；
3、修改wxApp，aliApp支付相关接口内容
4、编写paycenter.sh来快速启动、停止、重启动paycenter.jar。
5、编写财务组入职引导
由于微信App当前没有支付权限，所以没有进行联调测试。

进行app相关接口联调
补全部分接口流程图






------------

1、修复更新账户覆盖原有信息bug；
2、增加部分绑卡信息校验，同一卡号不能被多次绑定。
3、协助解决提现明细显示内容错误、重复绑卡问题。
4、上线日终统计昨日账户总余额、提现情况、充值情况。
5、查找打款中出现;大额打款失败、卡bin信息查询失败、acc_nam参数不合等等多种错误类型原因，方便日后进行提现失败的后续处理。
6、梳理提现流程，减小对账误差，如：出现连连提现通知成功，但第二天退款的情况。
7、针对重要交互接口，添加必要日志输出，方便问题查找（持续优化）。

------------

1、重构短信发送代码，将原有的自定义国都发送变更为内部统一发送接口；
2、FMS-53 增加账户状态：增加账户冻结功能接口，针对提现进行账户冻结校验。
3、FMS-54 细化提现失败原因、FMS-55 提现打款预处理流程优化：
重构提现流程，针对特定失败类型（卡号错误，不支持银行、信用卡提现等错误类型），直接进行退款操作；针对特定类型的失败（网络问题、账户余额问题等等），进行review处理，进行后续提现失败重试或者是判断为失败处理；提现表中增加返回码、返回信息列，并将返回信息直接返回到各个端，方便失败原因查看。
4、配合用户端进行联调测试，并解决出现的部分bug。
5、解决支付系统参数注入int类型为空的时候报错。


------------

1、上线参数注入类型报错代码。
2、FMS-57：增加查询连连账户余额的功能
本功能主要是每天0时，定时执行连连余额查询任务，之后将连连余额查询入数据库。
3、FMS-59：定时提现网络异常导致报错
问题原因：没找到连连域名，之后返回结果为空导致。
解决办法：对于提现报错返回空增加必要校验，之后针对提现过程出现异常情况进行短信报警，如果是网络问题，发送给技术，如果是余额不足，发送给财务
4、FMS-60：优化跨域操作代码
针对测试环境和生成环境设置不同的域名校验规则，测试环境设置为所有请求都可以，生产环境设置为：http://b.honglingjinclub.com
5、FMS-61：交易密码优化
针对密码修改功能，新添加了密码校验和修改密码接口。
6、FMS-71：查找财务系统资金流动误差问题：
问题原因：账户出账和入账金额对不上，之后分析发现提现过程中由于并非实时成功或失败，出现隔天成功（周六日连连不处理提现）的情况，导致数据统计有问题
解决办法：针对提现处理中的，不在进行日统计，而是统计当前所有处理中的总金额。
 


------------

1、FMS-72：增加交易后余额字段
增加充值、提现后账户余额字段，之后在余额变更后将当前账户余额快照进行存储。
增加账户余额变更记录交易类型字段，将余额变更明细分类为：充值、提现、退款、手续费等类型。
2、FMS-73：退款过程中出现大量失败，并返回错误原因为空
问题原因：一个是因为之前小数点的取舍问题导致（用户端是向上取整，财务系统是向下取整），一个是因为退款id重复，导致数据库存储报错。
解决办法：之前的脏数据采用线下退款的形式进行。针对退款id重复的，进行异常捕获，之后返回信息“退款ID重复”错误。
3、优化dao层与server层捕获异常混乱问题，将dao层异常放到server层进行处理。


------------

1、解决定时任务执行异常问题：
第一步是从提现成功，但是没减少账户余额的账户中扣除了相应的金额，之后变更提现结果为成功，之后删除用户余额变更明细中错误的退款记录。
第二步是针对余额不足的，冻结其账户，之后从上月底发放兼职工资用户中扣除了一部分余额。
第三步是确认提现重复用户确实已经提现成功，之后线下追回。
2、编写红领巾钱包需要分析和解决文案。
3、开发红领巾钱包功能：
当前已经完成钱包支付、交易失败退款、通知流程。开发账户余额变更明细查询接口。
4、其他：
解决数据库save方法出现主键冲突问题；
在refund中增加resultTime字段；
增加注册账户和修改账户中电话号码校验；


1、增加余额变更明细中交易类型字段、交易类型id字段 
2、修改短信验证码提示信息 
3、修复提现账户余额不足code码为9104 
4、修复主键冲突导致返回model信息body为空问题 
5、整合所有的dao层save，使用BaseDao的save方法 
6、增加修改密码接口（添加密码校验和修改密码接口） 
7、增加校验短信验证码接口



------------



------------

1、 FMS-81：调整发送提现申请时间及范围
调整优化：每日10点将昨日24点前（之前是每天15点到第二天15点）的提现申请向连连发送打款请求。
2、FMS-82：调整statistics_info（提现数据汇总表）的统计维度及增加字段。
调整优化：针对有处理结果的（成功、失败），按天统计；针对处理中的，统计之前所有的记录。
可以满足以下对账原则：
一：当天成功金额等于连连账户实际日终对账总金额，也就是说成功金额是用来和连连对账的。
二：当天的账户余额+受理金额+处理中金额+成功金额 +成功手续费金额+充值受理金额 =  前天账户余额+受理金额+ 处理中金额+充值成功金额
3、FMS-84：代码风格优化
本次优化分为两部分：第一部分完成了代码注释部分添加，第二部分完成了配置文件统一化管理，解决代码风格不统一问题。




------------

1、FMS-85：解决退款插入数据库保存问题
退款接口报错原因为requestTime字段不能为空，经过问题原因查找，发现之前用户端是有传递requestTime字段（接口中没有强制要求传递此字段）的，所以能够正常运行。解决办法，如果用户端不传递此字段，支付系统将当前时间的时间戳作为退款请求时间。
2、FMS-85：增加app版本管理代码
本次主要是为了配合app版本升级过程中需要走不同的支付接口而增加了内部版本号概念，根据不同的版本走不同的代码分支
3、FMS-83：优化账户冻结、支付密码校验等接口
本次针对app1.2.4以上版本，提现过程中将直接返回提现结果信息，不再需要各个端自行处理返回信息
4、FMS-88：红领巾钱包统一化改造（后端），针对接口中所有的token失效，返回码code修改为401。
5、FMS-91：更改数据库update操作策略
部分接口是update操作，如果接口传递信息不全，但是没经过判断，会覆盖数据库原有数据；修改策略为先读取数据库中相关记录的数据，之后判断传递数据不为空的覆盖数据库数据，为空的列保持原有数据。
6、修改日志策略：
开发环境不再输出日志文件，测试、生产环境生成info、error日志（保留90天），在paycenter.jar文件同级路径下生成paycenter.log（保留45天）。
7、FMS-92：修复支付系统中提现错误数据
本次修复主要包含几部分：
提现记录成功，连连失败退款的：需要修改提现为失败、增加账户余额、修改余额变更明细表
提现记录失败、连连成功、已经追回多余打款：需要修改提现为成功、修改余额变更明细
提现记录失败、连连成功、暂时为追回款项：需要修改提现为成功、减少账户余额，修改余额变更明细。

8、其他：
解决代码优化后出现定时任务不执行问题，手动统计日对账数据并插入生产环境；
解决交易returnurl长度过长报错问题；
解决app老版本传递utm_Media参数为iPhone不符合新版本规范问题；
切换maven仓库为'http://211.157.150.132:8081/nexus/content/groups/public/'，升级SpringBoot版本为1.3.1.



------------

本周主要是编写部分翼支付开发代码


本年度未完成工作：
翼支付开发
钱包支付功能开发






------------

1、讨论了红领巾钱包支付相关需求，编写了红领巾钱包需求设计：http://wiki.honglingjinclub.com/pages/viewpage.action?pageId=9732190；
2、开发红领巾钱包功能：
一：调整账户注册和修改接口，在其中增加openid字段（用户端使用）。
二：针对web页面，重新规范接口形式为“/web”+原接口名称的形式。如原接口为“/account/accountInfo";那么web版本的接口就为“/web/account/accountInfo”。
三：增加红领巾支付相关接口：红领巾返赠金额获取接口、红领巾支付接口。
四：调整通知策略：如果是充值交易，不再进行通知（因为是支付系统通知支付系统）。
3、开发翼支付部分接口：本周终于联系到翼支付的技术人员，确定了翼支付相关接口，所以开发了部分公共内容，具体的请求参数还需要申请生产参数后进行补充。
4：FMS-94：改用common包的Utm对象
统计类改用common包中的Utm类，删除支付端的UtmQo和VersionUtils，废弃后端版本号

1、本周原本计划开发完成红领巾钱包部分，调试没问题在上线，但支付模板周五下午才搞定，之后又调试了下支付成功后返回支付成功或失败页面，所以开发有些滞后。
2、充值的返赠策略现在还没有，所以返赠部分现在默认是不返赠（或者说是返赠0元）。本部分内容等策略定好后在进行补充。



------------

1、上线红领巾钱包支付功能。
2、FMS-95：本地缓存改用reids
将支付密码错误次数和支付交易信息通过redis进行缓存。
3、FMS-98：解决定时任务同时运行出现重复提现问题。
本次修改，主要是通过sql的for  update锁定所有的满足条件记录，而不是只锁定执行单条提现的记录。 
4、翼支付功能开发：
本周主要调试了下单接口、获取公钥接口、生成web收银台url接口、支付通知接口、退款接口。但现在还差支付超时时间不起作用、手机号不可切换等几个细节参数需要和翼支付确认。

------------

1、FMS-100：核对兼职端与支付端充值数据
本次主要核对充值、提现、账户余额的金额信息，进行汇总
2、修复支付后台支付报错等问题：
支付后台多条件查询，后台报错、js日期显示错误、页面展示字体过小、部分页面样式不整齐
3、FMS-104：优化支付后台查询慢问题
问题原因：数据库中单表数据量比较大，并且是多表联合查询没有索引
解决办法：一、针对支付后充值、支付、提现、退款，增加查询时间段为最大31天限制，并且请求时间范围必填
二、针对数据库表，增加必要索引，提高查询效率
4、FMS-102：各端充值数据支持负数
充值金额不再限制为大于0.01，支持负数（主要是为了满足兼职端兼职工资调整中出现扣掉工资情况）

其他：
修改日统计数据执行时间为每天夜里0点执行。
修复解绑银行卡报错问题。



------------

1、FMS-109：优化设置密码和重置密码返回信息文案 
如果是设置密码返回设置支付密码成功，如果是重置支付密码，返回重置支付密码成功
2、FMS-107：将支付系统迁移到ali云
将测试环境（数据库、工程包等）从本地迁移到ali云。
3、FMS-108 ：更换新的红领巾支付页面 
测试使用新的红领巾支付密码输入页面
4、FMS-104 ：优化支付后台查询慢问题 
优化支付后台查询过慢问题，将查询条件从paycheck变更为trade表，查询结果集不变。
5、FMS-113：accountInfo中增加账户绑定银行卡数量字段
在查询用户信息过程中返回银行卡绑定张数。
6、翼支付优化开发：
问题原因：用户端订单号过短，不能满足翼支付订单号最少10位的问题。
解决办法：如果是翼支付，在支付订单报文订单号字段增加固定的“BESTPAY”前缀（支付端与翼支付交互过程），其余与用户端交互、支付端数据存储依然保持不变。
解决办法：添加后台系统用户登录界面，保证只有登录的账户可以进行相应的操作。
7、上线翼支付相关接口：
开发翼支付预支付接口、获取公钥接口、生成收银台url接口、退款接口、通知接口。
8、修复同步数据不正确、同步数据日志输出过多问题
问题原因：同步数据过程出现订单状态不更新。
解决办法：同步时间不在按天进行，而是从当前时间向前推两个小时，同步的时间范围为当前时间两个小时到当前时间的一个小时。减少同步数据输出日志，只保留重要日志和报错日志，同步成功日志不在输出。
9、开发支付后台单点登录页面
问题原因：在多个公司公用一个wifi热点的情况下，只判断ip信息，并不安全。
10、其他：
解决绑定银行卡出现银行卡已经被绑定错误
优化密码当天被锁定后的返回文案
解决翼支付通知成功后还会再次通知问题、优化翼支付customerId信息传递策略（之前是传递用户手机号，改为传递externalId+accountType，因为这个字段支付过程中就没什么实际作用）



------------

1、FMS-116 ：支付管理后台数据问题
修复：支付后台导出数据报错，支付后台统计数据报错。
2、FMS-123：支付端账户注册时未将手机号正常存储
问题原因：校验手机号规则时将“17”开始的判断为不符合手机号规范
解决办法：切换支付端自定义正则类为common包中正则类（此包中规则包含17号段）
3、FMS-122：支付后台中“翼支付”相关未生效
解决办法：放开翼支付数据统计展示，不再展示为“-”。
4、FMS-128：增加支付系统支付流程报警机制
说明：针对部分支付流程、通知流程等增加报警机制，如果正常业务流程报错，发短信进行实时通知。
5、FMS-129：增加连连支付后台Post请求跳转页面
说明：针对鑫哥h5页面增加连连前台通知跳转流程，先将支付结果前台通知到支付系统，由支付系统在跳转到h5通知页面。
6、FMS-124：支付数据统计优化
说明：支付数据统计更名为收支数据统计；查询条件日期最大可查询31天数据；增加收支合计、订单金额合计、成本金额合计、优惠金额合计；

其他：
1、优化paycheck同步数据，只同步成功订单数据 ，充值类业务不需要同步数据。
2、优化h5接口只接受token请求 。
3、将同步订单定时任务用jdk1.8的LocalDateTime 类实现
4、解决后台退款列表查询报错。
5、修复银行卡列表返回body为“”（空字符串问题）。







------------

1、FMS-137：修改/找回支付密码后重新记录密码次数
说明：修改或者是重置密码后，将redis缓存中的相应用户的密码错误次数清空，重新进行计数。
2、FMS-135：红领巾钱包支付返回页面url变更
说明：如果是红领巾支付的情况下，不直接返回支付url，而是先将token和payurl通过get请求发送到h5页面，之后由h5页面跳转到实际支付页面
3、FMS-127：统计城市收支数据
说明：
本需求首先是需要每天10点将前一天的收支统计数据生成xls表格，之后通过邮件的形式发送给财务等邮箱。
其次需要将3月1日开始的所有城市字段同步到paycheck表，并将3月1号到20日的日收支统计数据通过邮件的形式发送给财务。
4、FMS-136 ：增加refund关联表来满足正常的退款流程。
本次重构退款流程后，如果业务端发起退款失败后，同一个退款id可以在各个业务端再次发起退款。
除此之外，如果是业务端发起退款后，退款失败的，可以通过线下的形式来手动发起退款，之后将同一个退款id的通知返回给业务端。
 5、FMS-140 ： 查找并解决，不同时间统计数据不一致问题。
问题原因：3月21日、3月25日统计3月20城市退款微信金额不一致。
问题原因查找：因为3月20日退款一笔订单，而21统计数据的时候，还并没有同步相应的城市信息（3月23日才同步完成），所以漏统计了一笔。
解决办法：重新统计了下3月21-3月24日信息。
6、FMS-119：支付端与用户端订单状态不一致
问题原因：1、订单为实时同步当前时间到之前一天的数据，之后没有更新操作。也就是说，虽然已经下单，但是此时还没有支付，同步完成后，订单状态实际上是中间状态，并没有因为后续支付完成而更改成最终状态。
解决办法：同步订单为下单前2小时-1小时的（此时订单已经完成支付，或者被取消），所以肯定是最终状态。
7、异常订单邮件通知。
针对支付端支付完成的订单，同步用户端数据，如果状态不一致的，发邮件通知技术等人，查找问题原因并进行解决。


1、分析并解决提现频繁出现失败问题
2、重构支付数据同步、统计流程。



备注：本周是我这边值得认真反思的一周：
1、不能单纯考虑如何快捷完成任务，而是要将后续的维护和扩展都考虑到，保证项目的可持续发展。
2、出现问题后在优化程序并不是最好的解决问题的办法，而是应该在需求设计的时候多花一些时间，一步到位。
3、出现问题找到问题真正原因，而不是绕过这个问题，否则永远也不可能真正明白问题出在哪了，也就没有进步。
4、正面面对自己的不足，认真吸纳别人的建议，不断完善自己。




------------

1、FMS-141：增加银行卡号规则校验
说明：通过Luhn算法银行卡校验规则校验绑定银行卡卡号信息是否正确。
2开发微信app支付功能。
一：增加微信app支付支持，判断是app支付，在预支付过程中返回相应的支付参数，由app封装处理进行实际订单支付 
二：在预支付、预充值过程中判断是wap支付，返回串参数封装returnUrl和openid信息，实际支付过程中用此参数，不再从数据库读取这两个字段。 
三：增加注册账户和修改账户中appOpenId信息，主要是为了后续进行app微信充值。
四：修复微信支付结果只判断return_code，不判断result_code导致的实际退款结果与处理结果不一致
五：重构部分代码，如ip校验用common包中方法，RandomStringUtils中方法代替本地生成随机字符串方法。
3、FMS-143：重构paycheck表数据同步策略
优化原因：原有策略中先插入paycheck表中支付端数据，之后在更新用户端订单数据，效率有些低
优化方案：http://wiki.honglingjinclub.com/pages/viewpage.action?pageId=10715722；

其他优化：
1、修改部分交易密码类文案 
2、商家端提现收手续费标准从200元修改至500元
3、优化支付后台支付列表翼支付条件查询报错“支付类型错误”
4、修复银行卡绑定出现银行卡号错误问题
5、优化支付端“src.test.java”包下路径，之后可以支持代码单元测试
6、针对部分不符合check style代码，进行一个版本优化



------------

1、FMS-144：后台优化
一：支付后台登录超时优化，延长超时时间为24小时； 
二：登录后，默认展示“账户列表”页； 
三：解决账户数据统计，查询条件“交易日期”不生效问题。
2、FMS-149：在AccountInfo接口中增加实名认证标志位
说明：本次主要是为了满足兼职端之后经过实名认证的用户才可以绑定银行卡、提现操作。
解决办法：在accountinfo信息中返回认证状态：1：表示未认证，2表示已通过，3表示已驳回
3、FMS-40：账户优化
说明：通过兼职端实名认证接口，获取对应的认证状态
4、FMS-145 -：同步Paycheck未同步数据
问题原因：由于支付系统定时任务执行阻塞，导致定时任务无法正常执行，出现数据未同步情况。
解决办法：编写临时接口，进行数据同步，之后重新发送日数据统计邮件
5、FMS-151： 微信app签名错误
问题原因：微信app所有参数都小写，部分参数拼写错误
解决办法：重新拼写参数。
6、FMS-146：重构dataCenter代码
说明：将基础服务代码风格改成与支付端、兼职端一致

其他：
1、修复支付后台提现列表查询报错问题
2、在支付端添加ba认证相关配置
3、多次配合万春进行线下退款操作。
3、修复4月5日日数据统计结果和实际结果不符合问题。


备注：部分文件比较工具中不区分大小写，所以在使用过程中很容易掉坑里，一定得注意下设置大小写敏感。

------------

1、USE-372：app-财务端支付宝支付
说明：添加app端app支付支持，此过程中重构了下支付包app相关代码，将支付宝app支付、wap支付、支付宝退款模块化。
2、FMS-152：所有退款渠道增加金额校验
改之前：之前的逻辑是红领巾钱包退款，由支付端校验：本次退款金额+已经退款成功金额是否大于订单总金额。大于的不可以退款。其余的直接由第三方（支付宝、微信）在退款过程中校验此逻辑。
改之后：由支付端先统一校验本逻辑，已经超过退款金额的，直接退款失败，不再向第三方发送退款请求。
3、 FMS-156： 支付后台--收支数据中成本金额有差异。
说明：经过数据分析，后台写的sql中成本金额、优惠金额排查了红领巾钱包支付。实际业务逻辑中收支统计是不包含该红领巾支付，成本、优惠是统计的，所以前台数据是符合业务逻辑的。
4、MIS-195：动态生成ios发布的plist
说明：支付端会根据ios端请求的appid信息动态生成plist的xml文件。
5、FMS-158：翼支付退款失败问题。
说明：经过和翼支付客服确认，发现支付端问题。而是用户通过翼支付支付的银行卡支付方式进行的支付，而退款也是退款到银行，结果发现退款时间段银行在维护，所以导致退款失败。
解决办法：由用户端重新发起退款请求解决（用户端如果第一次退款失败，会在本日其他时间段在进行退款操作）。
6、编写重构支付流程技术方案。
地址：http://wiki.honglingjinclub.com/pages/viewpage.action?pageId=11370732

其他：
1、修复红领巾钱包支付报错“支付金额错误”问题。
2、解决翼支付无法正常退款问题。
3、优化paycheck同步策略方案，从trade表中通过resultTime判断同步哪些订单。
4、解决翼支付退款部分退款，但实际上是全部退款问题。

下周计划:重构支付流程。


本周出现问题比较多，先后出现两次线上问题：先是出现红领巾钱包支付问题，后又出现翼支付退款全部为全额退问题，致使公司出现一定的损失。
就我本人来说，首先自我检讨下：从一方面反映了工作中考虑不够周全，另一方面反映了技术不够扎实。虽然在工作中一直在努力完善自己，但是依然有很多不足。
就支付来说：实际上支付是需要日对账的，也就是说每天都需要核对上一天的账目，不应该是一段时间之后去核对之前很久的账目，弊端就是时间很长的账目出现问题补救会比较滞后，再就是异常账目查找问题也相对来说更困难。
日后改进：一方面是一定要加强自身技术学习、另一方面需要不断的优化支付方案、优化对账流程。

------------

1、优化退款流程
一、修复翼支付退款出现mac校验错误问题
二、优化退款金额不能为小于等于0
三、退款金额变更为必传字段。
四、一个退款id退款失败后，如果发起重试，两次退款金额必须一致，否则会退款失败

2、FMS-160：支付流程变更&支付方式与订单页拆分（支付端后端）
说明：本次重构主要是将订单确认页和支付列表页分为两个页面。将支付列表页由支付端统一维护。

3、 FMS-171：银行卡信息“账号类型”增加校验
优化原因：由于当前银行卡对公和对私没有很好的区分判断，所以部分用户误操作，本应该是对私账户，最终选择的是对公。
优化规则：针对用户名进行判断。
一：发现名称小于等于4个长度，或者是名称中有“·”，并且没有“公司”等明显对公字样的，判定为对私。
二:如果用户名大于4个长度，并且有“公司”等字样的判定为对公户。
三：其余的用户名称不做判断。

1、优化支付端通知规则。
2、FMS-168：订单超时时间优化


本周主要是重构支付流程部分代码。确认技术方案花费的时间比较长，主要是因为本次修改会涉及到支付方式优惠，之后涉及到优惠有的一些数据展示和退款流程，也就是说流程有些复杂，并且当前无法规划日后的优惠方案，所以此部分最终决定还是先不做，日后有明确的优惠方案后在进行处理。

------------


1、FMS-168 ： 订单超时时间优化 
一：当订单超时时间是跨天的时间，设置超时时间为当天的“23:59:55”， 
二：当天下单在“23:59:55”之后的，直接会订单超时，不会继续支付（支付端有订单实际支付前有此判断）
三：将支付宝超时时间精确到秒
2、FMS-177：翼支付活动支持（后端）
说明：针对翼支付活动动态展示支付方式列表。http://task.honglingjinclub.com/browse/FMS-177
3、FMS-172 ：支付端通知规则优化 
 针对支付端所有的异步通知增加通知失败重复通知规则，从之前的只通知一次变更为通知失败继续通知。
4、FMS-175：收支数据统计优化--增加统计字段 
一：订单金额合计只统计下单订单金额，不统计充值订单金额（历史数据清洗），导出数据也需要做相应的变更； 
二：在“订单金额合计”后增加一列“订单支付金额合计”，统计当天所有订单的支付金额（含所有支付方式的支付金额并剔除退款的订单支付金额，但充值不统计），并在导出数据中增加此统计； 
三：在“总支出”后增加一列“收入余额”，收入余额统计每日总收入-每日订单支付金额合计+每日红领巾支出的金额，并在导出数据中增加此统计（只在导出明细数据中增加，城市和学校维度不增加）；

其他：
1、解决plist动态生成后ios不能正常下载app
2、上线trade重构代码、支付后台session超时、银行卡支付类型校验代码
3、修改支付流程中返回字段名称returnUrl为returnUri


------------

1、FMS-157：按学校维度、按城市维度汇总收支数据。
说明：本次需求主要是将支付端订单支付数据、订单退款数据按日期、学校、城市维度实现日数据统计，生成统计数据汇总表。之后可以按照日期学校维度，日期城市维度导出数据。
2、优化统计数据规则
说明：之前因为退款规则中，出现部分退款的成本金额是按订单计算的，所以当出现多次部分退，退款成本金额就会大于实际金额（如部分退款两次，那么就会计算两次订单全额退款成本）。优化后，是按订单退款百分比计算出一个订单成本金额，之后按照四舍五入取整后作为成本金额。

其他：
  1、优化退款流程
  2、增加paycheck表字段和索引，提高支付后台查询效率
  3、汇总统计4月份收支数据
  4、上线支付通知失败重复通知、翼支付优化活动代码。
  5、优化支付后台支付列表

  



------------

1、FMS-180：优化翼支付响应超时问题
说明：将支付系统自定义httpUtils改用common包中httpUtils，本次修改主要是为了支持http可以请求，但是一直没有响应导致的连接数过多问题，设置响应超时时间为10s。
2、FMS-173：对账工具
一、分别增加对微信、支付宝、连连、翼支付单天或连续日期对账
二、对账规则：选择对账时间范围，支付方式，对账文件，之后选择对账，系统自动对账，之后生成对账差异文件。
三、对账日期范围不超过7天，对账文件不能大于10m，对账差异大于100条，不在继续对账。

3、FMS-181：微信活动支持
说明：添加支付列表规则，活动时间范围内展示活动文案

其他：
1、增加退款流程中实时请求失败之后更新退款结果操作
 2、增加对部分接口中token为空校验 
 3、增加对退款中订单不可以重复退款





------------

1、FMS-182：第三方退款通知导致退款时间变更
问题原因：之前的逻辑是如果支付端通知业务端（用户端）失败，之后会继续更新退款状态和退款时间。造成的结果就是如果通知一直失败，退款结果时间并非真实的退款时间，如果通知时间跨天，直接导致统计数据不准。
解决办法：以首次通知时间为准，之后重复通知情况下，只进行结果通知，不再更新状态
2、FMS-183：支付端业务和支付后台拆分
说明：本次主要是将支付系统拆分为支付业务系统和支付后台系统，将两部分功能区分开来，支付业务系统只处理与业务相关内容，如支付、退款等。支付后台系统负责数据分析统计。
3、FMS-185：支付宝支付未支付返回页面是支付后台系统登录页问题
问题原因：支付端拼装支付宝支付报文过程中show_url写的是支付端域名，所以在支付宝页面上点击返回按钮，就会是支付端后台系统。
解决办法：将此参数值修改为returnUrl，返回此路径，之后可以继续进行支付等操作
4、FMS-187：优化退款流程
说明：高并发情况下，可能会出现同一笔退款多次请求，导致部分判断条件读取数据库过程中并非拿到的是真实想要的数据，造成流程上的缺陷
解决办法：针对部分select语句增加行级锁，只有事物结束后才被释放，保证数据查询的准确性。针对重复退款的，增加订单退款金额校验，保证超过总金额的请求直接返回退款失败，不再继续退款流程。

------------

1、FMS-186：管理后台使用SSO
说明：将支付后台修改为sso登录，不再使用自定义支付页面，
2、FMS-193：退款逻辑问题
说明：由于之前退款失败后，再次退款逻辑问题，导致退款一直无法正常变更为退款成功状态，出现第一次退款失败后，会进行重复退款。
解决办法：当退款状态为非成功状态下，再次发起退款后会变更退款结果状态，直到某次退款成功后，不再继续变更退款状态
3、支付对账优化
说明：将对账导出文件中第三方订单号修改为第三方支付订单号
4、修复支付端订单金额不等于支付金额+优惠金额
说明：由于用户端订单被取消，但是支付端支付成功，导致两边数据不一致，
解决办法：将出现问题的数据进行修复，之后重新统计支付端数据
5、删除之前的用户注册所需要的appOpenId字段。
说明：微信app支付不再需要openid信息，将之前的部分关联代码进行删除





------------

1、FMS-194:解决支付宝退款成功后收到支付通知的处理
优化说明：
一、支付宝退款后，如果收到本订单的支付通知，通过退款时间字段判断是否为退款后通知，如果是的情况下，不再将此通知通知给用户端
二、重构支付宝支付、退款通知结果代码结构
三、解决支付宝app退款报错问题
四、删除退款通知接口中的支付通知业务逻辑，只保留支付完成通知的相关处理
2、PTTMS-437	：统计提现和退款失败的原因
说明：本次统计主要是统计了支付端五月份提现和退款的成功、失败数据，并分类统计失败原因。
3、开发提现失败退款、重试功能
说明：之前提现失败后都需要手动查询数据库，之后通过sql的形式来更新数据库中对应的提现失败状态为重试或者退款。
优化后，可以通过支付后台，在页面上批量或者单笔更新提现状态。


------------

1、增加用户实名认证校验
一、针对新绑卡用户，只有用户实名认证通过，并且实名认证姓名和绑卡姓名一致，才可以绑卡。
二、针对提现操作，只有实名认证用户可以进行提现操作。

------------

入职
服务地址
mac下好用的工具
密码

------------

邮箱地址：http://mail.honglingjin.xyz/
用户名：gaodebao
gaodebao@honglingjin.xyz
密码：1qaz@WSX
娘娘庙小学，姜艳龙

wiki：http://wiki.honglingjin.club.com/；



git：
用户名：gaodebao@honglingjin.xyz
密码：gaodebao19890124
wiki：
gaodebao
gaodebao19890124
钉钉：
gaodebao
gaodebao19890124




------------

wiki：http://wiki.honglingjinclub.com/；
git：http://git.honglingjinclub.com/users/sign_in；
邮箱地址：http://mail.honglingjin.xyz/alimail/；
用户名：gaodebao@honglingjin.xyz;


密码：gaodebao19890124

生产服务器

192.168.168.3   gaodebao   123456     168.19那台账号密码是中转机的账号密码

------------

http://wiki.honglingjinclub.com/pages/viewpage.action?pageId=12222686；

------------

598802631@qq.com
Gdb19890124
三国演义
杨春清
银川市



------------

写入文件字符串
认证问题
Note1
回答excel
命令大全
Note2
设置隐藏
Note3
配置环境变量
死机原因
百度
问题回答
有利网

------------

package com.zhangry.interview.java; 
 
import java.io.FileNotFoundException; 
import java.io.FileOutputStream; 
import java.io.IOException; 
 
public class WriteFile { 
 
    public static void main(String[] args) { 
        try { 
            FileOutputStream out = new FileOutputStream("C:\\FileName.txt"); 
            out.write("字符串写入文件".getBytes()); 
            out.close(); 
        } catch (FileNotFoundException e) { 
            e.printStackTrace(); 
        } catch (IOException e) { 
            e.printStackTrace(); 
        } 
 
    } 
 
} 
package com.zhangry.interview.java;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

public class WriteFile {

    public static void main(String[] args) {
        try {
            FileOutputStream out = new FileOutputStream("C:\\FileName.txt");
            out.write("字符串写入文件".getBytes());
            out.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

}



------------

o 建议根据提问有重点的介绍相关性强内容
释义： 回答 内容 与问题内容 不是 强相关， 如：提问 为 iphone 6iphone 6iphone 6iphone 6iphone 6iphone 6 iphone 6配置， 回答内容为购买方式。
o 建议将每句话说完整，请勿缺少子相关成分
释义： 回答 者内容缺少语句成分 ，缺少主语，宾等 ，常见为 只说一半内容。
o 建议 使用通俗易懂的语言，勿 用过于晦涩难懂的语言（如专有名词、罕见情况 ）
释义：主要 为一些 专业 明细 ，需结合 专业 进行判断，个别词虽然平时较少见但业内 普遍了 解，则不属于晦涩难懂词语。如 ：PM （产品经理 ）、UE （设计师 ）。
o 建议回答按照认识事物的一般逻辑（如主次关系、整体到部分特殊等 ）
释义：每个 提问要求的回答 形式不同，如：步骤类应按照逻辑，分为： 1，2,3,4,52,3,4,5 2,3,4,5 2,3,4,5 …，另外 如：总分， 总分等形式， 须结合提问 选择，要求 逻辑性的 目的 就是为了让 回答更容易 理解。 但对 于 2015 年 2月份之前的回答 ，因拒绝后无人修改，故要求可适当放宽。
o 建议在回答中添加相关图片、 视频 或附件进一步解释说明相关知识点
释义 ：不做 强制 要求， 有更好 。
o 回答内容不全， 建议 根据提问 全面 解答， 请勿 回答部分
问题或单个解释说明释义： 只回答部分问题 或答案过于 简单， 如：从西二旗 怎样去天安门？ 不完整 回答为： 坐地 铁。完整回答应明确 乘坐方式及具体路线，花费时间等。
o 回答啰嗦， 含有 相关性弱的内容，建议 只保留 与提问紧密相关的内容
释义 ：回答 中含有无意义词汇 或段落 ，对解决问题本身帮助较 少，如：谢，请 采纳 ，等无意 义词语， 注：对 2015 年 2月份之前的回答 ，若含有谢请采纳等选择 回答 含有无意 义小尾巴 （最后一条 模板）
o 回答用语不规范
o 建议正确使用标点符号
释义：视 具体情况，若标点符号对阅读影响较大则需 拒绝 ，若影响较小如：逗号 写成句 号，最后忘 写句号 等，对 回答 本身影响较小，可以通过。
o 建议修改回答中的错误拼写
释义： 对 2015 年 2月份之前的回答 ，错别字 较少可通过，对 之后 回答， 应拒绝并注明具体 修 改意见。
o 建议删除或修改回答中情绪化和主观语言
释义：高质量 回答应为客观 回答 ，如： 这个 很棒， 非常好， 非常精彩等词汇， 不符合 收录规 则，但对 于 2015 年 2月份之前的回答 ，因拒绝后无人修改，故要求可适当放宽。
o 回答版面混乱， 建议 调整回答版面、 使版面美观整洁、 有条理
释义：回答 内容应 版式清晰，分段换行较好 把握， 若版式 问题 对阅读 有较大影响，则应拒 绝。 但对 于 2015 年 2月份之前的回答 ，因拒绝后无人修改，故要求可适当放宽。
o 回答疑似复制粘贴， 建议 整理汇总多方信息，给出原创回答
释义：高质量 回答应 为原创答案，拒绝抄袭。
o 回答内容真实性无法考证
o 建议给回答内容提供可参考的链接或资料
o 建议调换回答中不具参考性的资料
释义： 以上两条不做强制要求，有更好。
o 回答含有错误内容，请将予以修正
释义： 回答内容有错，与 之前 回答含有错误拼写应当区别开来。
o 回答含有违规内容， 请删除 回答中的违规内容（如：黄反， 广告 ，违法等规内容 ）
释义 ：违规内容 坚决不能通过 ！！！
o 回答含有无意 义小尾巴
释义 ：专门 针对 2015 年 2月份之前 的回答 ，如 回答含有：你好，谢请采纳等词汇应当

------------

回答描述不清晰，建议根据提问有重点的介绍相关性强的内容，建议在回答中添加相关图片、视频或附件进一步解释说明相关知识点

回答描述不清晰
建议在回答中添加相关图片、视频或附件进一步解释说明相关知识点
回答描述不清晰，建议根据提问有重点的介绍相关性强的内容，建议在回答中添加相关图片、视频或附件进一步解释说明相关知识点； 建议提供相关截图给予详细说明.

回答描述不清晰，建议根据提问有重点的介绍相关性强的内容，提问者用的是如何连接数据库，其认真按照高质量回答标准回答问题。

回答描述不清晰，建议根据提问有重点的介绍相关性强的内容
回答过于简略，请提供详细步骤并做适当扩展

回答描述不清晰，建议根据提问有重点的介绍相关性强的内容
按照高质量回答标准进行作答,正面回答提问者所提问的问题,不要答非所问. 第一段给出提问者正面回答内容.第二段对正面回答的内容做出一个详细的讲解并排版.

建议删除“您好”，“你好”，“希望能帮到你”等于提问者问题无关的内容，直接正面回答后，第二段详细讲解说明即可。


建议分段说明，不要一段到底，比如按步骤进行分段说明会更好些。

建议能够分段进行说明，并增加必要的解释说明，如增加编号1、2、3等

建议分段说明时按照步骤增加 1、2、3等步骤编号。


回答内容过于简单，达不到高质量标准，建议参考高质量标准后，适当扩展回答内容。


建议规范标点符号的使用，段落结尾用句号，步骤结束用分号，专用名词用引号，名词解释后面加上冒号。建议添加必要的标点符号。


回答过于简单，无法达到高质量标准，请认真阅读高质量回答要求。建议分步骤分段落的详细说明下该怎么操作。


建议将图片的水印马赛克一下。

建议先说明该如何实现，之后给出代码，对重要代码做必要解释说明的形式进行问题回答。


建议先正面给出操作步骤，增加必要步骤编号，之后可以图解下操作步骤，辛苦了

请先采用文字说明，然后在添加代码说明，代码中添加必要的注释

















-


------------

第一步：选择要复制的内容，然后将鼠标定位到要复制的值的右下角会出现”+“号。

第二步：点住鼠标一直向下拖拽到要复制的行位置，松开鼠标，即可完成复制，效果如图。

------------

cleanmgr–打开磁盘清理工具
compmgmt.msc－－－计算机管理
conf—-启动 netmeeting
charmap–－启动字符映射表
calc—-启动计算器
chkdsk.exe–－Chkdsk磁盘检查
cmd.exe–－CMD命令提示符
certmgr.msc–证书管理实用程序
cliconfg–SQL SERVER 客户端网络实用程序
Clipbrd–－剪贴板查看器
ciadv.msc–－－索引服务程序
dvdplay–－DVD播放器
diskmgmt.msc－－－磁盘管理实用程序
dfrg.msc–磁盘碎片整理程序
devmgmt.msc－－－ 设备管理器
drwtsn32–－－ 系统医生
dxdiag–－－检查DirectX信息
dcomcnfg–打开系统组件服务
ddeshare–打开DDE共享设置
explorer–打开资源管理器
eventvwr–事件查看器
eudcedit–造字程序
fsmgmt.msc–－共享文件夹管理器
gpedit.msc–－组策略
iexpress–***工具，系统自带
logoff–注销命令
lusrmgr.msc–本机用户和组
mstsc–远程桌面连接
Msconfig.exe－－－系统配置实用程序
mem.exe–－显示内存使用情况（如果直接运行无效，可以先运行cmd，在命令提示符里输入mem.exe>d:a.txt 即可打开d盘查看a.txt，里面的就是内存使用情况了。当然什么盘什么文件名可自己决定。）
mplayer2–简易widnows media player
mspaint–－画图板
mplayer2–媒体播放机
magnify–－放大镜实用程序
mmc—-－打开控制台
mobsync–－同步命令
notepad–－打开记事本
net start messenger–开始信使服务
net stop messenger–－停止信使服务
net stop messenger–－停止信使服务
net start messenger–开始信使服务
notepad–－打开记事本
nslookup–网络管理的工具向导
ntbackup–系统备份和还原
narrator–屏幕“讲述人”
ntmsmgr.msc–移动存储管理器
ntmsoprq.msc－－－移动存储管理员操作请求
netstat －an–(TC)命令检查接口
Nslookup–IP地址侦测器
oobe/msoobe /a–检查windows是否激活
osk—-－打开屏幕键盘
odbcad32–ODBC数据源管理器
progman–－程序管理器
perfmon.msc–计算机性能监测程序
packager–对象包装程序
rononce －p –15秒关机
regsvr32 /u *.dll–停止dll文件运行（把*号换成要停止的dll文件名）
regedt32–注册表编辑器
rsop.msc–组策略结果集
regedit.exe–注册表
regsvr32 /u zipfldr.dll–－－取消ZIP支持
sndrec32–录音机
services.msc－－－本地服务设置
syncapp–－创建一个公文包
sysedit–－系统配置编辑器
sigverif–文件签名验证程序
slmgr.vbs –dli--查看Windows 7 的详细版本号
        /-ipk(Product Key)安装产品密钥
    /-dlv 显示许可证信息
    /-ato 激活Windows
    /-xpr 当前许可证的截止日期
    /-cpky 从注册表中清除产品密钥（防止泄露引起的攻击）
    /-ilc (License file) 安装许可证
    /-upk 卸载产品密钥
    /-skms (name[:Port] )批量授权
   
此命令的可选项太多
sndrec32–录音机
shrpubw–－创建共享文件夹
secpol.msc–－本地安全策略
syskey–－－系统加密
Sndvol32–音量控制程序
sfc.exe–－系统文件检查器
sfc /scannow－－－windows文件保护（扫描错误并复原）
tsshutdn–60秒倒计时关机命令
taskmgr–－任务管理器
utilman–－辅助工具管理器
winchat–自带局域网聊天
winmsd–－－系统信息
winver–－－检查Windows版本
wmimgmt.msc–打开windows管理体系结构(WMI)
wupdmgr–－windows更新程序 （不是正版系统不要打开）
Wscript.exe–－windows脚本宿主设置
write–－－－写字板
wiaacmgr–扫描仪和照相

------------

package com;   import java.util.regex.Matcher; import java.util.regex.Pattern; public class TestRegex {  public static boolean isboolIP(String ipAddress){   String  ip="(2[5][0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})\\.(25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})\\.(25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})\\.(25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})";   Pattern pattern = Pattern.compile(ip);   Matcher matcher = pattern.matcher(ipAddress);   return matcher.matches();   }  /**   * @param args   */  public static void main(String[] args) {   // TODO Auto-generated method stub   String ipAddress1 = "10.";   String ipAddress2 = "0.0.0.0";   String ipAddress3 = "255.255.255.255";   String ipAddress4 = "192.168.2.1";   String ipAddress5 = "26445687";   String ipAddress6 = "nihao";   String ipAddress7 = "你好！！";   if(isboolIP(ipAddress1)){    System.out.println("IP正确");   }else{    System.out.println("IP错误");   }   if(isboolIP(ipAddress2)){    System.out.println("IP正确");   }else{    System.out.println("IP错误");   }   if(isboolIP(ipAddress3)){    System.out.println("IP正确");   }else{    System.out.println("IP错误");   }   if(isboolIP(ipAddress4)){    System.out.println("IP正确");   }else{    System.out.println("IP错误"); 

------------

第一步：点击”我的电脑“进入”我的电脑“界面。
第二步：选择菜单栏”工具“下拉选的”文件夹选了“。
第三步：在”查看“中，勾选上”隐藏已知文件类型的扩展名“，点击”确定“即可完成设置。

------------

可能原因和解决办法。
一：显卡配置低，出现卡屏现象，这种情况下，只能是更换显卡。
二：应用软件（多在游戏情况下）过大，系统内存小，导致cup使用过高，出现卡屏，这种情况下，可以加大内存条；关闭其余的当前不需要用的程序（如：QQ、网页）。
三：网速慢，这中情况下是应为当前网络响应时间过长，导致某些页面显示的比较慢，或者跳屏。这中情况下也只能是提高“带宽”进行解决。
第四：显卡驱动有问题，此情况下可以通过辅助工具如（鲁大师、驱动精灵）等进行显卡检查，安装最新的显卡驱动即可



第一步：在桌面空白位置右击，选择“个性化”。
第二步：点击弹出对话框中的”桌面背景“，进入桌面背景的设置界面。
第三步：选择要设置的壁纸后，设置”图片“位置下拉选的”居中“，点击”保存修改“，即可完成设置。


第一步：在桌面空白位置右击，选择“个性化”。
第二步：在弹出的窗口中选择“窗口颜色”。
第三步：弹出颜色设置界面后，将“启动透明效果”勾选掉，设置颜色为“白色”。点击“保存修改”，即可完成“窗口透明“设置。

------------


如：jdk安装在“D:\Program Files\java\jdk1.6.0_10”
第一步：新建“java_home”值，输入“D:\Program Files\java\jdk1.6.0_10”；
第二步：新建“classpath”值，输入“.;%java_home%\lib”；
第三步：在path中增加“%java_home%\bin”；
备注：配置环境变量在“计算机”右击“属性”，之后选择“高级环境变量”，在选择“环境变量”即可。

------------

死机的原因很多,归纳如下:供参考 
由硬件原因引起的死机 
1、散热不良 
显示器、电源和CPU在工作中发热量非常大，因此保持良好的通风状况非常重要，如果显示器过热将会导致色彩、图象失真甚至缩短显示器寿命。工作时间太长也会导致电源或显示器散热不畅而造成电脑死机。CPU的散热是关系到电脑运行的稳定性的重要问题，也是散热故障发生的“重灾区”。 
2、移动不当
在电脑移动过程中受到很大振动常常会使机器内部器件松动，从而导致接触不良，引起电脑死机，所以移动电脑时应当避免剧烈振动。 
3、灰尘杀手
机器内灰尘过多也会引起死机故障。如软驱磁头或光驱激光头沾染过多灰尘后，会导致读写错误，严重的会引起电脑死机。 
4、设备不匹配
如主板主频和CPU主频不匹配，老主板超频时将外频定得太高，可能就不能保证运行的稳定性，因而导致频繁死机。 
5、软硬件不兼容
三维软件和一些特殊软件，可能在有的微机上就不能正常启动甚至安装，其中可能就有软硬件兼容方面的问题。 
6、内存条故障
主要是内存条松动、虚焊或内存芯片本身质量所致。应根据具体情况排除内存条接触故障，如果是内存条质量存在问题，则需更换内存才能解决问题。 
7、硬盘故障
主要是硬盘老化或由于使用不当造成坏道、坏扇区。这样机器在运行时就很容易发生死机。可以用专用工具软件来进行排障处理，如损坏严重则只能更换硬盘了。另外对于在不支持UDMA 66/100的主板，应注意CMOS中硬盘运行方式的设定。 
8、CPU超频
超频提高了CPU的工作频率，同时，也可能使其性能变得不稳定。究其原因，CPU在内存中存取数据的速度本来就快于内存与硬盘交换数据的速度，超频使这种矛盾更加突出，加剧了在内存或虚拟内存中找不到所需数据的情况，这样就会出现“异常错误”。解决办法当然也比较简单，就是让CPU回到正常的频率上。 
9、硬件资源冲突
是由于声卡或显示卡的设置冲突，引起异常错误。此外，其它设备的中断、DMA或端口出现冲突的话，可能导致少数驱动程序产生异常，以致死机。解决的办法是以“安全模式”启动，在“控制面板”→“系统”→“设备管理”中进行适当调整。对于在驱动程序中产生异常错误的情况，可以修改注册表。选择“运行”，键入“REGEDIT”，进入注册表编辑器，通过选单下的“查找”功能，找到并删除与驱动程序前缀字符串相关的所有“主键”和“键值”，重新启动。 
10、内存容量不够
内存容量越大越好，应不小于硬盘容量的0.5～1%，如出现这方面的问题，就应该换上容量尽可能大的内存条。 
11、劣质零部件
少数不法商人在给顾客组装兼容机时，使用质量低劣的板卡、内存，有的甚至出售冒牌主板和Remark过的CPU、内存，这样的机器在运行时很不稳定，发生死机在所难免。因此，用户购机时应该警惕，并可以用一些较新的工具软件测试电脑，长时间连续考机（如72小时），以及争取尽量长的保修时间等。 由软件原因引起的死机 
12、病毒感染
病毒可以使计算机工作效率急剧下降，造成频繁死机。这时，我们需用杀毒软件如KV300、金山毒霸、瑞星等来进行全面查毒、杀毒，并做到定时升级杀毒软件。 
13、CMOS设置不当
该故障现象很普遍，如硬盘参数设置、模式设置、内存参数设置不当从而导致计算机无法启动。如将无ECC功能的内存设置为具有ECC功能，这样就会因内存错误而造成死机。 14、系统文件的误删除
由于Windows 9x启动需要有Command.com、Io.sys、Msdos.sys等文件，如果这些文件遭破坏或被误删除，即使在CMOS中各种硬件设置正确无误也无济于事。解决方法：使用同版本操作系统的启动盘启动计算机，然后键入“SYS C：”，重新传送系统文件即可。 
15、初始化文件遭破坏
由于Windows 9x启动需要读取System.ini、Win.ini和注册表文件，如果存在Config.sys、Autoexec.bat文件，这两个文件也会被读取。只要这些文件中存在错误信息都可能出现死机，特别是System.ini、Win.ini、User.dat、System.dat这四个文件尤为重要。 
16、动态链接库文件（DLL）丢失
在Windows操作系统中还有一类文件也相当重要，这就是扩展名为DLL的动态链接库文件，这些文件从性质上来讲是属于共享类文件，也就是说，一个DLL文件可能会有多个软件在运行时需要调用它。如果我们在删除一个应用软件的时候，该软件的反安装程序会记录它曾经安装过的文件并准备将其逐一删去，这时候就容易出现被删掉的动态链接库文件同时还会被其它软件用到的情形，如果丢失的链接库文件是比较重要的核心链接文件的话，那么系统就会死机，甚至崩溃。我们可用工具软件如“超级兔仔”对无用的DLL文件进行删除，这样会避免误删除。 
17、硬盘剩余空间太少或碎片太多
如果硬盘的剩余空间太少，由于一些应用程序运行需要大量的内存、这样就需要虚拟内存，而虚拟内存则是由硬盘提供的，因此硬盘要有足够的剩余空间以满足虚拟内存的需求。同时用户还要养成定期整理硬盘、清除硬盘中垃圾文件的良好习惯。 
18、BIOS升级失败
应备份BIOS以防不测，但如果你的系统需要对BIOS进行升级的话，那么在升级之前最好确定你所使用BIOS版本是否与你的PC相符合。如果BIOS升级不正确或者在升级的过程中出现意外断电，那么你的系统可能无法启动。所以在升级BIOS前千万要搞清楚BIOS的型号。如果你所使用的BIOS升级工具可以对当前BIOS进行备份，那么请把以前的BIOS在磁盘中拷贝一份。同时看系统是否支持BIOS恢复并且还要懂得如何恢复。 
19、软件升级不当
大多数人可能认为软件升级是不会有问题的，事实上，在升级过程中都会对其中共享的一些组件也进行升级，但是其它程序可能不支持升级后的组件从而导致各种问题。
20、滥用测试版软件
最好少用软件的测试版，因为测试软件通常带有一些BUG或者在某方面不够稳定，使用后会出现数据丢失的程序错误、死机或者是系统无法启动。 
21、非法卸载软件 
不要把软件安装所在的目录直接删掉，如果直接删掉的话，注册表以及Windows目录中会有很多垃圾存在，久而久之，系统也会变不稳定而引起死机。 
22、使用盗版软件
因为这些软件可能隐藏着病毒，一旦执行，会自动修改你的系统，使系统在运行中出现死机。
23、启动的程序太多
这使系统资源消耗殆尽，使个别程序需要的数据在内存或虚拟内存中找不到，也会出现异常错误。 
24、非法操作
用非法格式或参数非法打开或释放有关程序，也会导致电脑死机。请注意要牢记正确格式和相关参数，不随意打开和释放不熟悉的程序。 
25、非正常关闭计算机
不要直接使用机箱中的电源按钮，否则会造成系统文件损坏或丢失，引起自动启动或者运行中死机。对于Windows xp等系统来说，这点非常重要，严重的话，会引起系统崩溃。 26、内存中冲突
有时候运行各种软件都正常，但是却忽然间莫名其妙地死机，重新启动后运行这些应用程序又十分正常，这是一种假死机现象。出现的原因多是Windows的内存资源冲突。大家知道，应用软件是在内存中运行的，而关闭应用软件后即可释放内存空间。但是有些应用软件由于设计的原因，即使在关闭后也无法彻底释放内存的，当下一软件需要使用这一块内存地址时，就会出现冲突。

------------

糯米卷

------------

JNGAUPK3TA9AC3FTQNAB

------------

流问题
字符串截取
list方法
MVC
泛型
乱码
时间类型转换
反射机制
强制类型转换
最大值和最小值的读取
字符串比较
运行web项目
文件创建
异常处理
密码破解
文件上传
oracle创建表空间
相对路径获取
找不到main方法
super用法
BSCS
设置文件权限
工程师应该懂那些
设置任务栏颜色
开发程序多少钱
文件夹复制
时间自动刷新
设置操作系统中文
系统管理员权限
sql：like语句
数据库实例
maven转web项目
设置xp图标大小
快捷方式
设置图标显示
多文件复制
设置音量图标显示隐藏
设置路由
安装系统
隐藏了admin
telnet不能用
开机还原
路由设置
手机怎么连接电脑
电脑发出滴滴声
主板错误
安装photo
ip自动获取
itunes
自动更新
取消小箭头
跳过欢迎界面
从U盘启动
资源管理器异常
设置休眠时间
蓝屏

------------

读写是两个不同的分支，通常都是分开单独使用的。
可以通过BufferedReader 流的形式进行流缓存，之后通过readLine方法获取到缓存的内容。 
BufferedReader bre = null;
try {
String file = "D:/test/test.txt";
bre = new BufferedReader(new FileReader(file));//此时获取到的bre就是整个文件的缓存流
while ((str = bre.readLine())!= null) // 判断最后一行不存在，为空结束循环
{
System.out.println(str);//原样输出读到的内容
}；
备注： 流用完之后必须close掉，如上面的就应该是：bre.close()，否则bre流会一直存在，直到程序运行结束。
可以通过“FileOutputStream”创建文件实例，之后过“OutputStreamWriter”流的形式进行存储，举例：
OutputStreamWriter pw = null;//定义一个流
pw = new OutputStreamWriter(new FileOutputStream(“D:/test.txt”),"GBK");//确认流的输出文件和编码格式，此过程创建了“test.txt”实例
pw.write("我是要写入到记事本文件的内容");//将要写入文件的内容，可以多次write
pw.close();//关闭流
备注：文件流用完之后必须及时通过close方法关闭，否则会一直处于打开状态，直至程序停止，增加系统负担。



可以通过”Scanner“函数 直接输入参数的形式，来实现输入语句，举例：
import java.util.Scanner;
public class Test {
public static void main(String[] args) {
Scanner input=new Scanner(System.in);
System.out.println("请输入一个整数：");
int length=input.nextInt();//输入一个整数
System.out.println("输入的整数是："+length);}
}
备注：Scanner函数就是用来进行语句输入的，上面举例的是整数类型，也可以用以下语句“String length=input.next()”，输入的就是字符串类型等。



byte[] b = new byte[1024];
        int len = 0;
        while((len=is.read(b))!=-1){
            System.out.println(new String(b,0,len));
        }
        is.close();
        
        
        
        
        
        
        
实现思路：就是将需要保留的内容写入另外一个xml文件中在满足条件处进行增加、删除、修改操作。
可以通过BufferedReader 流的形式进行流缓存，之后通过readLine方法获取到缓存的内容。 
BufferedReader bre = null;
OutputStreamWriter pw = null;//定义一个流
try {
String file = "D:/test/test.xml";
bre = new BufferedReader(new FileReader(file));//此时获取到的bre就是整个文件的缓存流
pw = new OutputStreamWriter(new FileOutputStream(“D:/New.xml”),"GBK");//确认流的输出文件和编码格式，此过程创建了“test.txt”实例
while ((str = bre.readLine())!= null) // 判断最后一行不存在，为空结束循环
{
if(!str.indexOf("<end>")){//判断如果不满足xml的条件就删除
pw.write(str);//将要写入文件的内容，可以多次write
}
}；
bre.close()；
pw.close();//关闭流
备注：文件流用完之后必须及时通过close方法关闭，否则会一直处于打开状态，直至程序停止，增加系统负担。










实现思路：就是循环获取到文件夹中的文件，然后逐一的进行文件复制。
//复制文件夹
package com.cdd.util;
import java.io.*;
public class FileUtil { 
private static void copy(File[] files, File d) {
if (!d.exists()) //如果指定目录不存在
d.mkdir(); //创建目录
for (int i = 0; i < files.length; i++) { //循环遍历要复制的文件夹
if (files[i].isFile()) { //如果文件夹中是文件
try {
FileInputStream fis = new FileInputStream(files[i]); //创建FileInputStream对象
FileOutputStream out = new FileOutputStream(new File(d
.getPath()
+ File.separator + files[i].getName())); //复制后文件的保存路径
int count = fis.available();
byte[] data = new byte[count];
while ((str = bre.readLine())!= null) //读取文件通过readline方法可以有效的避免乱码
out.write(str ); //将读取的信息写入文件中
} 
out.close(); //关闭流
fis.close();
} catch (Exception e) {
e.printStackTrace();
}
}
if (files[i].isDirectory()) { //如果文件夹中是一个路径
File des = new File(d.getPath() + File.separator
+ files[i].getName()); //在复制后路径中创建子文件夹
des.mkdir();
copy(files[i].listFiles(), des); //再次调用本方法
} 
}
System.out.println("文件夹复制成功");
}





------------

可以通过java的”substring“方法截取出对应的字符串，前提是知道开始和结束的字符串的值：
String getSignInfo = reqResult.substring(reqResult.indexOf("（") + 1, reqResult.indexOf("）"));
解释：上述方法就是截取reqResult字符串的中开始”（“和结束”）“中间部分的内容，”1“就是”）“的长度，之后将获取的结果赋值给”getSignInfo进行输出即可“；
备注：以上方法通用于截取字符串，数字”6“和开始结束字符串根据实际需要修改即可。

------------

因为list是有顺序的，先add的编号就小（从0开始），这样就可以通过remove（编号）的形式进行删除，之后后面的会编号依次变小（也就是说编号总是连续的）。举例：
List list = new linkedList();
list.add("0");
list.add("1");
list.remove(0);
结果就是：list.get(0) =1;
备注：如果在一次“list.remove(0);”那么list对象就是个空。


实现思路就是循环List对象，之后看每个对象中是否有包含的字符串，符合的就输出：
List list = new ArrayList();
list.add("zhangsan");
list.add("lisi");
list.add("wangwu");
for(int i=0;i<list.size();i++ ){
if(list.get(i).contains("li")){
System.out.println(list.get(i));
}
}
备注：list是有顺序的，并且下标从0开始。

------------

Servlet属于MVC结构中的控制层，也就是连接页面和数据库的那个层次。
扩展：
m（model）模型，代表的是数据库层，通常用到的是：oracle、db2、mysql等sql知识；
v（view）视图，代表的是页面（相关），通常用到的是：html5、jsp，js等页面知识；
c（Controller）控制，代表的控制器，通常用到一些框架知识，如ssh（struts，spring，hibernate）。
备注：mvc实际上是一个很宽泛的内容，根据用到的技术不同，需要实现的业务逻辑不一样，所以灵活开发配置即可。

------------

​泛型可以用"<T>"代表，任意类型的。
解释： “<T>”是泛型的默认值，可以被任意类型所代替，如：
List<String> list = new ArayList<String>()；这个就定义了一个String类型的”泛型“集合，那么T的类型就是字符串。
List<T> list = new ArayList<T>()；
可以赋值给list：list.add("StringBatch");
可以获取到list的值：list.get(0),结果就是”StringBatch“；
这个时候T的类型也是String。也就是说T是动态的，可以被任意指定类型。


------------

java文件读取的时候有中文就很出现乱码，通常获取到的文件中通常都是“iso8859-1”格式，需要转换为“UTF-8”格式。
如：String str = new String（str.getByte("iso8859-1"),"UTF-8"）;进行下强制转换后在进行读取即可。
备注：通常格式有GBK、UTf-8、iso8859-1、GB2312，如果上面的强制转换不成功，依次进行这些格式的尝试，肯定是可以解决问题的。

------------

实现思路就是先将Timestamp转换为字符串，之后字符串转换为日期类型。举例：
Long l = System.currentTimeMillis();//获取当前的Timestamp值
SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");//定义日期类型格式
String str2 = Timestamp.valueOf(format.format(l))；//转换为字符串
System.out.println(str2);//打印获取的字符串
​Date date = format .parse(str2);

System.out.println(date);


Date date1 = new Date();
SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
String str = sdf.format(date1);
System.out.println(str);
Timestamp.valueOf(str);
System.out.println(Timestamp.valueOf(str));






可以通过日期的add(Calendar.MONTH, 1)方法进行月份切换，输出每个满足条件的值
Date d1 = new SimpleDateFormat("yyyy-MM").parse("2015-6");//定义起始日期
Date d2 = new SimpleDateFormat("yyyy-MM").parse("2016-5");//定义结束日期
Calendar dd = Calendar.getInstance();//定义日期实例
dd.setTime(d1);//设置日期起始时间
while(dd.getTime().before(d2)){//判断是否到结束日期
SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM");
String str = sdf.format(dd.getTime());
System.out.println(str);//输出日期结果
dd.add(Calendar.MONTH, 1);//进行当前日期月份加1
}


直接通过格式转换的形式即可。举例：
String	str0 = "2015年07月05日";
Date d1 = new SimpleDateFormat("yyyy年MM月dd日").parse(str0);//定义起始日期
SimpleDateFormat sdf0 = new SimpleDateFormat("yyyy");
SimpleDateFormat sdf1 = new SimpleDateFormat("MM");
SimpleDateFormat sdf2= new SimpleDateFormat("dd");
String str1 = sdf0.format(d1);
String str2 = sdf1.format(d1);
String str3 = sdf2.format(d1);
System.out.println("年份为："+str1);
System.out.println("月份为："+str2);
System.out.println("日为："+str3);
结果：




------------

Java反射机制主要提供了以下功能： 
在运行时判断任意一个对象所属的类；
在运行时构造任意一个类的对象；
在运行时判断任意一个类所具有的成员变量和方法；
在运行时调用任意一个对象的方法；生成动态代理。
JAVA有着一个非常突出的动态相关机制：Reflection。
这个字的意思是“反射、映象、倒影”，用在Java身上指的是我们可以于运行时加载、探知、使用编译期间完全未知的classes。换句话说，Java程序可以加载一个运行时才得知名称的class，获悉其完整构造（但不包括methods定义），并生成其对象实体、或对其fields设值、或唤起其methods。这种“看透class”的能力（the ability of the program to examine itself）被称为introspection（内省、内观、反省）。Reflection和introspection是常被并提的两个术语。

------------

规则就是转换的类型之间必须具有某一特定联系。
如：
字符串“123”，只个就是数字，可以直接Integer.valueOf("123");
char类型的“a”，可以直接“int（“a”）”，结果就是：58；
但是强制之前可以通过“instance of”（实例化）来进行判断是否可以强制转换：if（“aaaa” instance of String）{//代码模块}，这个代码的意思就是说如果“aaaa”可以实例化字符串类型，那么就可以强制转换，这个方法可以减少因类型不匹配和导致的转换类型抛出异常，开发过程还是有一定作用的。
备注：关于类型转换，只能是在开发过程中逐渐积累，根据实际需要进行转换即可。

------------

实现思路就是循环判断找到最大值和最小值，保存起来和其他的值进行比较。代码如下：
public class Test
{
public static void main(String args[])
{
int i,min,max;
int A[]={74,48,30,17,62}; // 声明整数数组A,并赋初值

min=max=A[0];
System.out.print("数组A的元素包括：");
int j =0;
int n =0 ;
for(i=0;i<A.length;i++)
{
System.out.print(A[i]+" ");
if(A[i]>max) // 判断最大值
j =i;
max=A[i];
if(A[i]<min) // 判断最小值
min=A[i];
n =i
}
System.out.println("\n数组的最大值是："+max+".数组的位置是："+（j+1）); // 输出最大值和最大值的位置
System.out.println("数组的最小值是："+min+".数组的位置是："+（n+1）); // 输出最小值
}
}















实现思路就是先输入10个int类型的参数，之后循环判断找到最大值和最小值，保存起来和其他的值进行比较。代码如下：
public class Test
{
public static void main(String args[])
{
int i,min,max;
int A[] = new int[10];
Scanner input=new Scanner(System.in);
for(int j=0,j<10;j++){//输入10个数
System.out.println("请输入一个数字：");
int length=input.nextInt();//输入一个字符串
A[i] =length;
}
min=max=A[0];
System.out.print("数组A的元素包括：");
int j =0;
int n =0 ;
for(i=0;i<A.length;i++)
{
System.out.print(A[i]+" ");
if(A[i]>max) // 判断最大值
j =i;
max=A[i];
if(A[i]<min) // 判断最小值
min=A[i];
n =i
}
System.out.println("\n数组的最大值是："+max+".数组的位置是："+（j+1）); // 输出最大值和最大值的位置
System.out.println("数组的最小值是："+min+".数组的位置是："+（n+1）); // 输出最小值
}
}

------------

compareTo方法原理：先读取出字符串的第一个“字母”进行比较，比较的方法是ascii码表的值（字符所对应的十进制值），如果前面的大那么返回1，后面的大返回-1；此位置相同，继续比较下一位，直到最后一位，如果都相同的话，就返回0；
举例：
int cc= "13".compareTo("12");
System.out.println(cc);
int dd= "11".compareTo("12");
System.out.println(cc);
int dd= "aaa".compareTo("aaa");
System.out.println(cc);
结果就是：1（换行） -1（换行）0。


该方法在Java调用init方法后被自动调用。
每次applet出现在屏幕上时都会调用这个方法，例如，applet的第一次显示、用户转移到另一个应用程序再返回到这个包含applet的页面、从最小化状态返回等都会调用start方法。
start方法可以被重复调用多次而不是仅仅一次，这与init方法不同。
start方法通常是为applet重新启动一个线程的地方，比如继续一个动画。
如果当用户离开当前页面时你的applet不需要做任何挂起处理，那么你就不需要实现此方法。

------------

第一步：需要先创建一个server，可以通过windows中的show view，之后找到server。
第二步：在server窗口中右击，选择”new-server“，之后创建好tomcat server。
第三步：在创建的server上右击，选择add，之后将要运行的项目添加进来，选择Finsh。
第四步：右击server，之后选择”start“运行即可。
第五步：打开浏览器，输入”http://localhost:8080/项目root“运行即可。

------------

可以先切换到指定的文件夹路径下，之后直接通过mkdir方法进行文件夹创建。举例：
String path = "d:/oldfilepath";//定义指定文件路径
String newPath = path+"/newpath";//指定新路径
File file = new File(newPath );//定义一个文件流
file.mkdir();//创建文件夹
备注：如果不确定原有文件夹是否存在的情况下，可以通过”mkdirs“创建多层路径。

------------

捕获异常：通常在运行之前java不报错，但是运行后可能会出现某些未知的错误，但是还不想直接抛出到上一级，那么就需要通过”try{}catch“的形式进行异常捕获，之后根据不同的异常情况来进行相应的处理。
传递异常：通常用在多级方法调用上，最终想将异常返回到最上层进行处理的时候，那么就把异常向上抛出，知道调用的方法处，进行异常捕获。
备注：这两种情况也没法说那种就好，只能是根据实际情况来进行相应的处理。

------------

无法破解。
解释：RAR密码是经过加密程序加密的，加密过程通常具有不可逆性，也就是即使知道加密后的字符串也无法获取到相应的原有密码。
备注：建议还是想办法通过找回密码，或者是想想原有密码的形式进行密码匹配。

------------

即使再多文件也是通过的单个文件逐次上传的（zip等压缩包实际上是一个文件）。实现思路就是将多个文件循环进行上传，上传方法举例：
/**
* 上传文件
*
* @param fileName
* @param plainFilePath 文件路径路径
* @param filepath
* @return 
* @throws Exception
*/
public static String fileUploadByFtp(String plainFilePath, String fileName, String filepath) throws Exception {
FileInputStream fis = null;
ByteArrayOutputStream bos = null;
FTPClient ftpClient = new FTPClient();
String bl = "false";
try {
fis = new FileInputStream(plainFilePath);
bos = new ByteArrayOutputStream(fis.available());
byte[] buffer = new byte[1024];
int count = 0;
while ((count = fis.read(buffer)) != -1) {
bos.write(buffer, 0, count);
}
bos.flush();
Log.info("加密上传文件开始");
Log.info("连接远程上传服务器"+CCFCCBUtil.CCFCCBHOSTNAME+":"+22);
ftpClient.connect(CCFCCBUtil.CCFCCBHOSTNAME, 22);
ftpClient.login(CCFCCBUtil.CCFCCBLOGINNAME, CCFCCBUtil.CCFCCBLOGINPASSWORD);
FTPFile[] fs;
fs = ftpClient.listFiles();
for (FTPFile ff : fs) {
if (ff.getName().equals(filepath)) {
bl="true";
ftpClient.changeWorkingDirectory("/"+filepath+"");
}
}
Log.info("检查文件路径是否存在：/"+filepath);
if("false".equals(bl)){
ViewUtil.dataSEErrorPerformedCommon( "查询文件路径不存在："+"/"+filepath);
return bl;
}
ftpClient.setBufferSize(1024);
ftpClient.setControlEncoding("GBK");
// 设置文件类型（二进制）
ftpClient.setFileType(FTPClient.BINARY_FILE_TYPE);
ftpClient.storeFile(fileName, fis);
Log.info("上传文件成功："+fileName+"。文件保存路径："+"/"+filepath+"/");
return bl;
} catch (Exception e) {
throw e;
} finally {
if (fis != null) {
try {
fis.close();
} catch (Exception e) {
Log.info(e.getLocalizedMessage(), e);
}
}
if (bos != null) {
try {
bos.close();
} catch (Exception e) {
Log.info(e.getLocalizedMessage(), e);
}
}
}
}
备注：只需要修改上传的服务器地址、用户名、密码即可进行服务器访问上传。根据实际需要修改即可。















实现上传下载实际上就是io的转换。举例：
import hkrt.b2b.view.util.Log;
import hkrt.b2b.view.util.ViewUtil;
import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;

import org.apache.commons.net.ftp.FTPClient;
import org.apache.commons.net.ftp.FTPFile;

public class CCFCCBFTP {

/**
* 上传文件
*
* @param fileName
* @param plainFilePath 明文文件路径路径
* @param filepath
* @return 
* @throws Exception
*/
public static String fileUploadByFtp(String plainFilePath, String fileName, String filepath) throws Exception {
FileInputStream fis = null;
ByteArrayOutputStream bos = null;
FTPClient ftpClient = new FTPClient();
String bl = "false";
try {
fis = new FileInputStream(plainFilePath);
bos = new ByteArrayOutputStream(fis.available());
byte[] buffer = new byte[1024];
int count = 0;
while ((count = fis.read(buffer)) != -1) {
bos.write(buffer, 0, count);
}
bos.flush();
Log.info("加密上传文件开始");
Log.info("连接远程上传服务器"+CCFCCBUtil.CCFCCBHOSTNAME+":"+22);
ftpClient.connect(CCFCCBUtil.CCFCCBHOSTNAME, 22);
ftpClient.login(CCFCCBUtil.CCFCCBLOGINNAME, CCFCCBUtil.CCFCCBLOGINPASSWORD);
FTPFile[] fs;
fs = ftpClient.listFiles();
for (FTPFile ff : fs) {
if (ff.getName().equals(filepath)) {
bl="true";
ftpClient.changeWorkingDirectory("/"+filepath+"");
}
}
Log.info("检查文件路径是否存在：/"+filepath);
if("false".equals(bl)){
ViewUtil.dataSEErrorPerformedCommon( "查询文件路径不存在："+"/"+filepath);
return bl;
}
ftpClient.setBufferSize(1024);
ftpClient.setControlEncoding("GBK");
// 设置文件类型（二进制）
ftpClient.setFileType(FTPClient.BINARY_FILE_TYPE);
ftpClient.storeFile(fileName, fis);
Log.info("上传文件成功："+fileName+"。文件保存路径："+"/"+filepath+"/");
return bl;
} catch (Exception e) {
throw e;
} finally {
if (fis != null) {
try {
fis.close();
} catch (Exception e) {
Log.info(e.getLocalizedMessage(), e);
}
}
if (bos != null) {
try {
bos.close();
} catch (Exception e) {
Log.info(e.getLocalizedMessage(), e);
}
}
}

}

/**
*下载文件
*
* @param localFilePath
* @param fileName
* @param routeFilepath
* @return 
* @throws Exception
*/
public static String fileDownloadByFtp(String localFilePath, String fileName,String routeFilepath) throws Exception {
FileInputStream fis = null;
ByteArrayOutputStream bos = null;
FileOutputStream fos = null;
FTPClient ftpClient = new FTPClient();
String SFP = System.getProperty("file.separator");
String bl = "false";
try {
Log.info("下载并解密文件开始");
Log.info("连接远程下载服务器"+CCFCCBUtil.CCFCCBHOSTNAME+":"+22);
ftpClient.connect(CCFCCBUtil.CCFCCBHOSTNAME, 22);
ftpClient.login(CCFCCBUtil.CCFCCBLOGINNAME, CCFCCBUtil.CCFCCBLOGINPASSWORD);
// ftpClient.connect(CMBCUtil.CMBCHOSTNAME, 2021);
// ftpClient.login(CMBCUtil.CMBCLOGINNAME, CMBCUtil.CMBCLOGINPASSWORD);
FTPFile[] fs; 

ftpClient.makeDirectory(routeFilepath);
ftpClient.changeWorkingDirectory(routeFilepath);
bl = "false";
fs = ftpClient.listFiles();
for (FTPFile ff : fs) {
if (ff.getName().equals(fileName)) {
bl = "true";
Log.info("下载文件开始。");
ftpClient.setBufferSize(1024);
// 设置文件类型（二进制）
ftpClient.setFileType(FTPClient.BINARY_FILE_TYPE);
InputStream is = ftpClient.retrieveFileStream(fileName);
bos = new ByteArrayOutputStream(is.available());
byte[] buffer = new byte[1024];
int count = 0;
while ((count = is.read(buffer)) != -1) {
bos.write(buffer, 0, count);
}
bos.flush();
fos = new FileOutputStream(localFilePath+SFP+fileName);
fos.write(bos.toByteArray());
Log.info("下载文件结束："+localFilePath);
}
}
Log.info("检查文件是否存："+fileName+" "+bl);
if("false".equals(bl)){
ViewUtil.dataSEErrorPerformedCommon("查询无结果，请稍后再查询。");
return bl;
}
return bl;
} catch (Exception e) {
throw e;
} finally {
if (fis != null) {
try {
fis.close();
} catch (Exception e) {
Log.info(e.getLocalizedMessage(), e);
}
}
if (bos != null) {
try {
bos.close();
} catch (Exception e) {
Log.info(e.getLocalizedMessage(), e);
}
}
if (fos != null) {
try {
fos.close();
} catch (Exception e) {
Log.info(e.getLocalizedMessage(), e);
}
}
}
}}
备注：以上方法就实现了流的二进制上传下载转换，只需要将服务器连接部分调整为本地的实际ftp服务用户名和密码即可。


------------

提问者所指的数据库应该是表空间。
创建表空间：
CREATE TABLESPACE TBS_ETL_DATA LOGGING DATAFILE 'G:\oracle\product\10.2.0\oradata\tbs_etl_data01.dbf' SIZE 521M AUTOEXTEND OFF;
创建用户：
create user vpetl identified by vpetl default tablespace TBS_ETL_DATA;
赋权限：
grant connect,resource,alter system,debug connect session,select any table,delete any table,drop any table,alter any table to vpetl;
创建表：
create table tablename(id varchar2(20));
备注：创建表空间的file路径根据实际需要修改为linux等系统的路径即可。

------------

相对路径的话，可以先获取到当前文件的编译路径，之后在找到想找文件的路径的思路来实现。
举例：
XMLS.class.getClass().getResourceAsStream("/test/test.txt");
解释：XMLS.class.getClass()是获取当前的类编译路径，之后通过getResourceAsStream的形式即可找到要读取的文件的路径。
备注：这个方法中后面的路径也可以通过截取的形式来进行路径获取，实现原理都是找到当前类路径，之后通过相对位置找到另外文件路径。


可以通过“ 类名.class.getResource("").getPath()”方法实现。
举例：”String path = XMLS.class.getResource("").getPath()“.
解释：以上语句就是获取到XMLS编译后的绝对路径（无法获取到java文件路径的，因为java运行的都是class文件）。

------------

原因一：当前的编译路径并非是java类的存放路径；
原因二：java类中没有定义或者定义的main方法有错误；
解决办法：
第一步：通过”cd“命令切换到java类的存放路径；
第二步：重新确认java类中的代码编写是否正确；
第三步：输入”javac 类名.java“,回车，执行运行，如果不报错说明编译正常，如果报错，根据错误修改java类代码即可。
第四步：输入”java 类名“进行文件运行即可。

------------

要讲super就不能不提this，下面从4个角度讲解一下super（需要对比的时候拿this对比一下，加深理解）
1. super关键字表示超（父）类的意思。this变量代表对象本身。
2. super访问父类被子类隐藏的变量或覆盖的方法。当前类如果是从超类继承而来的，当调用super.XX()就是调用基类版本的XX（）方法。其中超类是最近的父类。
3.调用super() 父类构造函数的时候只能调用在子类构造函数的第一行
4.this只能在类中的非静态方法中使用，静态方法和静态的代码块中绝对不能出现this。并且this只和特定的对象关联，而不和类关联，同一个类的不同对象有不同的this

例如：
class Person { 
protected void print() { 
System.out.println("The print() in class Person."); 
} 
} 
public class DemoSuper extends Person { 
public DemoSuper(){ 
super(); //调用父类的构造方法，而且放第一行，如果不写，系统自动加 
} 
public void print() { 
System.out.println("The print() in class DemoSuper."); 
super.print();// 调用父类的方法 
} 
public static void main(String[] args) { 
DemoSuper ds = new DemoSuper(); 
ds.print(); 
} 
}

------------

纠正下，java中没有最牛，只有最合适。
C/S （Client/Server）结构，即大家熟知的客户机和服务器结构。它是软件系统体系结构，通过它可以充分利用两端硬件环境的优势，将任务合理分配到Client端和Server端来实现，降低了系统的通讯开销。目前大多数应用软件系统都是Client/Server形式的两层结构，由于现在的软件应用系统正在向分布式的Web应用发展，Web和Client/Server 应用都可以进行同样的业务处理，应用不同的模块共享逻辑组件；因此，内部的和外部的用户都可以访问新的和现有的应用系统，通过现有应用系统中的逻辑可以扩展出新的应用系统。这也就是目前应用系统的发展方向。
B/S（Browser/Server）结构即浏览器和服务器结构。它是随着Internet技术的兴起，对C/S结构的一种变化或者改进的结构。在这种结构下，用户工作界面是通过WWW浏览器来实现，极少部分事务逻辑在前端（Browser）实现，但是主要事务逻辑在服务器端（Server）实现，形成所谓三层3-tier结构。这样就大大简化了客户端电脑载荷，减轻了系统维护与升级的成本和工作量，降低了用户的总体成本（TCO）。以目前的技术看，局域网建立B/S结构的网络应用，并通过Internet/Intranet模式下数据库应用，相对易于把握、成本也是较低的。它是一次性到位的开发，能实现不同的人员，从不同的地点，以不同的接入方式（比如LAN, WAN, Internet/Intranet等）访问和操作共同的数据库；它能有效地保护数据平台和管理访问权限，服务器数据库也很安全 。特别是在JAVA这样的跨平台语言出现之后，B/S架构管理软件更是方便、快捷、高效。
备注：应用场景不一样，需要的实现不一样，所以不要用牛不牛来进行一个架构的评价，要根据实际需要来进行权衡。

------------

权限有以下几种：
R ： 只读文件属性。A：存档文件属性。S：系统文件属性。H：隐藏文件属性。
代码举例：
File file=new File("D:/hello");//定义文件路径
try { 
if(!file.exists())
file.mkdir();//如果文件路径不存在就创建一个
String string=" attrib +H "+file.getAbsolutePath(); //设置文件属性为隐藏
Runtime.getRuntime().exec(string); //
} catch (IOException e) { 
e.printStackTrace(); 
} 
} 
}

------------

技能方面
一：精通 Java 编程语言 ; 丰富的核心代码开发经验；  
二： 精通 JSP/Servlet 、 Struts 、 Spring 、 Hibernate 等主流框架及工具，在实际项目中的有丰富的实战经验应用。    
三：熟悉数据库理论，具备 Mysql 、 Oracle 开发经验；  
工作态度方面
一：工作认真负责，具有强烈的敬业精神，良好的沟通能力和团队协作精神。
二：面对问题要主动的进行解决，也就是说乐观的工作态度。

------------

第一步：在桌面上右击，选择“个性化”；
第二步：在弹出的窗口中，选择“窗口颜色”；
第三步：选择合适的颜色，点击确保，保存即可。

第一步：在桌面上右击，选择“个性化”；
第二步：在弹出的窗口中，选择“桌面背景”；
第三步：勾选多张图片（全选），之后选择”更改图片时间间隔“。
第四步：点击”保存修改“，之后图片会自动切换。
备注：如果一张图片是没法切换的。

------------

这个没有一个固定的标准的。
如果是当前某些公司是有现成的系统，那么只需要根据实际的需要，修改其中的部分功能，并提供维护，可能几千到一两万就可以完成；
如果是某些公司要重新确认需求，重新进行代码开发和测试、维护，那么此情况下，要耗费更多的时间，所以可能是几万甚至是十几万。
备注：建议是找某些专门开发此类系统的公司进行开发，可以节约成本，并且相关技术更熟练些，也就是双赢的局面。

------------

实现思路：就是循环获取到文件夹中的文件，然后逐一的进行文件复制。
//复制文件夹
package com.cdd.util;
import java.io.*;
public class FileUtil { 
private static void copy(File[] files, File d) {
if (!d.exists()) //如果指定目录不存在
d.mkdir(); //创建目录
for (int i = 0; i < files.length; i++) { //循环遍历要复制的文件夹
if (files[i].isFile()) { //如果文件夹中是文件
try {
FileInputStream fis = new FileInputStream(files[i]); //创建FileInputStream对象
FileOutputStream out = new FileOutputStream(new File(d
.getPath()
+ File.separator + files[i].getName())); //复制后文件的保存路径
int count = fis.available();
byte[] data = new byte[count];
while ((str = bre.readLine())!= null) //读取文件通过readline方法可以有效的避免乱码
out.write(str ); //将读取的信息写入文件中
} 
out.close(); //关闭流
fis.close();
} catch (Exception e) {
e.printStackTrace();
}
}
if (files[i].isDirectory()) { //如果文件夹中是一个路径
File des = new File(d.getPath() + File.separator
+ files[i].getName()); //在复制后路径中创建子文件夹
des.mkdir();
copy(files[i].listFiles(), des); //再次调用本方法
} 
}
System.out.println("文件夹复制成功");
}

------------

利用死循环和线程，让线程在循环中每sleep1秒，重新获取下系统时间就是动态显示时间了。
while(true){
Date date=new Date(System.currentTimeMillis());
SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
System.out.println(date);
//每一秒刷新下时间
try {
Thread.sleep(1000);//sleep是以ms为单位
} catch (InterruptedException e) {
// TODO Auto-generated catch block
e.printStackTrace();
}
}

------------

通过设置电脑语言来实现。
第一步：点击”我的电脑“进入“我的电脑”页面，之后选择”控制面板“；
第二步：在”控制面板“设置界面选择“时钟、语言和区域”进入。
第三步：在”区域语言“页面选择”更改位置“；
第四步：选择”简体中文“即可。选择完毕后点击”确定“按钮。

------------

如果想去得system权限，必须用系统管理员权限登录到win7 后重新进行权限赋值。
第一步：在控制面板中选择“添加或删除用户”；
第二步：选中要修改权限的用户，之后选择“更改账户类型”；
第三步：将其从“标准账户”选择为“管理员”，点击“更改账户类型”；
第四步：重启计算机，选择刚才设置的账户即可。

------------

like表示模糊查询：
sql：select * from tablename where username like '%zhangsan%'；
解释：以上语句中是查询出tablename表中username字段中有“zhangsan”的所有记录。
备注：不管是存储过程、function、table中like的用法都是一致的。

------------

数据库（database）：物理操作系统文件或磁盘（ disk）的集合。使用Oracle 10g 的自动存储管理（Automatic Storage Management，ASM）或RAW 分区时，数据库可能不作为操作系统中单独的文件，但定义仍然不变。
实例（instance）：一组Oracle 后台进程/线程以及一个共享内存区，这些内存由同一个计算机上运行的线程/进程所共享。这里可以维护易失的、非持久性内容（有些可以刷新输出到磁盘）。就算没有磁盘存储，数据库实例也能存在。也许实例不能算是世界上最有用的事物，不过你完全可以把它想成是最有用的事物，这有助于对实例和数据库划清界线。

这两个词有时可互换使用，不过二者的概念完全不同。实例和数据库之间的关系是：数据库可以由多个实例装载和打开，而实例可以在任何时间点装载和打开一个数据库。实际上，准确地讲，实例在其整个生存期中最多能装载和打开一个数据库！

补充：
一般来说，我们的一个数据库对应一个实例，但在集群RAC情况下，共享数据库文件时，一个数据库是可以被多个实例同时使用的。
演示启动xxx实例，挂接数据库，打开数据库，关闭数据库、卸载数据库、关闭实例的过程。

　　1、为了能进行以上操作，oracle的监听必须首先启动，这样，我们才有机会连接到oracle服务器端。可以通过如下命令进行：lsnrctl start;

　　2、oracle启动，windows下通常在服务里启动oracle，一般情况下同时启动相关实例，但也可以设置启动oracle时，不启动任何指定实例，这样oracle的启动速度相当快。

　　3、设定我们需要启动的相关实例。在console窗口中，输入 set oracle_sid=xxx (unix环境下用export命令)

　　4、用/nolog方式，进入sqlplus。 在console窗口中，输入 sqlplus /nolog ，然后回车，则进入sqlplus环境。

　　5、输入命令 connect sys as sysdba 回车后，提示输入口令，直接回车，则以sysdba的角色连接到oracle的空闲实例。

　　6、输入命令 startup nomount 回车，则启动了xxx实例，由set oracle_sid=xxx设置。

　　7、输入命令 alter database mount 回车，则将相应的数据库挂接到xxx实例。

　　8、输入命令 alter database open 回车，则打开了相应数据库。

　　9、输入命令 shutdown，则关闭数据库、卸载数据库、关闭实例。

------------

把一个maven项目转化成web项目方法：

创建Web工程，使用eclipse ee创建maven web工程 。
1、右键项目,选择Project Facets,点击Convert to faceted from 。
2。更改Dynamic Web Module的Version为2.5(3.0为Java7的,Tomcat6不支持)。 如果提示错误,可能需要在Java Compiler设置Compiler compliance level 为1.6 。或者需要在此窗口的Java的Version改成1.6。 
3、点击下面的Further configuration available…，弹出Modify Faceted Project窗口 此处是设置web。xml文件的路径,输入src/main/webapp. Generate web.xml deployment descriptor自动生成web.xml文件,可选可不选。 
4、点击OK。
5、设置部署程序集(Web Deployment Assembly) 
6、在右键项目打开此窗口、在左侧列表中会出现一个Deployment Assembly,点击进去后。
7、删除test的两项,因为test是测试使用,并不需要部署。 
8、设置将Maven的jar包发布到lib下。 Add -> Java Build Path Entries -> Maven Dependencies -> Finish 完成后有: /src/main/webapp / /src/main/java /WEB-INF/classes /src/main/resources /WEB-INF/classes Maven Dependencies /WEB-INF/lib 好了。

------------

第一步：在桌面点右键，然后在弹出菜单中选择“属性”；
第二步：点击“属性”菜单后，打开“显示属性”对话框，默认位于主题选项卡中；
第三步：点击上方选项卡中的“外观”，打开外观页面，之后点击右下方的“高级”按钮；
第四步：点击“高级”按钮后，打开“高级外观”设置对话框，在左下方的“项目”下的列表中我们可以看到当前是“桌面”；
第五步：点击“项目”下面的“桌面”，之后在打开的项目列表中选择“图标”；
第六步：项目列表中选择“图标”后，将”大小“数值变大一些即可。

------------

​第一步：点击桌面左下角的”开始菜单“，之后选择”程序“；
第二步：在”附件“中找到”记事本“；
第三步：选中，之后右击。选择”发送到“；
第四步：选择”桌面快捷方式“即可完成设置。

------------

第一步：​在图标显示上右击，选择”属性“；
第二步：选择左下角的”自定义“图标；
第三步：找到”声音图标“，选择”显示图标和通知“；
第四步：点击”确定“完成设置。
第五步：此时在图标显示栏就可以看见声音图标了，之后点击”合成器“设置即可。

第一步：点击“计算机”或者“我的电脑”，进入计算机界面；
第二步：选择“卸载或更新程序”；
第三步：找到“pokki”安装程序，选中，右击选择“卸载”，之后点击“确定”即可完成卸载操作。

说明设置了图片切换时间，取消一下就行了。
第一步：在桌面上右击，选择“个性化”；
第二步：在弹出的窗口中，选择“桌面背景”；
第三步：选择“设置的壁纸”，之后只勾选上想设置的壁纸（一张），点击“保存需改”即可，此时图片就不会在切换了。




第一步：在桌面上（想拖拽文件的文件夹也可以）右击，选中“查看”；
第二步：之后将“自动排列图标”和“对齐到网格”勾选掉。
第三步：根据实际需要，随意拖拽到相应的位置即可。
如果以后也不想排列的话：
第四步：在桌面上点击“我的电脑”，进入我的电脑设置界面。
第五步：点击“组织”，下拉选的“文件夹和搜索选项”。
第六步：点击“查看”下面的“应用到所有文件夹”，之后图标就会自动按照设置顺序排列了。




------------

第一步：找到所有要复制文件夹的上级路径；
第二步：在搜索框中输入要复制文件的规则类型，如“.doc”;
第三步：等待搜索结束，之后ctrl+a选中所有的文件，右击“复制”（ctrl+c）；
第四步：找到要粘贴的位置，右击“粘贴”（ctrl+v）即可。
备注：如果所有的文件没有任何规律，那么只能是一个个的进行复制了。如果是多个文件下的同一个文件名和类型。那么无法复制到同一个文件夹的。

------------

第一步：在图标显示上右击，选择”属性“；
第二步：选择左下角的”自定义“图标；
第三步：找到”声音图标“，选择”显示图标和通知“；
第四步：点击”确定“完成设置。
第五步：此时在图标显示栏就可以看见声音图标了，之后点击”合成器“设置即可。


首先需要选中要隐藏的东西，右击属性，选中“隐藏”，点击确定。之后进行如下操作：
第一步：点击”我的电脑“进入”我的电脑“界面。
第二步：选择菜单栏”工具“下拉选的”文件夹选了“。
第三步：在”查看“中，勾选上”隐藏文件、文件夹和驱动“，点击”确定“即可完成设置。

------------

第一步：首先需要通过wifi连接到对应的路由器；
第二步：查看路由器后面的使用说明标签，找到 ip和默认的用户名、密码；
第三步：打开浏览器输入”http://ip“,回车；
第四步：在弹出的页面中输入用户名和密码，此时即可进入路由器界面。
备注：初始化电脑连接路由是没有密码的，再就是如果忘记密码，可以通过reset按钮重置即可。


连接上wifi只不过是连接路由器了，通常是需要设置路由器联网之后才可以用的。
第一步：首先需要通过wifi连接到对应的路由器；
第二步：查看路由器后面的使用说明标签，找到 ip和默认的用户名、密码；
第三步：打开浏览器输入”http://ip“,回车；
第四步：在弹出的页面中输入用户名和密码，此时即可进入路由器界面。
第五步：进入设置向导界面；
第六步：选择上网方式：PPPoE；
第七步：输入宽带相应的帐号跟密码（营业厅给的）；
第八步：设置路由器无线的的连接用户名和密码，点击“保存”；
第九步:直接在电脑上找到无线的信息，输入密码上网即可。

------------

可以用U盘安装win7系统的：
1、制作启动盘。下载老毛桃、大白菜、装你妹等（都是免费的）U盘制作软件，安装软件，启动，按提示制作好启动盘。
2、下载一个win7的ISO文件，压缩型系统文件解压（ISO型系统文件直接转到U盘）到制作好的U盘，启动盘就做好了。
3、用U盘安装系统。插入U盘开机，按DEL或其它键进入BIOS，设置从USB启动-F10-Y-回车。（台机：removable是可移动的驱动器，USB HDD是在硬盘启动器里面的，可以用小键盘上那个有+号的键调整USB启动到最上面就行了）
4、进入PE界面后，选择“安装系统”。
5、安装完成后，拔出U盘，电脑自动重启，点击：从本地硬盘启动电脑，继续安装。
6、安装完成后，重启。开机-进入BIOS-设置电脑从硬盘启动-F10-Y-回车。以后开机就是从硬盘启动了。
备注：下载win7iso文件：http://pan.baidu.com/s/1gd8ilj1；

用U盘装系统的前提是需要先把电脑设置成USB设备为第一启动项。
电脑的启动方式一般有三种，CD光驱启动、硬盘启动、U盘启动。默认情况下是从硬盘启动。下面讲解一下戴尔笔记本电脑设置从U盘启动的方法：
启动计算机，并按住F2键不放（也有电脑按del的，电脑的品牌或型号不同，操作方法也不同，请根据提示），直到出现BIOS设置窗口。 
选择并进入第二项，“AdvancedBIOS Features (高级BIOS功能）选项”。在里面找到Boot Devlice priorfty(启动装置顺序），并找到依次排列的“FIRST”“SECEND”“THIRD”三项(有的BIOS为1st Boot Device;2nd Boot Device)，分别代表“第一项启动”“第二项启动”和“第三项启动”。
这里我们按顺序依次设置为“移动设备－USB”；“光驱－CDROM”；“硬盘－Hard Disk”即可。（如在这一页没有见到这三项英文，通常BOOT右边的选项菜单为“SETUP”，这时按回车进入即可看到了）。
选择好启动方式后，按F10键，出现英文对话框，按“Y”键（可省略），并回车，计算机自动重启，证明更改的设置生效了。
设置好U盘启动之后，把u盘插在电脑上，启动电脑，电脑就会自动读取U盘数据。然后就会进入系统安装环境。根据提示安装完系统就可以了。



可能原因是设置的DVD启动或者是UBS启动，切换一下即可；
第一步：开机按DEL或F2键进入BIOS，
第二步：选择“Advanced BIOS Features”设置项，按回车键进入；
第三步：选择第一项（从硬盘启动）；
第三步：按F10，之后选择“Y”，点击“回车”即可完成设置，重新启动电脑即可。

1.首先到ghost基地“www.ghost008.com/win7”去下载WIN7的操作系统：
2.将下载的WIN7的操作系统，解压到D盘(不要解压到C盘)。
3.打开解压后的文件夹，双击“AUTORUN”，在打开的窗口中，点击“安装”.即可
4.在出现的窗口中，ghost映像文件路径会自动加入，选择需要还原到的分区，默认是C盘，点击“确定”按钮即可自动安装。


可以用U盘重新安装win8系统的：
1、制作启动盘。下载老毛桃、大白菜、装你妹等（都是免费的）U盘制作软件，安装软件，启动，按提示制作好启动盘。
2、下载一个win8的ghost文件，将下载好的ghost文件放到制作好的U盘的ghost文件夹下，启动盘就做好了。
3、用U盘安装系统。插入U盘开机，按F2键进入BIOS，设置从USB启动-F10-Y-回车。
4、进入PE界面后，选择“安装系统”。
5、安装完成后，拔出U盘，电脑自动重启，点击：从本地硬盘启动电脑，继续安装。
6、安装完成后，重启。开机-进入BIOS-设置电脑从硬盘启动-F10-Y-回车。以后开机就是从硬盘启动了。



可以用U盘重新安装win7位系统的：
1、制作启动盘。下载老毛桃、大白菜、装你妹等（都是免费的）U盘制作软件，安装软件，启动，按提示制作好启动盘。
2、下载一个win7的ghost文件，将下载好的ghost文件放到制作好的U盘的ghost文件夹下，启动盘就做好了。
3、用U盘安装系统。插入U盘开机，按F12键进入BIOS，设置从USB启动-F10-Y-回车。
4、进入PE界面后，选择“安装系统”。
5、安装完成后，拔出U盘，电脑自动重启，点击：从本地硬盘启动电脑，继续安装。
6、安装完成后，重启。开机-进入BIOS-设置电脑从硬盘启动-F10-Y-回车。以后开机就是从硬盘启动了。
备注：如果找不到U盘启动的话，可以重新设置下。
第一步：开机按F12键进入BIOS；
第二步：在 BIOS 的BOOT菜单下，将Secure Boot 改为 Disabled；
第三步：将Boot List Option 改为 Legacy，重新启动；
第四步：按F2再次进入BIOS界面，选择“Advanced BIOS Features”设置项，按回车键进入；
第五步：选择第二项（从U盘启动）；
第六步：按F10，之后选择“Y”，点击“回车”即可完成设置，重新启动电脑即可。


果停留的时间不超过30分钟，建议耐心等待，因为此过程需要下载win10安装包，如果网络不好的情况下，安装过程确实是比较长，如果是时间过长的话，建议取消安装，之后通过其他方式进行安装。
可以用U盘重新安装win10系统的：
1、制作启动盘。下载老毛桃、大白菜、装你妹等（都是免费的）U盘制作软件，安装软件，启动，按提示制作好启动盘。
2、下载一个win10的ISO文件（下载好的就直接放），压缩型系统文件解压（ISO型系统文件直接转到U盘）到制作好的U盘，启动盘就做好了。
3、用U盘安装系统。插入U盘开机，按F2键进入BIOS，设置从USB启动-F10-Y-回车。
4、进入PE界面后，选择“安装系统”。
5、安装（此过程会自动先格式化系统安装盘）完成后，拔出U盘，电脑自动重启，点击：从本地硬盘启动电脑，继续安装。
6、安装完成后，重启。开机-进入BIOS-设置电脑从硬盘启动-F10-Y-回车。以后开机就是从硬盘启动了。


第一步：开机按F12键进入BIOS；
第二步：在 BIOS 的BOOT菜单下，将Secure Boot 改为 Disabled；
第三步：将Boot List Option 改为 Legacy，重新启动；
第四步：按F2再次进入BIOS界面，选择“Advanced BIOS Features”设置项，按回车键进入；
第五步：选择第三项（从DVD启动）；
第六步：按F10，之后选择“Y”，点击“回车”即可完成设置，重新启动电脑即可。
第七步：加载光盘后，直接选中一键装机，等待安装完成即可。













------------

1、桌上右键点击“我的电脑”，选择“管理”；
2、选择“本地用户和组”下面的“用户”；
3、从用户列表中选中“Administrator”用户，右键点击打开“属性”；
​4、将属性中“账户已禁用”的勾去掉，点击确定即可。

------------

重新配置下高级环境变量即可。
第一步：在“计算机”右击“属性”；
第二步：之后选择“高级环境变量”，在选择“环境变量”；
第三步：找到变量“path”，点击“编辑”；
第四步：将“%SystemRoot%\system32; %SystemRoot%; %SystemRoot% \System32 \Wbem ” 填入变量值里即可。
备注：路径直接的分隔用英文的“;”(分号)。

------------

把自动还原系统设置，在开机不要启动即可。
第一步：点击桌面左下角的“开始“；
第二步：在搜索框中输入”msconfig.exe“，回车；
第三步：在打开的对话框中选择“启动” ；
第四步：把那个“开机自动运行的还原程序”前面的勾去掉，之后点击“应用”即可。
备注：可以把所有的都取消掉。

------------

第一步：打开ie,地址栏输入192.168.1.1；
第二步：输入帐号和密码，一般都是admin（可以在路由背面查看）；
第三步：进入设置向导界面；
第四步：选择上网方式：PPPoE；
第五步：输入宽带相应的帐号跟密码（营业厅给的）；
第六步：设置路由器无线的的连接用户名和密码，点击“保存”；
第七步:直接在电脑上找到无线的信息，输入密码上网即可。
备注：如果是台式机，那么只能是通过路由的wan端口通过网线连接到电脑进行上网。

------------

可能原因是设置的不对，可以参考下以下步骤：
第一步：用数据线一端连接安卓手机，另一端插入电脑的USB接口；
第二步：然后通过百度搜索，下载一个安卓手机助手。比如：百度手机助手、91手机助手、豌豆荚手机助手等等；
第三步：下载好并安装好安卓手机助手后，启动安卓手机助手；
第四步：安卓手机助手会提示设置手机并下载安装适用的驱动，使得手机能连接电脑，只需要按照安卓手机助手的提示操作即可；
第五步：进入手机“设置”，选择“应用程序”或者“开发人员选项”，勾选“USB调试”；
第六步：安卓手机通过安卓手机助手连接电脑成功后，此时即可在手机助手首页上管理存储文件了。

------------

可以参考下开机发出的声音次数和长短看看，具体的问题：
Award BIOS
1短：系统正常启动。表明机器没有任何问题。
2短：常规错误，请进入CMOS Setup，重新设置不正确的选项。 
1长1短：内存或主板出错。换一条内存试试，若还是不行，只好更换主板。 
1长2短：显示器或显示卡错误。 
1长3短：键盘控制器错误。检查主板。 
1长9短：主板Flash RAM或EPROM错误，BIOS损坏。换块Flash RAM试试。 
不断地响(长声)：内存条未插紧或损坏。重插内存条，或更换内存。

AMI BIOS 
1短：内存刷新失败。更换内存条。
2短：内存ECC较验错误。在CMOS Setup中将内存关于ECC校验的选项设为Disabled就可以解决，不过最根本的解决办法还是更换一条内存。 
3短：系统基本内存检查失败。换内存。 
4短：系统时钟出错。 
5短：CPU出现错误。 
6短：键盘控制器错误 
7短：系统实模式错误，不能切换到保护模式。 
8短：显示内存错误。显示内存有问题，更换显卡试试。 
9短：BIOS芯片检验和错误。 
1长3短：内存错误。内存损坏，更换即可。 
1长8短：显示测试错误。显示器数据线没插好或显示卡没插。

------------

电脑主板故障诊断卡代码对照表 
00 . 已显示系统的配置；即将控制INI19引导装入。 . 
01 处理器测试1，处理器状态核实,如果测试失败，循环是无限的。 处理器寄存器的测试即将开始，不可屏蔽中断即将停用。 CPU寄存器测试正在进行或者失败。 
02 确定诊断的类型（正常或者制造）。如果键盘缓冲器含有数据就会失效。 停用不可屏蔽中断；通过延迟开始。 CMOS写入／读出正在进行或者失灵。 
03 清除8042键盘控制器，发出TESTKBRD命令（AAH） 通电延迟已完成。 ROM BIOS检查部件正在进行或失灵。 
04 使8042键盘控制器复位，核实TESTKBRD。 键盘控制器软复位／通电测试。 可编程间隔计时器的测试正在进行或失灵。 
05 如果不断重复制造测试1至5，可获得8042控制状态。 已确定软复位／通电；即将启动ROM。 DMA初如准备正在进行或者失灵。 
06 使电路片作初始准备，停用视频、奇偶性、DMA电路片，以及清除DMA电路片，所有页面寄存器和CMOS停机字节。 已启动ROM计算ROM BIOS检查总和，以及检查键盘缓冲器是否清除。 DMA初始页面寄存器读／写测试正在进行或失灵。 
07 处理器测试2，核实CPU寄存器的工作。 ROM BIOS检查总和正常，键盘缓冲器已清除，向键盘发出BAT（基本保证测试）命令。 . 
08 使CMOS计时器作初始准备，正常的更新计时器的循环。 已向键盘发出BAT命令，即将写入BAT命令。 RAM更新检验正在进行或失灵。 
09 EPROM检查总和且必须等于零才通过。 核实键盘的基本保证测试，接着核实键盘命令字节。 第一个64K RAM测试正在进行。 
0A 使视频接口作初始准备。 发出键盘命令字节代码，即将写入命令字节数据。 第一个64K RAM芯片或数据线失灵，移位。 
0B 测试8254通道0。 写入键盘控制器命令字节，即将发出引脚23和24的封锁／解锁命令。 第一个64K RAM奇／偶逻辑失灵。 
0C 测试8254通道1。 键盘控制器引脚23、24已封锁／解锁；已发出NOP命令。 第一个64K RAN的地址线故障。 
0D 1、检查CPU速度是否与系统时钟相匹配。2、检查控制芯片已编程值是否符合初设置。3、视频通道测试，如果失败，则鸣喇叭。 已处理NOP命令；接着测试CMOS停开寄存器。 第一个64K RAM的奇偶性失灵 
0E 测试CMOS停机字节。 CMOS停开寄存器读／写测试；将计算CMOS检查总和。 初始化输入／输出端口地址。 
0F 测试扩展的CMOS。 已计算CMOS检查总和写入诊断字节；CMOS开始初始准备。 . 
10 测试DMA通道0。 CMOS已作初始准备，CMOS状态寄存器即将为日期和时间作初始准备。 第一个64K RAM第0位故障。 
11 测试DMA通道1。 CMOS状态寄存器已作初始准备，即将停用DMA和中断控制器。 第一个64DK RAM第1位故障。 
12 测试DMA页面寄存器。 停用DMA控制器1以及中断控制器1和2；即将视频显示器并使端口B作初始准备。 第一个64DK RAM第2位故障。 
13 测试8741键盘控制器接口。 视频显示器已停用，端口B已作初始准备；即将开始电路片初始化／存储器自动检测。 第一个64DK RAM第3位故障。 
14 测试存储器更新触发电路。 电路片初始化／存储器处自动检测结束；8254计时器测试即将开始。 第一个64DK RAM第4位故障。 
15 测试开头64K的系统存储器。 第2通道计时器测试了一半；8254第2通道计时器即将完成测试。 第一个64DK RAM第5位故障。 
16 建立8259所用的中断矢量表。 第2通道计时器测试结束；8254第1通道计时器即将完成测试。 第一个64DK RAM第6位故障。 
17 调准视频输入／输出工作，若装有视频BIOS则启用。 第1通道计时器测试结束；8254第0通道计时器即将完成测试。 第一个64DK RAM第7位故障。 
18 测试视频存储器，如果安装选用的视频BIOS通过，由可绕过。 第0通道计时器测试结束；即将开始更新存储器。 第一个64DK RAM第8位故障。 
19 测试第1通道的中断控制器（8259）屏蔽位。 已开始更新存储器，接着将完成存储器的更新。 第一个64DK RAM第9位故障。 
1A 测试第2通道的中断控制器（8259）屏蔽位。 正在触发存储器更新线路，即将检查15微秒通／断时间。 第一个64DK RAM第10位故障。 
1B 测试CMOS电池电平。 完成存储器更新时间30微秒测试；即将开始基本的64K存储器测试。 第一个64DK RAM第11位故障。 
1C 测试CMOS检查总和。 . 第一个64DK RAM第12位故障。 
1D 调定CMOS配置。 . 第一个64DK RAM第13位故障。 
1E 测定系统存储器的大小，并且把它和CMOS值比较。 . 第一个64DK RAM第14位故障。 
1F 测试64K存储器至最高640K。 . 第一个64DK RAM第15位故障。 
20 测量固定的8259中断位。 开始基本的64K存储器测试；即将测试地址线。 从属DMA寄存器测试正在进行或失灵。 
21 维持不可屏蔽中断（NMI）位（奇偶性或输入／输出通道的检查）。 通过地址线测试；即将触发奇偶性。 主DMA寄存器测试正在进行或失灵。 
22 测试8259的中断功能。 结束触发奇偶性；将开始串行数据读／写测试。 主中断屏蔽寄存器测试正在进行或失灵。 
23 测试保护方式8086虚拟方式和8086页面方式。 基本的64K串行数据读／写测试正常；即将开始中断矢量初始化之前的任何调节。 从属中断屏蔽存器测试正在进行或失灵。 
24 测定1MB以上的扩展存储器。 矢量初始化之前的任何调节完成，即将开始中断矢量的初始准备。 设置ES段地址寄存器注册表到内存高端。 
25 测试除头一个64K之后的所有存储器。 完成中断矢量初始准备；将为旋转式断续开始读出8042的输入／输出端口。 装入中断矢量正在进行或失灵。 
26 测试保护方式的例外情况。 读出8042的输入／输出端口；即将为旋转式断续开始使全局数据作初始准备。 开启A20地址线；使之参入寻址。 
27 确定超高速缓冲存储器的控制或屏蔽RAM。 全1数据初始准备结束；接着将进行中断矢量之后的任何初始准备。 键盘控制器测试正在进行或失灵。 
28 确定超高速缓冲存储器的控制或者特别的8042键盘控制器。 完成中断矢量之后的初始准备；即将调定单色方式。 CMOS电源故障／检查总和计算正在进行。 
29 . 已调定单色方式，即将调定彩色方式。 CMOS配置有效性的检查正在进行。 
2A 使键盘控制器作初始准备。 已调定彩色方式，即将进行ROM测试前的触发奇偶性。 置空64K基本内存。 
2B 使磁碟驱动器和控制器作初始准备。 触发奇偶性结束；即将控制任选的视频ROM检查前所需的任何调节。 屏幕存储器测试正在进行或失灵。 
2C 检查串行端口，并使之作初始准备。 完成视频ROM控制之前的处理；即将查看任选的视频ROM并加以控制。 屏幕初始准备正在进行或失灵。 
2D 检测并行端口，并使之作初始准备。 已完成任选的视频ROM控制，即将进行视频ROM回复控制之后任何其他处理的控制。 屏幕回扫测试正在进行或失灵。 
2E 使硬磁盘驱动器和控制器作初始准备。 从视频ROM控制之后的处理复原；如果没有发现EGA／VGA就要进行显示器存储器读／写测试。 检测视频ROM正在进行。 
2F 检测数学协处理器，并使之作初始准备。 没发现EGA／VGA；即将开始显示器存储器读／写测试。 . 
30 建立基本内存和扩展内存。 通过显示器存储器读／写测试；即将进行扫描检查。 认为屏幕是可以工作的。 
31 检测从C800：0至EFFF：0的选用ROM，并使之作初始准备。 显示器存储器读／写测试或扫描检查失败，即将进行另一种显示器存储器读／写测试。 单色监视器是可以工作的。 
32 对主板上COM／LTP／FDD／声音设备等I／O芯片编程使之适合设置值。 通过另一种显示器存储器读／写测试；却将进行另一种显示器扫描检查。 彩色监视器（40列）是可以工作的。 
33 . 视频显示器检查结束；将开始利用调节开关和实际插卡检验显示器的关型。 彩色监视器（80列）是可以工作的。 
34 . 已检验显示器适配器；接着将调定显示方式。 计时器滴答声中断测试正在进行或失灵。 
35 . 完成调定显示方式；即将检查BIOS ROM的数据区。 停机测试正在进行或失灵。 
36 . 已检查BIOS ROM数据区；即将调定通电信息的游标。 门电路中A－20失灵。 
37 . 识别通电信息的游标调定已完成；即将显示通电信息。 保护方式中的意外中断。 
38 . 完成显示通电信息；即将读出新的游标位置。 RAM测试正在进行或者地址故障＞FFFFH。 
39 . 已读出保存游标位置，即将显示引用信息串。 . 
3A . 引用信息串显示结束；即将显示发现信息。 间隔计时器通道2测试或失灵。 
3B 用OPTI电路片（只是486）使辅助超高速缓冲存储器作初始准备。 已显示发现＜ESC＞信息；虚拟方式，存储器测试即将开始。 按日计算的日历时钟测试正在进行或失灵。 
3C 建立允许进入CMOS设置的标志。 . 串行端口测试正在进行或失灵。 
3D 初始化键盘／PS2鼠标／PNP设备及总内存节点。 . 并行端口测试正在进行或失灵。 
3E 尝试打开L2高速缓存。 . 数学协处理器测试正在进行或失灵。 
40 . 已开始准备虚拟方式的测试；即将从视频存储器来检验。 调整CPU速度，使之与外围时钟精确匹配。 
41 中断已打开，将初始化数据以便于0：0检测内存变换（中断控制器或内存不良） 从视频存储器检验之后复原；即将准备描述符表。 系统插件板选择失灵。 
42 显示窗口进入SETUP。 描述符表已准备好；即将进行虚拟方式作存储器测试。 扩展CMOS RAM故障。 
43 若是即插即用BIOS，则串口、并口初始化。 进入虚拟方式；即将为诊断方式实现中断。 . 
44 . 已实现中断（如已接通诊断开关；即将使数据作初始准备以检查存储器在0：0返转。） BIOS中断进行初始化。 
45 初始化数学协处理器。 数据已作初始准备；即将检查存储器在0：0返转以及找出系统存储器的规模。 . 
46 . 测试存储器已返回；存储器大小计算完毕，即将写入页面来测试存储器。 检查只读存储器ROM版本。 
47 . 即将在扩展的存储器试写页面；即将基本640K存储器写入页面。 . 
48 . 已将基本存储器写入页面；即将确定1MB以上的存储器。 视频检查，CMOS重新配置。 
49 . 找出1BM以下的存储器并检验；即将确定1MB以上的存储器。 . 
4A . 找出1MB以上的存储器并检验；即将检查BIOS ROM数据区。 进行视频的初始化。 
4B . BIOS ROM数据区的检验结束，即将检查＜ESC＞和为软复位清除1MB以上的存储器。 . 
4C . 清除1MB以上的存储器(软复位)即将清除1MB以上的存储器. 屏蔽视频BIOS ROM。. 
4D 已清除1MB以上的存储器（软复位）；将保存存储器的大小。 . 
4E 若检测到有错误；在显示器上显示错误信息，并等待客户按＜F1＞键继续。 开始存储器的测试：（无软复位）；即将显示第一个64K存储器的测试。 显示版权信息。 
4F 读写软、硬盘数据，进行DOS引导。 开始显示存储器的大小，正在测试存储器将使之更新；将进行串行和随机的存储器测试。 . 
50 将当前BIOS监时区内的CMOS值存到CMOS中。 完成1MB以下的存储器测试；即将高速存储器的大小以便再定位和掩蔽。 将CPU类型和速度送到屏幕。 
51 . 测试1MB以上的存储器。 . 
52 所有ISA只读存储器ROM进行初始化，最终给PCI分配IRQ号等初始化工作。 已完成1MB以上的存储器测试；即将准备回到实址方式。 进入键盘检测。 
53 如果不是即插即用BIOS，则初始化串口、并口和设置时种值。 保存CPU寄存器和存储器的大小，将进入实址方式。 . 
54 . 成功地开启实址方式；即将复原准备停机时保存的寄存器。 扫描“打击键” 
55 . 寄存器已复原，将停用门电路A－20的地址线。 . 
56 . 成功地停用A－20的地址线；即将检查BIOS ROM数据区。 键盘测试结束。 
57 . BIOS ROM数据区检查了一半；继续进行。 . 
58 . BIOS ROM的数据区检查结束；将清除发现＜ESC＞信息。 非设置中断测试。 
59 . 已清除＜ESC＞信息；信息已显示；即将开始DMA和中断控制器的测试。 . 
5A . . 显示按“F2”键进行设置。 
5B . . 测试基本内存地址。 
5C . . 测试640K基本内存。 
60 设置硬盘引导扇区病毒保护功能。 通过DMA页面寄存器的测试；即将检验视频存储器。 测试扩展内存。 
61 显示系统配置表。 视频存储器检验结束；即将进行DMA＃1基本寄存器的测试。 . 
62 开始用中断19H进行系统引导。 通过DMA＃1基本寄存器的测试；即将进行DMA＃2寄存器的测试。 测试扩展内存地址线。 
63 . 通过DMA＃2基本寄存器的测试；即将检查BIOS ROM数据区。 . 
64 . BIOS ROM数据区检查了一半，继续进行。 . 
65 . BIOS ROM数据区检查结束；将把DMA装置1和2编程。 . 
66 . DMA装置1和2编程结束；即将使用59号中断控制器作初始准备。 Cache注册表进行优化配置。 
67 . 8259初始准备已结束；即将开始键盘测试。 . 
68 . . 使外部Cache和CPU内部Cache都工作。 
6A . . 测试并显示外部Cache值。 
6C . . 显示被屏蔽内容。 
6E . . 显示附属配置信息。 
70 . . 检测到的错误代码送到屏幕显示。 
72 . . 检测配置有否错误。 
74 . . 测试实时时钟。 
76 . . 扫查键盘错误。 
7A . . 锁键盘。 
7C . . 设置硬件中断矢量。 
7E . . 测试有否安装数学处理器。 
80 . 键盘测试开始，正在清除和检查有没有键卡住，即将使键盘复原。 关闭可编程输入／输出设备。 
81 . 找出键盘复原的错误卡住的键；即将发出键盘控制端口的测试命令。 . 
82 . 键盘控制器接口测试结束，即将写入命令字节和使循环缓冲器作初始准备。 检测和安装固定RS232接口（串口）。 
83 . 已写入命令字节，已完成全局数据的初始准备；即将检查有没有键锁住。 . 
84 . 已检查有没有锁住的键，即将检查存储器是否与CMOS失配。 检测和安装固定并行口。 
85 . 已检查存储器的大小；即将显示软错误和口令或旁通安排。 . 
86 . 已检查口令；即将进行旁通安排前的编程。 重新打开可编程I／O设备和检测固定I／O是否有冲突。 
87 . 完成安排前的编程；将进行CMOS安排的编程。 . 
88 . 从CMOS安排程序复原清除屏幕；即将进行后面的编程。 初始化BIOS数据区。 
89 . 完成安排后的编程；即将显示通电屏幕信息。 . 
8A . 显示头一个屏幕信息。 进行扩展BIOS数据区初始化。 
8B . 显示了信息：即将屏蔽主要和视频BIOS。 . 
8C . 成功地屏蔽主要和视频BIOS，将开始CMOS后的安排任选项的编程。 进行软驱控制器初始化。 
8D . 已经安排任选项编程，接着检查滑了鼠和进行初始准备。 . 
8E . 检测了滑鼠以及完成初始准备；即将把硬、软磁盘复位。 . 
8F . 软磁盘已检查，该磁碟将作初始准备，随后配备软磁碟。 . 
90 . 软磁碟配置结束；将测试硬磁碟的存在。 硬盘控制器进行初始化。 
91 . 硬磁碟存在测试结束；随后配置硬磁碟。 局部总线硬盘控制器初始化。 
92 . 硬磁碟配置完成；即将检查BIOS ROM的数据区。 跳转到用户路径2。 
93 . BIOS ROM的数据区已检查一半；继续进行。 . 
94 . BIOS ROM的数据区检查完毕，即调定基本和扩展存储器的大小。 关闭A－20地址线。 
95 . 因应滑鼠和硬磁碟47型支持而调节好存储器的大小；即将检验显示存储器。 . 
96 . 检验显示存储器后复原；即将进行C800：0任选ROM控制之前的初始准备。 “ES段”注册表清除。 
97 . C800：0任选ROM控制之前的任何初始准备结束，接着进行任选ROM的检查及控制。 . 
98 . 任选ROM的控制完成；即将进行任选ROM回复控制之后所需的任何处理。 查找ROM选择。 
99 . 任选ROM测试之后所需的任何初始准备结束；即将建立计时器的数据区或打印机基本地址。 . 
9A . 调定计时器和打印机基本地址后的返回操作；即调定RS－232基本地址。 屏蔽ROM选择。 
9B . 在RS－232基本地址之后返回；即将进行协处理器测试之初始准备。 . 
9C . 协处理器测试之前所需初始准备结束；接着使协处理器作初始准备。 建立电源节能管理。 
9D . 协处理器作好初始准备，即将进行协处理器测试之后的任何初始准备。 . 
9E . 完成协处理器之后的初始准备，将检查扩展键盘，键盘识别符，以及数字锁定。 开放硬件中断。 
9F . 已检查扩展键盘，调定识别标志，数字锁接通或断开，将发出键盘识别命令。 . 
A0 . 发出键盘识别命令；即将使键盘识别标志复原。 设置时间和日期。 
A1 . 键盘识别标志复原；接着进行高速缓冲存储器的测试。 . 
A2 . 高速缓冲存储器测试结束；即将显示任何软错误。 检查键盘锁。 
A3 . 软错误显示完毕；即将调定键盘打击的速率。 . 
A4 . 调好键盘的打击速率，即将制订存储器的等待状态。 键盘重复输入速率的初始化。 
A5 . 存储器等候状态制定完毕；接着将清除屏幕。 . 
A6 . 屏幕已清除；即将启动奇偶性和不可屏蔽中断。 . 
A7 . 已启用不可屏蔽中断和奇偶性；即将进行控制任选的ROM在E000：0之所需的任何初始准备。 .
A8 . 控制ROM在E000：0之前的初始准备结束，接着将控制E000：0之后所需的任何初始准备。 清除“F2”键提示。 
A9 . 从控制E000：0 ROM返回，即将进行控制E000：0任选ROM之后所需的任何初始准备。 . 
AA . 在E000：0控制任选ROM之后的初始准备结束；即将显示系统的配置。 扫描“F2”键打击。 
AC . . 进入设置. 
AE . . 清除通电自检标志。 
B0 . . 检查非关键性错误。 
B2 . . 通电自检完成准备进入操作系统引导。 
B4 . . 蜂鸣器响一声。 
B6 . . 检测密码设置（可选）。 
B8 . . 清除全部描述表。 
BC . . 清除校验检查值。 
BE 程序缺省值进入控制芯片，符合可调制二进制缺省值表。 . 清除屏幕（可选）。 
BF 测试CMOS建立值。 . 检测病毒，提示做资料备份。 
C0 初始化高速缓存。 . 用中断19试引导。 
C1 内存自检。 . 查找引导扇区中的“55”“AA”标记。 
C3 第一个256K内存测试。 . . 
C5 从ROM内复制BIOS进行快速自检。 . . 
C6 高速缓存自检。 . . 
CA 检测Micronies超速缓冲存储器（如果存在），并使之作初始准备。 . . 
CC 关断不可屏蔽中断处理器。 . . 
EE 处理器意料不到的例外情况。 . . 
FF 给予INI19引导装入程序的控制，主板OK

------------

1、下载Photoshop应用程序，建议把Photoshop放在桌面方便找到。
2、运行Photoshop安装程序，等安装程序初始化
3、Photoshop初始化完成之后会弹出提示页面，单击下一步会提示输入序列号（如果你下载的是正版才需要，下载绿色版或者是破解版是不需要输入序列号的）。正版如果没有序列号，就点击试用版本。
4、在桌面找到Photoshop的快捷方式即ps,单击运行。
Adobe Photoshop，简称“PS”，是由Adobe Systems开发和发行的图像处理软件。
Photoshop主要处理以像素所构成的数字图像。使用其众多的编修与绘图工具，可以有效地进行图片编辑工作。ps有很多功能，在图像、图形、文字、视频、出版等各方面都有涉及。
Adobe支持Windows操作系统 、安卓系统与Mac OS， 但Linux操作系统用户可以通过使用Wine来运行Photoshop。2003年，Adobe Photoshop 8被更名为AdobePhotoshop CS。2013年7月，Adobe公司推出了最新版本的Photoshop CC，自此，Photoshop CS6作1、下载Photoshop应用程序，建议把Photoshop放在桌面方便找到。
2、运行Photoshop安装程序，等安装程序初始化
3、Photoshop初始化完成之后会弹出提示页面，单击下一步会提示输入序列号（如果你下载的是正版才需要，下载绿色版或者是破解版是不需要输入序列号的）。正版如果没有序列号，就点击试用版本。
4、在桌面找到Photoshop的快捷方式即ps,单击运行。
Adobe Photoshop，简称“PS”，是由Adobe Systems开发和发行的图像处理软件。
Photoshop主要处理以像素所构成的数字图像。使用其众多的编修与绘图工具，可以有效地进行图片编辑工作。ps有很多功能，在图像、图形、文字、视频、出版等各方面都有涉及。
Adobe支持Windows操作系统 、安卓系统与Mac OS， 但Linux操作系统用户可以通过使用Wine来运行Photoshop。2003年，Adobe Photoshop 8被更名为AdobePhotoshop CS。2013年7月，Adobe公司推出了最新版本的Photoshop CC，自此，Photoshop CS6作为Adobe CS系列的最后一个版本被新的CC系列取代。"

------------

设置下电脑网络连接为自动获取ip即可。
第一步：点击桌面右下角的“网络图标”；
第二步：选择“打开网络和共享中心”；
第三步：找到“网络连接”，之后选择“本地连接”；
第四步：右击，选择“属性”，之后选择“ipv4”；
第五步：再次选择属性，之后选择“自动获取ip”即可。

------------

删除itunes电脑上的应用程序的解决方法如下：
1、在电脑上打开 iTunes 软件以后，点击窗口左上方的‘“资料库”选项。
2、接着在资料库列表中点击选择“应用程序”一栏。
3、随后即可看到当前 iTunes 中所有的应用软件。
4、如果苹果 Mac 电脑的话，选中要删除的应用软件，点击鼠标右键并选择“删除”选项。
5、如果你想要彻底把应用软件从电脑中删除的话，请点击“移到废纸篓”按钮。
6、如果使用的 Windows 系统，也是同样的操作，点击“删除应用程序”按钮。
7、随后再点击“移动到回收站”按钮，即可把 iTunes 中的应用程序删除掉。

------------

把自动更新关闭即可。
第一步：点击我的电脑，之后选择“控制面板”；
第二步：选择“windows update”；
第三步：选择“更改设置”，之后选择“从不检测更新”，之后点击”确定“即可完成设置。

------------

​（1）按win+r，打开运行，输入regedit，点击确定；
（2）打开注册表管理器，定位到HKEY_CLASSES_ROOT\lnkfile；
（3）然后删除右侧的“IsShortcut”键值，重启电脑就发现已经消除桌面图标小箭头了；

------------

第一步：按快捷键Win+R，输入cmd，打开命令提示符。
第二步：右键选择粘贴命令：control userpasswords2 ，回车即可。
第三步：将“要使用本机，用户必须输入用户名和密码”前面的勾去掉，回车。
第四步：然后再一次登陆界面的时候，就不会有登陆选项，而是直接进去到系统中了。

------------

​第一步：开机按F2键进入BIOS，
第二步：在 BIOS 的BOOT菜单下，将Secure Boot 改为 Disabled；
第三步：将Boot List Option 改为 Legacy，重新启动；
第四步：按F2再次进入BIOS界面，选择“Advanced BIOS Features”设置项，按回车键进入；
第五步：选择第二项（从USB启动）；
第六步：按F10，之后选择“Y”，点击“回车”即可完成设置，重新启动电脑即可。

------------

一般是资源管理器运行异常导致的，重启下资源管理器就可以了。
第一步：在桌面任务栏上右击，选择“任务管理器”；
第二步：选择“进程”，之后找到“explorer.exe”,之后选择“结束进程”；
第三步：选择“文件”，之后新建“explorer.exe”即可。
备注：如果是单个应用程序的问题，那只能是关闭重新启动程序进行尝试了，如果还是不行那么只能是重装此应用程序了

------------

第一步：点击桌面的“计算机”，之后选择“控制面板”；
第二步：选择“电源选项”，之后选择“更改计算机睡眠时间”下面的“调整屏幕亮度”；
第三步：，根据实际需要调整下亮度，之后“保存”即可。

------------

开机蓝屏原因：
原因一：程序出错会蓝屏。有时只是某一个程序或驱动程序一时犯错，重启后就可以改过自新了。
原因二：新硬件加入不当会蓝屏。检查新硬件是否插牢，将其拔下, 然后换个插槽试试,并安装最新的驱动程序。
原因三：新驱动加入不当会蓝屏。如果刚安装完某个硬件的新驱动出现了蓝屏故障，请到安全模式来卸载或禁用这个新驱动。
原因四：病毒入侵会蓝屏。比如冲击波和振荡波等病毒有时会导致Windows蓝屏死机，因此查杀病毒必不可少。
原因五：新装的电脑有时也会蓝屏。对于新装的电脑经常出现蓝屏问题，应该检查并升级BIOS到最新版本。
原因六：系统文件被替换会蓝屏。开始－－运行sfc/scannow来检查系统文件是否被替换，然后用系统安装盘来恢复（不会的人直接重装系统最快捷）。
如果是以上原因或者不是都可以用以下常用的蓝屏解决方法：开机时快速按下F8键就会出现高级启动选项菜单, 接着选择“最后一次正确配置”启动电脑就可以了。


开机黑屏有以下原因：
一、开机黑屏—伪黑屏和真黑屏：
1、笔记本电脑开机黑屏有伪黑屏和真黑屏之分。如果惠普笔记本电脑指示灯有反应，只是屏幕不亮，仔细用手电照着能看到图像的这个事伪黑屏，换背光灯管就可以了。
2、惠普笔记本电脑如果是没有任何图像只是屏幕稍微有些亮光的，这个是显卡门芯片比较典型的症状，需要换全新改良版芯片了，如果说的真正的黑屏一般是显卡或者内存有问题的可能较大。
二、开机黑屏—检查电源适配器和主板：
1、惠普笔记本出现黑屏故障后，首先看电源适配器是否能正常通电，如果有条件的，用万用表检查是否达到额定电压，以此排除适配器故障。
2、接着用惠普笔记本电脑外置的显示器，就是一般台式机的显示器，连接到笔记本外接显示接口，如果显示一切正常，基本上排除了主板和显卡损坏的可能。如不正常说明主板或者显卡有问题。另外，内存松动也有可能造成惠普笔记本电脑开机黑屏。
三、开机黑屏—排查LCD屏幕的故障：
1、排除非主板、显卡故障之外，就是常见的LCD屏故障了。如隐约显示出一点东西说明液晶屏和排线也没有损坏，有可能是背光灯没有点亮。
2、背光灯不能点亮有两个方面的原因：背光灯管烧毁或者驱动灯管的高压电路损坏。高压电路板的工作原理是将主板提供的低压直流电通过开关电路变换为高频高压电，将背光管点亮。
3、背光灯不能点亮的话可以在刚刚按下开机按钮启动的时候把耳朵贴在屏幕边框上细听，如果有滋滋的声音响一下，然后就无声，大致上就是高压电路板的问题，如果一直无声，则可能是灯管问题。
四、开机黑屏—更换背光灯管：
1、如果确定惠普笔记本电脑开机黑屏是灯管故障，那么就要更换灯管。更换灯管的话最好参照惠普笔记本电脑的使用说明书进行操作。
2、如果动手操作能力确实不够好的话，建议把电脑拿到专业的电脑修理店进行背光灯管更换，这样更好安全可靠一点。


建议分可能原因和排查步骤给出解决办法，适当的分下段落

------------

流程化的：
1，HR带我进会议室，做面试题目
2，一个做技术的，进行了技术面试，因为我是5年Java开发转测试开发，问了很多关于Java方面的问题，如：
java 单例最好的实现方式 ？
public class Singleton {  
    /**  
     * 类级的内部类，也就是静态的成员式内部类，该内部类的实例与外部类的实例  
     * 没有绑定关系，而且只有被调用到时才会装载，从而实现了延迟加载  
     */  
    private static class SingletonHolder{  
        /**  
         * 静态初始化器，由JVM来保证线程安全  
         */  
        private static Singleton instance = new Singleton();  
    }  
    /**  
     * 私有化构造方法  
     */  
    private Singleton(){  
    }  
    public static  Singleton getInstance(){  
        return SingletonHolder.instance;  
    }  
    
集合类有那些？
ArrayList,vector.hashmap,linklist,treemap,hashset等多种实现.
hashMap HashTable区别？
HashMap是Hashtable的轻量级实现（非线程安全的实现），他们都完成了Map接口，主要区别在于HashMap允许空（null）键值（key）,由于非线程安全，效率上可能高于Hashtable。
 HashMap允许将null作为一个entry的key或者value，而Hashtable不允许。
 HashMap把Hashtable的contains方法去掉了，改成containsvalue和containsKey。因为contains方法容易让人引起误解。 
 Hashtable继承自Dictionary类，而HashMap是Java1.2引进的Map interface的一个实现。
 最大的不同是，Hashtable的方法是Synchronize的，而HashMap不是，在多个线程访问Hashtable时，不需要自己为它的方法实现同步，而HashMap 就必须为之提供外同步。 
 Hashtable和HashMap采用的hash/rehash算法都大概一样，所以性能不会有很大的差异
 
Arraylist和LinkedList区别？
1.ArrayList是实现了基于动态数组的数据结构，LinkedList基于链表的数据结构。 
2.对于随机访问get和set，ArrayList觉得优于LinkedList，因为LinkedList要移动指针。 
3.对于新增和删除操作add和remove，LinedList比较占优势，因为ArrayList要移动数据。 

HashMap安全吗？如何实现一个安全的HashMap？

有2种办法让HashMap线程安全，分别如下：
　　方法一：通过Collections.synchronizedMap()返回一个新的Map，这个新的map就是线程安全的。 这个要求大家习惯基于接口编程，因为返回的并不是HashMap，而是一个Map的实现。
　　方法二：重新改写了HashMap，具体的可以查看java.util.concurrent.ConcurrentHashMap. 这个方法比方法一有了很大的改进。
　　
springMVC 框架的一些问题？
数据优化？
分库分表如何实现？

3，测试的大Boss进来聊，问关于Socket我不太了解，被鄙视了。。。

4，HR让回去等消息

------------

支付
sql
支付接口
微信支付
linux测试环境
mysql语句
APP支付修改
证书位置
微信技术
json

------------

http://paytest.honglingjinclub.com/pay/execute?time=24121834&payStr=1e6c0701241557fad184cd2e3c40a32951edf45e3420d99bb7e8f5714bfd9a5f4d239c31535a1bf7

------------

mysql>create database  paycenter;
mysql> GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,ALTER ON paycenter.* TO pay
center@localhost identified by "paycenter";
SET PASSWORD FOR 'paycenter'@'localhost' = OLD_PASSWORD('paycenter');


------------

第一个：验证token失效时间。
第二个：注册用户
第三个：绑定银行卡等内容
第四个：充值业务类
第五个：注册合作方  商家端,用户端都属于合作方
第六个：退款业务，
第七个：支付业务
第八个：通知业务



account为用户表
bankcard为银行卡绑定表
deposit为充值业务表
error_pwd_record为密码错误记录表
money_change_record为充值记录表
partner为注册合作方表（ 注册合作方  商家端,用户端都属于合作方）
refund为退款表
trade交易记录表
withdraw提现表
withdraw_error提现错误记录表

------------

{"returnCode":1,"code":0,"body":"{"appId":"wxf088cc8f4c48f416","timeStamp":"1447731332","nonceStr":"1135328275","package":"prepay_id=12312","signType":"MD5","paySign":"EBEF702C66360CEF1FE63BE133C8A33A"}"}


------------

地址：192.168.1.148
用户名：gaodebao
密码：gaodebao
命令执行：sudo
根路径：home/gaodebao
项目路径：app/paycenter 
执行脚本：paycenter   start/stop/restart

------------

模糊查询：SELECT * from account   where  locate ('' , externalId) > 0




------------

 public static ModelAndView  buildFailJsonView(String msg){
    	SortedMap<String, String> map = new TreeMap<>();
        map.put("code","1");
        map.put("body",  String.format("{\"errorMsg\":\"%s\"}",msg));
        return new ModelAndView("jsonView",map);
    }
    
    public static ModelAndView  buildSuccessJsonView(Object obj){
    	SortedMap<String, String> map = new TreeMap<>();
        map.put("code","0");
        map.put("body", (String)obj);
        return  new ModelAndView("jsonView",map);
    }
    
    
    
    {"code":0,"body":"_input_charset=utf-8&subject=Wed+Nov+25+11%3A18%3A21+CST+2015&sign=jJqD3kPzhb82TxuRAhhNufdUcobqQI%2F8EvZCe%2FUKOGkSbeTKfm3U7zAhoNhExuOMVlAT3cwGqUfrBUGI6%2BYRRY3850u3mnr9chKUksr6r7pfuPLxYmCozHtG9YzYiLyg56zulDS5Y8lCHoHljx6dDpbv8po6tgbN%2B6Ijzh0UEKc%3D&it_b_pay=2015-11-25+11%3A26&body=Wed+Nov+25+11%3A18%3A21+CST+2015&notify_url=http%3A%2F%2Fpaytest.honglingjinclub.com%2Fpay%2Falipay%2Fnotify&payment_type=1&out_trade_no=536115957585892&partner=2088021386926953&service=mobile.securitypay.pay&total_fee=0.01&return_url=http%3A%2F%2Fweixin.honglingjinclub.com&sign_type=RSA&seller_id=2088021386926953&show_url=http%3A%2F%2Fpay.honglingjinclub.com","fail":false,"success":true}
_input_charset=utf-8&subject=Wed+Nov+25+11%3A18%3A21+CST+2015&sign=jJqD3kPzhb82TxuRAhhNufdUcobqQI%2F8EvZCe%2FUKOGkSbeTKfm3U7zAhoNhExuOMVlAT3cwGqUfrBUGI6%2BYRRY3850u3mnr9chKUksr6r7pfuPLxYmCozHtG9YzYiLyg56zulDS5Y8lCHoHljx6dDpbv8po6tgbN%2B6Ijzh0UEKc%3D&it_b_pay=2015-11-25+11%3A26&body=Wed+Nov+25+11%3A18%3A21+CST+2015&notify_url=http%3A%2F%2Fpaytest.honglingjinclub.com%2Fpay%2Falipay%2Fnotify&payment_type=1&out_trade_no=536115957585892&partner=2088021386926953&service=mobile.securitypay.pay&total_fee=0.01&return_url=http%3A%2F%2Fweixin.honglingjinclub.com&sign_type=RSA&seller_id=2088021386926953&show_url=http%3A%2F%2Fpay.honglingjinclub.com


------------

    public static String certLocation = "/app/paycenter/apiclient_cert.p12";
//    public static String certLocation = "E:/honglingjin/apiclient_cert.p12";

------------

0755 -86018333 开发平台客服


微信APP商户后台
账号：1284949201 @1284949201
密码：hlj666

------------

		JSONObject json = JSONObject.fromObject(result);
		String result1 = json.getString("body");
		System.out.println(result1);
		String result2 = template.postForEntity(result1, null, String.class).getBody();
		System.out.println(result2);

------------

git
日记
git使用
推送到远程仓库
创建标签
创建仓库
submodule
创建分支项目

------------

$ git config --global user.name "gaodebao"
$ git config --global user.email "gaodebao@honglingjin.xyz"

创建全局的
之后git使用步骤：

初始化一个Git仓库，使用git init命令。
添加文件到Git仓库，分两步：
• 第一步，使用命令git add ，注意，可反复多次使用，添加多个文件；
• 第二步，使用命令git commit，完成。

git status命令可以让我们时刻掌握仓库当前的状态，上⾯面的命令告诉我们，readme.txt被
修改过了，但还没有准备提交的修改。

git diff顾名思义就是查看difference，显示的格式正是Unix通用的diff格式，可以从上面的
命令输出看到，我们在第一行添加了一个“distributed”单词。

查看日志信息：
git log --pretty=oneline    

版本回退：
$ git reset --hard HEAD^
$ git reset --hard HEAD~100
举例：
$ git reset --hard 27b4fa07

查看内容：
cat  文件名

查看回退记录：
$ git reflog
ea34578 HEAD@{0}: reset: moving to HEAD^

丢弃工作区的修改
$ git checkout -- readme.txt

删除文件：
$ rm test.txt


推送本地内容：
$ git push -u origin master
origin是远程库名称  master 是分支名称


要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；
关联后，使用命令git push -u origin master第一次推送master分支的所有内容；
此后，每次本地提交后，只要有必要，就可以使⽤用命令git push origin master推送最新修
改；
$ git remote add origin git@github.com:gaodebao/learngit.git


Git鼓励大量使用分⽀支：
查看分支：git branch
创建分支：git branch name
切换分支：git checkout name
创建+切换分支：git checkout -b name
合并某分支到当前分支：git merge name
删除分支：git branch -d name


备份当前分支
git  stash
恢复：
git  stash pop



git submodule update --init

设置大小写敏感
 $ git config core.ignorecase false
















------------

git网址：http://git.honglingjinclub.com/paycenter/paycenter
第一步：下载安装Git：
第二步：配置Git环境变量：在环境变量的path下面添加  Git安装路径\libexec\git-core;git安装路径\bin;
第三步：在应用程序中打开GIT Bash；之后执行以下命令：
$ git config --global user.name "youremail"
$ git config --global user.email "youremail@honglingjin.xyz"
第四步：生成key；
$ ssh-keygen -t rsa -C "youremail@honglingjin.xyz"
第五步：在用户路径下拷贝公钥内容，放置到git用户下的SSH keys路径下。（点击git页面右上角的profile settings，之后选择SSH keys，标题任意添加，公钥粘贴）;
第六步：之后进行代码下载和创建分支（此处需要创建项目路径如：E:\Workspaces\redscarf，之后切换到此路径进行操作）。
克隆：git   clone  git@git.honglingjinclub.com:paycenter/paycenter.git
创建关联：git remote add  dev  git@git.honglingjinclub.com:paycenter/paycenter.git
创建分支：git branch develop 
切换分支：git checkout  develop 
同步分支：git merge  develop
第七歩：在eclipse中import类型gradle project 之后选择paycenter项目路径，之后一直下一步，直到Finsh。

后续操作：
一同步远程代码到dev：git   pull,之后根据实际需要同步到develop
二创建远程Repository；点击git页面右上角的new project ，项目名称输入：paycenter_yourname，之后Repository输入dev_yourname,选择“Visibility Level”为“public”。
三推送到远程：$ git push origin develop:dev_yourname;


下载工程：
$ git clone --recursive git@git.honglingjinclub.com:pttms/pttms.git
$ cd pttms
$ ./gradlew









------------

克隆：git   clone  git@git.honglingjinclub.com:paycenter/paycenter.git
创建分支：git branch develop 
切换分支：git checkout  develop 
同步分支：git merge  develop

------------

$ git push -u origin dev
把本地dev分支的最新修改推送至GitHub
git push -u origin  dev_gaodebao
$ git push origin dev

推送到远程分支：$ git push origin  develop:dev_gaodebao
Git push
$ git push origin test:master         // 提交本地test分支作为远程的master分支
$ git push origin test:test              // 提交本地test分支作为远程的test分支




解决冲突（feature1分支名称）：
$ git merge feature1：
先进行合并分支，之后会提示冲突文件，找到冲突的文件，之后直接修改冲突内容，在进行add提交即可

$ git log --graph --pretty=oneline --abbrev-commit
用带参数的git log也可以看到分支的合并情况：


解决代码问题：
先通过git pull 将远程代码下载到本地，之后在进行git merge进行代码合并，最后在git push即可。

------------

然后，敲命令git tag name就可以打一个新标签：
$ git tag v1.0
可以用命令git tag查看所有标签：
$ git tag
v1.0

默认标签是打在最新提交的commit上的。有时候，如果忘了打标签，⽐比如，现在已经是周
五了，但应该在周⼀一打的标签没有打，怎么办？
方法是找到历史提交的commit id，然后打上就可以了：
$ git log --pretty=oneline --abbrev-commit
6a5819e merged


$ git tag v0.9 6a5819e


注意，标签不是按时间顺序列出，⽽而是按字⺟母排序的。可以⽤用git show tagname查看标签信
息：
$ git show v0.9


还可以创建带有说明的标签，⽤用-a指定标签名，-m指定说明⽂文字：
$ git tag -a v0.1 -m "version 0.1 released" 3628164


如果标签打错了，也可以删除：
$ git tag -d v0.1
Deleted tag 'v0.1' (was e078af9)

如果要推送某个标签到远程，使⽤用命令git push origin tagname：
$ git push origin v1.0


如果标签已经推送到远程，要删除远程标签就⿇麻烦⼀一点，先从本地删除：
$ git tag -d v0.9
Deleted tag 'v0.9' (was 6224937)
然后，从远程删除。删除命令也是push，但是格式如下：
$ git push origin :refs/tags/v0.9

------------

Git global setup:
git config --global user.name "高德宝"
git config --global user.email "gaodebao@honglingjin.xyz"
Create Repository
mkdir dev_goadebao
cd dev_goadebao
git init
touch README
git add README
git commit -m 'first commit'
git remote add origin git@git.honglingjinclub.com:gaodebao/dev_goadebao.git
git push -u origin master
Existing Git Repo?
cd existing_git_repo
git remote add origin git@git.honglingjinclub.com:gaodebao/dev_goadebao.git
git push -u origin master

------------

1.submodule是什么？
git有一个git submodule命令，用来管理子模块。Git子模块允许在 主工程 中创建多个 子工程。
几个要点：
1.主工程与子工程是相互独立的
2.主工程在暂存区（index文件）中维护各个子工程当前的commit id
2.为什么会有merge冲突？
举个简单例子，子工程修改后，主工程master更新了子工程（意味着其维护的commit id更新了）。但是本地的分支还未更新，因此merge时导致commit id冲突。
并且，由于commit id保存在暂存区文件index中，所以我们无法手动更改。
3.解决方案
假设在自己的开发分支上已经准备merge master提交了（master已经pull过），
这时如果master上的submodule有修改，直接merge会有冲突。
两种方案：
1.位于自己的开发分支，在merge之前可以执行以下命令
git submodule foreach git checkout master //所有子工程切换到master分支
git submodule foreach git pull          //所有子工程更新代码
git add 所有子工程目录
git commit -m "update submodule"      //这里的提交应该是更新commit id，使其保持最新，与master相同
注意：这种情况必须确认主工程master维护的是最新的子工程master代码，不够灵活。
2.位于master分支，在merge之前可以执行以下命令
git submodule update                    //这里的操作，是根据master维护的commit id更新各个子工程的代码
git checkout 自己的开发分支名
git add 所有子工程目录                     //因为各个子工程的代码已更新，所以add一遍，使主工程更新其维护的commit id
git commit -m "update submodule"      //这里的提交应该是更新commit id，使其保持最新，与master相同
方案2，完全根据主工程master维护的各个子工程commit id来更新子工程，如果不确定master维护的commit id是否为子工程最新代码，推荐使用此方案。
这样，确保各个submodule更新，并且主项目维护的子项目commit id也更新，之后在进行merge即可
4.配置git别名简化操作
1.针对方案一，在.gitconfig文件中配置别名
upsubc = !git submodule foreach git checkout master && git submodule foreach git pull &&  git commit -am \"update submodule\"
2.针对方案二，配置接受参数的shell别名
暂略……


------------

1、第一步：在远程git服务器创建项目
2、将项目clone到本地
3、进入项目根路径


------------

当前无法做的：
账户状态，状态变更
交易明细：
无法获取到交易的状态，交易渠道、处理时间


充值列表
交易前后余额

提现列表
交易前后余额



------------

dao
添加省份流程
回滚内容
统计交易信息
DepositDao
StatisticsDao 
获取当前日期

------------

package xyz.hlj.datacenter.business.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.core.namedparam.SqlParameterSource;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;
import org.springframework.stereotype.Repository;

import xyz.hlj.datacenter.business.config.PageSetting;
import xyz.hlj.datacenter.business.model.Bank;
import xyz.hlj.datacenter.business.model.Location;
import xyz.hlj.datacenter.business.model.BankInfo;


@Repository
public class BankDao {


	@Autowired
	JdbcTemplate jdbcTemplate;
	@Autowired
	NamedParameterJdbcTemplate npjdbcTemplate;
	
	protected Logger logger=LoggerFactory.getLogger(getClass());

	
	/**
	 * 查找省份
	 * @return
	 */
	public List<BankInfo> findProv(){

		String sql="select distinct provincename,provinceid from bank where provinceid != 0";

		List<BankInfo> list=this.jdbcTemplate.query(sql,new ProvBankMapper());

		return list;

	}


	/**
	 *查找城市
	 * @return
	 */
	public List<BankInfo> findCity(Integer provinceId){

		String sql="select distinct cityname,cityid from bank where provinceid=?";

		List<BankInfo> list=this.jdbcTemplate.query(sql,new CityBankMapper(),provinceId);
		return list;
	}


	

	/**
	 * 查找总行
	 * @return
	 */
	public Map<String,Object> findParentBank(Integer pageNum,Integer pageSize,String key){

		pageNum = (pageNum==null)?1:pageNum;
		pageSize = (pageSize==null)? PageSetting.DEF_PAGE_SIZE:pageSize;

		String keyword="%"+key+"%";


		Integer count=0;
		if(key==null || key.equals("")){
			String countSql="select count(1) from bank where parentid=0";
			count= this.jdbcTemplate.queryForObject(countSql,Integer.class);
		}else{
			String countSql="select count(1) from bank where parentid=0 and name like ?";
			count= this.jdbcTemplate.queryForObject(countSql,Integer.class,keyword);
		}

		Integer start = (pageNum-1)*pageSize;

		String querySql=null;



		Map<String,Object> map=new HashMap<String,Object>();
		map.put("total", count);

		if(start>=count){
			return null;
		}

		List<BankInfo> list=null;

		if(key==null || key.trim().equals("")){
			querySql="select name,id from bank where parentid=0 limit ?,?";
			list=this.jdbcTemplate.query(querySql, new PareBankMapper(),start,pageSize);
		}else{
			querySql="select name,id from bank where parentid=0 and name like ? limit ?,?";
			list=this.jdbcTemplate.query(querySql,new PareBankMapper(),keyword,start,pageSize);
		}

		map.put("list", list);
		return map;
	}




	/**
	 * 查找支行
	 * @return
	 */
	public Map<String,Object> findBank(Integer provinceId,Integer cityId,Integer parentId,Integer pageNum,Integer pageSize,String key){

		pageNum = (pageNum==null)?1:pageNum;
		pageSize = (pageSize==null)? PageSetting.DEF_PAGE_SIZE:pageSize;

		String keyword="%"+key+"%";
		Integer count=0;
		if(key==null || key.equals("")){
			String countSql="select count(1) from bank where provinceid=? and parentid=?";
			count= this.jdbcTemplate.queryForObject(countSql,Integer.class,provinceId,parentId);
		}else{
			String countSql="select count(1) from bank where provinceid=? and parentid=? and name like ?";
			count= this.jdbcTemplate.queryForObject(countSql,Integer.class,provinceId,parentId,keyword);
		}

		Integer start = (pageNum-1)*pageSize;
		Map<String,Object> map=new HashMap<String,Object>();
		map.put("total", count);

		if(start>=count){

			map.put("list", new ArrayList());
			return map;
		}

		String querySql=null;
		List<BankInfo> list=null;

		if(key==null || key.equals("")){
			querySql= "select * from bank where provinceid=? and parentid=? limit ?,?";
			list=this.jdbcTemplate.query(querySql, new BankMapper(),provinceId,parentId,start,pageSize);
		}else{
			querySql = "select * from bank where provinceid=? and parentid=? and name like ? limit ?,?";
			list=this.jdbcTemplate.query(querySql, new BankMapper(),provinceId,parentId,keyword,start,pageSize);
		}

		map.put("list", list);

		return map;
	}
	
	
	
	
	/**
	 * 查找所有支行
	 * @return
	 */
	public Map<String,Object> findBankByCity(Integer provinceId,Integer cityId,Integer parentId,Integer pageNum,Integer pageSize,String key){

		pageNum = (pageNum==null)?1:pageNum;
		pageSize = (pageSize==null)? PageSetting.DEF_PAGE_SIZE:pageSize;

		String keyword="%"+key+"%";
		Integer count=0;
		if(key==null || key.equals("")){
			String countSql="select count(1) from bank where provinceid=? and cityid=? and parentid=?";
			count= this.jdbcTemplate.queryForObject(countSql,Integer.class,provinceId,cityId,parentId);
		}else{
			String countSql="select count(1) from bank where provinceid=? and cityid=? and parentid=? and name like ?";
			count= this.jdbcTemplate.queryForObject(countSql,Integer.class,provinceId,cityId,parentId,keyword);
		}

		Integer start = (pageNum-1)*pageSize;
		Map<String,Object> map=new HashMap<String,Object>();
		map.put("total", count);

		if(start>=count){

			map.put("list", new ArrayList());
			return map;
		}

		String querySql=null;
		List<Bank> list=null;

		if(key==null || key.equals("")){
			querySql= "select * from bank where provinceid=? and cityid=? and parentid=? limit ?,?";
			list=this.jdbcTemplate.query(querySql, new AllBankMapper(),provinceId,cityId,parentId,start,pageSize);
		}else{
			querySql = "select * from bank where provinceid=? and cityid=? and parentid=? and name like ? limit ?,?";
			list=this.jdbcTemplate.query(querySql, new AllBankMapper(),provinceId,cityId,parentId,keyword,start,pageSize);
		}

		map.put("list", list);

		return map;
	}
	
	
	
	/**
	 * save
	 * @param bank
	 * @return
	 */
	public int saveBank(Bank bank){
		String sql="insert into bank (parentid,outnum,provincename,name,cityname,cityid,provinceid,attr,status,addtime,modtime) "
				+ "values (:parentid,:outnum,:provincename,:name,:cityname,:cityid,:provinceid,:attr,:status,:addtime,:modtime)";
		
		KeyHolder keyholder = new GeneratedKeyHolder();
		SqlParameterSource sps = new BeanPropertySqlParameterSource(bank);
		
		this.npjdbcTemplate.update(sql,sps,keyholder);
		return keyholder.getKey().intValue();
	}
	
	/**
	 * 根据id查找bank
	 * @param id
	 * @return
	 */
	public Bank findBankById(Integer id){
		String sql="select * from bank where id=?";
		List<Bank> list=this.jdbcTemplate.query(sql,new AllBankMapper(),id);
		
		if(list.size()==0){
			return new Bank();
		}
		
		Bank bank=list.get(0);
		return bank;
	}
	
	/**
	 * 根据id返回bank及城市和省份code
	 * @return
	 */
	public Integer findLocationCodeByName(String name){
				
		String cityCodeSql="select code from location_code where name=?";

		List<Integer> codeList= this.jdbcTemplate.query(cityCodeSql,new CodeMapper(),name);
		
		if(name!=null && codeList.size()==0){
			logger.error(name+"是错误的不能被匹配上");
			return null;
		}

		return codeList.get(0);

	}
	
	
	

	/**
	 * 返回查找的支行对象
	 * @author Administrator
	 *
	 */
	private class BankMapper implements RowMapper<BankInfo>{

		@Override
		public BankInfo mapRow(ResultSet rs, int rowNum) throws SQLException {
			BankInfo bank = new BankInfo();
			bank.setId(rs.getInt("id"));
			bank.setName(rs.getString("name"));

			return bank;
		}

	}


	/**
	 * 返回查找的总行对象
	 * @author Administrator
	 *
	 */
	private class PareBankMapper implements RowMapper<BankInfo>{

		@Override
		public BankInfo mapRow(ResultSet rs, int rowNum) throws SQLException {
			BankInfo bank = new BankInfo();
			bank.setId(rs.getInt("id"));
			bank.setName(rs.getString("name"));

			return bank;
		}

	}
	/**
	 * 返回查找的城市对象
	 * @author Administrator
	 *
	 */
	private class CityBankMapper implements RowMapper<BankInfo>{

		@Override
		public BankInfo mapRow(ResultSet rs, int rowNum) throws SQLException {
			BankInfo bank = new BankInfo();
			bank.setId(rs.getInt("cityid"));
			bank.setName(rs.getString("cityname"));

			return bank;
		}

	}

	/**
	 * 返回查找的省份对象
	 * @author Administrator
	 *
	 */
	private class ProvBankMapper implements RowMapper<BankInfo>{

		@Override
		public BankInfo mapRow(ResultSet rs, int rowNum) throws SQLException {
			BankInfo bank = new BankInfo();
			bank.setId(rs.getInt("provinceid"));
			bank.setName(rs.getString("provincename"));

			return bank;
		}

	}
	
	
	/**
	 * 返回所有信息
	 * @author Administrator
	 *
	 */
	private class AllBankMapper implements RowMapper<Bank>{

		@Override
		public Bank mapRow(ResultSet rs, int rowNum) throws SQLException {
			Bank bank = new Bank();
            bank.setId(rs.getInt("id"));
            bank.setName(rs.getString("name"));
            bank.setParentid(rs.getInt("parentid"));
            bank.setProvinceid(rs.getInt("provinceid"));
            bank.setProvincename(rs.getString("provincename"));
            bank.setCityid(rs.getInt("cityid"));
            bank.setCityname(rs.getString("cityname"));
            bank.setOutnum(rs.getString("outnum"));
            bank.setAttr(rs.getString("attr"));
            bank.setAddtime(rs.getInt("addtime"));
            bank.setStatus(rs.getInt("status"));
            bank.setModtime(rs.getInt("modtime"));
            
           
            return bank;
		}
		
	}
	
	
	/**
	 * 获得code
	 * @author Administrator
	 *
	 */
	private class CodeMapper implements RowMapper<Integer>{

		@Override
		public Integer mapRow(ResultSet rs, int rowNum) throws SQLException {
            return  rs.getInt("code");
		}
		
	}

}


------------

帮忙添加：中国建设银行股份有限公司浙江省嵊州罗兴支行。劳驾，谢谢！

------------

1，微信app、支付宝app相关支付和通知接口。------暂停 
2、汇总每日账户、充值提现信息 ------------
3、redis相关配置信息------------------


4、部分代码重构部分-------------------放一下


------------

package xyz.hlj.paycenter.business.scheduler;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import xyz.hlj.paycenter.business.cache.PartnerCache;
import xyz.hlj.paycenter.business.dao.AccountDao;
import xyz.hlj.paycenter.business.dao.DepositDao;
import xyz.hlj.paycenter.business.dao.StatisticsDao;
import xyz.hlj.paycenter.business.dao.WithdrawDao;
import xyz.hlj.paycenter.business.model.Deposit;
import xyz.hlj.paycenter.business.model.Partner;
import xyz.hlj.paycenter.business.model.StatisticsInfo;
import xyz.hlj.paycenter.business.model.Withdraw;

import java.util.Date;


/**
 * 统计任务
 */
@Component
public class StatisticsJob {

    private static final Logger LOGGER = LoggerFactory.getLogger(StatisticsJob.class);

    @Autowired
    AccountDao accountDao;
    @Autowired
    WithdrawDao withdrawDao;
    @Autowired
    DepositDao depositDao;
    @Autowired
    StatisticsDao statisticsDao;
    @Autowired
    PartnerCache partnerCache;


    @Scheduled(cron = "0 0 0 * * ?")
    public void run(){

        LOGGER.info("执行数据统计..." );

        for(Partner partner : partnerCache.getAllPartner()){

            long end = System.currentTimeMillis();
            long start = end - 1000*60*60*24;

            int accountType = partner.getId();
            //账户总余额
            long total = accountDao.countMoney(accountType);
            //未处理  充值金额
            long depositAccepted = depositDao.countDepositMoney(accountType, start, end, Deposit.STATUS_ACCEPTED);
            //充值成功金额
            long depositSuccess = depositDao.countDepositMoney(accountType, start, end, Deposit.STATUS_SUCCESS);
            //未处理 提现申请金额
            long withdrawAccepted = withdrawDao.countWithdrawMoney(accountType,start,end, Withdraw.STATUS_ACCEPTED);
            //打款中  提现金额
            long withdrawTrying = withdrawDao.countWithdrawMoney(accountType,start,end, Withdraw.STATUS_TRYING);
            //打款成功金额
            long withdrawSuccess = withdrawDao.countWithdrawMoney(accountType,start,end, Withdraw.STATUS_SUCCESS);
            //打款失败金额
            long withdrawFail = withdrawDao.countWithdrawMoney(accountType,start,end, Withdraw.STATUS_FAIL);

            StatisticsInfo statistics = new StatisticsInfo();
            statistics.setAccountType(accountType);
            statistics.setStatisticsDate(new Date(start));
            statistics.setTotal(total);
            statistics.setDepositAccepted(depositAccepted);
            statistics.setDepositSuccess(depositSuccess);
            statistics.setWithdrawAccepted(withdrawAccepted);
            statistics.setWithdrawTrying(withdrawTrying);
            statistics.setWithdrawSuccess(withdrawSuccess);
            statistics.setWithdrawFail(withdrawFail);

            statisticsDao.save(statistics);

        }

    }

}


------------

    public int countDepositMoney(int accountType,long startTime,long endTime,int status){

        String sql = "select COALESCE(sum(totalFee),0) from deposit where accountType=? and requestTime>? and requestTime<? and status=?";

        return jdbcTemplate.queryForObject(sql,Integer.class,accountType,startTime,endTime,status);
    }

------------

package xyz.hlj.paycenter.business.dao;


import org.springframework.stereotype.Repository;
import xyz.hlj.paycenter.business.model.StatisticsInfo;
import xyz.hlj.paycenter.framework.base.BaseDao;

@Repository
public class StatisticsDao extends BaseDao {


    public int save(StatisticsInfo statisticsInfo) {

        String sql = "INSERT INTO statistics_info(accountType,statisticsDate,total,depositAccepted,depositSuccess,withdrawAccepted,withdrawTrying,withdrawSuccess,withdrawFail) " +
                "VALUES(:accountType,:statisticsDate,:total,:depositAccepted,:depositSuccess,:withdrawAccepted,:withdrawTrying,:withdrawSuccess,:withdrawFail)";

        return save(sql,statisticsInfo);
    }


}

------------

public static long getTodayTime() throws ParseException {
		LocalDate date = new LocalDate(new DateTime());
		SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
		return df.parse(df.format(date.toDate())).getTime();
	}

------------

登录：mysql -u readonly -p -h honglingjinpay.mysql.rds.aliyuncs.com
描述databases：show databases
password：Tn41jlxYZfWz
切换库：use paycenter

登录服务器：ssh 192.168.168.3 -p 2328   
密码：EDQV8A0mTHD4

cd 
121.42.58.92  
root 
HLJaliserver01

18811569558

http://relay.honglingjinclub.com:8080/login?from=%2F3
gaodebao  181757

没权限：
update user set password=password('gaodebao') where user='gaodebao'; 


select a.`phoneNumber`,a.`realName`,b.`branchBankName` from `account` a ,  `bankcard` b   where  a.externalId  in ( select w.externalId from withdraw w where  w.`id` in (1087,1954,3611,4314,5154,5756))and  a.type=3 and a.externalid= b.externalid;


select from_unixtime(executeTime/1000) from withdraw where status  = 1;
select * from  statistics_info where id  in (59,62,63,64,66,68,70,72,75,76,79,80,82,84,86,88 );



select *  from `withdraw`  where `requestTime`>UNIX_TIMESTAMP('2015-12-24 15:00:00')*1000 and `requestTime`<UNIX_TIMESTAMP('2015-12-28 15:00:00')*1000;

 select sum(totalfee) from deposit where status  = 3 and `resultTime`>UNIX_TIMESTAMP('2016-01-16 00:00:00')*1000 and `resultTime`<UNIX_TIMESTAMP('2015-01-16 23:59:59')*1000;
 
 update withdraw_error set status =2 where id in (665,616,467,468,469);
 update withdraw_error set status =1 where  status = 0 ;



select * from bankcard where phoneNumber=18910257050



SELECT date_format(FROM_UNIXTIME( `resultTime`/1000),'%Y-%m-%d') AS time,sum(totalFee),sum(commission)  as count FROM withdraw where status=3  group by time;
 

/account/accountInfo



show create table trade;
show PROCESSLIST;
kill id;
explain;

日期类型条件查询
SELECT * from pay_stat_info where statDate>= date(DATE_FORMAT('2016-05-09','%Y-%m-%d'));

13832464623  孟凡华。

http://jianzhi.honglingjinclub.com/api/identification?userId=






------------

快捷键
内存溢出
注册码
下载地址
设置import
配置文件
Note3

------------

Alt+回车 导入包,自动修正
Ctrl+N   查找类
Ctrl+Shift+N 查找文件
Ctrl+Alt+L  格式化代码
Ctrl+Alt+O 优化导入的类和包
Alt+Insert 生成代码(如get,set方法,构造函数等)
Ctrl+E或者Alt+Shift+C  最近更改的代码
Ctrl+R 替换文本
Ctrl+F 查找文本
Ctrl+Shift+Space 自动补全代码
Ctrl+空格 代码提示
Ctrl+Alt+Space 类名或接口名提示
Ctrl+P 方法参数提示
Ctrl+Shift+Alt+N 查找类中的方法或变量
Alt+Shift+C 对比最近修改的代码
 
Shift+F6  重构-重命名
Ctrl+Shift+先上键
Ctrl+X 删除行
Ctrl+D 复制行
Ctrl+/ 或 Ctrl+Shift+/  注释（// 或者/*...*/ ）
Ctrl+J  自动代码
Ctrl+E 最近打开的文件
Ctrl+H 显示类结构图
Ctrl+Q 显示注释文档
Alt+F1 查找代码所在位置
Alt+1 快速打开或隐藏工程面板
Ctrl+Alt+ left/right 返回至上次浏览的位置
Alt+ left/right 切换代码视图
Alt+ Up/Down 在方法间快速移动定位
Ctrl+Shift+Up/Down 代码向上/下移动。
F2 或Shift+F2 高亮错误或警告快速定位
 
代码标签输入完成后，按Tab，生成代码。
选中文本，按Ctrl+Shift+F7 ，高亮显示所有该文本，按Esc高亮消失。
Ctrl+W 选中代码，连续按会有其他效果
选中文本，按Alt+F3 ，逐个往下查找相同文本，并高亮显示。
Ctrl+Up/Down 光标跳转到第一行或最后一行下
Ctrl+B 快速打开光标处的类或方法 

------------

 在JVM处粘贴：-Xms258m -Xmx1024m -XX:PermSize=128m -XX:MaxPermSize=256m
 
 

------------

43B4A73YYJ-eyJsaWNlbnNlSWQiOiI0M0I0QTczWVlKIiwibGljZW5zZWVOYW1lIjoibGFuIHl1IiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE3LTAyLTI1In0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IlJTMCIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDE3LTAyLTI1In0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IldTIiwicGFpZFVwVG8iOiIyMDE3LTAyLTI1In0seyJjb2RlIjoiREIiLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9XSwiaGFzaCI6IjMzOTgyOTkvMCIsImdyYWNlUGVyaW9kRGF5cyI6MCwiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-keaxIkRgXPKE4BR/ZTs7s7UkP92LBxRe57HvWamu1EHVXTcV1B4f/KNQIrpOpN6dgpjig5eMVMPmo7yMPl+bmwQ8pTZaCGFuLqCHD1ngo6ywHKIQy0nR249sAUVaCl2wGJwaO4JeOh1opUx8chzSBVRZBMz0/MGyygi7duYAff9JQqfH3p/BhDTNM8eKl6z5tnneZ8ZG5bG1XvqFTqWk4FhGsEWdK7B+He44hPjBxKQl2gmZAodb6g9YxfTHhVRKQY5hQ7KPXNvh3ikerHkoaL5apgsVBZJOTDE2KdYTnGLmqxghFx6L0ofqKI6hMr48ergMyflDk6wLNGWJvYHLWw==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==



------------

idea官方下载地址：https://confluence.jetbrains.com/display/IntelliJIDEA/Previous+IntelliJ+IDEA+Releases；
idea主题包：http://www.riaway.com/；

------------

Some more details: I ended up performing these steps to match out of the box eclipse organizing:

(in settings > code style > java > imports, as mentioned by @yole)

set "class count to use import with '*'" to 99 (seems like you cannot turn this off)
set this ordering (like eclipse defaults):
static all other,
blank,
java.*,
blank,
javax.*,
blank,
org.*,
blank,
com.*,
blank,
all other imports

------------

64位
-Xms512m
-Xmx1024m
-XX:MaxPermSize=500m
-XX:ReservedCodeCacheSize=240m
-XX:+UseConcMarkSweepGC
-XX:SoftRefLRUPolicyMSPerMB=50
-ea
-Dsun.io.useCanonCaches=false
-Djava.net.preferIPv4Stack=true
-XX:+HeapDumpOnOutOfMemoryError
-XX:-OmitStackTraceInFastThrow

32位
-server
-Xms512m
-Xmx1024m
-XX:MaxPermSize=500m
-XX:ReservedCodeCacheSize=240m
-XX:+UseConcMarkSweepGC
-XX:ParallelGCThreads=2
-XX:SoftRefLRUPolicyMSPerMB=50
-ea
-Dsun.io.useCanonCaches=false
-Djava.net.preferIPv4Stack=true
-XX:+HeapDumpOnOutOfMemoryError
-XX:-OmitStackTraceInFastThrow

------------

43B4A73YYJ-eyJsaWNlbnNlSWQiOiI0M0I0QTczWVlKIiwibGljZW5zZWVOYW1lIjoibGFuIHl1IiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE3LTAyLTI1In0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IlJTMCIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDE3LTAyLTI1In0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9LHsiY29kZSI6IldTIiwicGFpZFVwVG8iOiIyMDE3LTAyLTI1In0seyJjb2RlIjoiREIiLCJwYWlkVXBUbyI6IjIwMTctMDItMjUifSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAxNy0wMi0yNSJ9XSwiaGFzaCI6IjMzOTgyOTkvMCIsImdyYWNlUGVyaW9kRGF5cyI6MCwiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-keaxIkRgXPKE4BR/ZTs7s7UkP92LBxRe57HvWamu1EHVXTcV1B4f/KNQIrpOpN6dgpjig5eMVMPmo7yMPl+bmwQ8pTZaCGFuLqCHD1ngo6ywHKIQy0nR249sAUVaCl2wGJwaO4JeOh1opUx8chzSBVRZBMz0/MGyygi7duYAff9JQqfH3p/BhDTNM8eKl6z5tnneZ8ZG5bG1XvqFTqWk4FhGsEWdK7B+He44hPjBxKQl2gmZAodb6g9YxfTHhVRKQY5hQ7KPXNvh3ikerHkoaL5apgsVBZJOTDE2KdYTnGLmqxghFx6L0ofqKI6hMr48ergMyflDk6wLNGWJvYHLWw==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==


http://127.0.0.1:1017



BIG3CLIK6F-eyJsaWNlbnNlSWQiOiJCSUczQ0xJSzZGIiwibGljZW5zZWVOYW1lIjoibGFuIHl1IiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiQUMiLCJwYWlkVXBUbyI6IjIwMTctMTEtMjMifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxNy0xMS0yMyJ9LHsiY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDE3LTExLTIzIn0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDE3LTExLTIzIn0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMTctMTEtMjMifSx7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMTctMTEtMjMifSx7ImNvZGUiOiJSQyIsInBhaWRVcFRvIjoiMjAxNy0xMS0yMyJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE3LTExLTIzIn0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMTctMTEtMjMifSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjAxNy0xMS0yMyJ9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDE3LTExLTIzIn0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMTctMTEtMjMifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxNy0xMS0yMyJ9XSwiaGFzaCI6IjQ3NzU1MTcvMCIsImdyYWNlUGVyaW9kRGF5cyI6MCwiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-iygsIMXTVeSyYkUxAqpHmymrgwN5InkOfeRhhPIPa88FO9FRuZosIBTY18tflChACznk3qferT7iMGKm7pumDTR4FbVVlK/3n1ER0eMKu2NcaXb7m10xT6kLW1Xb3LtuZEnuis5pYuEwT1zR7GskeNWdYZ0dAJpNDLFrqPyAPo5s1KLDHKpw+VfVd4uf7RMjOIzuJhAAYAG+amyivQt61I9aYiwpHQvUphvTwi0X0qL/oDJHAQbIv4Qwscyo4aYZJBKutYioZH9rgOP6Yw/sCltpoPWlJtDOcw/iEWYiCVG1pH9AWjCYXZ9AbbEBOWV71IQr5VWrsqFZ7cg7hLEJ3A==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==


------------

入职
部分地址
EA
svn
ftp
6部机房服务器

------------

内部邮箱
gaodebao@dvt.dvt.com 密码：qwelasd2 ,  123456

oa系统：
http://oa.sumavision.com/Default.aspx
22970：gaodebao19890124

1qaz@WSX




------------

qc：	http://192.166.66.67:8888/qcbin/start_a.htm

商户自助平台开发环境：http://192.161.14.94:8080/merchant/  用户名：Admin 所属商户：CSSH 密码111111



高大容 10:53:14
gaodr 222222
高大容 10:53:46
administrator 111111





------------

项目路径：tvpay2model --- DBType=0;Connect=Provider=MSDASQL.1;Persist Security Info=False;Data Source=TVPAY2MODEL


ea的用户名是gaodebao




------------

用户名：gaodebao
密码：gdb20160714

任务单地址：svn://svn.sumapay.com/pub/任务单


商户自助平台地址：svn://svn.sumapay.com/tvpay/CMMI3/开发库/电视支付2.0/sourcecode/fengfu/system/branches/branch-2.0.57.0/gateway/internet/com.sumavision.tvpay.gateway.web.merchant

svn://svn.sumapay.com/tvpay/CMMI3/开发库/电视支付2.0/sourcecode/fengfu/ProductRequirementCode/trunk/system	读写	高德宝	2016-12-31

svn://svn.sumapay.com/tvpay/CMMI3/开发库/电视支付2.0/sourcecode/fengfu/system/branches	读写	高德宝	2016-12-31




svn://svn.sumapay.com/pub/部门员工月考核/2016年研发八部月考核

------------

ftp://192.166.69.12/

------------

         由于八部的3台服务器需要从二部机房搬迁到六部机房，相关服务的IP需要进行修改，今天下班后相关服务器将停机。

新的服务器规划为：

SVN主服务器：192.166.68.10

SVN备服务器：192.166.68.11

开发服务器宿主：192.166.68.20

ftp服务器VM：192.166.68.21

maven服务器VM：192.166.68.22


------------

2016
20170107
20170113
20170120
20170205
20170210
20170217
20170224
20170303
20170310
20170317
20170324
20170407
20170414
20170421
20170428
20170505
20170512
20170519
20170526
20170602
20170609
20170616
20160623
20170630
20170707
20170714
20170721
20170728

------------

20160718
20160723
20160801
20160808
20160815
20160819
20160826
20160902
20160909
20160918
20160923
20161008
20161014
20161021
20161028
20161104
20161111
20161118
20161125
20161202
20161209
20161216
20161227
20161230

------------

下周任务
1、	SP_S_20160011（徽商存管2期）-完成上线支持（高大容）
2、	SP_S_20160012（金融工场）-完成代码合并，提交配合测试，进行配合测试支持（白志远、王亚强、杨越）
3、	SP_S_20160010（小额付款认证，开发）-完成平台、运营管理系统的开发（游志青、高大容）
4、	SP_S_20160010（人工实名认证审核，开发）-完成商户自助网站的开发（王亚强）
5、	SP_S_20160010（对账单优化，开发）-完成商户自助网站的开发（王亚强）
6、	SP_S_20160010（业务监控）-完成平台、运营管理系统、调度2.5、异步通知系统的开发（游志青、王冠宇、白志远）
7、	SP_S_20160015（代扣优化）-开发30%（杨越、梁波）
8、	HA升级-完成运营管理系统的开发（王冠宇）
9、	工作交接-完成资金存管H5接口系统trunk版本的交接，用户自服系统trunk版本交接30%（高大容、杨越）
10、	学习-了解代扣2.5（梁波）
11、	学习-了解系统开发工具，了解商户自助网站（高德宝）
12、	流程细化-对资金上缴、收费银行卡鉴权功能进行流程细化，完成银行对账流程细化（王冠宇、白志远）

游志青
	任务3
	任务6	平台

王冠宇
	任务6	运营管理系统、异步通知
	任务8
	任务12

高大容
	任务1
	任务3	
	任务9

白志远
	任务2
	任务6	调度2.5
	任务12

梁波
	任务7	线上代扣处理器
	任务10

高德宝
	任务11

王亚强
	任务2
	任务4
	任务5

杨越
	任务2
	任务7
	任务9


------------

下周任务：
1、	SP_S_20160012（金融工场）-完成运营部确认支持，完成上线支持（冯宗亮、白志远、杨越）
2、	SP_S_20160010（小额付款认证）-完成商户自助网站、快捷H5接口的开发（高德宝、王亚强）
3、	SP_S_20160010（人工实名认证审核）-完成商户自助网站的开发（高德宝）
4、	SP_S_20160010（对账单优化）-完成商户自助网站的开发（高德宝）
5、	SP_S_20160010（业务监控）-完成商户接口系统、资金存管H5接口、快捷H5接口、收银台的开发（冯宗亮、高大容）
6、	SP_S_20160010（错误码整理）-完成网关各接口文档的整理（高大容）
7、	SP_S_20160010（联调）-完成小额付款认证、手工实名认证、统一记账、一键充值优化等业务的联调（游志青、王冠宇、高大容、白志远、高德宝、杨越）
8、	SP_S_20160015（代扣优化）-完成开发（杨越、梁波）
9、	业务流程整理-同步已有的业务，完成直连快捷、移动快捷、代扣支付、支付结算的整理（游志青）
10、	流程细化-完成银行对账、商户对账单、存管对账、小额付款认证流程细化（王冠宇、白志远）
11、	学习-了解普通项目投标、撤标、流标等（白志远）

游志青
	任务7
	任务9

王冠宇
	任务7
	任务10

高大容
	任务5
	任务6
	任务7
	
白志远
	任务1
	任务7
	任务10
	任务11

梁波
	任务8

高德宝
	任务2 -------完成
	任务3 -------完成
	任务4 ------完成
	任务7-------

王亚强
	任务2

杨越
	任务1
	任务7
	任务8


------------

下周任务：
1、	SP_S_20160010-完成与移动组的联调，完成配合测试提交，进行配合测试支持（冯宗亮、游志青、王冠宇、高大容、白志远、高德宝、王亚强、杨越）
2、	SP_S_20160015（需求）-完成需求确认，视情况进行业务流程分析（冯宗亮、游志青）
3、	费率优化-重新梳理费率优化流程，补充2.5费率服务迁移方案（游志青）
4、	工作交接-完成资金存管H5、快捷H5的branch交接，支持收银台trunk的交接（高大容、王亚强）
5、	工作交接-完成商户自助网站的交接（高德宝、王亚强）
6、	工作交接-完成代扣还款的交接（梁波、杨越）
7、	流程细化-完成用户/企业用户提现/付款、用户主要功能（含实名认证及人工实名认证部分）的细化（王冠宇）
8、	学习-了解普通项目标投标、撤标、流标、放款、托管账户还款，并进行流程细化（白志远）
9、	学习-完成运营管理系统费率相关业务、代发/代扣相关业务的了解，对交易相关功能了解30%（高大容）

游志青
	任务1
	任务2
	任务3

王冠宇
	任务1
	任务7

高大容
	任务1
	任务4
	任务9

白志远
	任务1
	任务8

梁波
	任务6

高德宝
	任务1
	任务5

王亚强
	任务1
	任务4
	任务5

杨越
	任务1
	任务6


------------

下周任务：
1、	SP_S_20160010-进行配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝、王亚强、杨越）
2、	SP_S_20160010-完成代码审查（冯宗亮、游志青）
3、	SP_S_20160015（需求）-完成业务流程分析（冯宗亮、游志青）
4、	SP_S_20160015（分账比例优化）-完成开发（游志青）
5、	SP_S_20160015（实名开户优化）-完成商户接口系统方案编写，完成商户接口系统、平台的开发（王冠宇、高大容）
6、	SP_S_20160015（网融管家接口优化）-完成商户接口系统的方案编写、开发（高大容）
7、	SP_S_20160015（商户自助网站项目查询）-完成商户自助网站的开发（高德宝）
8、	SP_S_20160015（鉴权产品对账单）-完成对账系统、商户自助网站的开发（王冠宇、高德宝）
9、	SP_S_20160015（付款失败原因）-完成平台的开发（游志青）
10、	SP_S_20160015（HA、MQ永久队列）-完成对账系统、商户自助网站、支付2.5的开发（王冠宇、白志远、高德宝）
11、	工作交接-支持收银台、用户自服系统trunk的交接（王亚强、杨越）
12、	工作交接-完成代扣投标、网银支付的交接（梁波、杨越）
13、	学习-完成运营管理系统产品渠道相关功能、交易查询功能（高大容）
14、	流程细化-完成实名认证及人工实名认证部分的细化（王冠宇）
15、	学习-了解普通项目本息到账、代扣充值、网银充值，并进行流程细化（白志远）

游志青
	任务1
	任务2
	任务3
	任务4
	任务9

王冠宇
	任务1
	任务5
	任务8
	任务10	对账系统
	任务14

高大容
	任务1
	任务5
	任务6
	任务13

白志远
	任务1
	任务10	支付2.5
	任务15

梁波
	任务1
	任务12

高德宝
	任务1
	任务7
	任务8	商户自助网站
	任务10 	商户自助网站

王亚强
	任务1
	任务11
	
杨越
	任务1
	任务11
	任务12


------------

下周任务
1、	SP_S_20160010-完成配合测试支持，完成运营部确认，视情况进行上线支持（游志青、王冠宇、高大容、白志远、梁波、高德宝、王亚强、杨越）
2、	SP_S_20160010_1（账户排队）-提交配合测试，进行配合测试支持（游志青）
3、	SP_S_20160015（分账比例优化）-完成开发（游志青）
4、	SP_S_20160015（交易查询时间条件）-完成开发（高大容）
5、	SP_S_20160015（银联支付渠道配置）-完成运营管理系统的开发，平台开发70%（高大容、梁波）
6、	SP_S_20160015（逾期代偿）-完成内部对账、排队、商户自助网站的开发（游志青、高德宝）
7、	SP_S_20160015（HA）-完成平台的开发（游志青）
8、	商户自助网站权限-完成权限优化方案，视情况进行开发（高德宝）
9、	工作交接-支持收银台、用户自服系统trunk的交接（王亚强、杨越）
10、	工作交接-完成还款中项目导入、其他查询处理器的交接（梁波、杨越）
11、	流程细化-完成用户相关处理器的细化（王冠宇）
12、	学习-了解普通项目本息到账、代扣充值、网银充值，并进行流程细化（白志远）

游志青
	任务1
	任务2
	任务3
	任务6
	任务7

王冠宇
	任务1
	任务11

高大容
	任务1
	任务4
	任务5

白志远
	任务1
	任务12

梁波
	任务1
	任务5
	任务10

高德宝
	任务1
	任务6
	任务8

王亚强
	任务1
	任务9

杨越
	任务1
	任务9
	任务10

------------

下周任务：
1、	SP_S_20160010-完成运营部确认，视情况进行上线支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	SP_S_20160010_1（账户排队）-提交配合测试，进行配合测试支持（游志青）
3、	SP_S_20160015（逾期代偿）-完成运营管理系统的开发（高大容）
4、	SP_S_20160015（HA）-完成代扣2.5的开发（梁波）
5、	SP_S_20160015（用户处理器优化）-完成用户相关处理器的优化（王冠宇）
6、	SP_S_20160015（网银处理器）-清理网银支付处理器中创建订单的逻辑（梁波）
7、	SP_S_20160015（支付2.5常量优化）-优化快捷支付、订单相关常量（白志远）
8、	SP_S_20160015（联调）-完成组内及与移动组的联调（游志青、王冠宇、高大容、白志远、梁波）
9、	费率优化-完成运营管理系统实现方案编写（高大容）
10、	微信支付-完成微信支付需求的评估（冯宗亮）
11、	业务梳理-完成充值业务的梳理（游志青）
12、	学习-了解退款业务（梁波）

游志青：
	任务1
	任务2
	任务8
	任务11

王冠宇
	任务1
	任务5
	任务8

高大容
	任务1
	任务3
	任务8
	任务9

白志远
	任务1
	任务7
	任务8

梁波
	任务1
	任务4
	任务6
	任务8
	任务12

高德宝
	任务1

------------

下周任务：
1、	SP_S_20160015-完成代码合并，完成配合测试提交，进行配合测试支持（冯宗亮、游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	SP_S_20160016（凭证余额优化）-完成账务系统的开发（游志青）
3、	SP_S_20160016（短信邮件发送优化）-完成短信邮件发送服务及相关处理器的修改（王冠宇、白志远）
4、	SP_S_20160016（微信支付，方案）-完成业务流程分析，完成平台、运营管理系统方案编写（冯宗亮、高大容、梁波）
5、	SP_S_20160016（微信支付，开发）-运营管理系统、平台开发40%，完成对账系统、商户自助网站开发（游志青、王冠宇、高大容、梁波、高德宝）
6、	2.5-编写2.5的单元测试用例模板（白志远）
7、	业务梳理-付款提现业务梳理30%（游志青）

游志青
	任务1
	任务2
	任务5	内部对账、商户结算
	任务7

王冠宇
	任务1
	任务3
	任务5	对账系统

高大容
	任务1
	任务4	运营管理系统
	任务5	运营管理系统

白志远
	任务1
	任务3	相关处理器
	任务6

梁波
	任务1
	任务4	2.5
	任务5	2.5

高德宝
	任务1
	任务5	商户自助网站、运营管理系统的大额交易、交易量等功能


------------

下周任务：
1、	SP_S_20160015-完成配合测试，视情况进行运营部确认和上线支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	SP_S_20160017-完成配合测试，完成上线支持（王冠宇、高大容、高德宝）
3、	SP_S_20160016（微信支付，开发）-完成运营管理系统、平台开发，完成对账系统、商户自助网站开发（王冠宇、高大容）
4、	SP_S_20160016（微信支付，自测联调）-完成自测及组内联调，视情况进行与移动组和连接器的联调（游志青、王冠宇、高大容、梁波、高德宝）
5、	SP_S_20160016（代扣优化）-完成代扣类业务的开发（梁波）
6、	业务梳理-完成付款提现业务、商户转账的梳理（游志青）
7、	调度梳理-梳理现在生产环境2.0和2.5的调度文件，归档入svn（白志远）

游志青
	任务1
	任务4
	任务6

王冠宇
	任务1
	任务2
	任务3
	任务4

高大容
	任务1
	任务2
	任务3
	任务4

白志远
	任务1
	任务7

梁波
	任务1
	任务4
	任务5

高德宝
	任务1
	任务2
	任务4

------------

下周任务：
1、	SP_S_20160015-完成运营部确认和上线支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	SP_S_20160018-完成配合测试支持、上线（游志青、梁波）
3、	SP_S_20160016（微信支付，自测联调）-完成与移动组和连接器的联调（王冠宇、高大容、梁波）
4、	SP_S_20160016（代扣优化）-完成代扣类业务的开发（梁波）
5、	SP_S_20160016-完成配合测试提交，进行配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
6、	手工调度-完成手工执行2.0调度的上线资料整理和脚本，视情况进行上线（白志远）
7、	SP_S_20160019（费率优化）-平台、运营管理系统开发40%（游志青、高大容）
8、	代码整理-检查代码中具有循环逻辑的代码，确认是否有重复执行的逻辑，视情况进行修改（王冠宇、白志远）

游志青
	任务1
	任务2
	任务5
	任务7

王冠宇
	任务1
	任务3
	任务5
	任务8

高大容
	任务1
	任务3
	任务5
	任务7

白志远
	任务1
	任务5
	任务6
	任务8

梁波
	任务1
	任务2
	任务3
	任务4
	任务5

高德宝
	任务1
	任务5

------------

下周任务：
1、	SP_S_20160016-完成配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	微信公众号支付-完成业务流程分析，完成开发（游志青、王冠宇、高大容、梁波、高德宝）
3、	SP_S_20160019（费率优化）-完成平台2.0及2.5、运营管理系统的开发（游志青、高大容）
4、	10月需求-跟产品要下个月的需求，视情况进行需求评估（冯宗亮）
5、	订单体系优化-考虑订单-请求-交易体系，编写方案70%（白志远）
6、	代码整理-检查代码中具有循环逻辑的代码，确认是否有重复执行的逻辑，视情况进行修改（梁波）
7、	学习-了解银行对账系统的支付对账（高德宝）

------------

下周任务：
1、	SP_S_20160016（微信公众号支付）-完成配合测试支持，进行上线支持（游志青、王冠宇、高大容、梁波、高德宝）
2、	SP_S_20160019（费率优化）-完成平台2.0处理器、平台2.5、商户自助网站的开发（游志青、王冠宇、白志远、梁波、高德宝）
3、	订单体系优化-完成方案编写，视情况进行评审（白志远）
4、	代码整理-检查代码中具有循环逻辑的代码，确认是否有重复执行的逻辑，视情况进行修改（游志青）
5、	10月需求-完成需求评估和范围确定，完成业务业务流程分析，视情况进行方案编写、开发（冯宗亮、游志青、王冠宇、高大容、梁波、高德宝）
6、	学习-了解银行对账系统的退款对账（高德宝）

游志青
	任务1
	任务2	注意负责一下手续费计算处理器
	任务4
	任务5

王冠宇
	任务1
	任务2
	任务5

高大容
	任务1
	任务5

白志远
	任务2
	任务3
	任务5

梁波
	任务1
	任务2
	任务5

高德宝
	任务1
	任务2
	任务5
	任务6

------------

下周任务：
1、	SP_S_20160016（微信公众号支付）-完成配合测试支持，进行上线支持（游志青、王冠宇、高大容、梁波、高德宝）
2、	DP_20160021（风控增加流水号）-完成平台的开发（游志青、白志远、梁波）
3、	SP_S_20160019（系统错误提示语）-完成平台的开发（游志青、王冠宇、白志远）
4、	SP_S_20160019（组合费率）-完成运营管理系统的开发（高大容）
5、	SP_S_20160019（存管用户唯一性校验）-完成平台、运营管理系统的开发（王冠宇、高大容）
6、	SP_S_20160019（项目还款账户转出审核）-完成平台的开发（游志青、王冠宇）
7、	SP_S_20160019（移动端实名认证）-完成平台的开发（王冠宇）
8、	SP_S_20160019（快捷鉴权优化）-完成平台的开发，运营管理系统开发40%（白志远、高大容）
9、	代码整理-检查代码中具有循环逻辑的代码，确认是否有重复执行的逻辑，视情况进行修改（游志青）
10、	退款优化方案-完成根据退款交易流水号进行对账的退款优化方案的编写，启动根据银行票号进行支付交易对账的优化方案编写（高德宝）
11、	代扣2.5合并优化方案-完成将代扣2.5的代扣系统和代扣domain合并的方案编写（梁波）

游志青
	任务1
	任务2
	任务3
	任务6
	任务9

王冠宇
	任务1
	任务3
	任务5
	任务6
	任务7

高大容
	任务1
	任务4
	任务5
	任务8

白志远
	任务2
	任务3
	任务8

梁波
	任务1
	任务2
	任务11

高德宝
	任务1
	任务10


------------

下周任务：
1、	SP_S_20160016（微信公众号支付）-完成上线支持（高德宝）
2、	SP_S_20160019（付款退票异步通知）-完成商户接口系统、平台的开发（游志青、高大容）
3、	SP_S_20160019-完成与移动组联调，提交配合测试，进行配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
4、	调度HA优化-完成2.0和2.5调度文件的修改，完成部分调度的验证（白志远）
5、	SP_S_20160021（账户排队优化）-完成账户排队唯一索引的方案编写、开发（游志青）
6、	SP_S_20160021（退款优化方案）-完成对账系统的开发（高德宝）
7、	SP_S_20160021（运营管理系统struts优化）-完成账户管理的开发，账务管理开发60%（高大容）
8、	银行票号优化方案-完成根据银行票号进行支付、退款交易对账的优化方案编写（高德宝）
9、	业务流程细化-完成微信支付的流程细化（梁波）

游志青
	任务2
	任务3
	任务5
	任务7

王冠宇
	任务3

高大容
	任务2
	任务3
	任务7

白志远
	任务3
	任务4

梁波
	任务3
	任务9

高德宝
	任务1
	任务3
	任务6
	任务8


------------

下周任务：
1、	SP_S_20160019-进行配合测试支持，修改发现的BUG（游志青、王冠宇、高大容、白志远、梁波 、高德宝）
2、	调度HA优化-完成2.5调度文件的修改，完成部分调度的验证（白志远）
3、	请求交易优化-完成网银充值类（商户、用户、企业用户）、投标、撤标、流标的方案编写（游 志青、白志远）
4、	SP_S_20160021（运营管理系统struts优化）-完成清结算管理开发40%（高大容）
5、	11月需求-完成需求确认，视情况进行业务流程分析，进行部分功能开发（冯宗亮、游志青、王 冠宇、梁波、高德宝）
6、  SP_S_20160021（港澳台身份证修改）-完成商户自助网站、运营管理系统的修改（高大容、高德宝）

------------

下周任务：
1、	SP_S_20160019-完成配合测试支持，完成运营部确认，视情况进行上线支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	环境分离-完成代码、jar包等分离（冯宗亮）
3、ASP_S_20160001（民生微信、支付宝）-完成运营管理系统、支付2.5、商户自助网站、对账系统、账务系统的开发	（游志青、王冠宇、高大容、梁波、高德宝）
4、	SP_S_20160021（商户冻结）-完成运营管理系统、商户接口系统、代扣预处理系统的开发（高大容）
5、	SP_S_20160021（付款日累计金额/笔数限制）-完成平台的开发（游志青）
6、	SP_S_20160021（请求交易优化）-完成商户网银充值、投标、撤标、流标的开发（游志青、白志远）

游志青
	任务1
	任务3
	任务5
	任务6

王冠宇
	任务1
	任务2

高大容
	任务1
	任务3
	任务4

白志远
	任务1
	任务6

梁波
	任务1
	任务3

高德宝
	任务1
	任务3


------------

下周任务
1、	ASP_S_20160001-完成联调，提交配合测试，进行配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	SP_S_20160021（批量调账）-完成运营管理系统的开发（高大容）
3、	SP_S_20160021/ASP_S_20160001（商户自助网站session集群）-完成商户自助网站的开发（高德宝）
4、	自动化测试-完成自动化测试bug的修改（高大容）
5、	付款2.5迁移-编写方案30%（游志青、王冠宇）
6、	请求交易优化-完成托管账户还款、放款、债权转让方案编写，视情况进行开发；完成网银支付等方案编写（白志远、梁波）
7、	下一版本需求-完成需求范围确认，视情况进行业务流程分析（冯宗亮）

游志青
	任务1
	任务5	注意写一下整体方案

王冠宇
	任务1
	任务5

高大容
	任务1
	任务2
	任务4

白志远
	任务1
	任务6	还款、放款、债权转让等

梁波
	任务1
	任务6	网银支付、聚合支付

高德宝
	任务 
	任务3
冯宗亮(F07959698B24对话) 11:04:37
高德宝事不多，下周再说


------------

下周任务：
1、	ASP_S_20160001-进行配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	SP_S_20160021-提交配合测试，进行配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
3、	自动化测试-完成自动化测试bug的修改（高大容）
4、	付款2.5迁移-完成方案编写（游志青、王冠宇）
5、	SP_S_20160023（请求交易优化）-完成托管账户还款、放款、债权转让的开发（白志远）
6、	SP_S_20160023（需求）-完成业务流程分析，开发20%（高大容、白志远、梁波、高德宝）

游志青
	任务1
	任务2
	任务4

王冠宇
	任务1
	任务2
	任务4

高大容
	任务1
	任务2
	任务3
	任务6

白志远
	任务1
	任务2
	任务5
	任务6

梁波
	任务1
	任务2
	任务6

高德宝
	任务1
	任务2
	任务6

------------

下周任务：
1、	ASP_S_20160001-进行配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	SP_S_20160021-提交配合测试，进行配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
3、	DP_20160002（付款2.5迁移）-完成方案编写，搭建系统，开发10%（游志青、王冠宇）
4、	SP_S_20160023（代扣对账）-完成平台、支付2.5、代扣2.5、对账系统的开发（白志远、梁波、高德宝）
5、	SP_S_20160023（企业用户开户优化）-完成平台的开发（游志青、高德宝）
6、	SP_S_20160023（商户通知、文件下载）-运营管理系统开发50%，商户自助网站开发30%（高大容、高德宝）

游志青
	任务1
	任务2
	任务3
	任务5

王冠宇
	任务1
	任务2
	任务3

高大容
	任务1
	任务2
	任务6

白志远
	任务1
	任务2
	任务4

梁波
	任务1
	任务2
	任务4

高德宝
	任务1
	任务2
	任务4
	任务5
	任务6

------------

下周任务：
1、	SP_S_20160021-进行配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	DP_20160002（付款2.5迁移）-开发40%（游志青、王冠宇）
3、	SP_S_20160023（商户通知、文件下载）-完成运营管理系统、商户自助网站的开发（高大容、高德宝）
4、	SP_S_20160023（联调）-完成组内联调，与移动组进行联调（游志青、王冠宇、高大容、白志远、梁波、高德宝）
5、	SP_S_20160023（请求交易优化）-完成个人网银充值的开发（白志远）

游志青
	任务1
	任务2
	任务4

王冠宇
	任务1
	任务2
	任务4

高大容
	任务1
	任务3
	任务4

白志远
	任务1
	任务4
	任务5

梁波
	任务1
	任务4

高德宝
	任务1
	任务3
	任务4

------------

下周任务
1、	SP_S_20160021-完成配合测试支持，完成运营部确认，进行上线支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	SP_S_20160023（请求交易优化）-完成个人网银充值交易调整的开发（高大容）
3、	SP_S_20160023-提交配合测试，进行配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
4、	DP_20160002（付款2.5迁移）-完成现有开发部分的冒烟测试；开发60%，（游志青、王冠宇）
5、	SP_S_20160024（请求交易优化）-完成企业用户网银充值、后付手续费账户线下充值的开发（白志远、高大容）
6、	渠道路由-完成需求确认，完成业务流程分析，视情况编写方案（冯宗亮、高大容）
7、	锁表服务-完成区分无记录和锁不成功的修改方案（高德宝）

游志青
	任务1
	任务3
	任务4	注意调度转 2.5

王冠宇
	任务1
	任务3
	任务4	注意调度转 2.5

高大容
	任务1
	任务2
	任务3
	任务5
	任务6

白志远
	任务1
	任务3
	任务5

梁波
	任务1
	任务3

高德宝
	任务1
	任务3
	任务7


------------

下周任务：
1、	SP_S_20160023-进行配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	DP_20160002（付款2.5迁移）-完成处理器的开发，账户排队开发80%（游志青、王冠宇）
3、	SP_S_20160024（锁表服务优化）-完成负责处理器的修改（游志青、王冠宇、白志远、梁波）
4、	SP_S_20160024（打印付款凭证）-完成商户自助网站及打印工具的开发（高德宝）
5、	SP_S_20160024（本息到账优化）-完成平台、调度的开发（白志远）
6、	SP_S_20160024（异步通知）-完成方案编写（高德宝）
7、	SP_S_20160024（运营管理struts优化）-完成清结算管理、资金归集管理的修改（高大容）
8、	徽商2.0-完成需求确认，完成业务流程分析（冯宗亮）

游志青
	任务1
	任务2
	任务3	只修改付款相关、商户网银充值

王冠宇
	任务1
	任务2
	任务3	只修改付款相关

高大容
	任务1
	任务7

白志远
	任务1
	任务3	除了自己之外，p2p、充值类的也要改下
	任务5

梁波
	任务1
	任务3	除了自己之外，用户相关的也要改下

高德宝
	任务1
	任务4
	任务6


------------

本周任务：
1、	SP_S_20160023-完成配合测试支持，完成运营部确认，视情况进行上线支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	DP_20160029（session集群）-完成商户自助网站的修改，完成配合测试支持（高德宝）
3、	DP_20160002（付款2.5迁移）-完成自测联调（游志青、王冠宇）
4、	SP_S_20160024（异步通知）-完成异步通知系统开发（高德宝）
5、	SP_S_20160024（请求交易优化）-完成企业用户还款的开发（白志远）
6、	SP_S_20160024（运营管理struts优化）-完成卡BIN管理的修改（高大容）
7、	SP_S_20160024-提交配合测试，进行配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
8、	徽商2.0-完成需求确认，完成业务流程分析（冯宗亮）
9、	其他-与运营部确认代扣鉴权、付款年限额等需求，确认版本规划，视情况进行业务流程分析和方案设计等工作（冯宗亮）

游志青
	任务1
	任务3
	任务7

王冠宇
	任务1
	任务3
	任务7

高大容
	任务1
	任务6
	任务7

白志远
	任务1
	任务5
	任务7

梁波
	任务1
	任务7

高德宝
	任务1
	任务2
	任务4
	任务7

------------

1、	SP_S_20160024-完成配合测试提交，进行配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	DP_20160002（付款2.5迁移）-完成配合测试提交，进行配合测试支持（游志青、王冠宇）
3、	徽商2.0-完成剩余需求确认，完成业务流程分析（冯宗亮）
4、徽商2.0-完成实时业务的方案编写，视情况进行开发（游志青、王冠宇、高大容、白志远、梁波、高德宝）

------------

下周任务：
1、	SP_S_20160024-完成配合测试支持，完成上线支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	DP_20160002（付款2.5迁移）-完成配合测试提交，进行配合测试支持（游志青、王冠宇）
3、徽商2.0-完成运营管理系统的开发，平台完成50%，接口系统完成30%（游志青、王冠宇、高大容、白志远、梁波、高德宝）

------------

下周任务：
1、 DP_20160002（付款2.5迁移）-进行配合测试支持（游志青、王冠宇）
 2、 徽商2.0-完成开发，包括平台、接口系统、对账系统、商户自助网站、账务系统等，部分功能启动与移动组、连接器组的联调（游志青、王冠宇、高大容、白志远、梁波、高德宝）	

------------

下周任务：
1、	DP_20160002（付款2.5迁移）-进行配合测试支持（游志青、王冠宇、高大容）
2、	SP_S_20170001（付款功能优化）-完成付款2.5、运营管理系统、商户自助网站的开发（游志青、高大容、高德宝）
3、	SP_S_20170001（应用系统双因素身份鉴别）-完成商户自助网站的开发（高德宝）
4、	SP_S_20170001（商户信息录入）-完成运营管理系统、平台的开发（王冠宇、高大容）
5、	SP_S_20170001（渠道名称显示）-运营管理系统开发50%（高大容）
6、	SP_S_20160025（徽商2. 0）-已完成功能进行与移动组、连接器组的联调（王冠宇、白志远、梁波）

------------

下周任务：
1、	SP_S_20170001（应用系统双因素身份鉴别）-完成商户自助网站、运营管理系统的开发（高大容、高德宝）
2、	SP_S_20170001（联调）-完成系统联调（游志青、王冠宇、高大容、高德宝）
3、	SP_S_20160025（徽商2.0）-完成存量商户迁移的脚本方案确定，完成脚本编写；完成剩余处理器的开发（游志青、高德宝）
4、	SP_S_20160025（徽商2.0）-配合网关和连接器，完成部分功能的细致联调，包括快捷/网银充值、开户、绑卡/解绑、修改稿手机号、退款、对账等，进行部分后台接口的联调（游志青、王冠宇、白志远、梁波、高德宝、高大容）
5、	SP_S_20170002（代扣业务线下处理）-完成平台、代扣2.5的开发（梁波）

游志青
	任务2
	任务3	脚本
	任务4

王冠宇
	任务2
	任务4

高大容
	任务1
	任务2
	任务4

白志远
	任务4

梁波
	任务4
	任务5

高德宝
	任务1
	任务2
	任务3
	任务4

------------

下周任务：
1、	DP_20160002（付款2.5）-完成上线支持（游志青）
2、	SP_S_20170001（续展需求）-提交配合测试，进行配合测试支持（游志青、王冠宇、高大容、高德宝）
3、	SP_S_20160025（徽商2.0）-完成后台接口的联调（高德宝、高大容）
4、	SP_S_20170003（本息到账优化）-完成平台的开发（游志青）
5、	敏感数据-整理敏感数据（姓名、证件号、银行账号、手机号、邮箱）在系统中的应用情况，完成平台的整理，商户自助网站完成30%，运营管理系统完成10%（游志青、王冠宇、高大容、白志远、梁波、高德宝）
6、	流程细化-完成请求交易优化、徽商2.0相关处理器的EA流程细化（游志青、王冠宇、白志远、梁波）

游志青
	任务1
	任务2
	任务4
	任务5	尽量整理，优先做前三个
	任务6	优先级低，做不完就算

王冠宇
	任务2
	任务5
	任务6

高大容
	任务2
	任务3
	任务5

白志远
	任务5
	任务6

梁波
	任务5
	任务6

高德宝
	任务2
	任务3
	任务5


------------

下周任务
1、	SP_S_20170003-完成配合测试、上线支持（游志青、王冠宇、白志远、梁波）
2、	SP_S_20160025（徽商2.0）-提交配合测试，进行配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
3、	敏感数据-完成初稿的评审和评审后修改（冯宗亮）
4、	实时付款-完成最终需求确认，完成业务流程分析，视情况进行实现方案编写、开发（游志青、王冠宇、高大容、高德宝）
5、	流程细化-完成请求交易优化、徽商2.0相关处理器的EA流程细化（王冠宇、白志远）

------------

下周任务
1、	SP_S_20160025（徽商2.0）-进行配合测试支持，完成bug的修改（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	SP_S_20170002（实时付款，实现方案）-完成实现方案的编写（游志青、王冠宇）
3、	SP_S_20170002（实时付款，开发）-完成运营管理系统、商户接口系统、商户自助网站的开发，付款2.5完成用户/企业用户提现/付款的开发，其他完成50%（游志青、王冠宇、高大容、高德宝）
4、	SP_S_20170002（其他需求）-完成需求确认、业务流程分析，完成方案编写，视情况进行开发（高大容、白志远、高德宝）
5、	ASP_S_20170002（批量报备）-完成业务流程分析，完成运营管理系统和平台的开发（高大容、梁波）
6、	账户出金业务-整理系统中出金业务存的风险点（冯宗亮）

游志青
	任务1
	任务2
	任务3

王冠宇
	任务1
	任务2
	任务3

高大容
	任务1
	任务3
	任务4
	任务5

白志远
	任务1
	任务4

梁波
	任务1
	任务5

高德宝
	任务1
	任务3
	任务4

------------

下周任务：
1、	SP_S_20160025（徽商2.0）-完成配合测试支持，完成上线支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	SP_S_20170002（实时付款，开发）-完成开发，进行部分自测、联调（游志青、王冠宇、高大容、高德宝）
3、	SP_S_20170002（短信异步发送问题）-完成短信异步发送问题的修改（王冠宇）
4、	SP_S_20170002（事务排查）-完成2.0处理器事务的排查，有问题的完成修改（王冠宇、白志远、梁波）
5、	提现check方案-完成用户提现、企业用户提现/付款check方案的编写（王冠宇）
6、	运营管理系统JDK/glassfish升级-完成运营管理系统的开发，提交配合测试（高大容）
7、	敏感数据-完成数据库存量数据更新密文的调研，开会确认下一步的计划安排（冯宗亮）

游志青
	任务1
	任务2

王冠宇
	任务1
	任务2
	任务3
	任务4
	任务5

高大容
	任务1
	任务2
	任务6

白志远
	任务1
	任务4

高德宝
	任务1
	任务2
	
梁波
	任务1
	任务4

------------

下周任务
1、	SP_S_20160025（徽商2.0）-完成运营部确认，完成上线支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
2、	DP_20170001（运营管理系统升级）-进行配合测试支持（高大容）
3、	SP_S_20170002（实时付款）-完成自测、联调（游志青、王冠宇、高大容、高德宝）
4、	SP_S_20170002（事务排查）-完成2.0处理器事务的排查，有问题的完成修改（游志青）
5、	SP_S_20170002（配合测试）-完成代码合并，提交配合测试，进行配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
6、	ASP_S_20170003（广州浦发微信）-完成需求确认、业务流程分析，视情况进行方案设计、开发（高大容、梁波）
7、	ASP_S_20170004（导出商户对账单优化）-完成方案编写，开发70%（高德宝）
8、	SP_S_20170004（账户排队优化）-完成需添加排队控制的业务梳理，完成需更新批量处理逻辑的梳理，完成添加放款、集团商户的账户排队和批量处理逻辑修改（冯宗亮、游志青、白志远）
9、	SP_S_20170004（冲正优化）-完成网银支付的冲正修改，整理快捷支付、退款、用户提现、企业用户提现/付款、徽商2.0相关业务的冲正梳理（王冠宇、白志远、梁波）

游志青
	任务1
	任务3
	任务4
	任务5
	任务8

王冠宇
	任务1
	任务3
	任务5
	任务9

高大容
	任务1
	任务2
	任务3
	任务5
	任务6

白志远
	任务1
	任务5
	任务8
	任务9

梁波
	任务1
	任务5
	任务6
	任务9

高德宝
	任务1
	任务3
	任务5
	任务7

------------

下周任务：
1、	SP_S_20160025、DP_20170001-完成上线支持（高德宝）
2、	SP_S_20170005（徽商2.0入账通知）-完成开发，完成与连接器的联调，完成配合测试支持，视情况进行上线（王冠宇、高德宝、白志远）
3、	ASP_S_20170003（广州浦发微信）-完成开发，完成与移动组和连接器的联调，提交配合测试（高大容、梁波）
4、	SP_S_20170002（配合测试）-完成代码合并，提交配合测试，进行配合测试支持（游志青、王冠宇、高大容、白志远、梁波、高德宝）
5、	SP_S_20170006（敏感数据）-完成整体方案编写、评审、修改（冯宗亮）
6、	SP_S_20170006（敏感数据）-整理系统中涉及敏感数据的日志，清理2.0不再使用的处理器、服务，包含网关的action、服务（游志青、王冠宇、高大容、白志远、梁波、高德宝）

游志青
	任务4
	任务6

王冠宇
	任务2
	任务4
	任务6

高大容
	任务3
	任务4
	任务6

白志远
	任务2
	任务4
	任务6

梁波
	任务3
	任务4
	任务6

高德宝
	任务1
	任务2
	任务4
	任务6

------------

下周任务：
1、	SP_S_20160025、DP_20170001、SP_S_20170005-完成上线支持（高德宝）
2、	ASP_S_20170003（广州浦发微信）-完成配合测试支持，视情况支持上线（高大容、梁波）
3、	SP_S_20170006（徽商2.2）-完成开发，完成与移动组、连接器的联调，提交配合测试（游志青、高大容、梁波、高德宝）
4、	SP_S_20170004（敏感数据）-完成各负责系统的日志修改，交接的功能视交接情况修改（游志青、高大容、白志远、梁波、高德宝）
5、	SP_S_20170004（敏感数据）-完成数据库通用切面方案编写，启动其他系统切面梳理（游志青、高大容、白志远）
6、	工作交接-进行工作交接80%（王冠宇、白志远、梁波、高德宝）

游志青
	任务3
	任务4
	任务5

王冠宇
	任务6

高大容
	任务2
	任务3
	任务4
	任务5

白志远
	任务4
	任务5
	任务6

梁波
	任务2
	任务3
	任务4
	任务6

高德宝
	任务1
	任务3
	任务4
	任务6

------------

下周任务：
1、	ASP_S_20170003（广州浦发微信）-完成配合测试支持，视情况支持上线（高大容、梁波）
2、	SP_S_20170006（徽商2.2）-完成配合测试，完成上线支持（游志青、高大容、高德宝）
3、	SP_S_20170002-提交配合测试，进行配合测试支持（游志青、高大容、白志远、梁波、高德宝）
4、	SP_S_20170004（敏感数据，方案）-完成各系统切面梳理（高大容、白志远、梁波、高德宝）
5、	SP_S_20170004（敏感数据，开发）-完成数据库通用切面的编码，启动其他系统的开发（游志青、高大容、白志远、梁波、高德宝）

游志青
	任务2
	任务3
	任务5

高大容
	任务1
	任务2
	任务3
	任务4
	任务5

白志远
	任务3
	任务4
	任务5

梁波
	任务1
	任务3
	任务4
	任务5

高德宝
	任务2
	任务3
	任务4
	任务5
	
	
	
	update merchant_checkaccount_progress t set t.checkaccount_date=to_date('20170320','yyyymmdd') where
 t.type=0
  and t.checkaccount_date>to_date('20170320','yyyymmdd')
       and t.merchant_code in (select t1.merchant_code from merchant t1 where t1.fld9='1'and t1.status = 1);


------------

下周任务：
1、	SP_S_20170002-进行配合测试支持，修改发行的bug（游志青、高大容、白志远、梁波、高德宝）
2、	DP_20170012（session会话粘滞）-完成配合测试、上线支持（高德宝）
3、	SP_S_20170004（敏感数据，数据库开发）-完成各系统开发，完成连通性联调（游志青、高大容、白志远、梁波、高德宝）
4、	SP_S_20170004（敏感数据，日志开发）-根据新方案开发70%（游志青、高大容、白志远、梁波、高德宝）
5、	SP_S_20170004（敏感数据，文件开发）-完成文件加解密的调研、加解密工具的编码（白志远）

游志青
	任务1
	任务3
	任务4

高大容
	任务1
	任务3
	任务4

白志远
	任务1
	任务3
	任务4
	任务5

梁波
	任务1
	任务3
	任务4

高德宝
	任务1
	任务2
	任务3
	任务4
	
	
	C:\Sun\AppServer\bin;C:\Program Files (x86)\OpenVPN\bin:$GEMFIRE/bin;%GRADLE_HOME%\BIN;%MAVEN_HOME%\bin;
	C:\ProgramData\Oracle\Java\javapath;F:\oracle\product\10.2.0\db_2\bin;%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;D:\oracle\bin;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;%ANT_HOME%\bin;C:\Program Files\Git\cmd


------------

下周任务：
1、	SP_S_20170002-完成运营部确认，进行上线支持（游志青、高大容、白志远、梁波、高德宝）
2、	SP_S_20170004（敏感数据，数据库、页面显示、日志）-完成各系统联调（游志青、高大容、白志远、梁波、高德宝）
3、	SP_S_20170004（业务监控及log4j规范）-完成开发（游志青、高大容、白志远、梁波、高德宝）
4、	SP_S_20170004（密码控件）-完成密码控件的调研，视情况进行开发（高大容、高德宝）

游志青
	任务1
	任务2
	任务3	账务系统2.0/2.5、签名验签服务、付款2.5、平台2.0

高大容
	任务1
	任务2
	任务3	徽商api、preapi、商户接口系统、运营管理系统
	任务4

白志远
	任务1
	任务2
	任务3	调度2.0/2.5

梁波
	任务1
	任务2
	任务3	代扣2.5、支付2.5

高德宝
	任务1
	任务2
	任务3	对账、存管对账、商户自助网站
	任务4


------------

下周任务：
1、	SP_S_20170004（敏感数据）-根据商户确认结果，确定方案，如无大的改动，完成开发；完成全部联调工作（游志青、高大容、白志远、梁波、高德宝）
2、	SP_S_20170004（密码控件）-完成密码控件的调试（高大容、高德宝）
3、	付款实现流程整理-整理完整的付款实现流程，分析可能存在问题的点（游志青）
4、	账户资金风险优化-整理负责功能的批量处理类业务，对需账户排队的处理编写拆分处理器方案；整理需添加排队处理但未添加的处理器；整理需添加唯一索引的处理器（白志远、梁波）

游志青
	任务1
	任务3

高大容
	任务1
	任务2

白志远
	任务1
	任务4

梁波
	任务1
	任务4

高德宝
	任务1
	任务2

------------

1、 SP_S_20170004-合并代码，提交配合测试，进行配合测试支持（游志青、高大容、白志远、梁波、高德宝） 
2、 付款实现流程整理-完成付款流程的分析，分析可能存在问题的点（游志青） 
3、 账户资金风险优化-整理负责功能的批量处理类业务，对需账户排队的处理编写拆分处理器方案；整理需添加排队处理但未添加的处理器；整理需添加唯一索引的处理器（游志青、高德宝） 
4、 第三方CA-完成业务流程分析（冯宗亮）

------------

下周任务：
1、	SP_S_20170004-进行配合测试支持，修改发现的bug（游志青、高大容、白志远、梁波、高德宝）
2、	SP_S_20170008（第三方CA）-完成签名验签工具包方案编写，完成开发、联调（游志青、高大容、白志远、梁波、侯晓谦）
3、	SP_S_20170008（版本校验）-完成开发（梁波）
4、	SP_S_20170008（冻结解冻优化）-完成开发（游志青、白志远）
5、	向上金服需求-视情况进行需求确认、业务流程分析（冯宗亮）

游志青
	任务1
	任务2
	任务4

高大容
	任务1
	任务2

白志远
	任务1
	任务2
	任务4

梁波
	任务1
	任务2
	任务3

高德宝
	任务1

侯晓谦
	任务2


------------

下周任务：
1、	SP_S_20170004-进行配合测试支持，修改发现的bug（游志青、高大容、白志远、梁波、高德宝）
2、	SP_S_20170009（廊坊银行）-完成开发，提交配合测试（高大容、白志远、高德宝、侯晓谦）
3、	获取对账单异步处理-编写方案30%（高德宝）
4、	settings表radis处理-编写方案50%（游志青）
5、	了解商户类处理器及handler（侯晓谦）

游志青
	任务1
	任务4

高大容
	任务1
	任务2

白志远
	任务1
	任务2

梁波
	任务1

高德宝
	任务1
	任务2
	任务3

侯晓谦
	任务2
	任务5


------------

下周任务：
1、	SP_S_20170004-进行配合测试支持，修改发现的bug（游志青、高大容、白志远、梁波、高德宝）
2、	SP_S_20170009（廊坊银行）-完成三方联调的支持，完成配合测试支持，视情况进行上线（高大容、白志远、高德宝、侯晓谦）
3、	DP_20170017（glassfish+jdk+mq升级）-完成商户自助网站的开发（高德宝）
4、	获取对账单异步处理-完成方案编写（高德宝）
5、	2.5迁移-完成评审，确定版本规划，完成付款2.5开发，支付2.5开发60%，完成消息系统2.5整体方案编写及负责功能迁移方案编写，完成商户系统2.5整体方案编写（冯宗亮、游志青、白志远、梁波、侯晓谦）
6、	运营需求-完成需求确认，视情况进行业务流程分析（冯宗亮）

游志青
	任务1
	任务5	付款2.5

高大容
	任务1
	任务2
	浏览器兼容问题

白志远
	任务1
	任务2
	任务5	支付2.5

梁波
	任务1
	任务5	消息系统2.5

高德宝
	任务1
	任务2
	任务3
	任务4

侯晓谦
	任务2
	任务5	商户系统2.5

------------

下周任务
1、	SP_S_20170004-进行配合测试支持，修改发现的bug（游志青、高大容、白志远、梁波、高德宝）
2、	SP_S_20170009（廊坊银行）-完成配合测试支持，完成上线支持（高大容、白志远、高德宝、侯晓谦）
3、	SP_S_20170008（快捷优化）-完成快捷发短信失败处理、限额提前的开发（白志远）
4、	SP_S_20170010（徽商2.0新需求）-完成徽商2.0接口系统、徽商2.0业务系统、运营管理系统的开发，银行存管对账系统开发70%（高大容、高德宝）
5、	工作交接-进行工作交接30%（游志青、白志远、梁波、侯晓谦）
6、	2.5迁移-完成通用系统2.5整体方案编写（游志青）
7、	运营需求-完成线上代扣需求的需求确认、业务流程分析（冯宗亮）

游志青
	任务1
	任务5
	任务6

高大容
	任务1
	任务2
	任务4

白志远
	任务1
	任务2
	任务3
	任务5

梁波
	任务1
	任务5

高德宝
	任务1
	任务2
	任务4

侯晓谦
	任务2
	任务5


------------

下周任务：
1、	SP_S_20170004-完成配合测试，完成上线支持（游志青、高大容、白志远、梁波、高德宝）
2、	SP_S_20170010（徽商2.0对账单等需求）-完成开发（高德宝）
3、	徽商2.0FTP目录-完成开发（高德宝、侯晓谦）
4、	工作交接-进行工作交接70%（游志青、白志远、梁波、高德宝、侯晓谦）
5、	ASP_S_20170005-完成需求确认、业务流程分析，完成实现方案编写，视情况进行开发（冯宗亮、白志远）
6、	DP_20170022（通用系统2.5）-完成各处理器迁移方案编写，完成冻结、解冻等处理器开发（游志青、白志远、侯晓谦）
7、	运营需求-完成徽商2.0代扣还款需求的需求确认、业务流程分析（冯宗亮）

游志青
	任务1
	任务4
	任务6

高大容
	任务1

白志远
	任务1
	任务4
	任务5
	任务6

梁波
	任务1
	任务4

高德宝
	任务1
	任务2
	任务3
	任务4

侯晓谦
	任务3
	任务4
	任务6

------------

下周任务：
1、	SP_S_20170010-提交配合测试，进行配合测试支持（高大容、高德宝、侯晓谦）
2、	ASP_S_20170005-提交配合测试，进行配合测试支持（游志青、高大容、白志远、高德宝）
3、	认证定制化开发-完成商户自助网站、运营管理系统的开发（高大容、高德宝）
4、	工作交接-完成工作交接（梁波、高德宝）
5、	SP_S_20170011（线上代扣）-代扣2.5方案编写30%，完成运营管理系统的开发（高大容、高德宝）
6、	SP_S_20170011（徽商2.0代扣还款，方案）-完成业务流程分析，完成代扣还款业务部分方案编写，完成徽商2.0接口系统方案编写（冯宗亮、游志青、高大容）
7、	SP_S_20170011（徽商2.0代扣还款，开发）-徽商2.0业务系统开发30%，运营管理系统开发30%（游志青、高大容）
8、	商户系统2.5-启动资金归集、商户充值的开发（白志远、侯晓谦）

游志青
	任务2
	任务6
	任务7

高大容
	任务1
	任务2
	任务3
	任务5
	任务6
	任务7

白志远
	任务2
	任务8

梁波
	任务4

高德宝
	任务1
	任务2
	任务3
	任务4
	任务5

侯晓谦
	任务1
	任务8

------------

下周任务：
1、	SP_S_20170010-完成配合测试，完成上线支持（高大容、高德宝、侯晓谦）
2、	SP_S_20170008-完成代码合并，提交配合测试，进行配合测试支持（游志青、高大容、白志远、侯晓谦）
3、	SP_S_20170011（线上代扣）-完成代扣2.5的开发（高德宝）
4、	SP_S_20170011（徽商2.0代扣还款，方案）-完成代扣还款签约部分方案编写，完成徽商2.0接口系统方案编写（高德宝、高大容）
5、	SP_S_20170011（徽商2.0代扣还款，开发）-徽商2.0业务系统开发80%，完成徽商2.0接口系统开发（游志青、高大容、高德宝）
6、	DP_20170025（商户系统2.5）-完成开发80%（白志远、侯晓谦）

游志青
	任务2
	任务5	完成开发

高大容
	任务1
	任务2
	任务4
	任务5

白志远
	任务2
	任务6

高德宝
	任务1
	任务3
	任务4
	任务5

侯晓谦
	任务1
	任务2
	任务6


------------

1、	SP_S_20170008-完成配合测试支持，完成运营部确认（游志青、高大容、白志远、侯晓谦）
2、	SP_S_20170011-完成自测、组内联调、与网关的联调（游志青、高大容、高德宝）
3、	DP_20170025（商户系统2.5）-完成2.5系统的开发、自测，完成网关的开发（游志青、高大容、白志远、侯晓谦、高德宝）
4、	DP_20170022（通用系统2.5）-完成网关的开发（高德宝）
5、	下版本需求-完成需求确认，视情况进行业务流程分析（冯宗亮）

------------

下周任务：
1、	SP_S_20170008-完成上线支付（侯晓谦）
2、	SP_S_20170011-完成新需求的业务流程分析、开发（侯晓谦）
3、	SP_S_20170011-完成代码合并，提交配合测试（游志青、高大容、高德宝、侯晓谦）
4、	下版本需求-完成需求确认，视情况进行业务流程分析（冯宗亮）
5、	业务流程细化-细化部分处理器处理流程（白志远、高德宝、侯晓谦）
6、	业务流程梳理-完成退款、商户结算、商户付款的梳理（游志青）


------------

下周任务：
1、	SP_S_20170011-完成配合测试，完成运营部确认，视情况进行上线支持（游志青、高大容、高德宝、侯晓谦）
2、	DP_20170017-完成配合测试（高大容、高德宝）
3、	DP_20170022（通用系统2.5）-提交配合测试，进行配合测试支持（游志青、白志远、高德宝、侯晓谦）
4、	ASP_S_20170006（原生代扣）-完成运营管理系统、代扣2.5开发（高大容、高德宝）
5、	SP_S_20170012（产品需求）-完成付款2.5实现方案，完成付款2.5、平台2.0、运营管理系统开发（游志青、高大容）
6、	SP_S_20170012（徽商2.0需求）-完成徽商2.0业务系统、平台2.0的开发（白志远）
7、	消息系统2.5-完成整体方案编写，完成负责处理器迁移方案编写（侯晓谦）

------------

下周任务
1、	SP_S_20170011-完成上线支持（侯晓谦）
2、	DP_20170022、DP_20170025、DP_20170017-提交配合测试，进行配合测试支持（游志青、高大容、白志远、高德宝、侯晓谦）
3、	ASP_S_20170006（原生代扣）--提交配合测试，进行配合测试支持（高大容、高德宝）
4、	SP_S_20170012-完成系统间联调（游志青、高大容、白志远、高德宝）
5、	DP_20170018（redis session集群）-完成商户自助网站的开发、验证（高德宝）
6、	消息系统2.5-完成负责处理器迁移（高德宝）
7、	银行系统2.5-完成整体方案编写，完成负责处理器迁移方案编写（白志远）
8、	业务流程梳理-完成徽商2.0相关业务的梳理（游志青）

------------

本周任务：
1、	DP_20170022、DP_20170025、DP_20170017-完成调度2.5的开发（白志远）
2、	DP_20170022、DP_20170025、DP_20170017-进行配合测试支持（游志青、高大容、白志远、高德宝、侯晓谦）
3、	ASP_S_20170006（原生代扣）-完成配合测试支持，视情况进行上线（高大容、高德宝）
4、	ASP_S_20170007（H5聚合支付）-完成编码（高大容、白志远、高德宝）
5、	银行系统2.5-完成自测（白志远）
6、	新版本需求-完成需求确认，视情况进行业务流程分析（冯宗亮、游志青）

------------

下周任务：
1、	DP_20170022、DP_20170025、DP_20170017-完成配合测试支持，进行上线支持（游志青、高大容、白志远、高德宝、侯晓谦）
2、	ASP_S_20170007（H5聚合支付）-提交配合测试，修改发现的bug（高大容、白志远、高德宝）
3、	SP_S_20170012（网关限流）-完成徽商接口系统的开发（高大容）
4、	SP_S_20170012-提交配合测试，修改发现的bug（游志青、高大容、白志远、高德宝、侯晓谦）
5、	DP_20170032（银行系统2.5）-完成网关的修改（高大容、高德宝）
6、	对账异步化-完成方案编写，启动开发（高德宝）
7、	账务接口优化-完成优化账务系统记账接口中银行编码传入规则的方案编写（游志青）

------------

商户自助平台系统
丰付运营管理平台
测试96
glassFish
rabbit
github
调度系统
服务器迁移

------------

http://192.161.14.94:8080/merchant/
用户名Admin
商户CSSH
密码111111

商户：P2PMERCHANT


http://172.16.3.2:9191/merchant/QueryBAccTrade_init?time=1472635355897

Admin
yg
111111



https://172.16.3.1/merchant
孙丽君 11:30:04
PM1/123456
孙丽君 11:30:11
Admin/123456
PMerchant




03148015886 

CA0009 资金上缴
TX1001 商户提现
CZ1101 商户个人网银充值
SF1006 付款请求



stage
用  户  名：fh  
所属商户：123 密码abc123456
高德宝 17:09:52
地址也发下
郭卫卫 17:10:05
https://172.16.3.1/merchant/pages/commons/permission.jsp
郭卫卫 17:10:18


------------

开发环境：
http://192.161.14.94:8080/Admin/admin/system_admin_main.jsp
lb ：111111
gdb：111111、gaodebao19890124
administrator 、111111
gdb ：c9Yyy96W


------------

linux登录：glassfish
 密码：sumapay58858547
 
 96linux  登录名：glassfish 密码：sumapay58858547

------------

本地：1、glassFish用户名：admin 密码：12345678
端口：4848



启动停止路径：C:\Sun\AppServer\domains\domain1\bin
war包存放路径：C:\Sun\AppServer\domains\domain1\autodeploy



开发环境：
admin
密码：adminadmin







连接dev开发环境


sqlplus tvpay2dev/tvpay@192.161.14.99:1521/sumapay



jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=192.161.14.99)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=sumapay)))
jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.219.99)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=sumapay)))
jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=192.161.14.99)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=sumapay)))

------------

命令
创建命令

------------

查看状态：

service  rabbitmq-server status

启动：
service rabbitmq-server start
http://192.161.14.93:15672/#/
用户名：admin
密码：58858547


启动：rabbitmq-service.bat start ，stop

------------

rabbitmqctl.bat list_users   列表
rabbitmqctl.bat  list_vhosts 路径
add_user geffzhang zsy@2014 添加用户
rabbitmqctl.bat set_user_tags geffzhang administrator  


创建用户并设置角色：
可以创建管理员用户，负责整个MQ的运维，例如：
$sudo rabbitmqctl add_user  user_admin  passwd_admin  
赋予其administrator角色：
$sudo rabbitmqctl set_user_tags user_admin administrator  
可以创建RabbitMQ监控用户，负责整个MQ的监控，例如：
$sudo rabbitmqctl add_user  user_monitoring  passwd_monitor  
赋予其monitoring角色：
$sudo rabbitmqctl set_user_tags user_monitoring monitoring  

可以创建某个项目的专用用户，只能访问项目自己的virtual hosts
$sudo rabbitmqctl  add_user  user_proj  passwd_proj  
赋予其monitoring角色：
$sudo rabbitmqctl set_user_tags user_proj management  

创建和赋角色完成后查看并确认：
$sudo rabbitmqctl list_users  



------------

用户名：jamesgdb
密码： gaodebao19890124
github项目地址：https://github.com/jamesgdb/jamsegdb.github.io.git

------------

http://192.161.14.94:8080/schedual/config!login.action
admin/admin

------------

test环境的运营管理系统现在迁移到172.16.9.3上了
冯宗亮(F07959698B24) 09:51:04
2.0的调度迁移到172.16.8.9上


------------

eclipse调试glassFish
eclipse快捷键
安装properties插件
启动项目
源码依赖 
测试环境
数据源配置

------------

第一步：选择菜单栏debug下拉按钮中的Debug configuration按钮
第二步：选择remote Java application，右击new，
第三步：填写需要调试的project，host和对应的port。 如：192.161.14.99，端口9009；localhost，端口9009

备注：项目需要以debug模式启动，之后需要在GlassFish中勾选启用调试


-agentlib:jdwp=transport=dt_socket,address=192.166.69.34:9009,suspend=y,-server=-XX:PermSize=128M -XX:MaxPermSize=256m

------------

查看继承父类：ctrl+t
查找类中方法：ctrl+o


------------

http://propedit.sourceforge.jp/eclipse/updates

------------

启动服务，停止服务
asadmin start-domain pl

    <dependencies defaultconfmapping="*->default,sources">

------------

		<!-- 数据解耦-->
		<dependency org="com.sumavision.tvpay.entity.exchange" name="com.sumavision.tvpay.entity.exchange" rev="0.1.0.0" changing="true">
			<artifact name="com.sumavision.tvpay.entity.exchange" type="jar" ext="jar"/>
			<artifact name="com.sumavision.tvpay.entity.exchange" type="source" ext="jar" m:classifier="sources" conf="sources"/>
			<artifact name="com.sumavision.tvpay.entity.exchange" type="javadoc" ext="jar" m:classifier="javadoc" conf="javadoc"/>
		</dependency>

------------

web1	IP：	172.16.3.2	glassfish/58858547
web2	IP：	172.16.3.3	glassfish/58858547
web-vip	IP：	172.16.3.1	sumapay25/58858547


/opt/SUNWappserver/domains/domain1/logs
王亚强 10:41:15
这个路径
王亚强 10:42:30
对了，一般测试环境的商户自助是布到domain3 下边的   /opt/SUNWappserver/domains/domain3/logs


------------

##tvpay.datasource.jndi=jdbc/tvpay
tvpay.datasource.jndi=jdbc/tvpayLocal

------------

用户上传功能
用户P2P对账单导出功能
增加小额付款验证

------------

1、修改/sumapay/config/sumapay-config.properties下面配置:
替换856行为：
userImportUploadfileTitles=\u6279\u6b21\u53f7(*),#VALUE#,\u5546\u6237\u7f16\u53f7(*),#VALUE#,\u603b\u6761\u6570(*),#VALUE#,\u603b\u91d1\u989d(*),#VALUE#,\u5f02\u6b65\u901a\u77e5\u5730\u5740,#VALUE#&\u5e8f\u53f7(*),\u7b2c\u4e09\u65b9\u7528\u6237\u6807\u8bc6(*),\u624b\u673a\u53f7,\u8bc1\u4ef6\u7c7b\u578b,\u8bc1\u4ef6\u53f7\u7801,\u7528\u6237\u59d3\u540d,\u8d26\u6237\u4f59\u989d(*)

2、重新定义xls文件,增加证件类型列，修改身份证为证件号码

3、提交svn代码


1、在用户导入申请中增加证件类型列，修改身份证为证件号码
2、用户导入申请详细中增加证件类型列，之后导入增加证件类型列
3、用户导入查询中“详情”增加证件类型列
4、修改项目中身份证为证件号码（临时身份证相似类型未动）


启动服务，停止服务
asadmin start-domain pl

------------

1、日对账文件下载格式不变，多日对账，会根据第一行第二列的单元格内容获取交易类数量，动态合并交易类和统计数据
2、将所有的交易明细数据依次添加到对账单的交易明细记录列中

------------

1、在交易历史明细（交易管理）中添加小额付款验证查询和明细查询功能，
2、账户交易查询（账户管理）中添加小额付款验证查询和明细查询功能。
说明：账户明查询中如果fld10（暂时为余额字段）为空，那么结果无法被正常查询。

------------

修改配置文件

------------

1、修改/sumapay/config/sumapay-config.properties下面配置:
添加参数
front.springremote.server=192.161.14.92:8080
front.springremote.url=http://${front.springremote.server}/${front.service.context}/remote/tradeRemoteService


以下内容暂时不做升级处理，不需要配置
sumapay.trade.exchange=com.sumapay.mq.exchange.trade
sumapay.trade.exchange.reply.queue=com.sumapay.mq.replyqueue.trade

#sumapay.amqp.url=192.161.14.93:5672
sumapay.amqp.url=192.161.14.92:5672


  

------------

用户登录校验

------------

select  *  from merchant_user ;

select * from mer_ope_passwd_retry;

select  * from merchant ;
select  * from illegal_mer_ope_login_record order by login_time desc;
select * from mer_ope_ivc_passwd_retry;      

select  * from merchant ;                                                            

------------

ps -ef | grep domains| grep  -v "grep"| awk '{print $2}'|xargs kill -9
asadmin start-domain pl


ps -ef | grep domain | grep -v 'grep'| wc -l

------------

过滤器

------------

过滤表达式的规则

表达式规则

 1. 协议过滤

比如TCP，只显示TCP协议。

2. IP 过滤

比如 ip.src ==192.168.1.102 显示源地址为192.168.1.102，

ip.dst==192.168.1.102, 目标地址为192.168.1.102

3. 端口过滤

tcp.port ==80,  端口为80的

tcp.srcport == 80,  只显示TCP协议的愿端口为80的。

4. Http模式过滤

http.request.method=="GET",   只显示HTTP GET方法的。

5. 逻辑运算符为 AND/ OR

常用的过滤表达式

过滤表达式	用途
http	只查看HTTP协议的记录
ip.src ==192.168.1.102 or ip.dst==192.168.1.102	 源地址或者目标地址是192.168.1.102
 	 
 	 
封包列表(Packet List Pane)

封包列表的面板中显示，编号，时间戳，源地址，目标地址，协议，长度，以及封包信息。 你可以看到不同的协议用了不同的颜色显示。

------------

Note1
相关sql
修改内容

------------

block_trade_list.jsp  大额交易   AntiMoneyLaundryManageAction      方法：queryBlockTrade    导出：blockExcel
supect_users_list.jsp 交易量       AntiMoneyLaundryManageAction          方法：querySuspUsers

------------

select ID, CODE, NAME, STATUS, VERIFY_CODE, LAST_EDIT_TIME, LAST_EDITOR, LAST_EDIT_PROCESS,
      FLD1, FLD2, FLD3, FLD4
    from TRADE_TYPE;
    
    select count(*) from
        TRADE_RECORD tr,

				TERMINAL_USER tu
			where 1=1 and 
				tr.USER_ID = tu.ID;
        
    select t.provider_id,
							   sum(case when t.trade_code='ZF0201' then t.trade_sum 
							  	   when t.trade_code='ZF0301' then t.trade_sum
				                   else 0
				                   end) fld1 ,
				               sum(case when t.trade_code='ZF0104' then t.trade_sum 
				               	   when t.trade_code='ZF0103' then t.trade_sum 
				                   when t.trade_code = 'ZF0102' then t.trade_sum
				                   when t.trade_code = 'ZF0108' then t.trade_sum
				                   when t.trade_code = 'ZF0109' then t.trade_sum
				                   else 0
				                   end) fld2 ,
				               sum(case when t.trade_code='ZF0104' then t.trade_sum 
				               	   when t.trade_code='ZF0103' then t.trade_sum 
				               	   when t.trade_code='ZF0108' then t.trade_sum 
				               	   when t.trade_code='ZF0109' then t.trade_sum 
				                   when t.trade_code = 'ZF0102' then t.trade_sum
				                   when t.trade_code = 'ZF0201' then t.trade_sum
				                   when t.trade_code = 'ZF0301' then t.trade_sum
				                   when t.trade_code = 'DK0003' then t.trade_sum
				                   when t.trade_code = 'CZ1101' then t.trade_sum
				                   else 0
				                   end) fld3 ,
				               sum(case when t.trade_code='DK0003' then t.trade_sum 
				                   else 0
				                   end) fld4 ,
				               sum(case when t.trade_code='CZ1101' then t.trade_sum
				                   when t.trade_code='CZ1107' then t.trade_sum
				                   else 0
				                   end) fld5
						        from (select * from trade_record t1 
				                       where t1.trade_code in ('ZF0102','ZF0104','ZF0201','ZF0103','DK0003','ZF0301','CZ1101','ZF0108','ZF0109') and t1.status = 2 
				                     ) t   group by t.provider_id;
                             
                             
                             
                             
                             
                             
                             
                             
                             

------------

D:\workspace\com.sumavision.tvpay.operation.manager-65\src\com\sumavision\ecommerce\admin\struts\action\AntiMoneyLaundryManageAction.java
D:\workspace\com.sumavision.tvpay.operation.manager-65\WebContent\admin\antiMoneyLaundry_manage\suspectUsers_manage\supect_users_list.jsp
D:\workspace\com.sumavision.tvpay.operation.manager.domain-65\src\com\sumavision\tvpay\domain\maps\TRADE_RECORD_EX_SqlMap.xml

------------

查询企业账户余额
对账系统结算
商户查询
查询短信验证码
徽商对账日期

------------

--获取中间账户关联表中账户id信息（有多少个计算多少个）
select * from biz_user_acc_association where biz_user_id = 2 and type =0;
---查询账户余额,可提现金额，冻结金额
select balance,WITHDRAWABLE_BALANCE，frozen_balance from account where id = 280000100000006221;
---通过上面id信息计算出  本账户本会计日期的发生额
select sum(credited)-sum(debited) from voucher where update_balance_status = 0  and account_id =280000100000006221;

--用上面的发生额+账户余额作为账户未结算金额
select (select sum(credited)-sum(debited) from voucher where update_balance_status = 0  and account_id =280000100000006221)+(select balance from account where id = 280000100000006221) from dual;
 --此处查到的就是未结算金额(第四个)


--获取可用账户关联表中账户id信息（有多少个计算多少个）
select * from biz_user_acc_association where biz_user_id = 2 and type =1;
---查询账户余额,可提现金额，冻结金额
select frozen_balance  from account where id = 290000010000019120;
--此sql中查询到的冻结金额就是想要的展示结果中的“冻结金额”（第三个）


---通过上面id信息计算出  本账户本会计日期的发生额
select sum(credited)-sum(debited) from voucher where update_balance_status = 0  and account_id =290000010000019120;
--账户余额+发生额就是当前账户总余额（第一个）
select (select sum(credited)-sum(debited) from voucher where update_balance_status = 0  and account_id =290000010000019120)+(select balance from account where id = 290000010000019120) from dual ;
--账户的可用金额+发生额就是可用金额（第二个），
select (select sum(credited)-sum(debited) from voucher where update_balance_status = 0  and account_id =290000010000019120)+(select WITHDRAWABLE_BALANCE from account where id = 290000010000019120) from dual ;



jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.219.99)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=sumapay)))

300000000000061888


------------

实现思路：
第一步：先查询出商户所有的code码，结算的最终日期
第二步：循环商户，找到每个商户的支持的支付类型，之后根据支付类型找到当天的所有的结算交易
第三步：找到个人用户的代扣充值，网银充值的结算交易
第四步：找到其余用户的代扣充值，网银充值的结算交易
第五步：将第三四五步的所有交易类型分别导出为txt文件
第六步：上传所有的文件
第七步：日期加一，循环以上步骤，直到当前日期的前一天结束。
select * from merchant  where status =1;
select  * from merchant_checkaccount_progress where type =0;
select * from merchant_paytype_association where merchant_id='104';
select  * from pay_type  ;

select  * from merchant_fee where merchant_id ='104';

select * from MER_USER_SETTLEMENT_RESULT;
select  * from settlement_result;

------------

select  m.*,m.rowid from merchant m where id =104;
select  m.*,m.rowid from merchant_user m where merchant_id =104;

------------

select t. *,t.rowid from sms_request t  where t.mobile_phone_no='18046521650'and t.message_type=58 order by t.request_time desc;

------------

select  t.*,t.rowid from P2p_Trustee_Statement_Progress t ;

------------

退款sql
重构流程
退款交易平账sql
退款交易不平帐sql
根据票号对账
退款对账添加内容

------------

--查询平账退款记录
    select lr.pid
    from (select m.original_trade_id pid, nvl(sum(t.trade_sum), 0) refund_sum
            from merchant_refund_request m left join trade_record t on m.rel_trade_id=t.id
           where t.check_status =0
             and t.status = 2
         and t.trade_code = 'TZ0001'
         and t.bank_code = #checkBankCode:VARCHAR#
           group by m.original_trade_id) lr
   inner join (select b.trade_id pid, nvl(sum(b.trade_sum), 0) refund_sum
                 from bank_check_record b
                where b.fld2 = '1'
                  and b.check_status =0
                group by b.trade_id) br on lr.pid = br.pid
   where lr.refund_sum = br.refund_sum;
  
---查询不平账目退款记录
    select lr.pid
	  from (select m.original_trade_id pid, nvl(sum(t.trade_sum), 0) refund_sum
	          from merchant_refund_request m left join trade_record t on m.rel_trade_id=t.id
	           where t.check_status =0
	           and t.status = 2
			   and t.bank_code = #checkBankCode:VARCHAR#
			   and t.trade_code = 'TZ0001'
	         group by m.original_trade_id) lr
	 inner join (select b.trade_id pid, nvl(sum(b.trade_sum), 0) refund_sum
	               from bank_check_record b
	              where b.fld2 = 1
	                and b.check_status =0
	              group by b.trade_id) br on lr.pid = br.pid
	 where lr.refund_sum &lt;&gt; br.refund_sum and lr.refund_sum is not null and br.refund_sum is not null
 
   
   
------更新平账退款记录，交易表
   	update trade_record t
	   set t.check_status      = 1,
	   	   t.manual_adjust_status = 0,
	       t.last_edit_time    = #nowTime:TIMESTAMP#,
	       t.last_editor       = #editor:VARCHAR#,
	       t.last_edit_process = #editProcess:VARCHAR#
	 where t.id in (select mrr.rel_trade_id
	                  from merchant_refund_request mrr
	                 where mrr.original_trade_id in ($refundEqualTrade$))
	   and t.bank_code = #checkBankCode:VARCHAR#
	   and t.check_status = 0
	   and t.status = 2
 -------更新不平账目退款记录，交易表
 	update trade_record t
	   set t.check_status      = 2,
	   	   t.manual_adjust_status = 0,
	       t.last_edit_time    = #nowTime:TIMESTAMP#,
	       t.last_editor       = #editor:VARCHAR#,
	       t.last_edit_process = #editProcess:VARCHAR#
	 where t.id in (select mrr.rel_trade_id
	                  from merchant_refund_request mrr
	                 where mrr.original_trade_id in ($refundNotEqualTrade$))
	   and t.bank_code = #checkBankCode:VARCHAR#
	   and t.check_status = 0
	   and t.status = 2
     


----------更新平账退款记录，bankCheck表
 	update bank_check_record t
	   set t.check_status     = 1,
	   	   t.fld1 = null,
	       t.last_edit_date   = #nowTime:TIMESTAMP#,
	       t.last_edit_person = #editProcess:VARCHAR#
	 where t.trade_id in ($refundEqualTrade$)
	   and t.fld2 = 1
	   and t.check_status = 0
	   and t.bank_code = #checkBankCode:VARCHAR#    
-----------更新不平退款记录，bankcehck表     
	update bank_check_record t
	   set t.check_status     = 2,
	   	   t.fld1 = null,
	       t.last_edit_date   = #nowTime:TIMESTAMP#,
	       t.last_edit_person = #editProcess:VARCHAR#
	 where t.trade_id in ($refundNotEqualTrade$)
	   and t.fld2 = 1
	   and t.check_status = 0
	   and t.bank_code = #checkBankCode:VARCHAR#     
     
     

------------

1、背景
JAVA_OPTS	-agentlib:jdwp=transport=dt_socket,address=127.0.0.1:9009,suspend=y,server=n

------------

------------------------------------原sql-------------------------------------------------
select lr.pid
	  from (select m.original_trade_id pid, nvl(sum(t.trade_sum), 0) refund_sum
	          from merchant_refund_request m left join trade_record t on m.rel_trade_id=t.id
	         where t.check_status =0
	           and t.status = 2
			   and t.trade_code = 'TZ0001'
			   and t.bank_code = #checkBankCode:VARCHAR#
	         group by m.original_trade_id) lr
	 inner join (select b.trade_id pid, nvl(sum(b.trade_sum), 0) refund_sum
	               from bank_check_record b
	              where b.fld2 = '1'
	                and b.check_status =0
	              group by b.trade_id) br on lr.pid = br.pid
	 where lr.refund_sum = br.refund_sum
	 -----------------------------辅助sql-----------------------------
	 		select lr.pid
	  from (select tr.id pid, tr.trade_sum fund, tr.bank_code bank_code
	          from trade_record tr
	         where  tr.trade_code in ($joinCheckTradeCodes$)
			 and tr.bank_code = #checkBankCode:VARCHAR#
			   and tr.check_status =0
			   and tr.status = 2) lr
	 inner join (select bcr.trade_id  pid,
	                    bcr.trade_sum fund,
	                    bcr.bank_code bank_code
	               from bank_check_record bcr
	              where bcr.fld2 = '0'
				  and bcr.bank_code = #checkBankCode:VARCHAR#
	              and bcr.check_status =0) br on lr.pid = br.pid
	 where lr.fund = br.fund
	 
	 
---------------------------------修改后sql-----------------------------------------------
select pid from
( select lr.pid
    from (select m.original_trade_id pid, nvl(sum(t.trade_sum), 0) refund_sum
             from merchant_refund_request m left join trade_record t on m.rel_trade_id=t.id
             where t.check_status =0
                       and t.status = 2
                       and t.trade_code = 'TZ0001'
                       and t.bank_code = #checkBankCode:VARCHAR#
            group by m.original_trade_id) lr
   inner join (select b.trade_id pid, nvl(sum(b.trade_sum), 0) refund_sum
                   from bank_check_record b
                   where b.fld2 = '1'
                             and b.check_status =0
                group by b.trade_id) br on lr.pid = br.pid
   where lr.refund_sum = br.refund_sum)
   union all
   		(select lr.pid
	  from (select tr.id pid, tr.trade_sum fund, tr.bank_code bank_code
	          from trade_record tr
	          where  tr.trade_code =  'TZ0001'
			      and tr.bank_code = #checkBankCode:VARCHAR#
			      and tr.check_status =0
			      and tr.status = 2) lr
	 inner join (select bcr.trade_id  pid, bcr.trade_sum fund, bcr.bank_code bank_code
	               from bank_check_record bcr
	               where bcr.fld2 = '2'
	                        and bcr.bank_code = #checkBankCode:VARCHAR#
	                        and bcr.check_status =0) br on lr.pid = br.pid
	 where lr.fund = br.fund);
	 
	 
	 

------------

-----------------------查询不平账目退款记录-----------------------------------------------------
    select lr.pid
	  from (select m.original_trade_id pid, nvl(sum(t.trade_sum), 0) refund_sum
	          from merchant_refund_request m left join trade_record t on m.rel_trade_id=t.id
	           where t.check_status =0
	           and t.status = 2
			   and t.bank_code = #checkBankCode:VARCHAR#
			   and t.trade_code = 'TZ0001'
	         group by m.original_trade_id) lr
	 inner join (select b.trade_id pid, nvl(sum(b.trade_sum), 0) refund_sum
	               from bank_check_record b
	              where b.fld2 = 1
	                and b.check_status =0
	              group by b.trade_id) br on lr.pid = br.pid
	 where lr.refund_sum &lt;&gt; br.refund_sum and lr.refund_sum is not null and br.refund_sum is not null
---------------------------------辅助sql----------------------------------------------------------------
 	select lr.pid
	  from (select tr.id pid, tr.trade_sum fund, tr.bank_code bank_code
	          from trade_record tr
	         where  tr.trade_code in ($joinCheckTradeCodes$)
			 and tr.bank_code = #checkBankCode:VARCHAR#
			   and tr.status = 2
			   and tr.check_status =0) lr
	 inner join (select bcr.trade_id  pid,
	                    bcr.trade_sum fund,
	                    bcr.bank_code bank_code
	               from bank_check_record bcr
	              where bcr.fld2 = '0'
				  and bcr.bank_code = #checkBankCode:VARCHAR#
	                and bcr.check_status =0) br on lr.pid = br.pid
	 where lr.fund &lt;&gt; br.fund	 
----------------------------------------------合并后sql-------------------------------------	 
select pid from 
( select lr.pid
	  from (select m.original_trade_id pid, nvl(sum(t.trade_sum), 0) refund_sum
	           from merchant_refund_request m left join trade_record t on m.rel_trade_id=t.id
	           where t.check_status =0
	                    and t.status = 2
			     and t.bank_code = #checkBankCode:VARCHAR#
			     and t.trade_code = 'TZ0001'
	         group by m.original_trade_id) lr
	 inner join (select b.trade_id pid, nvl(sum(b.trade_sum), 0) refund_sum
	                 from bank_check_record b
	                 where b.fld2 = 1
	                          and b.check_status =0
	              group by b.trade_id) br on lr.pid = br.pid
	 where lr.refund_sum &lt;&gt; br.refund_sum and lr.refund_sum is not null and br.refund_sum is not null)
union all
( select lr.pid
	  from (select tr.id pid, tr.trade_sum fund, tr.bank_code bank_code
	          from trade_record tr
	          where  tr.trade_code =  'TZ0001'
			     and tr.bank_code = #checkBankCode:VARCHAR#
			     and tr.status = 2
			     and tr.check_status =0) lr
	 inner join (select bcr.trade_id  pid, bcr.trade_sum fund, bcr.bank_code bank_code
	                 from bank_check_record bcr
	                 where bcr.fld2 = '2'
				    and bcr.bank_code = #checkBankCode:VARCHAR#
	                           and bcr.check_status =0)  br on lr.pid = br.pid
	 where lr.fund &lt;&gt; br.fund	 
);




------------

处理逻辑
对账
Note1
根据原交易流水号对账
fld1
BankCheckProcessServiceImpl 

------------

获取对账单：
1、判断银行是否根据票号对账，如果是的情况下，不用判断订单号逻辑，无法获取会计日期，交易开始时间。
执行银行对账：
1、如果是根据票号对账银行，并且不需要根据原交易票号对账，那么直接通过trade_record表和bank_check_record表数据直接进行对账即可。
2、如果是根据票号对账银行，并且需要根据原交易票号对账，那么直接通过trade_record表和bank_check_record表数据直接进行对账即可。


------------

1、交易类平账

------------

  update bank_check_record b 
     set b.check_status = 1,
       b.fld1 = null,
       (b.trade_id,b.trade_start_time) = (select  t.id,t.trade_start_time from trade_record t where b.bank_sn = t.bank_sn and b.bank_sn in ('1111') )
   where b.bank_sn in ('1111')

update bank_check_record b 
     set b.check_status = 1,
       b.fld1 = null,
		   (b.trade_id,b.trade_start_time) = (select  t.id,t.trade_start_time from trade_record t where b.bank_sn = t.bank_sn )
	 where b.bank_sn in ('11','1','111','11111');
   commit;
   
   select  t.*  from trade_record t,bank_check_record b where b.bank_sn = t.bank_sn;
   select  * from bank_check_record where  bank_sn in ('11','1','111','11111');
   select  * from trade_record where  bank_sn in ('11','1','111','11111');
   
   
   update bank_check_record b 
     set b.check_status = 1,
       b.fld1 = null,
       (b.trade_id,b.trade_start_time) = (select  t.id,t.trade_start_time from trade_record t where b.bank_sn = t.bank_sn)
   where b.bank_sn in ('11','1','111','11')
   
   
   
   select  to_date( '20'||SUBSTR('11111111111',0, 6),'yyyyMMdd')  from dual;
select  *  from trade_record t where LENGTH(t.id)>15;
 select  '20'||SUBSTR(t.id,0, 6),t.id  from trade_record t ;
 select  to_date('20'||SUBSTR(t.id,0, 6),'yyyyMMdd')  from trade_record t;
 
 
   UPDATE BANK_CHECK_RECORD B 
     SET B.CHECK_STATUS = 1,
       B.FLD1 = NULL,
       (B.TRADE_ID,B.FISCAL_DATE,B.TRADE_START_TIME) = (SELECT  T.ID,  TO_DATE('20'||SUBSTR(T.ID, 0, 6),'YYYYMMDD') ,T.TRADE_START_TIME FROM TRADE_RECORD T WHERE B.BANK_SN = T.BANK_SN   )
   WHERE B.BANK_SN IN ('11','1','111','11111')


------------

select bank_sn ,refund_sum from (select m.original_trade_id tid , nvl(sum(t.trade_sum), 0) refund_sum
            from merchant_refund_request m left join trade_record t on m.rel_trade_id=t.id
           where t.check_status =0
             and t.status = 2
         and t.trade_code = 'TZ0001'
           group by m.original_trade_id)  mr  left join trade_record tr on mr.tid = tr.id ;

--------------------------------------------------------------
select b.bank_sn bank_sn, nvl(sum(b.trade_sum), 0) refund_sum
                 from bank_check_record b
                where b.fld2 = '1'
                  and b.check_status =0
                group by b.bank_sn;
                
-----------------------获取原交易票号退款平账记录----------------------------------------   
    select lr.bank_sn
   from (select bank_sn,refund_sum from (select m.original_trade_id tid , nvl(sum(t.trade_sum), 0) refund_sum
            from merchant_refund_request m left join trade_record t on m.rel_trade_id=t.id
            where t.check_status =0
            and t.status = 2
            and t.trade_code = 'TZ0001'
            and t.bank_code = #checkBankCode:VARCHAR#
            group by m.original_trade_id)  mr  left join trade_record tr on mr.tid = tr.id) lr
   inner join (select b.bank_sn bank_sn, nvl(sum(b.trade_sum), 0) refund_sum
                  from bank_check_record b
                  where b.fld2 = '1'
                  and b.check_status =0
                  group by b.bank_sn) br on lr.bank_sn = br.bank_sn
   where lr.refund_sum = br.refund_sum  ;
 
-----------------更新交易表中平账记录------------------
     update trade_record t
     set t.check_status      = 1,
          t.manual_adjust_status = 0,
         t.last_edit_time    = #nowTime:TIMESTAMP#,
         t.last_editor       = #editor:VARCHAR#,
         t.last_edit_process = #editProcess:VARCHAR#  
      where t.id in (
           select m.rel_trade_id from  trade_record t left join merchant_refund_request m  on t.id= m.original_trade_id where t.bank_sn in ($refundEqualTrade) )
      and t.bank_code = #checkBankCode:VARCHAR#
      and t.check_status = 0
      and t.status = 2
      
   -------------------更新银行交易表中平账记录----------------------------------------
	update bank_check_record t
	   set t.check_status     = 1,
	   	   t.fld1 = null,
	       t.last_edit_date   = #nowTime:TIMESTAMP#,
	       t.last_edit_person = #editProcess:VARCHAR#
	 where t.bank_sn in ($refundEqualTrade$)
	   and t.fld2 = 1
	   and t.check_status = 0
	   and t.bank_code = #checkBankCode:VARCHAR#
---------------------获取原交易票号不平帐记录---------------------------------------------------------------------------------

    select lr.bank_sn
   from (select bank_sn,refund_sum from (select m.original_trade_id tid , nvl(sum(t.trade_sum), 0) refund_sum
            from merchant_refund_request m left join trade_record t on m.rel_trade_id=t.id
            where t.check_status =0
            and t.status = 2
            and t.trade_code = 'TZ0001'
            and t.bank_code = #checkBankCode:VARCHAR#
            group by m.original_trade_id)  mr  left join trade_record tr on mr.tid = tr.id) lr
   inner join (select b.bank_sn bank_sn, nvl(sum(b.trade_sum), 0) refund_sum
                  from bank_check_record b
                  where b.fld2 = '1'
                  and b.check_status =0
                  group by b.bank_sn) br on lr.bank_sn = br.bank_sn
where lr.refund_sum &lt;&gt; br.refund_sum and lr.refund_sum is not null and br.refund_sum is not null
-----------------------------------更新交易记录------------------------------------------------------------------------------------
	update trade_record t
	   set t.check_status      = 2,
	   	   t.manual_adjust_status = 0,
	       t.last_edit_time    = #nowTime:TIMESTAMP#,
	       t.last_editor       = #editor:VARCHAR#,
	       t.last_edit_process = #editProcess:VARCHAR#
	  where t.id in (
                 select m.rel_trade_id from  trade_record t left join merchant_refund_request m  on t.id= m.original_trade_id where t.bank_sn in ($refundEqualTrade) )
	   and t.bank_code = #checkBankCode:VARCHAR#
	   and t.check_status = 0
	   and t.status = 2
-----------------------------------------更新银行记录表-------------------------------------------------------------------------------------------------------
	update bank_check_record t
	   set t.check_status     = 2,
	   	    t.fld1 = null,
	   	    (t.trade_id,t.trade_start_time) = (select  tr.id, tr.trade_start_time from trade_record tr where tr.bank_sn = t.bank_sn )
	       t.last_edit_date   = #nowTime:TIMESTAMP#,
	       t.last_edit_person = #editProcess:VARCHAR#
	 where t.bank_sn in ($refundNotEqualTrade$)
	   and t.fld2 = 1
	   and t.check_status = 0
	   and t.bank_code = #checkBankCode:VARCHAR#






------------

fld1 记录是否为银行多、支付不存在的记录，2为银行存在、支付不存在，1为已调整

3勾对：大概意思就是发现有问题，但是不在这个系统上进行解决


check_status：0未对账，1平账，2不平账目，3异常账目

------------

package com.sumavision.ecommerce.plateform.core.finance.bankcheck.service.impl;

import java.io.IOException;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Properties;
import java.util.Set;

import com.sumavision.ecommerce.plateform.core.finance.bankcheck.service.BankCheckProcessService;
import com.sumavision.ecommerce.plateform.core.service.AccountDateService;
import com.sumavision.tvpay.domain.dao.BankCheckRecordDAOEx;
import com.sumavision.tvpay.exception.business.CheckAccountException;
import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.core.io.Resource;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.TransactionDefinition;
import org.springframework.transaction.TransactionStatus;

/**
 * @author Administrator
 */
public class BankCheckProcessServiceImpl implements BankCheckProcessService {

	final static Logger logger = LoggerFactory
			.getLogger(BankCheckProcessServiceImpl.class);

	private BankCheckRecordDAOEx bankCheckRecordDAO;

	private TransactionDefinition txDefinition;

	private PlatformTransactionManager txManager;

	private int plateformEnvType;

	private AccountDateService accountDateService;
	
	private String joinCheckTradeCodes;
	
	private Map<String, String> propertiesMap = new HashMap<String, String>();
	
	/**
	 * 平台环境标识，生产环境用1表示，测试环境用2表示
	 */
	private String platformType ;

	
	private Resource propertiesFileResource;

//	private static SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
	
	
	@Override
	public boolean heartbeat() {
		return true;
	}
	/**对单个银行进行对账
	 * @param bank 
	 * @author 陈卓稳
	 * 2013-8-14 下午03:27:56
	 */
	private void bankcheckProcessByOneBank(String bank){
		logger.info("银行["+bank+"]对账开始...");
		// 步骤一：支付类交易，标记平账交易
		updatePayEqual(bank);
		// 步骤二：支付类交易，标记金额不平交易
		updatePayNotEqual(bank);
		// 判断是否根据原交易流水号进行退款对账
		boolean isExecuteRefundCheck = bankIsCheckByOriginalTradeId(bank, propertiesMap.get("bankcheck.realRefund.bankCodes"));
		if(isExecuteRefundCheck){
			// 步骤三：根据原交易流水退款类交易，标记平账交易
			updateRefundEqual(bank);
			// 步骤四：根据原交易流水退款类交易，标记不平交易
			updateRefundNotEqual(bank);
		}
		// 步骤五：标记支付系统多交易
		updatePlatformExistBankNotExist(bank);
		// 步骤六：标记银行退款多交易
		updateBankExistPlatformNotExist(bank);
		logger.info("银行["+bank+"]对账已完成！");
	}
	
	@Override
	public void start() {
		logger.info("开始启动对账...");
		readPropertiesFile(propertiesFileResource);
		
		TransactionStatus status = txManager.getTransaction(txDefinition);
		try {
			logger.info("首先查询银行对账单记录表中存在而支付系统交易记录中不存在的流水号");
			//step1 首先查询银行对账单记录表中存在而支付系统交易记录中不存在的流水号
			//这里与后面查询银行多而支付缺的处理不同之处在于 ： 这个查询会查询银行所有的和支付所有的（包括失败的），比对支付不存在的，将其筛选出
			//然后将银行对账单记录中的这些交易的FLD1状态改成2（标识为已处理）,这样在之后的对账处理中不会因为这些银行多出的交易导致不平影响对账无法正常进行
			Map<String,Object> in = new HashMap<String,Object>();
			in.put("nowTime", new Date());
			in.put("flgStatus",platformType);
			in.put("editProcess", "bankCheck");
			int count = this.bankCheckRecordDAO.updateBankExistPayNoExist(in);
			logger.info("更新银行存在支付平台不存在的共"+count+"条");
			
			//step2	获取配置文件中需要对账的银行
			Set<String> bankcheckBankCodes = getBankcheckBankCode();
			
			//step3 查询银行多交易，支付交易失败，将银行对账数据的check_status置为3
			updatePayFailureTradeStatus(bankcheckBankCodes);
			
			for (String bank : bankcheckBankCodes) {
				bankcheckProcessByOneBank(bank);
			}
		} catch (Exception e) {
			logger.error("对账处理异常,原因:" + e);
			txManager.rollback(status);
//			sendErrorMail(e);
			return ;
		}
		txManager.commit(status);
		logger.info("对账处理完成...");
//		sendMail(normalTradeList,infoNoEqualTradeList);
	}

//	/**
//	 * <p>发送邮件</p>
//	 * @param e
//	 */
//	private void sendErrorMail(Exception e){
//		try{
//			// 获取当前服务器ip和名称
//			InetAddress ia = NetworkUtil.getLocalInetAddress();
//			String subject = "银行对账出现异常！系统当前日期：" + sdf.format(new Date()) + "--" + ia.getHostName() + "<"+ ia.getHostAddress() + ">";
//			StringBuffer sbuff = new StringBuffer();
//			sbuff.append("\r\n\r\n\r\n\r\n");
//			sbuff.append("此次银行对账处理出现异常!\r\n");
//			sbuff.append("异常MESSAGE:"+e.getMessage()+"\r\n");
//			sbuff.append("异常CAUSE:"+e.getCause()+"\r\n");
//			sbuff.append("异常STACKTRACE:"+e.getStackTrace()+"\r\n");
//			sbuff.append("请系统管理员通知相关人员处理");
//			mailService.sendMail(subject, sbuff.toString());
//		} catch (Exception e2){
//			logger.error("发送邮件失败！",e2);
//		}
//	}
//	
//	/**
//	 * <p>发送邮件</p>
//	 * @param e
//	 */
//	private void sendMail(List<Long> normalTradeList,List<Long> infoNoEqualTradeList){
//		try{
//			// 获取当前服务器ip和名称
//			InetAddress ia = NetworkUtil.getLocalInetAddress();
//			String subject = "银行对账完成！系统当前日期：" + sdf.format(new Date()) + "--" + ia.getHostName() + "<"+ ia.getHostAddress() + ">";
//			StringBuffer sbuff = new StringBuffer();
//			sbuff.append("\r\n\r\n\r\n\r\n");
//			sbuff.append("此次银行对账处理完成!\r\n");
//			sbuff.append("支付银行一致平账交易笔数共: \t [ "+((null == normalTradeList) ? "0" : String
//					.valueOf(normalTradeList.size()))+" ] \r\n");
//			sbuff.append("支付银行均存在但信息不一致不平交易笔数共: \t [ "+((null == infoNoEqualTradeList) ? "0" : String
//					.valueOf(infoNoEqualTradeList.size()))+" ] \r\n");
//			sbuff.append("请通过报表了解更多详情");
//			
//			mailService.sendMail(subject, sbuff.toString());
//		} catch (Exception e){
//			logger.error("发送邮件失败！",e);
//		}
//	}
//	
	
	/**
	 * 读取配置参与对账的银行
	 * @return 
	 * @author 陈卓稳
	 * 2013-8-13 上午10:33:12
	 */
	private Set<String> getBankcheckBankCode(){

		String bankString = propertiesMap.get("checkaccount.banks");
		Set<String> bankCheckCodeSet = new HashSet<String>();
		String[] bankCheckCodeStr = bankString.split(",");
		for(String bank: bankCheckCodeStr){
		    	bankCheckCodeSet.add(bank.trim());
		}
		logger.info("参与对账的银行为："+bankCheckCodeSet.toString());
		return bankCheckCodeSet;
	}
	
	/**标记支付类交易的平账状态
	 * @param bank 
	 * @author 陈卓稳
	 * 2013-8-15 下午03:59:14
	 */
	private void updatePayEqual(String bank) {
		Map<String, Object> param = new HashMap<String, Object>();
		param.put("nowTime", new Date());
		param.put("editor", "bankCheckProcess");
		param.put("editProcess", "bankCheckProcess");
		param.put("joinCheckTradeCodes", joinCheckTradeCodes);
		param.put("checkBankCode", bank);
		try{
			int count = this.bankCheckRecordDAO.updateNormalTradeFiscalStatus(param);
			logger.info("银行["+bank+"]更新支付和银行两边的平账交易状态完成,更新了["+count+"]条交易");
		}catch(Exception e){
			logger.error("银行["+bank+"]更新支付类平账交易异常, 参数为: ["+param+"],原因: ["+e+"]");
			throw new CheckAccountException("230000003","银行["+bank+"]更新支付类平账交易异常",e);
		}
	}

	
	/**标记支付类交易的金额不平状态
	 * @param bank 
	 * @author 陈卓稳
	 * 2013-8-15 下午03:59:53
	 */
	private void updatePayNotEqual(String bank) {
		Map<String, Object> param = new HashMap<String, Object>();
		param.put("nowTime", new Date());
		param.put("editor", "bankCheckProcess");
		param.put("editProcess", "bankCheckProcess");
		param.put("joinCheckTradeCodes", joinCheckTradeCodes);
		param.put("checkBankCode",bank);
		try{
			int count = this.bankCheckRecordDAO.updatePayBankInfoNotEqualFiscalStatus(param);
			logger.info("银行["+bank+"]更新支付和银行两边的不平账交易(双方均存在但信息不一致)状态完成,更新了["+count+"]条记录");
		}catch(Exception e){
			logger.error("银行["+bank+"]更新支付类不平账交易异常(双方均存在但信息不一致), 参数为: ["+param+"],原因: ["+e+"]");
			throw new CheckAccountException("230000005","银行["+bank+"]更新支付类不平账交易异常",e);
		}
		
	}
	
	/**更新银行存在而支付失败的银行对账数据的对账状态
	 * @author 陈卓稳
	 * 2013-8-14 下午05:19:01
	 * @param bankcheckBankCodes 
	 */
	private void updatePayFailureTradeStatus(Set<String> bankcheckBankCodes){
        String joinCheckBank = setToString(bankcheckBankCodes);
		Map<String, Object> param = new HashMap<String, Object>();
		param.put("nowTime", new Date());
		param.put("editProcess", "bankcheckProcess");
		param.put("joinCheckTradeCodes", joinCheckTradeCodes);
		param.put("joinCheckBank", joinCheckBank);
		try{
			int count = this.bankCheckRecordDAO.updatePayFailureTradeFiscalStatus(param);
			logger.info("更新支付系统失败而银行存在对账状态完成,共更新了["+count+"]条交易");
		}catch(Exception e){
			logger.error("更新支付不存在但银行存在交易异常, 参数为: ["+param+"],原因: ["+e+"]");
			throw new CheckAccountException("230000007","更新支付不存在但银行存在交易异常",e);
		}
	}
	
	/**更新退款类交易的对账状态，分别汇总银行和平台的退款金额，标记退款汇总金额相等的交易
	 * @param bank 
	 * @author 陈卓稳
	 * 2013-8-16 下午04:49:30
	 */
	private void updateRefundEqual(String bank) {
		Map<String, Object> param = new HashMap<String, Object>();
		param.put("nowTime", new Date());
		param.put("editor", "bankCheckProcess");
		param.put("editProcess", "bankcheckProcess");
		param.put("checkBankCode",bank);
		
		try{
			int count = this.bankCheckRecordDAO.updateRefundEqualCheckStatus(param);
			logger.info("银行["+bank+"]更新退款类平账交易完成,更新了["+count+"]条交易");
		}catch(Exception e){
			logger.error("银行["+bank+"]更新退款类平账交易异常, 参数为: ["+param+"],原因: ["+e+"]");
			throw new CheckAccountException("230000002","银行["+bank+"]更新退款类平账交易异常",e);
		}
	}
	/**更新退款类交易的对账状态，分别汇总银行和平台的退款金额，标记退款汇总金额不相等的交易
	 * @param bank 
	 * @author 陈卓稳
	 * 2013-8-18 下午02:37:54
	 */
	private void updateRefundNotEqual(String bank) {
		Map<String, Object> param = new HashMap<String, Object>();
		param.put("nowTime", new Date());
		param.put("editor", "bankCheckProcess");
		param.put("editProcess", "bankcheckProcess");
		param.put("checkBankCode",bank);
		
		try{
			int count = this.bankCheckRecordDAO.updateRefundNotEqualCheckStatus(param);
			logger.info("银行["+bank+"]更新退款类不平账交易对账状态完成,更新了["+count+"]条交易");
		}catch(Exception e){
			logger.error("银行["+bank+"]更新退款类不平账交易异常, 参数为: ["+param+"],原因: ["+e+"]");
			throw new CheckAccountException("230000004","银行["+bank+"]更新退款类不平账交易异常",e);
		}
	}
	
	/**
	 * 标记支付系统多交易，银行不存在的
	 * @param bank 
	 * @author 陈卓稳
	 * 2013-8-18 下午03:37:47
	 */
	private void updatePlatformExistBankNotExist(String bank) {
		Map<String, Object> param = new HashMap<String, Object>();
		param.put("nowTime", new Date());
		param.put("editor", "bankCheckProcess");
		param.put("editProcess", "bankcheckProcess");
		param.put("checkBankCode",bank);
		param.put("joinCheckTradeCodes", joinCheckTradeCodes);
		
		try{
			int count = this.bankCheckRecordDAO.updateBankNotExistTradeFiscalStatus(param);
			logger.info("银行["+bank+"]更新支付系统多交易对账状态完成,更新了["+count+"]条交易");
		}catch(Exception e){
			logger.error("银行["+bank+"]更新支付系统多交易对账状态异常, 参数为: ["+param+"],原因: ["+e+"]");
			throw new CheckAccountException("230000006","银行["+bank+"]更新支付系统多交易对账状态异常",e);
		}
	}

	/**
	 * 标记银行多交易
	 * @param bank 
	 * @author 陈卓稳
	 * 2014-6-25 上午10:00:23
	 */
	private void updateBankExistPlatformNotExist(String bank) {
		Map<String, Object> param = new HashMap<String, Object>();
		param.put("nowTime", new Date());
		param.put("editProcess", "bankcheckProcess");
		param.put("checkBankCode",bank);
		param.put("flgStatus",platformType);
		try{
			int count = this.bankCheckRecordDAO.updateBankExistPlatformNotExist(param);
			logger.info("银行["+bank+"]更新银行多交易对账状态完成,更新了["+count+"]条交易");
		}catch(Exception e){
			logger.error("银行["+bank+"]更新银行多交易对账状态异常, 参数为: ["+param+"],原因: ["+e+"]");
			throw new CheckAccountException("230000006","银行["+bank+"]更新银行多交易对账状态异常",e);
		}
	}

	/**
	 * 判断银行是否执行根据原交易id进行退款对账逻辑
	 * @param checkBank 对账银行
	 * @param realRefundBankCodes 按真实交易id进行退款对账的银行编号列表
	 * @return true:表示执行按原交易流水号退款对账逻辑
	 */
	private boolean bankIsCheckByOriginalTradeId(String checkBank, String realRefundBankCodes) {
		if(StringUtils.isBlank(realRefundBankCodes)){
			return true;
		}
		String[] bankCodes = realRefundBankCodes.split(",");
		boolean flag = true;
		for(String bankCode : bankCodes)
			if (checkBank.equals(bankCode)) {
				flag = false;
				break;
			}
		return  flag;
	}

	/**
	 * 读取对账规则配置文件
	 */
	private void readPropertiesFile(Resource thePropertiesFileResource) {

		Properties properties = new Properties();
		try {
			properties.load(thePropertiesFileResource.getInputStream());
		} catch (IOException e) {
			logger.error("读取对账规则配置文件异常...原因:{}", e);
		}
		for (Object key : properties.keySet()) {
			String v = properties.getProperty((String) key);
			propertiesMap.put((String) key, v.trim());
		}
	}

	/**
	 * 将set对象转换为特定格式的字符串
	 *
	 */
	private static String setToString(Set<String> bankCodesSet){
		StringBuffer sb  = new StringBuffer("'-1'");
		for(String bankCode : bankCodesSet){
			if(StringUtils.isNotBlank(bankCode)) {
				sb.append(",").append("'").append(bankCode.trim()).append("'");
			}
		}
		return sb.toString();
	}

	public int getPlateformEnvType() {
		return plateformEnvType;
	}

	public void setPlateformEnvType(int plateformEnvType) {
		this.plateformEnvType = plateformEnvType;
	}

	public TransactionDefinition getTxDefinition() {
		return txDefinition;
	}

	public void setTxDefinition(TransactionDefinition txDefinition) {
		this.txDefinition = txDefinition;
	}

	public PlatformTransactionManager getTxManager() {
		return txManager;
	}

	public void setTxManager(PlatformTransactionManager txManager) {
		this.txManager = txManager;
	}

	public Resource getPropertiesFileResource() {
		return propertiesFileResource;
	}

	public void setPropertiesFileResource(Resource propertiesFileResource) {
		this.propertiesFileResource = propertiesFileResource;
	}

	public AccountDateService getAccountDateService() {
		return accountDateService;
	}

	public void setAccountDateService(AccountDateService accountDateService) {
		this.accountDateService = accountDateService;
	}

	public void setJoinCheckTradeCodes(String joinCheckTradeCodes) {
		this.joinCheckTradeCodes = joinCheckTradeCodes;
	}

	public void setBankCheckRecordDAO(BankCheckRecordDAOEx bankCheckRecordDAO) {
		this.bankCheckRecordDAO = bankCheckRecordDAO;
	}

	public String getPlatformType() {
		return platformType;
	}
	public void setPlatformType(String platformType) {
		this.platformType = platformType;
	}

	
}


------------

1、修改/sumapay/config/sumapay-config.properties下面配置（建议添加到“checkaccount.banks参数下面”）:
#退款对账，根据真实退款id进行对账银行编码列表
bankcheck.realRefund.bankCodes=icbc,abc,cmb,boc,comm,spdb,hxb,ceb,cncb,unicom,psbc,pab,payease,ysepay,umb,unionpay,huanshangtong,cib_wechatpay,cncb_wechatpay


------------

xls图片
PoiUtils
电子公章
Note3

------------

public static enum ClientAnchor.AnchorType
extends java.lang.Enum<ClientAnchor.AnchorType>

Enum Constants 
Enum Constant and Description
DONT_MOVE_AND_RESIZE
Do Not Move or Resize With Underlying Rows/Columns (3)
DONT_MOVE_DO_RESIZE
Don't Move but do Resize With Anchor Cells (1)
MOVE_AND_RESIZE
Move and Resize With Anchor Cells (0)
MOVE_DONT_RESIZE
Move With Cells but Do Not Resize (2)	

我这边有8本国信蓝点的入门书籍想卖掉（培训时候800多买的），有需要的可以联系我。
javaSE，javaEE，Struts，spring，hibernate，oracle。
除此之外还有部分电子资料可以提供给买者。价格：150。北京附近的可以直接地铁拿，距离远的自付邮费。



				FileOutputStream fileOut = null;   
			         BufferedImage bufferImg = null;   
			        // 先把读进来的图片放到一个ByteArrayOutputStream中，以便产生ByteArray  
			        try {
			            String path=Thread.currentThread().getContextClassLoader().getResource("").getPath();
			            log.info("path=="+ path);
			    	String relativelyPath=System.getProperty("user.dir"); 
			    	log.info("path=="+ relativelyPath);
			            ByteArrayOutputStream byteArrayOut = new ByteArrayOutputStream();   
			            String t=PoiUtils.class.getClassLoader().getResource("").getPath();
			            log.info("t---"+t+"images/电子公章.png");
			            bufferImg = ImageIO.read(new File("D:/电子公章.png"));   
			            ImageIO.write(bufferImg, "png", byteArrayOut);
			            
			            // 画图的顶级管理器，一个sheet只能获取一个（一定要注意这点）
			            Drawing patriarch = hssf_w_sheet.createDrawingPatriarch(); 
			            HSSFClientAnchor anchor = null;
			            //anchor主要用于设置图片的属性
			            anchor = new HSSFClientAnchor(100, 100, 255, 255,(short) 0, 3, (short) 1, 10); 
//			            anchor = new XSSFClientAnchor(0, 0, 1023, 0, 0, 0, 1, 3);
			            // 插入图片  
			            patriarch.createPicture(anchor, hssf_w_book.addPicture(byteArrayOut.toByteArray(), HSSFWorkbook.PICTURE_TYPE_JPEG)); 
			           // 保持原图片效果
//			            patriarch.createPicture(anchor, wb.addPicture(byteArrayOut.toByteArray(), Workbook.PICTURE_TYPE_JPEG)).resize(1); 
//			            String fileName = "D:/测试Excel"+(int)(Math.random() * 100)+".xlsx";  
//			            fileOut = new FileOutputStream(fileName); 
//			             System.out.println("----Excle文件已生成:"+ fileName);
			        } catch (Exception e) {
			            e.printStackTrace();
			        }finally{
			            if(fileOut != null){
			                 try {
			                    fileOut.close();
			                } catch (IOException e) {
			                    e.printStackTrace();
			                }
			            }
			        }

------------

package com.sumavision.sumapay.merchant.util;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.apache.log4j.Logger;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator;
import org.apache.poi.hssf.usermodel.HSSFRichTextString;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.BuiltinFormats;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellValue;
import org.apache.poi.ss.usermodel.DateUtil;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.FormulaEvaluator;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRichTextString;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


public class PoiUtils {
	private final static Logger log = Logger.getLogger(PoiUtils.class);
	
	 /* LONG */
    protected static final String LONG = "java.lang.Long";
    /* SHORT */
    protected static final String SHORT = "java.lang.Short";
    /* INT */
    protected static final String INT = "java.lang.Integer";
    /* STRING */
    protected static final String STRING = "java.lang.String";
    /* DATE */
    protected static final String DATE = "java.sql.Timestamp";
    /* BIG */
    protected static final String BIG = "java.math.BigDecimal";
    /* CLOB */
    protected static final String CLOB = "oracle.sql.CLOB";
	
	public static void main(String[] args) throws FileNotFoundException {
		
		String path ="C:/Program Files/feiq/AutoRecv Files/IP梳理记录表(1)(2).xlsx";
		File file = new File(path);
		InputStream inputStream = new FileInputStream(file);
		int count = getRecordsCountReadStream(inputStream,1, false, 0);
		System.out.print(count);
	}
	
	
	/**
	 * 通过文件路径获取Excel读取行数
	 * @param path 文件路径，只接受xls或xlsx结尾
	 * @param isHeader 是否表头
	 * @param headerCount 表头行数
	 * @return count 如果文件路径为空，返回0；
	 */
	public static int getRecordsCountReadPath(String path, boolean isHeader, int headerCount) {
		
		int count = 0;
		
		if(path == null){
			return count;
		}else if(!path.endsWith("xls") && !path.endsWith("xlsx")
			  && !path.endsWith("XLS") && !path.endsWith("XLSX")){
			return count;
		}
		
		try {
			File file = new File(path);
			InputStream inputStream = new FileInputStream(file);
			Workbook hwb = null;
			if(path.endsWith("xls") || path.endsWith("XLS")){
				hwb = new HSSFWorkbook(inputStream);
			}else if(path.endsWith("xlsx") || path.endsWith("XLSX")){
				hwb = new XSSFWorkbook(inputStream);
			}
			
			Sheet sheet = hwb.getSheetAt(0);//暂定只取首页签
			int begin = sheet.getFirstRowNum();
			if(isHeader){
				begin += headerCount;
			}
		    int end = sheet.getLastRowNum(); 
		    for (int i = begin; i <= end; i++) {  
		        if (null == sheet.getRow(i)) {  
		            continue;  
		        }  
		        count++;  
		    }  
			
		} catch (FileNotFoundException e) {  
		    e.printStackTrace();  
		    return 0;
		} catch (IOException e) {  
		    e.printStackTrace();  
		    return 0;
		}
		return count;
	}
	
	/**
	 * 通过文件流获取Excel读取行数
	 * @param path 文件路径
	 * @param type 类型，0为xls，1为xlsx；
	 * @param isHeader 是否表头
	 * @param headerCount 表头行数
	 * @return count 如果文件路径为空，返回0；
	 */
	public static int getRecordsCountReadStream(InputStream inputStream,int type, boolean isHeader, int headerCount) {
			
		int count = 0;
		if(type != 0 && type != 1){
			return count;
		}
		
		try {
			Workbook hwb = null;
			if(type == 0){
				hwb = new HSSFWorkbook(inputStream); 
			}else if(type == 1) {
				hwb = new XSSFWorkbook(inputStream);
			}
			Sheet sheet = hwb.getSheetAt(0);
			int begin = sheet.getFirstRowNum(); 
			if(isHeader){
				begin += headerCount;
			}
		    int end = sheet.getLastRowNum(); 
		    for (int i = begin; i <= end; i++) {  
		        if (null == sheet.getRow(i)) {  
		            continue;  
		        }  
		        count++;  
		    }  
		} catch (FileNotFoundException e) {  
		    e.printStackTrace(); 
		    return 0;
		} catch (IOException e) {  
		    e.printStackTrace();
		    return 0;
		}
		return count;
	}
	
	/**
	 * 通过文件流获取Excel读取
	 * @param path 文件路径
	 * @param type 类型，0为xls，1为xlsx；
	 * @param isHeader 是否表头
	 * @param headerCount 表头行数
	 * @return poiList 如果文件路径为空，返回0；
	 */
	public static List<String[]> readRecordsInputStream(InputStream inputStream, int type, boolean isHeader, int headerCount) {
		List<String[]> poiList = new ArrayList<String[]>();
		if(type != 0 && type != 1){
			return null;
		}
		if(type == 0){
			poiList = readXLSRecords(inputStream, isHeader, headerCount); 
		}else if(type == 1) {
			poiList = readXLSXRecords(inputStream, isHeader, headerCount); 
		}
		return poiList;
	}
	
	/**
	 * 通过文件路径获取Excel读取
	 * @param path 文件路径，只接受xls或xlsx结尾
	 * @param isHeader 是否表头
	 * @param headerCount 表头行数
	 * @return count 如果文件路径为空，返回0；
	 */
	public static List<String[]> readRecordsInputPath(String path, boolean isHeader, int headerCount) {
		List<String[]> poiList = new ArrayList<String[]>();
		if(path == null){
			return null;
		}else if(!path.endsWith("xls") && !path.endsWith("xlsx")
			  && !path.endsWith("XLS") && !path.endsWith("XLSX")){
			return null;
		}
		File file = new File(path);
		try {
			InputStream inputStream = new FileInputStream(file);
			
			if(path.endsWith("xls") || path.endsWith("XLS")){
				poiList = readXLSRecords(inputStream, isHeader, headerCount); 
			}else if(path.endsWith("xlsx") || path.endsWith("XLSX")){
				poiList = readXLSXRecords(inputStream, isHeader, headerCount); 
			}
		} catch (Exception e) {  
		    e.printStackTrace();  
		    return null;
		}
		return poiList;
	}
	
	/**
	 * 解析EXCEL2003文件流
	 * 如果一行记录的行中或行尾出现空格，POI工具类可能会跳过空格不做处理，所以默认第一行是表头，所有待解析的记录都以表头为准
	 * @param inputStream  输入流
	 * @param isHeader  是否要跳过表头
	 * @param headerCount  表头占用行数
	 * @return 返回一个字符串数组List
	 */
	public static List<String[]> readXLSRecords(InputStream inputStream, boolean isHeader, int headerCount) {
		   List<String[]> poiList = new ArrayList<String[]>();
		   try{
			   HSSFWorkbook wbs = new HSSFWorkbook(inputStream);
			   HSSFSheet childSheet = wbs.getSheetAt(0);
			   //获取表头
			   int begin = childSheet.getFirstRowNum(); 
			   HSSFRow firstRow = childSheet.getRow(begin);
			   int cellTotal = firstRow.getPhysicalNumberOfCells();
			   //是否跳过表头解析数据
			   if(isHeader){
					begin += headerCount;
			   }
			   //逐行获取单元格数据
			   for(int i = begin;i <= childSheet.getLastRowNum();i++){
				   HSSFRow row = childSheet.getRow(i); //一行的所有单元格格式都是常规的情况下，返回的row为null
				   if(null != row){
					   String[] cells = new String[cellTotal];
					   for(int k=0;k<cellTotal;k++){
						   HSSFCell cell = row.getCell(k);
						   cells[k] = getStringCellValue(cell);
					   }
					   poiList.add(cells); 
				   }
			   }
		   }catch(Exception e){
			   e.printStackTrace();
			   return null;
		   }
		   return poiList;
		}
	
	/**
	 * 解析EXCEL2003文件流
	 * 如果一行记录的行中或行尾出现空格，POI工具类可能会跳过空格不做处理，所以默认第一行是表头，所有待解析的记录都以表头为准
	 * 该解析方法只适用于表头占用一行的情况
	 * @param inputStream  输入流
	 * @param isHeader  是否要跳过表头
	 * @param headerCount  表头占用行数
	 * @param maxColNum  最大列数，适用于多表头
	 * @return 返回一个字符串数组List
	 */
	public static List<String[]> readXLSRecords(InputStream inputStream, boolean isHeader, int headerCount, int maxColNum) {
		   List<String[]> poiList = new ArrayList<String[]>();
		   try{
			   HSSFWorkbook wbs = new HSSFWorkbook(inputStream);
			   HSSFSheet childSheet = wbs.getSheetAt(0);
			   HSSFFormulaEvaluator.evaluateAllFormulaCells(wbs);
			   //获取表头
			   int begin = childSheet.getFirstRowNum(); 
			   //HSSFRow firstRow = childSheet.getRow(begin);
			   //int cellTotal = firstRow.getPhysicalNumberOfCells();
			   //是否跳过表头解析数据
			   if(isHeader){
					begin += headerCount;
			   }
			   //逐行获取单元格数据
			   for(int i = begin;i <= childSheet.getLastRowNum();i++){
				   HSSFRow row = childSheet.getRow(i); //一行的所有单元格格式都是常规的情况下，返回的row为null
				   String[] cells = new String[maxColNum]; //空行对应空串数组
				   for(int k=0;k<maxColNum;k++){
					   HSSFCell cell = row==null?null:row.getCell(k);
					   cells[k] = getStringCellValue(cell);
				   }
				   poiList.add(cells); 
			   }
		   }catch(Exception e){
			   e.printStackTrace();
			   return null;
		   }
		   return poiList;
		}
	
	/**
	 * 解析EXCEL2007文件流
	 * 如果一行记录的行中或行尾出现空格，POI工具类可能会跳过空格不做处理，所以默认第一行是表头，所有待解析的记录都以表头为准
	 * 该处理方法中，表头对应都占用一行
	 * @param inputStream 输入流
	 * @param isHeader 是否要跳过表头
	 * @param headerCount 表头占用行数
	 * @return 返回一个字符串数组List
	 */
	public static List<String[]> readXLSXRecords(InputStream inputStream, boolean isHeader, int headerCount) {
		   List<String[]> poiList = new ArrayList<String[]>();
		   try{
			   XSSFWorkbook wbs = new XSSFWorkbook(inputStream);
			   XSSFSheet childSheet = wbs.getSheetAt(0);
			   //获取表头
			   int begin = childSheet.getFirstRowNum(); 
			   XSSFRow firstRow = childSheet.getRow(begin);
			   int cellTotal = firstRow.getPhysicalNumberOfCells();
			   //是否跳过表头解析数据
			   if(isHeader){
					begin += headerCount;
			   }
			   for(int i = begin;i <= childSheet.getLastRowNum();i++){
				   XSSFRow row = childSheet.getRow(i);  //一行的所有单元格格式都是常规的情况下，返回的row为null
				   if(null != row){
					   String[] cells = new String[cellTotal];
					   for(int k=0;k<cellTotal;k++){
						   XSSFCell cell = row.getCell(k);
						   cells[k] = getStringCellValue(cell);
					   }
					   poiList.add(cells);
				   }
			   }
		   }catch(Exception e){
			   log.error("Excel文件解析异常：", e);
			   return null;
		   }
		   return poiList;
		}
	
	/**
	 * 解析EXCEL2007文件流
	 * 如果一行记录的行中或行尾出现空格，POI工具类可能会跳过空格不做处理，所以默认第一行是表头，所有待解析的记录都以表头为准
	 * 该处理方法中，表头对应都占用一行
	 * @param inputStream 输入流
	 * @param isHeader 是否要跳过表头
	 * @param headerCount 表头占用行数
	 * @param maxColNum 最大列数，适用于多表头的情况
	 * @return 返回一个字符串数组List
	 */
	public static List<String[]> readXLSXRecords(InputStream inputStream, boolean isHeader, int headerCount, int maxColNum) {
		   List<String[]> poiList = new ArrayList<String[]>();
		   try{
			   XSSFWorkbook wbs = new XSSFWorkbook(inputStream);
			   XSSFSheet childSheet = wbs.getSheetAt(0);
			   //获取表头
			   int begin = childSheet.getFirstRowNum(); 
			   //XSSFRow firstRow = childSheet.getRow(begin);
			   //int cellTotal = firstRow.getPhysicalNumberOfCells();
			   //是否跳过表头解析数据
			   if(isHeader){
					begin += headerCount;
			   }
			   for(int i = begin;i <= childSheet.getLastRowNum();i++){
				   XSSFRow row = childSheet.getRow(i);  //一行的所有单元格格式都是常规的情况下，返回的row为null
				   String[] cells = new String[maxColNum];  //空行对应空串数组
				   for(int k=0;k<maxColNum;k++){
					   XSSFCell cell = row==null?null:row.getCell(k);
					   cells[k] = getStringCellValue(cell);
				   }
				   poiList.add(cells);
			   }
		   }catch(Exception e){
			   log.error("Excel文件解析异常：", e);
			   return null;
		   }
		   return poiList;
		}
	
	 /**
	  * 获取单元格数据内容为字符串类型的数据
	  * 
	  * @param cell Excel单元格
	  * @return String 单元格数据内容
	  */
		private static String getStringCellValue(Cell cell) {
			String strCell = "";
			if (cell == null) {
				return "";
			}
//			String cs = cell.getCellStyle().getDataFormatString();
//			System.out.println("cell.getCellStyle().getDataFormatString:"+cs);
//			System.out.println("cell.getCellStyle().getDataFormat:"+cell.getCellStyle().getDataFormat());
			
			//将数值型参数转成文本格式，该算法不能保证1.00这种类型数值的精确度
			DecimalFormat df = (DecimalFormat) NumberFormat.getPercentInstance();  
			StringBuffer sb = new StringBuffer();
			sb.append("0");
			df.applyPattern(sb.toString());  
			switch (cell.getCellType()) {
			case Cell.CELL_TYPE_STRING:
				strCell = cell.getStringCellValue();
				break;
			case Cell.CELL_TYPE_NUMERIC:
				double value = cell.getNumericCellValue();
				while(Double.parseDouble(df.format(value))!=value){
					if("0".equals(sb.toString())){
						sb.append(".0");
					}else{
						sb.append("0");
					}
					df.applyPattern(sb.toString());
				}
				strCell = df.format(value);
//				strCell = parseNum2str(cell);
				break;
			case Cell.CELL_TYPE_BOOLEAN:
				strCell = String.valueOf(cell.getBooleanCellValue());
				break;
			case Cell.CELL_TYPE_BLANK:
				strCell = "";
				break;
			case Cell.CELL_TYPE_FORMULA:
//                 strCell = cell.getStringCellValue();
				// 將公式计算结果后作为值输出
				FormulaEvaluator evaluator = cell.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();
			    evaluator.evaluateFormulaCell(cell);
			    CellValue cellValue = evaluator.evaluate(cell);
			    if (cellValue.getCellType() == Cell.CELL_TYPE_STRING) {
					strCell = cellValue.getStringValue();
				} else if(cellValue.getCellType() == Cell.CELL_TYPE_NUMERIC) {
//					strCell = String.valueOf(cellValue.getNumberValue());
					strCell = parseNum2str(cell);
				} else if(cellValue.getCellType() == Cell.CELL_TYPE_BOOLEAN) {
					strCell = String.valueOf(cellValue.getBooleanValue());
			    } else {
					strCell = cellValue.formatAsString();
			    }
			    break;
			default:
				strCell = "";
				break;
			}
			if (strCell.equals("") || strCell == null) {
				return "";
			}
			System.out.println("cell.getCellStyle().getDataFormat:"+cell.getCellStyle().getDataFormat());
			System.out.println("cell.getCellStyle().getDataFormatString():"+cell.getCellStyle().getDataFormatString());
			System.out.println("strCell:"+strCell);
			return strCell;
		}
		
		 /**
	     * 导出Excel
	     * @param response
	     * @param request
	     * @param title 
	     * @param map key为标题，list为数据，单表头导出
	     * @param type 0为xls，1为xlsx
	     */
		public static void output(HttpServletResponse response,HttpServletRequest request,
				String title, Map<String, List<Object>> map, int type) throws Exception{
			
			if(type != 0 && type != 1){
				throw new Exception("无效的excel导出类型，type=0表示xls，type=1表示xlsx");
			}
			
			List<Map<String, List<Object>>> list = new ArrayList<Map<String, List<Object>>>();
			list.add(map);
			if(type == 0){
				outputXLS(response, request, title, null, list, null); 
			}else if(type == 1) {
				outputXLSX(response, request, title, null, list, null); 
			}
		}
		public static void outputTitles(HttpServletResponse response,HttpServletRequest request,
				String title, Map<String, String> mapTitle, Map<String, List<Object>> map, int type, String add) throws Exception{
			
			if(type != 0 && type != 1){
				throw new Exception("无效的excel导出类型，type=0表示xls，type=1表示xlsx");
			}
//			List<Map<String, List<Object>>> listTitle = new ArrayList<Map<String, List<Object>>>();
//			if (null!=mapTitle)
//			listTitle.add(mapTitle);
			List<Map<String, List<Object>>> list = new ArrayList<Map<String, List<Object>>>();
			list.add(map);
			if(type == 0){
				outputXLS(response, request, title, mapTitle, list, add); 
			}else if(type == 1) {
				outputXLSX(response, request, title, mapTitle, list, add); 
			}
		}
		
		 /**
	     * 导出Excel
	     * @param response
	     * @param request
	     * @param title 
	     * @param List<Map> 支持多表头导出
	     * @param type 0为xls，1为xlsx
	     */
		public static void output(HttpServletResponse response,HttpServletRequest request,
				String title, List<Map<String, List<Object>>> list, int type) throws Exception{
			
			if(type != 0 && type != 1){
				throw new Exception("无效的excel导出类型，type=0表示xls，type=1表示xlsx");
			}
			if(type == 0){
				outputXLS(response, request, title, null, list, null); 
			}else if(type == 1) {
				outputXLSX(response, request, title, null, list, null); 
			}
		}
		
		public static void outputXLS(HttpServletResponse response,HttpServletRequest request,
				String title,Map<String, String> listTitle,List<Map<String, List<Object>>> list, String add)throws Exception{
				
				//输出流定义
				OutputStream os = response.getOutputStream();
				byte[] fileNameByte = (title + ".xls").getBytes("GBK");
		        String filename = new String(fileNameByte, "ISO8859-1");
				response.setContentType("application/x-msdownload");
				response.setCharacterEncoding("UTF-8");response.setHeader("Content-Disposition", "attachment;filename=" + filename);
				
				//创建excel文件
				HSSFWorkbook hssf_w_book=new HSSFWorkbook();
				HSSFSheet hssf_w_sheet=hssf_w_book.createSheet(title);
				hssf_w_sheet.setDefaultColumnWidth(21); //固定列宽度
				HSSFRow hssf_w_row=null;//创建一行
				HSSFCell hssf_w_cell=null;//创建每个单元格
				 
				//定义表头单元格样式
				HSSFCellStyle head_cellStyle = hssf_w_book.createCellStyle();
				//定义表头字体样式
				HSSFFont head_font = hssf_w_book.createFont();
				head_font.setFontName("宋体");//设置头部字体为宋体
				head_font.setBoldweight(Font.BOLDWEIGHT_BOLD); //粗体
				head_font.setFontHeightInPoints((short) 10); //字体大小
				//表头单元格样式设置
				head_cellStyle.setFont(head_font);//单元格样式使用字体
				head_cellStyle.setAlignment(HSSFCellStyle.ALIGN_CENTER);
				head_cellStyle.setVerticalAlignment(HSSFCellStyle.ALIGN_CENTER);
				head_cellStyle.setBorderBottom(XSSFCellStyle.BORDER_THIN);
				head_cellStyle.setBorderLeft(XSSFCellStyle.BORDER_THIN);
				head_cellStyle.setBorderRight(XSSFCellStyle.BORDER_THIN);
				head_cellStyle.setBorderTop(XSSFCellStyle.BORDER_THIN);
				
				//定义数据单元格样式
				HSSFCellStyle cellStyle_CN = hssf_w_book.createCellStyle();//创建数据单元格样式(数据库数据样式)
				cellStyle_CN.setBorderBottom(XSSFCellStyle.BORDER_THIN);
				cellStyle_CN.setBorderLeft(XSSFCellStyle.BORDER_THIN);
				cellStyle_CN.setBorderRight(XSSFCellStyle.BORDER_THIN);
				cellStyle_CN.setBorderTop(XSSFCellStyle.BORDER_THIN); 
				 
				//在多表头导出时，定义第一个表头出现位置
				int titleFlag = 0;
				
				if (listTitle != null) {
					//汇总表头打印begin
					//遍历map获取汇总表头字段，并将汇总表头字段放进String型的数组
					String header = "";
					for (Entry<String, String> entry : listTitle.entrySet()) {
						header += entry.getKey() + ";";
						header += entry.getValue() + ";";
					}
					header.substring(0, header.length()-1);
					String[] headerArray = header.split(";");
					
					//表头写入位置
					hssf_w_row = hssf_w_sheet.createRow(titleFlag);
					for(int i = 0; i < headerArray.length; i++){
						hssf_w_cell = hssf_w_row.createCell(i);
						hssf_w_cell.setCellType(XSSFCell.CELL_TYPE_STRING);
						hssf_w_cell.setCellValue(headerArray[i]);
				        hssf_w_cell.setCellStyle(head_cellStyle);
				        //hssf_w_sheet.autoSizeColumn(( short ) i ); 
					}//汇总表头打印end
				}
				
				titleFlag += 1;
				List<List<Map<String, List<Object>>>> listDatas = new ArrayList<List<Map<String, List<Object>>>>();
//				if (null!=listTitle)
//					listDatas.add(listTitle);
				listDatas.add(list);
				
				for (List<Map<String, List<Object>>> listData : listDatas) {
				
					//遍历写入表数据的list
					for(Map<String, List<Object>> map : listData){
						//遍历map获取表头字段，并将表头字段放进String型的数组
						Set<String> key = map.keySet();
						String titles = "";
						int count = 0;
						for (Iterator<String> it = key.iterator(); it.hasNext();) {
							if(count != 0){
								titles += ";";
							}
							titles += (String) it.next();
				            count++;
				        }
						String[] titleArray = titles.split(";");
						
						//表头写入位置
						hssf_w_row = hssf_w_sheet.createRow(titleFlag);
						for(int i = 0; i < titleArray.length; i++){
							hssf_w_cell = hssf_w_row.createCell(i);
							hssf_w_cell.setCellType(XSSFCell.CELL_TYPE_STRING);
							hssf_w_cell.setCellValue(titleArray[i]);
					        hssf_w_cell.setCellStyle(head_cellStyle);
					        //hssf_w_sheet.autoSizeColumn(( short ) i ); 
						}
						
						//循环写入表数据，获取表的总列数，然后逐行写入数据
						for(int i = 0; i < map.get(titleArray[0]).size(); i++){
							//定义数据行
							hssf_w_row = hssf_w_sheet.createRow(i+titleFlag+1);
							//按行将每一列的数据写入单元格
							for(int j = 0; j < titleArray.length; j++){
								hssf_w_cell = hssf_w_row.createCell(j);
								Object in = map.get(titleArray[j]).get(i);
								type4ExcelXLS(in,hssf_w_cell,cellStyle_CN);
								//hssf_w_sheet.autoSizeColumn(( short ) i ); 
							}
						}
						//下一个表头的写入位置，和上一个表头数据之间隔一行
						titleFlag+=map.get(titleArray[0]).size()+1;
					}
				}
				
				if (null!=add) {
					//定义表头单元格样式
					HSSFCellStyle head_cellStyle2 = hssf_w_book.createCellStyle();
					//表头单元格样式设置
					head_cellStyle2.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);
					head_cellStyle2.setAlignment(HSSFCellStyle.ALIGN_LEFT);
					head_cellStyle2.setWrapText(true);
					
					//定义表头字体样式
					HSSFFont head_font2 = hssf_w_book.createFont();
					head_font2.setFontName("宋体");//设置头部字体为宋体
					head_font2.setBoldweight(Font.BOLDWEIGHT_BOLD); //粗体
					head_font2.setFontHeightInPoints((short) 9); //字体大小
					head_font2.setColor(Font.COLOR_RED);
					
					HSSFFont head_font3 = hssf_w_book.createFont();
					head_font3.setFontName("宋体");//设置头部字体为宋体
					head_font3.setFontHeightInPoints((short) 9); //字体大小
					head_font3.setColor(Font.COLOR_RED);
					
					HSSFRichTextString ts= new HSSFRichTextString(add);
					ts.applyFont(0,30,head_font2);
					ts.applyFont(30,ts.length(),head_font3);
					
					titleFlag+=3;
					hssf_w_row = hssf_w_sheet.createRow(titleFlag);
					hssf_w_cell = hssf_w_row.createCell(0);
					hssf_w_cell.setCellType(XSSFCell.CELL_TYPE_STRING);
					
					hssf_w_cell.setCellValue(ts);
					hssf_w_cell.setCellStyle(head_cellStyle2);
			        hssf_w_sheet.addMergedRegion(new CellRangeAddress(titleFlag,titleFlag+8,0,4));
				}
				//excel文件导出
				hssf_w_book.write(os);
				os.close();
		}
		
		public static void outputXLSX(HttpServletResponse response,HttpServletRequest request,
				String title,Map<String, String> listTitle,List<Map<String, List<Object>>> list, String add) throws Exception{
				
				//输出流定义
				OutputStream os = response.getOutputStream();
				byte[] fileNameByte = (title + ".xlsx").getBytes("GBK");
		        String filename = new String(fileNameByte, "ISO8859-1");
				response.setContentType("application/x-msdownload");
				response.setCharacterEncoding("UTF-8");
				response.setHeader("Content-Disposition", "attachment;filename=" + filename);
				
				//创建excel文件
				XSSFWorkbook xssf_w_book=new XSSFWorkbook();
				XSSFSheet xssf_w_sheet=xssf_w_book.createSheet(title);
				xssf_w_sheet.setDefaultColumnWidth(21); //固定列宽度
				XSSFRow xssf_w_row=null;//创建一行
				XSSFCell xssf_w_cell=null;//创建每个单元格
				 
				//定义表头单元格样式
				XSSFCellStyle head_cellStyle=xssf_w_book.createCellStyle();
				//定义表头字体样式
				XSSFFont  head_font=xssf_w_book.createFont();
				head_font.setFontName("宋体");//设置头部字体为宋体
				head_font.setBoldweight(Font.BOLDWEIGHT_BOLD); //粗体
				head_font.setFontHeightInPoints((short) 10);
				//表头单元格样式设置
				head_cellStyle.setFont(head_font);//单元格使用表头字体样式
				head_cellStyle.setAlignment(HorizontalAlignment.CENTER);
				head_cellStyle.setVerticalAlignment(VerticalAlignment.CENTER);
				head_cellStyle.setBorderBottom(XSSFCellStyle.BORDER_THIN);
				head_cellStyle.setBorderLeft(XSSFCellStyle.BORDER_THIN);
				head_cellStyle.setBorderRight(XSSFCellStyle.BORDER_THIN);
				head_cellStyle.setBorderTop(XSSFCellStyle.BORDER_THIN);
				
				//定义数据单元格样式
				XSSFCellStyle cellStyle_CN=xssf_w_book.createCellStyle();//创建数据单元格样式(数据库数据样式)
				cellStyle_CN.setBorderBottom(XSSFCellStyle.BORDER_THIN);
				cellStyle_CN.setBorderLeft(XSSFCellStyle.BORDER_THIN);
				cellStyle_CN.setBorderRight(XSSFCellStyle.BORDER_THIN);
				cellStyle_CN.setBorderTop(XSSFCellStyle.BORDER_THIN); 
				 
				//在多表头导出时，定义第一个表头出现位置
				int titleFlag = 0;
				
				//汇总表头打印begin
				if (listTitle != null) {
					String header = "";
					for (Entry<String, String> entry : listTitle.entrySet()) {
						header += entry.getKey() + ";";
						header += entry.getValue() + ";";
			        }
					header.substring(0, header.length()-1);
					String[] headerArray = header.split(";");
					
					//第一行写入表头
					xssf_w_row=xssf_w_sheet.createRow(titleFlag);
					for(int i = 0; i < headerArray.length; i++){
						xssf_w_cell = xssf_w_row.createCell(i);
						xssf_w_cell.setCellType(XSSFCell.CELL_TYPE_STRING);
						xssf_w_cell.setCellValue(headerArray[i]);
				        xssf_w_cell.setCellStyle(head_cellStyle);
				        //xssf_w_sheet.autoSizeColumn(( short ) i ); 
					}
				} //汇总表头打印end
				
				titleFlag += 1;
				
				//遍历写入表数据的list
				for(Map<String, List<Object>> map : list){
					//遍历map获取表头字段，并将表头字段放进String型的数组
					Set<String> key = map.keySet();
					String titles = "";
					int count = 0;
					for (Iterator<String> it = key.iterator(); it.hasNext();) {
						if(count != 0){
							titles += ";";
						}
						titles += (String) it.next();
			            count++;
			        }
					String[] titleArray = titles.split(";");
					
					//第一行写入表头
					xssf_w_row=xssf_w_sheet.createRow(titleFlag);
					for(int i = 0; i < titleArray.length; i++){
						xssf_w_cell = xssf_w_row.createCell(i);
						xssf_w_cell.setCellType(XSSFCell.CELL_TYPE_STRING);
						xssf_w_cell.setCellValue(titleArray[i]);
				        xssf_w_cell.setCellStyle(head_cellStyle);
				        //xssf_w_sheet.autoSizeColumn(( short ) i ); 
					}
					
					//循环写入表数据
					for(int i = 0; i < map.get(titleArray[0]).size(); i++){
						//定义数据行
						xssf_w_row=xssf_w_sheet.createRow(i+titleFlag+1);
						for(int j = 0; j < titleArray.length; j++){
							xssf_w_cell = xssf_w_row.createCell(j);
							Object in = map.get(titleArray[j]).get(i);
							type4ExcelXLSX(in,xssf_w_cell,cellStyle_CN);
							//xssf_w_sheet.autoSizeColumn(( short ) i ); 
						}
					}
					
					//下一个表头的写入位置，和上一个表头数据之间隔一行
					titleFlag+=map.get(titleArray[0]).size()+2;
				}
				if (null!=add) {
					titleFlag+=3;
					xssf_w_row = xssf_w_sheet.createRow(titleFlag);
					xssf_w_cell = xssf_w_row.createCell(0);
					xssf_w_cell.setCellType(XSSFCell.CELL_TYPE_STRING);
					xssf_w_cell.setCellValue(add);
					xssf_w_cell.setCellStyle(head_cellStyle);
					xssf_w_sheet.addMergedRegion(new CellRangeAddress(titleFlag,titleFlag+8,0,4));
				}
				//excel文件导出
				xssf_w_book.write(os);
				os.close();
		}
		
		/**
		 * 根据类型自适应格式
		 * @param col
		 * @param row
		 * @param in
		 * @return
		 * @throws Exception
		 */
		public static void type4ExcelXLSX(Object in, XSSFCell cell, XSSFCellStyle style) throws Exception{
			if (null == in){
				cell.setCellType(XSSFCell.CELL_TYPE_STRING);
				XSSFRichTextString xssfString = new XSSFRichTextString("");
				cell.setCellValue(xssfString);
				cell.setCellStyle(style);
			}else{
				in = ClobUtils.clobToString(in);
				String type = in.getClass().getName();
				if (INT.equals(type)){
					cell.setCellType(XSSFCell.CELL_TYPE_NUMERIC);
					cell.setCellValue(Double.parseDouble(String.valueOf(in)));
					cell.setCellStyle(style);
				}else if (LONG.equals(type) && String.valueOf(in).length() <= 11){
					cell.setCellType(XSSFCell.CELL_TYPE_NUMERIC);
					cell.setCellValue(Double.parseDouble(String.valueOf(in)));
					cell.setCellStyle(style);
				}else if (SHORT.equals(type)){
					cell.setCellType(XSSFCell.CELL_TYPE_NUMERIC);
					cell.setCellValue(Double.parseDouble(String.valueOf(in)));
					cell.setCellStyle(style);
				}else if (DATE.equals(type)) {
					java.sql.Timestamp sqlDate = (java.sql.Timestamp)in;
					Date d = new java.util.Date(sqlDate.getTime());
					Date ds = new SimpleDateFormat("yyyy-MM-dd").parse(new SimpleDateFormat("yyyy-MM-dd").format(d));
					SimpleDateFormat df = null;
					if (d.compareTo(ds) == 0){
						df = new SimpleDateFormat("yyyy-MM-dd");
					}else{
						df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
					}
					cell.setCellType(XSSFCell.CELL_TYPE_STRING);
					XSSFRichTextString xssfString = new XSSFRichTextString(df.format(d));
					cell.setCellValue(xssfString);
					cell.setCellStyle(style);
				}else if (in instanceof java.util.Date){
					Date d = (Date)in;
					Date ds = new SimpleDateFormat("yyyy-MM-dd").parse(new SimpleDateFormat("yyyy-MM-dd").format(d));
					SimpleDateFormat df = null;
					if (d.compareTo(ds) == 0){
						df = new SimpleDateFormat("yyyy-MM-dd");
					}else{
						df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
					}
					cell.setCellType(XSSFCell.CELL_TYPE_STRING);
					XSSFRichTextString xssfString = new XSSFRichTextString(df.format(d));
					cell.setCellValue(xssfString);
					cell.setCellStyle(style);
				}else if (STRING.equals(type)){
					cell.setCellType(XSSFCell.CELL_TYPE_STRING);
					XSSFRichTextString xssfString = new XSSFRichTextString(String.valueOf(in));
					cell.setCellValue(xssfString);
					cell.setCellStyle(style);
				}else if (in instanceof BigDecimal){
					cell.setCellType(XSSFCell.CELL_TYPE_NUMERIC);
					cell.setCellValue(Double.parseDouble(String.valueOf(in)));
					cell.setCellStyle(style);
				}else{
					try{
						double d = Double.parseDouble(String.valueOf(in));
						//if (String.valueOf(d).equals(String.valueOf(in)) && String.valueOf(in).length() <= 11){
						if (String.valueOf(in).length() <= 11){
							cell.setCellType(XSSFCell.CELL_TYPE_NUMERIC);
							cell.setCellValue(d);
							cell.setCellStyle(style);
						}else{
							cell.setCellType(XSSFCell.CELL_TYPE_STRING);
							XSSFRichTextString xssfString = new XSSFRichTextString(String.valueOf(in));
							cell.setCellValue(xssfString);
							cell.setCellStyle(style);
						}
	
					}catch (Exception e) {
						log.error("Excel文件解析异常：", e);
						cell.setCellType(XSSFCell.CELL_TYPE_STRING);
						XSSFRichTextString xssfString = new XSSFRichTextString("");
						cell.setCellValue(xssfString);
						cell.setCellStyle(style);
					}
	
				}
			}

		}
		
		
		/**
		 * 根据类型自适应格式
		 * @param col
		 * @param row
		 * @param in
		 * @return
		 * @throws Exception
		 */
		public static void type4ExcelXLS(Object in, HSSFCell cell, HSSFCellStyle style) throws Exception{
			if (null == in){
				cell.setCellType(HSSFCell.CELL_TYPE_STRING);
				HSSFRichTextString hssfString = new HSSFRichTextString("");
				cell.setCellValue(hssfString);
				cell.setCellStyle(style);
			}else{
				in = ClobUtils.clobToString(in);
				String type = in.getClass().getName();
				if (INT.equals(type)){
					cell.setCellType(HSSFCell.CELL_TYPE_NUMERIC);
					cell.setCellValue(Double.parseDouble(String.valueOf(in)));
					cell.setCellStyle(style);
				}else if (LONG.equals(type) && String.valueOf(in).length() <= 11){
					cell.setCellType(HSSFCell.CELL_TYPE_NUMERIC);
					cell.setCellValue(Double.parseDouble(String.valueOf(in)));
					cell.setCellStyle(style);
				}else if (SHORT.equals(type)){
					cell.setCellType(HSSFCell.CELL_TYPE_NUMERIC);
					cell.setCellValue(Double.parseDouble(String.valueOf(in)));
					cell.setCellStyle(style);
				}else if (DATE.equals(type)) {
					java.sql.Timestamp sqlDate = (java.sql.Timestamp)in;
					Date d = new java.util.Date(sqlDate.getTime());
					Date ds = new SimpleDateFormat("yyyy-MM-dd").parse(new SimpleDateFormat("yyyy-MM-dd").format(d));
					SimpleDateFormat df = null;
					if (d.compareTo(ds) == 0){
						df = new SimpleDateFormat("yyyy-MM-dd");
					}else{
						df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
					}
					cell.setCellType(HSSFCell.CELL_TYPE_STRING);
					HSSFRichTextString hssfString = new HSSFRichTextString(df.format(d));
					cell.setCellValue(hssfString);
					cell.setCellStyle(style);
				}else if (in instanceof java.util.Date){
					Date d = (Date)in;
					Date ds = new SimpleDateFormat("yyyy-MM-dd").parse(new SimpleDateFormat("yyyy-MM-dd").format(d));
					SimpleDateFormat df = null;
					if (d.compareTo(ds) == 0){
						df = new SimpleDateFormat("yyyy-MM-dd");
					}else{
						df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
					}
					cell.setCellType(HSSFCell.CELL_TYPE_STRING);
					HSSFRichTextString hssfString = new HSSFRichTextString(df.format(d));
					cell.setCellValue(hssfString);
					cell.setCellStyle(style);
				}else if (STRING.equals(type)){
					cell.setCellType(HSSFCell.CELL_TYPE_STRING);
					HSSFRichTextString hssfString = new HSSFRichTextString(String.valueOf(in));
					cell.setCellValue(hssfString);
					cell.setCellStyle(style);
				}else if (in instanceof BigDecimal){
					cell.setCellType(HSSFCell.CELL_TYPE_NUMERIC);
					cell.setCellValue(Double.parseDouble(String.valueOf(in)));
					cell.setCellStyle(style);
				}else{
					try{
						double d = Double.parseDouble(String.valueOf(in));
						//if (String.valueOf(d).equals(String.valueOf(in)) && String.valueOf(in).length() <= 11){
						if (String.valueOf(in).length() <= 11){
							cell.setCellType(HSSFCell.CELL_TYPE_NUMERIC);
							cell.setCellValue(d);
							cell.setCellStyle(style);
						}else{
							cell.setCellType(HSSFCell.CELL_TYPE_STRING);
							HSSFRichTextString hssfString = new HSSFRichTextString(String.valueOf(in));
							cell.setCellValue(hssfString);
							cell.setCellStyle(style);
						}
	
					}catch (Exception e) {
						log.error("Excel文件解析异常：", e);
						cell.setCellType(HSSFCell.CELL_TYPE_STRING);
						HSSFRichTextString hssfString = new HSSFRichTextString("");
						cell.setCellValue(hssfString);
						cell.setCellStyle(style);
					}
				}
			}
		}
		
	   /** 
	    * 判断数值类型自动解析日期格式等其他特殊类型 
	    *  
	    * @param cell 单元格 
	    * @return String 结果 
	    */  
	   public static String parseNum2str(Cell cell) {
		   SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");
		   System.out.println("cell.getCellStyle().getDataFormat:"+cell.getCellStyle().getDataFormat());
		   System.out.println("cell.getCellStyle().getDataFormatString():"+cell.getCellStyle().getDataFormatString());
	       //poi的日期判断仅适用于欧美日期格式，对中文日期不支持，另外增加两个方法判断中文格式日期  
	       if (DateUtil.isCellDateFormatted(cell)||isReserved(cell.getCellStyle().getDataFormat())||isDateFormat(cell.getCellStyle().getDataFormatString())){  
	    	    short format = cell.getCellStyle().getDataFormat();  
	    	    if(format == 14 || format == 31){  
	    	        //日期  
	    	        sdf = new SimpleDateFormat("yyyy-MM-dd");  
	    	    }else if (format == 20 || format == 32) {  
	    	        //时间  
	    	        sdf = new SimpleDateFormat("HH:mm");  
	    	    }
	    	    double value = cell.getNumericCellValue();  
	    	    Date date = DateUtil.getJavaDate(value);  
	    	    return sdf.format(date); 
	    	    
	       }  
	       Double data=cell.getNumericCellValue();
	       if(cell.getCellStyle().getDataFormat()>=1&&cell.getCellStyle().getDataFormat()<=4){
	    	   
	       }
	       if(cell.getCellStyle().getDataFormat()==0){  
	          DecimalFormat dfs = new DecimalFormat("0");
	          return dfs.format(data);  
	        }else if(cell.getCellStyle().getDataFormat()>=1&&cell.getCellStyle().getDataFormat()<=4){
		    	// 将“0.00_);[Red]\(0.00\)”等带有颜色、特殊字符的转换为数值
		    	String format= cell.getCellStyle().getDataFormatString().replace("_", "").replace(")", "").split(";")[0];
		    	return new DecimalFormat(format).format(data);
	       }else if (cell.getCellStyle().getDataFormat()<=8 && cell.getCellStyle().getDataFormat()>=5){
				   String format= cell.getCellStyle().getDataFormatString().replace("_", "").split(";")[0];
				   return new DecimalFormat(format).format(data);
	       }else if (cell.getCellStyle().getDataFormat()<=25 && cell.getCellStyle().getDataFormat()>=23){
	    	   String format= cell.getCellStyle().getDataFormatString().replace("_", "").replace(")", "").replace("\\", "").split(";")[0];
	    	   return new DecimalFormat(format).format(data);
	       }else if (cell.getCellStyle().getDataFormat()<=44 && cell.getCellStyle().getDataFormat()>=37){
	    	   String format= cell.getCellStyle().getDataFormatString().replace("_", "").replace("¥", "").split(";")[0];
	    	   return new DecimalFormat(format).format(data);
	       }else if (cell.getCellStyle().getDataFormat()<=13 && cell.getCellStyle().getDataFormat()>=12){
	    	   String format= cell.getCellStyle().getDataFormatString().replace("_", "").replace("", "").split(";")[0];
	    	   return new DecimalFormat(format).format(data);
	       }else if (cell.getCellStyle().getDataFormat()<=10 && cell.getCellStyle().getDataFormat()>=9){
	    	   String format= cell.getCellStyle().getDataFormatString().replace("_", "").replace("", "").split(";")[0];
	    	   return new DecimalFormat(format).format(data);
	       }else if (cell.getCellStyle().getDataFormat()>=174){
		    	  String format= cell.getCellStyle().getDataFormatString().replace("_", "").replace("(", "").replace(")", "").replace("\\", "").replace("\"", "").split(";")[0];
		    	  return new DecimalFormat(format).format(data);
	       }  
	       return String.valueOf(data);  
	      
	   }		   
		
	   /** 
	     * 是否是日期格式保留字段 
	     * @return boolean：true（是保留字段）、false（不是） 
	     */  
	   private static boolean isReserved(short reserv) {  
	        if(reserv>=27&&reserv<=31) {  
	            return true;  
	        }  
	        return false;  
	    }  
	    
	    /** 
	     * 判断是否是中文日期格式 
	     * @param isNotDate 
	     * @return boolean：true（是日期格式）、false（不是） 
	     */  
	   private static boolean isDateFormat(String isNotDate) {  
	        if(isNotDate.contains("年")||isNotDate.contains("月")||isNotDate.contains("日")){  
	            return true;  
	        } else if(isNotDate.contains("aaa;")||isNotDate.contains("AM")||isNotDate.contains("PM")){  
	            return true;  
	        }  
	        return false;  
	   }
		
}


------------

将“电子公章.png”图片放到
/sumapay/batchTransFileTemplet

------------

		/**
		 * 数字类型转换为字符串
		 * 将xls、xlsx中Type为CELL_TYPE_NUMERIC转化为String类型
		 */
		private static String cellNumber2str(Cell cell){
			
			String strCell ="";
			//将数值型参数转成文本格式，该算法不能保证1.00这种类型数值的精确度
			DecimalFormat df = (DecimalFormat) NumberFormat.getPercentInstance();  
			StringBuffer sb = new StringBuffer();
			sb.append("0");
			df.applyPattern(sb.toString());
			
			if (HSSFDateUtil.isCellDateFormatted(cell)) {// 处理日期格式、时间格式  
                SimpleDateFormat sdf = null;
                CellStyle cs = cell.getCellStyle();
                if (cs.getDataFormat() == BuiltinFormats.getBuiltinFormat("h:mm")) {  
                    sdf = new SimpleDateFormat("HH:mm");  // 单元格格式id为20
                } else {// 日期  
                    sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"); // 单元格格式ID为14
                }  
                Date date = cell.getDateCellValue();  
                strCell = sdf.format(date);  
			} else {
            	double value = cell.getNumericCellValue();
            	while(Double.parseDouble(df.format(value))!=value){
					if("0".equals(sb.toString())){
						sb.append(".0");
					}else{
						sb.append("0");
					}
					df.applyPattern(sb.toString());
				}
				strCell = df.format(value); 
            } 
			return strCell;
		}
		
		
CellStyle cs = cell.getCellStyle();
			   System.out.println(cs.getDataFormatString());
			int c = BuiltinFormats.getBuiltinFormat(cs.getDataFormatString());
			System.out.println(c);		

------------

监听工具
更换jdk
Note1
博客地址
修改到68版本上了

------------


连接
gfsh>connect --jmx-manager=192.166.69.34[10331]
查看session数
gfsh>query --query ='select * from /MerchantSpringSessions'
gfsh>disconnect




		<prop key="locators">#{gemfirePropertyConfigurer['biz.cluster.springsession.locator']}</prop>







------------

监控工具：E:\java\Pivotal_GemFire_702_b45797
此工具同样不支持jdk路径有空格和括号（具体不支持那个，没实际测试）所以jdk不能默认安装。
需要修改glassfish下面的config配置文件。




------------


gfsh>describe member --name=/merchant-HA1-53bc0735-5bee-4682-9a16-85b3d49add56
Name        : /merchant-HA1-53bc0735-5bee-4682-9a16-85b3d49add56
Id          : HA1(/merchant-HA1-53bc0735-5bee-4682-9a16-85b3d49add56:32055):1036
6
Host        : HA1
Regions     : MerchantSpringSessions

PID         : 32055
Groups      :
Used Heap   : 366M
Max Heap    : 742M
Working Dir : /home/glassfish/SUNWappserver/domains/pl/config
Log file    : /home/glassfish/SUNWappserver/domains/pl/logs/gemfire.log
Locators    : 192.161.14.94[10301]


gfsh>put --key=('123T') --value=('hello1') --region=MerchantSpringSessions
Result      : true
Key Class   : java.lang.String
Key         : ('123T')
Value Class : java.lang.String
Old Value   : <NULL>

gfsh>create region --name=regions --type=REPLICATE_PERSISTENT
                      Member                       | Status
-------------------------------------------------- | ---------------------------
------------------------------------------------------
/merchant-HA1-53bc0735-5bee-4682-9a16-85b3d49add56 | Region "/regions" created o
n "/merchant-HA1-53bc0735-5bee-4682-9a16-85b3d49add56"

gfsh>list regions
List of regions
----------------------
MerchantSpringSessions

gfsh>query --query ='select * from /MerchantSpringSessions'

Result     : true
startCount : 0
endCount   : 20
Rows       : 0


NEXT_STEP_NAME : END


gfsh>list members
                       Name                        | Id
-------------------------------------------------- | ---------------------------
----------------------------------------
/merchant-HA1-53bc0735-5bee-4682-9a16-85b3d49add56 | HA1(/merchant-HA1-53bc0735-
5bee-4682-9a16-85b3d49add56:32055):10366



gfsh>describe connection
Connection Endpoints
--------------------
192.161.14.94[10331]

gfsh>version
v7.0.2


------------

http://blog.csdn.net/cars_star/article/details/46863259；

------------



------------

创建新域
聚合支付
jvm
galssfish4命令

------------

密码文件：
AS_ADMIN_PASSWORD=12345678
AS_ADMIN_ADMINPASSWORD=12345678
AS_ADMIN_USERPASSWORD=12345678
AS_ADMIN_MASTERPASSWORD=12345678
存放位置：C:\Sun\AppServer\bin

asadmin create-domain --adminport $adminport$ --instanceport $httpport$ --user admin --passwordfile password.txt --savemasterpassword $domain_name$
asadmin create-domain --adminport 5050 --instanceport 9080 --user admin --passwordfile password.txt --savemasterpassword domain2


启动domain2
asadmin start-domain domain2
停止domain2
asadmin stop-domain domain2

登录：http://192.166.69.34:5050/ 
用户名admin，密码：12345678

资源连接池：
tvpayDBPool
	
javax.sql.DataSource
oracle.jdbc.pool.OracleDataSource

属性：
password：tvpay
user：tvpay2dev
url：jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=192.161.14.99)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=sumapay)))

------------

glassfish 端口为5050
访问http端口为9080

------------

-agentlib:jdwp=transport=dt_socket,address=192.166.69.34:9009,suspend=y,-server=-XX:PermSize=128M -XX:MaxPermSize=256m

-agentlib:jdwp=transport=dt_socket,address=192.166.69.34:9009,suspend=y,-server=-XX:PermSize=256M -XX:MaxPermSize=512m
-agentlib:jdwp=transport=dt_socket,address=192.166.69.34:9009,suspend=y,-server=-XX:PermSize=256M -XX:MaxPermSize=512m

------------

asadmin deploy --port 5050 --user admin --force=true com.sumavision.tvpay.operation.manager.war

asadmin deploy --port 5050 --user admin --force=true com.sumavision.tvpay.gateway.web.merchant.war


------------

索引
基本语句
查看命中率
explain for
导入导出

------------

强制使用某个索引
select /*+ user_invisible_indexs */  *  from  trade_record;

------------

select * from user_tables;
delete from tablename;

alter table tablename add constraint PK_ID primary key(id);
ALTER TABLE TABLENAME DROP constraint PK_ID CASCADE;
--ALTER TABLE TABLENAME DROP CONSTRAINT PK_ID CASCADE;
----create table tableName(id int,name varchar2(20));
insert into tablename(id ,name) values(1,'zhangsan');
commit;
---alter table TABLENAME add constraint PK_ID primary key (ID);
alter table tablename modify name  varchar2(30); 
comment on column tablename.id is 'id';

alter table tablename drop column age;
alter table tablename add age varchar2(2)  default '10' not null;

------------

select ((1-(Sum(getmisses)/(sum(gets)+sum(getmisses))))*100) from V$rowcache where gets+getMisses !=0;
小于98，调整shared_pool_size;


------------

explain plan  set statement_id ='zhangsan' for select ID, CODE, NAME, CLASS_1_NAME, CLASS_2_NAME, CLASS_3_NAME, CLASS_1_CODE, CLASS_2_CODE,       CLASS_3_CODE, INNER_CODE, STATUS, FEE_RULE_ID, FEE_GROUP_CODE, LAST_EDIT_TIME, LAST_EDITOR,     LAST_EDIT_PROCESS, FLD1, FLD2, FLD3, FLD4     from BIZ_TYPE     order by CODE;
select  p.operation,p.options,p.object_name,p.id,p.parent_id,p.statement_id from plan_table p;

------------

导入：
C:\Users\Administrator>imp tvpay2/tvpay@192.161.14.99:1521/sumapay file=D:/oracl
e/tvpay2dev_20161102.dmp ignore =y;
导出：
C:\Users\Administrator>exp tvpay2dev/tvpay@192.161.14.99:1521/sumapay grants=Y f
ile=D:/oracle/tvpay2dev_20161102.dmp ;

------------

19版本（已经上线）
21版本
微信版本
上线修改配置
71版本
23版本
锁表服务
24版本
Note1
25版本
续展
实时付款
企业用户需求
徽商2.2

------------

费率配置
手续费收取方式
用户导入字段修改为30长度

------------

再比如商户限额里面的费率
高大容 17:28:08
再比如提现付款管理里面的付款配置
高大容 17:28:19
还有代扣管理里面的代扣配置

19版本费率优化相关业务：
商户提现，网银充值，资金上缴，单笔付款
修改用户导入用户名长度为30：
alter table user_import_detail  modify name varchar2(30);

------------

0实时，1预付，2垫付，3后付

------------

修改用户导入字段长度为30，原长度为10
alter table user_import_detail  modify name varchar2(30);

------------

商户预留信息
用户导入修改
付款银行卡展示10张限制
session集群修改
银行对账系统
修改内容

------------

comment on column MERCHANT.fld15  is '商户预留信息';



1、Admin商户注册后首次登陆商户自助，强制修改密码流程增加对预留信息强制输入校验，
2、修改商户信息功能中增加对商户预留信息字段的展示修改
3、右上角增加对商户预留信息的展示

------------

用户导入模板修改：“港澳台身份证”修改为“其他银行认可证件”

需要修改模板给冯组

------------

单笔付款中银行卡取消只显示10张限制

------------

分别修改集群配置文件（/sumapay/config/biz-spring-session.properties）：
添加如下内容（集群的所有节点都需要修改配置）：
192.16.3.2添加内容
#集群所涉及的ip地址和端口
spring_session_gemfire.locators/merchant  =192.16.3.2[10301],192.16.3.3[10301] 
#当前环境用到的ip地址和端口（集群环境的其中一个，本地配置）
spring_session_gemfire.start_locator/merchant=192.16.3.2[10301]

192.16.3.3添加内容
#集群所涉及的ip地址和端口
spring_session_gemfire.locators/merchant  =192.16.3.2[10301],192.16.3.3[10301] 
#当前环境用到的ip地址和端口（集群环境的其中一个，本地配置）
spring_session_gemfire.start_locator/merchant=192.16.3.3[10301]

biz.cluster.springsession.locator=192.16.3.2[10301],192.16.3.3[10301]






------------

comment on column BANK_CHECK_RECORD.fld4
  is '原始交易类型： 0支付交易、1退款交易  2退款交易且交易流水为退款';
  ----将历史数据中交易类型更新到fld4字段
update bank_check_record b set b.fld4 = b.fld2;
  
21版本：
1、对账系统--------修改/sumapay/config/sumapay-config.properties下面配置（建议添加到“checkaccount.banks参数下面”）:
#退款对账，根据真实退款id进行对账银行编码列表
bankcheck.realRefund.bankCodes=icbc,abc,cmb,boc,comm,spdb,hxb,ceb,cncb,unicom,psbc,pab,payease,ysepay,umb,unionpay,huanshangtong,cib_wechatpay,cncb_wechatpay
bankcheck.realRefund.bankCodes=ccb,cgb,xmms,xmmsfastpay,szicbc


------------

========================商户自助修改内容====================
comment on column MERCHANT.fld15  is '商户预留信息';

分别修改集群配置文件（/sumapay/config/biz-spring-session.properties）：
添加如下内容（集群的所有节点都需要修改配置）：
192.16.3.2添加内容
#集群所涉及的ip地址和端口
spring_session_gemfire.locators/merchant  =192.16.3.2[10301],192.16.3.3[10301] 
#当前环境用到的ip地址和端口（集群环境的其中一个，本地配置）
spring_session_gemfire.start_locator/merchant=192.16.3.2[10301]

192.16.3.3添加内容
#集群所涉及的ip地址和端口
spring_session_gemfire.locators/merchant  =192.16.3.2[10301],192.16.3.3[10301] 
#当前环境用到的ip地址和端口（集群环境的其中一个，本地配置）
spring_session_gemfire.start_locator/merchant=192.16.3.3[10301]



========================对账系统修改内容====================
comment on column BANK_CHECK_RECORD.fld4
  is '原始交易类型： 0支付交易、1退款交易  2退款交易且交易流水为退款';

  
21版本：
1、对账系统--------修改/sumapay/config/sumapay-config.properties下面配置（建议添加到“checkaccount.banks参数下面”）:
#退款对账，根据真实退款id进行对账银行编码列表
bankcheck.realRefund.bankCodes=icbc,abc,cmb,boc,comm,spdb,hxb,ceb,cncb,unicom,psbc,pab,payease,ysepay,umb,unionpay,huanshangtong,cib_wechatpay,cncb_wechatpay


------------

gemfire

------------

修改/sumapay/config/biz-spring-session.properties文件。
a）在192.16.3.2添加（如参数名称已经存在则为修改）内容
#集群所涉及的ip地址和端口
spring_session_gemfire.locators/merchant =192.16.3.2[10301],192.16.3.3[10301] 
#当前环境用到的ip地址和端口（集群环境的其中一个，本地配置）
spring_session_gemfire.start_locator/merchant=192.16.3.2[10301]

b）在192.16.3.3添加（如参数名称已经存在则为修改）内容
#集群所涉及的ip地址和端口
spring_session_gemfire.locators/merchant =192.16.3.2[10301],192.16.3.3[10301] 
#当前环境用到的ip地址和端口（集群环境的其中一个，本地配置）
spring_session_gemfire.start_locator/merchant=192.16.3.3[10301]


------------

聚合支付01版本：
1、对账系统--------修改/sumapay/config/sumapay-config.properties下面配置（建议添加到“checkaccount.banks参数下面”）:
#退款对账，根据真实退款id进行对账银行编码列表
bankcheck.realRefund.bankCodes=icbc,abc,cmb,boc,comm,spdb,hxb,ceb,cncb,unicom,psbc,pab,payease,ysepay,umb,unionpay,huanshangtong,cib_wechatpay,cncb_wechatpay

2、商户自助（聚合支付）----------修改集群配置文件（/sumapay/config/biz-spring-session.properties）添加如下内容：
#集群所涉及的ip地址和端口
spring_session_gemfire.locators/merchant  =192.16.3.2[10301]
#当前环境用到的ip地址和端口（集群环境的其中一个，本地配置）
spring_session_gemfire.start_locator/merchant=192.16.3.2[10301]





聚合支付：
1、对账系统--------修改/sumapay/config/sumapay-config.properties下面配置（建议添加到“checkaccount.banks参数下面”）:
#退款对账，根据真实退款id进行对账银行编码列表
bankcheck.realRefund.bankCodes=icbc,abc,cmb,boc,comm,spdb,hxb,ceb,cncb,unicom,psbc,pab,payease,ysepay,umb,unionpay,huanshangtong,cib_wechatpay,cncb_wechatpay

2、商户自助----------修改session集群配置文件（/sumapay/config/biz-spring-session.properties）添加如下内容：
#集群所涉及的ip地址和端口（ip根据实际ip地址进行配置）
spring_session_gemfire.locators/merchant  =192.16.3.2[10301]
#当前环境用到的ip地址和端口（集群环境的其中一个，本地配置）
spring_session_gemfire.start_locator/merchant=192.16.3.2[10301]


------------

comment on column PRODUCT_BANK_ASSOCIATION.fld1
  is '是否免联行号，0不可，1可';

------------

72版本
文件下载
代扣业务

------------

1、商户冻结提示语修改

2、平台系统
第三方用户标识：userIdIdentity   USER_IDENTITY
商户编号：merchantCode  MERCHANT_CODE

D:\workspace\com.sumavision.tvpay.front.transaction.processor.tvpay2-72\dist\com.sumavision.tvpay.front.transaction.processor.tvpay2.jar
增加CX0081处理器




3商户自助
用户账户查询，如果是徽商商户，需要展示徽商商户 银行账户（丰付自定义电子账号号码）

对账系统：增加代扣对账码：
#参与银行对账的交易增加一键充值CZ0104、协议还款TB0015、协议投标TB0039的支持，bankCheck.joinCheck.tradeCodes
,'CZ0104','TB0015','TB0039'





------------



商户自助网站（与运营管理配置一次即可）-----修改/sumapay/config/sumapay-config.properties  增加ftp路径配置：
#接口文档ftp存放路径
merchant.apiDoc.ftp.path=/merchantDoc/apiDoc/
#操作文档ftp存放路径
merchant.opeDoc.ftp.path=/merchantDoc/opeDoc/
#宣传文档ftp存放路径
merchant.proDoc.ftp.path=/merchantDoc/proDoc/


对账系统-----修改/sumapay/config/sumapay-config.properties  增加checkaccount.banks的渠道码：
checkaccount.banks = /**追加内容****/ ,nyf_withholding,hfb_withholding,cfca_withholding,crps_withholding,cdms_withholding,chinapay_withholding,ysepay_withholding,nyfd_withholding,cfcap_withholding,pab_withholding,nyfp_withholding


sql脚本（增加文件下载权限）：
update merchant_user m set m.role =  m.role ||'50', m.fld1 = m.fld1 ||'、文件下载' where m.role != '1';
commit;


favicon.ico

------------

nyf_withholding,hfb_withholding,cfca_withholding,crps_withholding,cdms_withholding,chinapay_withholding,ysepay_withholding,nyfd_withholding,cfcap_withholding,pab_withholding,nyfp_withholding



SP_S_20160023	408-诺亚大额代扣	2.5.4	
SP_S_20160023	412-厦门平安代扣	2.5.2	
SP_S_20160023	413-恒丰代扣	2.5.1	
SP_S_20160023	406-银盛代扣	2.5.9	
SP_S_20160023	409-畅捷通代扣	2.5.3	
SP_S_20160023	404-厦门民生代扣	2.5.7	
SP_S_20160023	403-诺亚金通代扣	2.5.9	
SP_S_20160023	409-中金批量代扣	2.5.2	
SP_S_20160023	402-中金支付代扣	2.5.8	
SP_S_20160023	405-中国银联代扣	2.5.5	
SP_S_20160023	411-成都民生代扣	2.5.3	

------------



------------

锁表服务
凭证打印
通知服务
session集群
Note1

------------

24

------------

锁表服务改在SP_S_20160024上吧
2.0.73.0
2.5.32.0


锁优化提交的代码：
2.0版本
com.sumavision.tvpay.front.domain.ex-73；
com.sumavision.tvpay.front.transaction.commons-73；
2.5版本
com.sumapay.recordlock-32

------------

流程
Note1

------------

1：查询MERCHANT_TRANSFER_REQUEST表



HisPrintReceiptRecord

------------


    	<dependency org="smartupload" name="smartupload" rev="1.0"/>

------------

通知服务

------------

#平台发送商户通知高质队列线程池初始大小
front.noticemerchant.high.quality.threadpool.size=100
#平台发送商户通知高质队列线程池最大线程数量
front.noticemerchant.high.quality.threadpool.maxsize=300

通知服务添加配置：添加“sumapay-config.properties”文件中通知商户相关配置。

#平台发送商户通知劣质队列线程池初始大小
front.noticemerchant.low.quality.threadpool.size=100
#平台发送商户通知劣质队列线程池最大线程数量
front.noticemerchant.low.quality.threadpool.maxsize=300
#平台通知从优质队列切换到劣质队列的临界发送次数（即发送n次后用劣质队列，n为配置参数，如n为1次，表示发送1次后，第2次就用劣质队列发送）
front.noticemerchant.queue.highSwitchToLow.sendTimes=1




------------

Note1

------------

#biz.cluster.springsession.locator=172.16.3.2[10310],172.16.3.3[10310]




分别修改集群配置文件（/sumapay/config/biz-spring-session.properties）：
添加如下内容（集群的所有节点都需要修改配置）：

192.16.3.2添加内容
#Session集群配置
biz.cluster.springsession.locator=172.16.3.2[10310],172.16.3.3[10310]

192.16.3.3添加内容
#Session集群配置
biz.cluster.springsession.locator=172.16.3.3[10310],172.16.3.2[10310]

------------

2.0
com.sumavision.tvpay.front.domain.ex
com.sumavision.tvpay.front.transaction.commons


2.5
com.sumapay.recordlock
com.sumapay.sendmerchantnotice

------------



------------

开发版本
英文对照表
错误码
添加配置
商户自助
债权转让相关开发
93处理器相关命令执行
徽商部署地址
徽商文件分发处理器
上线修改

------------

徽商2.0的需求版本号是SP_S_20160025
代码版本号是2.0.75.0和2.5.33.0

------------

bid  标 
标的信息录入接口   BidInformationInput
标的信息撤销接口   BidInformationCancel
标的信息单笔查询接口 BidInformationSingleQuery
标的信息批量查询接口 BidInformationBatchQuery

投标撤销接口   BidCancel 

还款冻结接口   RepayFreeze
还款冻结撤销接口  RepayFreezeCancel 
还款冻结单笔查询接口  RepayFreezeSingleQuery
还款冻结批量查询接口  RepayFreezeBatchQuery

融资扣款接口       FinanceDeduct
还款接口               Repay
批量发红包接口    GiftMoneyBatchSend
存量用户导入接口   StockUserImport

债权迁移接口   DebtTransferAction   接口名称Debt_transfer
hsBidInformation_BatchQuery




商户状态不正常：商户已冻结，请联系400-890-8970


标的信息批量查询接口  结束日期FUPROD ，，没有签名参数
投标撤销接口 请求参数为：REMARK  返回参数为：RESERVED
BidCancel ：15	标的编号	PRMNO	A	6	C	同请求	英文与请求不一致，以哪个为准	

																	
																																		
																																																			
标的信息录入：
徽商保留域：181，mm写的199
徽商和连接器请求有：预期年化收益率	YIELD	必填


投标撤销接口
请求的标的编号：PRODUCT
返回的标的编号：徽商是PRMNO，连接器是：FUPROD   mm：PRMNO
保留域：
请求是：REMARK ，返回是：RESERVED ，连接器RESERVED 写的是同请求，都没这个参数

标的信息批量查询
记录列表：
mm为：RECORD_LIST ，连接器为：DETAILS

还款冻结撤销
备注：
请求是：REMARK ，返回是：RESERVED 
标的编号：
请求是：PRODUCT， 返回的是：PRMNO

还款冻结单笔查询
备注：
请求是：REMARK ，返回是：RESERVED 

还款冻结批量查询
备注：
请求是：REMARK ，返回是：RESERVED 
记录列表：
mm为：RECORD_LIST ，连接器为：DETAILS


标的编号有三个字段：
FUPROD，PRODUCT，PRMNO



																																																																				
																																																																																					
																																																																																																																							


------------

110180001：ftp路径下文件名称重复！
110180002：ftp上传文件流读取失败！

------------

#徽商批量文件上传存放路径
hsb.batchFileRequest.ftp.path=/bankTrusteeship/hsb/batchFileRequest/
#徽商批量文件上传备份存放路径
hsb.batchFileRequest.backups.ftp.path=/bankTrusteeship/hsbbak/
#徽商批量文件下载存放路径
hsb.batchFileResult.ftp.path=/bankTrusteeship/hsb/batchFileResult/

------------

tradeCode为HS0009徽商账户快捷充值扣款-丰付发短信
tradeCode为HS0010徽商账户快捷充值扣款-银行发短信
tradeCode为HS0002徽商账户网银充值扣款
交易类型为徽商充值退款HS0022    --------电子账户充值线上充值退款
交易类型为徽商充值退款HS0023    --------电子账户充值线下充值退款
徽商充值退款HSCZTK  HS0022，HS0023
徽商网银充值 HS0002
徽商快捷充值 HSKJCZ HS0009，HS0010


,'HS0002','HS0009','HS0010','HS0022','HS0023'

徽商账户充值
列表里 分 网银、快捷

徽商账户充值退款
冯宗亮 10:45:46
订单号：

交易流水号：

交易类型：
交易金额：

交易状态：

已退款金额：

返回退款状态：

手续费收取方式：

手续费：
对账状态：
交易开始时间：
交易结束时间：
会计日期：
银行：
失败原因：
	
	
	
	
冯宗亮 10:46:59
订单号：

交易流水号：
	

交易类型：
	

交易时间：
	

交易状态：
	
原交易流水号：
	
退款金额：

手续费收取方式：

手续费：


------------

徽商2.0里增加了债券迁移导入的描述，
另外，根据文件名中的产品号、P2P平台代号、合作平台单位编号从徽商银行存管信息表P2P_HSB_TRUSTEESHIP_INFO查询对应的商户编码时，增加默认条件FLD2='2.0'

------------

徽商2.0的处理器，每个人都得在9.3上执行一下这个命令
冯宗亮(F07959698B24对话) 11:14:07
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade destination=com.sumapay.mq.queue.trade.hsb2depository routing_key=TX1001
冯宗亮(F07959698B24对话) 11:14:16
把TX1001改成你的处理器编码

------------

192.161.14.96:8080

------------

	HS0024

rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade destination=com.sumapay.mq.queue.trade.hsb2depository routing_key=HS0024




#徽商ftp配置信息
hsb2depository.ftp.host=${sumapay.ftp.server}
hsb2depository.ftp.port=21
hsb2depository.ftp.user=tvpay
hsb2depository.ftp.pwd=tvpay

#徽商批量文件上传存放路径
hsb.batchFileRequest.ftp.path=/bankTrusteeship/hsb/batchFileRequest/
#徽商批量文件上传下载备份存放路径
hsb.batchFileRequest.backups.ftp.path=/bankTrusteeship/hsbbak/
#徽商批量文件下载存放路径
hsb.batchFileResult.ftp.path=/bankTrusteeship/hsb/batchFileResult/
#徽商对账单下载存放路径
hsb.statement.ftp.path=/bankTrusteeship/hsb/statement/

#徽商商户结果文件公共下载路径（@@@@替换为商户号为商户的实际下载路径）
hsb.batchFileResult.merchant.ftp.path=/bankTrusteeship/merchant/@@@@/batchFileResult/
#徽商商户对账文件公共下载路径（@@@@替换为商户号为商户的实际下载路径）
hsb.statement.merchant.ftp.path=/bankTrusteeship/merchant/@@@@/statement/

------------


徽商2.0接口系统、徽商2.0处理器系分别添加：/sumapay/config/sumapay-config.properties下面配置

#徽商ftp配置信息
hsb2depository.ftp.host=${sumapay.ftp.server}
hsb2depository.ftp.port=21
hsb2depository.ftp.user=tvpay
hsb2depository.ftp.pwd=tvpay

#徽商批量文件上传存放路径
hsb.batchFileRequest.ftp.path=/bankTrusteeship/hsb/batchFileRequest/
#徽商批量文件上传下载备份存放路径
hsb.batchFileRequest.backups.ftp.path=/bankTrusteeship/hsbbak/
#徽商批量文件下载存放路径
hsb.batchFileResult.ftp.path=/bankTrusteeship/hsb/batchFileResult/
#徽商对账单下载存放路径
hsb.statement.ftp.path=/bankTrusteeship/hsb/statement/

#徽商商户结果文件公共下载路径（@@@@替换为商户号为商户的实际下载路径）
hsb.batchFileResult.merchant.ftp.path=/bankTrusteeship/merchant/@@@@/batchFileResult/
#徽商商户对账文件公共下载路径（@@@@替换为商户号为商户的实际下载路径）
hsb.statement.merchant.ftp.path=/bankTrusteeship/merchant/@@@@/statement/


MQ服务器添加对HS0024（文件分发处理器）的支持
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade destination=com.sumapay.mq.queue.trade.hsb2depository routing_key=HS0024




定时任务系统：
FTP商户文件文件分发定时配置（HsbBatchFileResultDistribution.xml）：trigger=0 */30 * * * ?
新增徽商2.0商户对账单分发定时配置（HsbSatementFileDistribution.xml）：trigger=0 0 22 * * ? *


徽商2.0接口系统 （com.sumavision.tvpay.gateway.web.hsbapi）： /sumapay/config/sumapay-config.properties下面配置

#徽商批量文件上传存放路径
hsb.batchFileRequest.ftp.path=/bankTrusteeship/hsb/batchFileRequest/
#徽商批量文件上传下载备份存放路径
hsb.batchFileRequest.backups.ftp.path=/bankTrusteeship/hsbbak/


徽商2.0处理器系分别添加：/sumapay/config/sumapay-config.properties下面配置

#徽商ftp配置信息
hsb2depository.ftp.host=${ftp.server}
hsb2depository.ftp.port=21
hsb2depository.ftp.user=tvpay
hsb2depository.ftp.pwd=tvpay

#徽商批量文件上传存放路径
hsb.batchFileRequest.ftp.path=/bankTrusteeship/hsb/batchFileRequest/
#徽商批量文件上传下载备份存放路径
hsb.batchFileRequest.backups.ftp.path=/bankTrusteeship/hsbbak/
#徽商批量文件下载存放路径
hsb.batchFileResult.ftp.path=/bankTrusteeship/hsb/batchFileResult/
#徽商对账单下载存放路径
hsb.statement.ftp.path=/bankTrusteeship/hsb/statement/

#徽商商户结果文件公共下载路径（@@@@替换为商户号为商户的实际下载路径）
hsb.batchFileResult.merchant.ftp.path=/bankTrusteeship/merchant/@@@@/batchFileResult/
#徽商商户对账文件公共下载路径（@@@@替换为商户号为商户的实际下载路径）
hsb.statement.merchant.ftp.path=/bankTrusteeship/merchant/@@@@/statement/


徽商2.0 hsbapi系统在/sumapay/config/sumapay-config.properties下面添加配置
#徽商ftp配置信息
hsb2depository.ftp.host=${ftp.server}
hsb2depository.ftp.port=21
hsb2depository.ftp.user=tvpay
hsb2depository.ftp.pwd=tvpay
#徽商批量文件上传存放路径
hsb.batchFileRequest.ftp.path=/bankTrusteeship/hsb/batchFileRequest/
#徽商批量文件上传下载备份存放路径
hsb.batchFileRequest.backups.ftp.path=/bankTrusteeship/hsbbak/







------------

Note1
短信验证码

------------

续展的需求版本是SP_S_20170001，代码版本是2.0.76.0和2.5.34.0

------------



------------

字段

------------

付款处理器付款类型输入参数
REVIEW_TYPE	付款类型	Integer	不可为空	付款类型 0手工审核 1自动实时




 
ID ACCOUNT_ID账户编号 MERCHANT_ID商户ID REMARK备注 LAST_EDITOR最近修改人 LAST_EDIT_TIME最近修改时间 LAST_EDIT_PROCESS最近修改程序 FLD字段

------------

Note1
徽商入账通知

------------

企业用户投标处理器	P2PBizUserTBProcessor	TB0052	
企业用户自动投标签约处理器	P2PBizUserQYProcessor	TB0053	
企业用户自动投标解约处理器	P2PBizUserJYProcessor	TB0054	
企业用户撤标处理器	P2PBizUserCBProcessor	TB0055	
企业用户代偿还款处理器	P2pBizUserOverdueSubroRepay	TB0056

------------

版本
名称

------------

2.0.80.0
2.5.37.0

------------

AccountNoticeUrl_input

------------

Note1
接口名称

------------

分支我已经打了，2.0.81.0和2.5.38.0，大家看一下，有问题找我



------------

DebtAssignment_auto   自动债权转让接口  DebtAssignmentAuto
SignRelation_transfer   签约关系迁移接口  SignRelationTransfer
    

------------


		<!-- json format lib -->
		<dependency org="com.jackson" name="jackson-all" rev="1.6.2"/>
		
		    @Test
    public void JsonTest() throws JsonProcessingException, IOException{
        MerOperationLog operationLog=new MerOperationLog();
     	operationLog.setMerchantCode("111111"); //商户编码
     	operationLog.setOperatorCode("111111"); //操作员编码
     	operationLog.setOperateTime(new Date());//操作时间
     	operationLog.setFld1("请求地址"+"111111");//请求地址
        new ObjectMapper().getJsonFactory().createJsonGenerator(System.out, JsonEncoding.UTF8).writeObject(operationLog);

    }
    
    		<dependency org="commons-lang" name="commons-lang" rev="2.2"/>
		<dependency org="commons-logging" name="commons-logging" rev="1.1.3"/>
		<dependency org="commons-fileupload" name="commons-fileupload" rev="1.3"/>
		<dependency org="commons-io" name="commons-io" rev="2.0.1"/>
    	<dependency org="commons-beanutils" name="commons-beanutils" rev="1.8.0"/>
		<dependency org="commons-collections" name="commons-collections" rev="3.2"/>
		<dependency org="ezmorph" name="ezmorph" rev="1.0.6"/>
		<dependency org="net.sf.json-lib" name="json-lib" rev="2.2.2_jdk15"/>
		<dependency org="jdom" name="jdom" rev="0.0.1"/>
    
        @Test
    public void object2JsonTest(){
	
	Merchant m = new Merchant();
	m.setAddress("11111");
	m.setBusinessLicense("111111");
	System.out.println(m.toString());
	System.out.println(JSONArray.fromObject(m).toString());
	MerOperationLog operationLog=new MerOperationLog();
	operationLog.setMerchantCode("111111"); //商户编码
	operationLog.setOperatorCode("111111"); //操作员编码
	operationLog.setOperateTime(new Date());//操作时间
	operationLog.setFld1("请求地址"+"111111");//请求地址
	System.out.println(operationLog.toString());
    }

------------

执行命令
执行命令
glassfish4执行命令

------------

[sumapay25@sumapay25 schedual]$ sh sumapay-schedual.sh 
=======================================
*                                     *
*     sumapay schedual console        *
*                                     *
=======================================
version:1.0.0
welcome to use sumapay schedual console.
sumapay-schedual>schedual conn

schedual conn       schedual connect    

sumapay-schedual>schedual connect --url 192.161.14.93
connect to schedual service[http://192.161.14.93:8080/schedual] ok
sumapay-schedual>task add --file /sumapay/schedual/
在一个任务包里面只允许使用一个调度任务配置文件(schedual/xml).
sumapay-schedual>quit
[sumapay25@sumapay25 schedual]$ cd ../tasks
[sumapay25@sumapay25 tasks]$ ll
总计 8
drwxrwxr-x 2 sumapay25 sumapay25 4096 01-23 11:59 QuickpayRechargeTradeStatusUpdateQuery
drwxrwxr-x 2 sumapay25 sumapay25 4096 01-23 11:59 tmp
[sumapay25@sumapay25 tasks]$ cd QuickpayRechargeTradeStatusUpdateQuery/
[sumapay25@sumapay25 QuickpayRechargeTradeStatusUpdateQuery]$ ll
总计 4
-rw-rw-r-- 1 sumapay25 sumapay25 3099 01-23 11:59 scheduleContext.xml
[sumapay25@sumapay25 QuickpayRechargeTradeStatusUpdateQuery]$ cd /sumapay/schedual/schedual
[sumapay25@sumapay25 schedual]$ ll
总计 5400
-rw-r--r-- 1 sumapay25 sumapay25   24445 11-08 09:37 com.sumapay.schedual.console.jar
drwxrwxr-x 2 sumapay25 sumapay25    4096 2015-05-12 lib
-rw-rw-r-- 1 sumapay25 sumapay25   58671 01-24 09:51 schedual.shell.log
-rw-rw-r-- 1 sumapay25 sumapay25     175 08-08 21:36 sumapay-schedual.bat
-rw-rw-r-- 1 sumapay25 sumapay25 5414830 2014-12-18 sumapay-schedual-console.zip
-rwxrwxr-x 1 sumapay25 sumapay25     170 2014-12-18 sumapay-schedual.sh


singleBasicDkTradeUpdateConfirmProcessorSchedual

task add --file /sumapay/schedual/singleBasicDkTradeUpdateConfirmProcessorSchedual

------------

2.5应用部署步骤
-------------------------------------------
/sumapay25/deploy
用户密码
admin 58858547
发布命令
asadmin2 deploy --force com.sumapay.biz.hsbdepository.war
2.5手动部署命令
asadmin --port=4848 deploy --force /sumapay25/deploy/com.sumapay.biz.hsbdepository.war
卸载命令
asadmin --port 4848 undeploy com.sumapay.biz.withholding
集群启动、关闭
asadmin start-domain domain1
asadmin stop-domain domain1
2.0 部署

-------------------------------------------
调度任务部署
-------------------------------------------
93
调度任务路径
/sumapay/schedual
/sumapay/schedual/schedual
详细操作见手册
task add --file /sumapay/schedual/schedualTasks/ysepayBatchDkOnlineProcessorSchedual.schedual
添加调度需要注意
1.检查/sumapay/schedual/tasks目录下有没和需要添加任务相关目录，有?删除
2.检查表schedule_task表有没类似数据，有？删除
-------------------------------------------
2.5MQ新增处理器步骤
-------------------------------------------
1.执行命令
rabbitmqadmin --vhost=pay --username=admin --password=58858547  declare queue name=com.sumapay.mq.queue.trade.pay
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade destination=com.sumapay.mq.queue.trade.hsb2depository routing_key=HS0007
2.网关配置信息处理器信息（调度不需要添加）
sumapay-config.properties


rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.disburse routing_key=AN0008

com.sumapay.mq.queue.trade.withholding


rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0021


------------

asadmin --port 5050 --user admin deploy --force=true com.sumapay.biz.message.war

------------

Note1
Note2
徽商测试
成功数据

------------

	
开发环境		
与产品参数相关		备注
银行号	3004	
卡Bin	993004007	
卡号段	9930040070070000025
卡号长度	19	
产品编号	0027		
		
合作单位编号	800105	
产品发行方	B3	
ESB内部渠道号	000005	
		
账户类型	靠档计息	
基金公司代码		
基金代码		
靠档最低转出余额		不提供则默认500
靠档转账单位金额		不提供则默认100





【红包账户：9930040070070000082】
1. 社会信用代码：91771001MA28GWYRX7
2. 企业名称：丰付红包账户
3. 手机号：18818181818
4. 对公户绑定卡号：6222021001124000000
5. 营业执照编号：330521000062738
6. 税务登记号：440300584063791

【手续费账户：9930040070070000090】
1. 社会信用代码：91771001MA28GWYRX8
2. 企业名称：丰付手续费账户
3. 手机号：18818181819
4. 对公户绑定卡号：6222021001124000001
5. 营业执照编号：330521000062739
6. 税务登记号：440300584063792




------------

标的信息单笔查询
请求参数RESERVED应该原样返回，实际上返回的不一致


[2017-02-08T13:54:02.716+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=985790 _ThreadName=Thread-3] [timeMillis: 1486533242716] [levelValue: 800] [[
  2017-02-08 13:54:02,716 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信, 向银行连接器发送数据 :{SEQNO=20170125061720093, COINSTCHANNEL=000005, REQUEST_ID=20170208055940172, COINSTCODE=800105, bankcode=on, TRADE_START_TIME=Wed Feb 08 05:59:56 CST 2017, domain=192.161.14.96:8080, encoding=GBK, REQUEST_TYPE=6, merKey=CSSH_KEY, RESERVED=标的信息单笔查询--测试, CLIENT_ID=20170208055940172, TRXDATE=20170208, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, TRXTIME=131111, paystyle=bidInformationSingleQuery, FUPROD=0030, TRADE_CODE=HS0018, BANK_CODE=hsb2_depository, connectorName=hsb2_depository, METHOD=PLA-CON-031, REQUEST_CHANNEL_TYPE=0, MERCHANT_ID=104, MERCHANT_CODE=CSSH}]]

[2017-02-08T13:54:03.210+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=985790 _ThreadName=Thread-3] [timeMillis: 1486533243210] [levelValue: 800] [[
  2017-02-08 13:54:03,210 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信,收到银行连接器返回数据 :{SEQNO=20170125061720093, STATE=1, COINSTCHANNEL=000005, REQUEST_ID=20170208055940172, COINSTCODE=800105, CARDNBR_MY=null, RETCODE=00000000, TRADE_START_TIME=Wed Feb 08 05:59:56 CST 2017, bankcode=on, encoding=GBK, domain=192.161.14.96:8080, CARDNBR=9930040070070000025, PROD_DESC=1111111, REQUEST_TYPE=6, merKey=CSSH_KEY, NAME=武孟梦, RESERVED=9930040070070000025, CLIENT_ID=20170208055940172, TRXDATE=20170208, AMOUNT=0000000000002, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, paystyle=bidInformationSingleQuery, TRXTIME=131111, INPDATE=20170205, LOAN_TERM=0025, TRADE_CODE=HS0018, FUPROD=0030, BANK_CODE=hsb2_depository, CARDNBR_SU=9930040070070000025, METHOD=PLA-CON-031, connectorName=hsb2_depository, MERCHANT_ID=104, REQUEST_CHANNEL_TYPE=0, RETMSG=, MERCHANT_CODE=CSSH, ACTION_RESULT=0}]]
标的信息批量查询的detail有多个，这个没法同请求吧
  
  还款冻结接口：
  返回结果字段与文档不一致：PRMNO，FRZAMT

------------

标的信息录入
Note1
标的信息撤销
标的信息单笔查询
标的信息批量查询
还款冻结

------------

[2017-02-05T10:34:03.235+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=550 _ThreadName=Thread-3] [timeMillis: 1486262043235] [levelValue: 800] [[
  2017-02-05 10:34:03,235 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信，输出参数:{SEQNO=20170125061720010, STATE=1, INTPAYDAY=21, COINSTCHANNEL=000005, NOTICE_URL=http://192.161.14.94:8080/merchant, REQUEST_ID=20170205023331016, COINSTCODE=800105, RETCODE=00000000, TRADE_START_TIME=Sun Feb 05 02:39:56 CST 2017, bankcode=on, domain=192.161.14.96:8080, encoding=GBK, CARDNBR=9930040070070000025, PROD_DESC=1111111, REQUEST_TYPE=4, merKey=CSSH_KEY, NAME=武孟梦, RESERVED=, CLIENT_ID=20170205023331016, TRXDATE=20170205, AMOUNT=2, YIELD=1300000, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, TRXTIME=131111, paystyle=bidInformationInput, TRADE_CODE=HS0018, FUPROD=0027, LOAN_TERM=25, INPDATE=20170205, BANK_CODE=hsb2_depository, INTTYPE=0, METHOD=PLA-CON-029, connectorName=hsb2_depository, MER_INFO=<map>
  <entry>
    <string>noticeurl</string>
    <string>http://192.161.14.94:8080/merchant</string>
  </entry>
</map>, REQUEST_CHANNEL_TYPE=0, MERCHANT_ID=104, MERCHANT_CODE=CSSH, RETMSG=, NAME_SU=, ACTION_RESULT=0}]]

[2017-02-05T10:34:03.236+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=550 _ThreadName=Thread-3] [timeMillis: 1486262043236] [levelValue: 800] [[
  2017-02-05 10:34:03,236 [INFO ] [biz.hsbdepository] [com.sumapay.biz.trade.controller.impl.TransactionControllerImpl] - 交易[HS0018]处理结果为:{SEQNO=20170125061720010, STATE=1, INTPAYDAY=21, COINSTCHANNEL=000005, NOTICE_URL=http://192.161.14.94:8080/merchant, REQUEST_ID=20170205023331016, COINSTCODE=800105, RETCODE=00000000, TRADE_START_TIME=Sun Feb 05 02:39:56 CST 2017, bankcode=on, domain=192.161.14.96:8080, encoding=GBK, CARDNBR=9930040070070000025, PROD_DESC=1111111, REQUEST_TYPE=4, merKey=CSSH_KEY, NAME=武孟梦, RESERVED=, CLIENT_ID=20170205023331016, TRXDATE=20170205, AMOUNT=2, YIELD=1300000, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, TRXTIME=131111, paystyle=bidInformationInput, TRADE_CODE=HS0018, FUPROD=0027, LOAN_TERM=25, INPDATE=20170205, BANK_CODE=hsb2_depository, INTTYPE=0, METHOD=PLA-CON-029, connectorName=hsb2_depository, MER_INFO=<map>
  <entry>
    <string>noticeurl</string>
    <string>http://192.161.14.94:8080/merchant</string>
  </entry>
</map>, REQUEST_CHANNEL_TYPE=0, MERCHANT_ID=104, MERCHANT_CODE=CSSH, RETMSG=, NAME_SU=, ACTION_RESULT=0}]]











绑定：
		params.put("REQUEST_ID", getSequencebyTime());
		Date nowDate = new Date();
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMdd");
		SimpleDateFormat timeFormat = new SimpleDateFormat("hhmmss");
		params.put("TRXDATE", dateFormat.format(nowDate));
		params.put("TRXTIME", timeFormat.format(nowDate));
		//TODO 渠道编码需要 获取
		params.put("COINSTCODE", "800105");
		params.put("COINSTCHANNEL", "000005");
		params.put("SEQNO", getSequencebyTime());
		params.put("CARDNBR", "9930040070070000025");
		params.put("SIG_CARD", "6212260200036759963");
		params.put("SURNAME", "武孟梦");
		params.put("KEYTYPE", "01");
		params.put("IDNO", "42011119831113732X");
		params.put("MOBILE", "18500185426");
		params.put("BANK_CODE", "icbc");
		params.put("MERCHANT_CODE", "CSSH");
		params.put("MER_INFO", "<map><entry><string>noticeurl</string><string>192.161.14.93:8000/hsb2</string></entry></map>");
		params.put("USR_IP", "192.161.14.93");
		params.put("REMARK", "徽商签约卡绑定测试");

------------

投标明细查询平台返回结果:{SEQNO=20170204024124874, STATE=0, DETAILS=[], COINSTCHANNEL=000005, REQUEST_ID=20170204024124874, COINSTCODE=800105, RETCODE=00000000, CURRNO=00, bankcode=on, TRADE_START_TIME=Sat Feb 04 02:44:40 CST 2017, RTN_IND=0, domain=192.161.14.96:8080, encoding=GBK, CARDNBR=9930040070070000025, REQUEST_TYPE=31, merKey=CSSH_KEY, NAME=武孟梦, CLIENT_ID=20170204024124874, TRXDATE=20170204, PRODUCT=0027, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, TRXTIME=024124, paystyle=bidDetail, TRADE_CODE=HS0018, BANK_CODE=hsb2_depository, connectorName=hsb2_depository, METHOD=PLA-CON-045, MERCHANT_ID=104, REQUEST_CHANNEL_TYPE=0, RETMSG=RE

------------

2017-02-05T10:47:48.384+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=556 _ThreadName=Thread-3] [timeMillis: 1486262868384] [levelValue: 800] [[
  2017-02-05 10:47:48,384 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信, 向银行连接器发送数据 :{SEQNO=20170125061720095, COINSTCHANNEL=000005, NOTICE_URL=http://192.161.14.94:8080/merchant, REQUEST_ID=20170205025240555, COINSTCODE=800105, bankcode=on, TRADE_START_TIME=Sun Feb 05 02:53:42 CST 2017, domain=192.161.14.96:8080, encoding=GBK, CARDNBR=9930040070070000025, REQUEST_TYPE=5, merKey=CSSH_KEY, RESERVED=标的信息撤销--测试, CLIENT_ID=20170205025240555, TRXDATE=20170205, AMOUNT=2, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, TRXTIME=131111, paystyle=bidInformationCancel, FUPROD=0027, TRADE_CODE=HS0018, BANK_CODE=hsb2_depository, METHOD=PLA-CON-030, connectorName=hsb2_depository, MER_INFO=<map>
  <entry>
    <string>noticeurl</string>
    <string>http://192.161.14.94:8080/merchant</string>
  </entry>
</map>, REQUEST_CHANNEL_TYPE=0, MERCHANT_ID=104, MERCHANT_CODE=CSSH}]]

[2017-02-05T10:47:48.788+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=556 _ThreadName=Thread-3] [timeMillis: 1486262868788] [levelValue: 800] [[
  2017-02-05 10:47:48,787 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信,收到银行连接器返回数据 :{SEQNO=20170125061720095, STATE=9, COINSTCHANNEL=000005, REQUEST_ID=20170205025240555, NOTICE_URL=http://192.161.14.94:8080/merchant, COINSTCODE=800105, RETCODE=00000000, TRADE_START_TIME=Sun Feb 05 02:53:42 CST 2017, bankcode=on, encoding=GBK, domain=192.161.14.96:8080, CARDNBR=9930040070070000025, REQUEST_TYPE=5, merKey=CSSH_KEY, NAME=武孟梦, RESERVED=, CLIENT_ID=20170205025240555, TRXDATE=20170205, AMOUNT=2, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, paystyle=bidInformationCancel, TRXTIME=131111, INPDATE=20170205, TRADE_CODE=HS0018, FUPROD=0027, BANK_CODE=hsb2_depository, CARDNBR_SU=, connectorName=hsb2_depository, METHOD=PLA-CON-030, MER_INFO=<map>
  <entry>
    <string>noticeurl</string>
    <string>http://192.161.14.94:8080/merchant</string>
  </entry>
</map>, MERCHANT_ID=104, REQUEST_CHANNEL_TYPE=0, NAME_SU=, RETMSG=, MERCHANT_CODE=CSSH, ACTION_RESULT=0}]]




{"SEQNO":"20170125061720095","STATE":"9","NAME":"武孟梦","RESERVED":"标的信息撤销--测试","COINSTCHANNEL":"000005","REQUEST_ID":"20170205025240555","AMOUNT":"2","COINSTCODE":"800105","RETCODE":"00000000","SIGNATURE":"9fbb1c0368f379fdec6b702d8f0c4462","FUPROD":"0027","INPDATE":"20170205","CARDNBR":"9930040070070000025","CARDNBR_SU":null,"NAME_SU":"","RETMSG":""}

------------

[2017-02-05T10:56:43.984+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=554 _ThreadName=Thread-3] [timeMillis: 1486263403984] [levelValue: 800] [[
  2017-02-05 10:56:43,984 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信, 向银行连接器发送数据 :{SEQNO=20170125061720098, COINSTCHANNEL=000005, REQUEST_ID=20170205030211848, COINSTCODE=800105, bankcode=on, TRADE_START_TIME=Sun Feb 05 03:02:37 CST 2017, domain=192.161.14.96:8080, encoding=GBK, REQUEST_TYPE=6, merKey=CSSH_KEY, RESERVED=标的信息单笔查询--测试, CLIENT_ID=20170205030211848, TRXDATE=20170205, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, TRXTIME=131111, paystyle=bidInformationSingleQuery, FUPROD=0027, TRADE_CODE=HS0018, BANK_CODE=hsb2_depository, connectorName=hsb2_depository, METHOD=PLA-CON-031, REQUEST_CHANNEL_TYPE=0, MERCHANT_ID=104, MERCHANT_CODE=CSSH}]]

[2017-02-05T10:56:44.471+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=554 _ThreadName=Thread-3] [timeMillis: 1486263404471] [levelValue: 800] [[
  2017-02-05 10:56:44,471 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信,收到银行连接器返回数据 :{SEQNO=20170125061720098, STATE=9, COINSTCHANNEL=000005, REQUEST_ID=20170205030211848, COINSTCODE=800105, CARDNBR_MY=null, TRADE_START_TIME=Sun Feb 05 03:02:37 CST 2017, bankcode=on, encoding=GBK, domain=192.161.14.96:8080, CARDNBR=9930040070070000025, PROD_DESC=1111111, REQUEST_TYPE=6, merKey=CSSH_KEY, NAME=武孟梦, RESERVED=, CLIENT_ID=20170205030211848, TRXDATE=20170205, AMOUNT=0000000000002, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, paystyle=bidInformationSingleQuery, TRXTIME=131111, INPDATE=20170205, LOAN_TERM=0025, TRADE_CODE=HS0018, FUPROD=0027, BANK_CODE=hsb2_depository, CARDNBR_SU=, METHOD=PLA-CON-031, connectorName=hsb2_depository, MERCHANT_ID=104, REQUEST_CHANNEL_TYPE=0, MERCHANT_CODE=CSSH, ACTION_RESULT=0}]]
  
  
  {"SEQNO":"20170125061720098","STATE":"9","NAME":"武孟梦","RESERVED":"","COINSTCHANNEL":"000005","REQUEST_ID":"20170205030211848","AMOUNT":"0000000000002","COINSTCODE":"800105","CARDNBR_MY":"","RETCODE":"","SIGNATURE":"2cfe7e3cf9fec6e42a8244803350703d","FUPROD":"0027","LOAN_TERM":"0025","INPDATE":"20170205","CARDNBR":"9930040070070000025","PROD_DESC":"1111111","CARDNBR_SU":"","NAME_SU":"","RETMSG":""}

------------

[2017-02-05T11:00:19.711+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=556 _ThreadName=Thread-3] [timeMillis: 1486263619711] [levelValue: 800] [[
  2017-02-05 11:00:19,711 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信, 向银行连接器发送数据 :{SEQNO=20170125061720098, COINSTCHANNEL=000005, REQUEST_ID=20170205030445788, COINSTCODE=800105, STARTDATE=20170204, TRADE_START_TIME=Sun Feb 05 03:06:13 CST 2017, bankcode=on, encoding=GBK, domain=192.161.14.96:8080, REQUEST_TYPE=7, merKey=CSSH_KEY, ENDDATE=20170205, RESERVED=标的信息批量查询--测试, CLIENT_ID=20170205030445788, TRXDATE=20170205, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, paystyle=bidInformationBatchQuery, TRXTIME=131111, TRADE_CODE=HS0018, BANK_CODE=hsb2_depository, METHOD=PLA-CON-032, connectorName=hsb2_depository, REQUEST_CHANNEL_TYPE=0, MERCHANT_ID=104, MERCHANT_CODE=CSSH}]]

[2017-02-05T11:00:20.115+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=556 _ThreadName=Thread-3] [timeMillis: 1486263620115] [levelValue: 800] [[
  2017-02-05 11:00:20,115 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信,收到银行连接器返回数据 :{SEQNO=20170125061720098, DETAILS=[{STATE=9, NAME=武孟梦, RESERVED=, AMOUNT=0000000000002, CARDNBR_MY=null, FUPROD=0027, LOAN_TERM=0025, INPDATE=20170205, CARDNBR=9930040070070000025, PROD_DESC=1111111, CARDNBR_SU=, INPTIME=102321, NAME_SU=}], COINSTCHANNEL=000005, REQUEST_ID=20170205030445788, COINSTCODE=800105, RETCODE=00000000, STARTDATE=20170204, CURRNO=01, bankcode=on, TRADE_START_TIME=Sun Feb 05 03:06:13 CST 2017, RTN_IND=0, domain=192.161.14.96:8080, encoding=GBK, REQUEST_TYPE=7, merKey=CSSH_KEY, ENDDATE=20170205, RESERVED=标的信息批量查询--测试, CLIENT_ID=20170205030445788, TRXDATE=20170205, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, TRXTIME=131111, paystyle=bidInformationBatchQuery, TRADE_CODE=HS0018, BANK_CODE=hsb2_depository, connectorName=hsb2_depository, METHOD=PLA-CON-032, MERCHANT_ID=104, REQUEST_CHANNEL_TYPE=0, RETMSG=, MERCHANT_CODE=CSSH, ACTION_RESULT=0}]]
  
  

{"SEQNO":"20170125061720098","RETCODE":"00000000","CURRNO":"01","DETAILS":[{"STATE":"9","NAME":"武孟梦","RESERVED":"","AMOUNT":"0000000000002","CARDNBR_MY":null,"INPDATE":"20170205","LOAN_TERM":"0025","FUPROD":"0027","CARDNBR":"9930040070070000025","PROD_DESC":"1111111","CARDNBR_SU":"","INPTIME":"102321","NAME_SU":""}],"SIGNATURE":"0fdc48984a80ef2da06fb7b292b42e37","RTN_IND":"0","COMREV":"","COINSTCHANNEL":"000005","REQUEST_ID":"20170205030445788","COINSTCODE":"800105","RETMSG":""}

------------


[2017-02-06T09:44:40.386+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=556 _ThreadName=Thread-3] [timeMillis: 1486345480386] [levelValue: 800] [[
  2017-02-06 09:44:40,386 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信，输出参数:{SEQNO=20170125061720093, SERI_NO=00009700001, REMARK=还款冻结--测试, COINSTCHANNEL=000005, NOTICE_URL=http://192.161.14.94:8080/merchant, REQUEST_ID=20170206014125338, COINSTCODE=800105, RETCODE=00000000, TRADE_START_TIME=Mon Feb 06 01:50:33 CST 2017, bankcode=on, domain=192.161.14.96:8080, encoding=GBK, CARDNBR=9930040070070000025, REQUEST_TYPE=12, FUISSUER=05, merKey=CSSH_KEY, NAME=武孟梦, RESERVED=, CLIENT_ID=20170206014125338, TRXDATE=20170206, PRODUCT=0027, AMOUNT=2, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, TRXTIME=131111, paystyle=repayFreeze, TRADE_CODE=HS0018, BANK_CODE=hsb2_depository, METHOD=PLA-CON-049, connectorName=hsb2_depository, MER_INFO=<map>
  <entry>
    <string>noticeurl</string>
    <string>http://192.161.14.94:8080/merchant</string>
  </entry>
</map>, REQUEST_CHANNEL_TYPE=0, MERCHANT_ID=104, MERCHANT_CODE=CSSH, RETMSG=, ACTION_RESULT=0}]]

[2017-02-06T09:44:40.386+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=556 _ThreadName=Thread-3] [timeMillis: 1486345480386] [levelValue: 800] [[
  2017-02-06 09:44:40,386 [INFO ] [biz.hsbdepository] [com.sumapay.biz.trade.controller.impl.TransactionControllerImpl] - 交易[HS0018]处理结果为:{SEQNO=20170125061720093, SERI_NO=00009700001, REMARK=还款冻结--测试, COINSTCHANNEL=000005, NOTICE_URL=http://192.161.14.94:8080/merchant, REQUEST_ID=20170206014125338, COINSTCODE=800105, RETCODE=00000000, TRADE_START_TIME=Mon Feb 06 01:50:33 CST 2017, bankcode=on, domain=192.161.14.96:8080, encoding=GBK, CARDNBR=9930040070070000025, REQUEST_TYPE=12, FUISSUER=05, merKey=CSSH_KEY, NAME=武孟梦, RESERVED=, CLIENT_ID=20170206014125338, TRXDATE=20170206, PRODUCT=0027, AMOUNT=2, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, TRXTIME=131111, paystyle=repayFreeze, TRADE_CODE=HS0018, BANK_CODE=hsb2_depository, METHOD=PLA-CON-049, connectorName=hsb2_depository, MER_INFO=<map>
  <entry>
    <string>noticeurl</string>
    <string>http://192.161.14.94:8080/merchant</string>
  </entry>
</map>, REQUEST_CHANNEL_TYPE=0, MERCHANT_ID=104, MERCHANT_CODE=CSSH, RETMSG=, ACTION_RESULT=0}]]

------------

标的信息录入
标的信息单笔查询
标的信息撤销
标的信息批量查询

------------

请求流水：	20170205023331016
P2P平台商户编码：CSSH	
通知地址：	http://192.161.14.94:8080/merchant
交易日期：	20170205
交易时间：	131111
合作单位编号：	800105
合作单位渠道：	000005
徽商交易流水号：	20170125061720010
标的编号：	0027
产品描述：	1111111
借款人电子账号：	9930040070070000025
借款金额（元）：2	
付息方式：	0：到期与本金一起归还； 1：每月固定日期支付； 2：每月不确定日期支付；
项目期限:	25
预期年化收益率:	1300000
利息每月支付日:	2 付息方式为1时必填； 若设置日期大于月份最后一天时，则为该月最后一天支付
担保人电子账号:	6236640010000150242	
名义借款人电子账号:	6236640010000150242
保留域:	12312
merKey:	CSSH_KEY
signature:	 d73c80183f8a7ff318ce21fa7ba5ebbe



[2017-02-05T10:34:03.235+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=550 _ThreadName=Thread-3] [timeMillis: 1486262043235] [levelValue: 800] [[
  2017-02-05 10:34:03,235 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信，输出参数:{SEQNO=20170125061720010, STATE=1, INTPAYDAY=21, COINSTCHANNEL=000005, NOTICE_URL=http://192.161.14.94:8080/merchant, REQUEST_ID=20170205023331016, COINSTCODE=800105, RETCODE=00000000, TRADE_START_TIME=Sun Feb 05 02:39:56 CST 2017, bankcode=on, domain=192.161.14.96:8080, encoding=GBK, CARDNBR=9930040070070000025, PROD_DESC=1111111, REQUEST_TYPE=4, merKey=CSSH_KEY, NAME=武孟梦, RESERVED=, CLIENT_ID=20170205023331016, TRXDATE=20170205, AMOUNT=2, YIELD=1300000, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, TRXTIME=131111, paystyle=bidInformationInput, TRADE_CODE=HS0018, FUPROD=0027, LOAN_TERM=25, INPDATE=20170205, BANK_CODE=hsb2_depository, INTTYPE=0, METHOD=PLA-CON-029, connectorName=hsb2_depository, MER_INFO=<map>
  <entry>
    <string>noticeurl</string>
    <string>http://192.161.14.94:8080/merchant</string>
  </entry>
</map>, REQUEST_CHANNEL_TYPE=0, MERCHANT_ID=104, MERCHANT_CODE=CSSH, RETMSG=, NAME_SU=, ACTION_RESULT=0}]]

[2017-02-05T10:34:03.236+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=550 _ThreadName=Thread-3] [timeMillis: 1486262043236] [levelValue: 800] [[
  2017-02-05 10:34:03,236 [INFO ] [biz.hsbdepository] [com.sumapay.biz.trade.controller.impl.TransactionControllerImpl] - 交易[HS0018]处理结果为:{SEQNO=20170125061720010, STATE=1, INTPAYDAY=21, COINSTCHANNEL=000005, NOTICE_URL=http://192.161.14.94:8080/merchant, REQUEST_ID=20170205023331016, COINSTCODE=800105, RETCODE=00000000, TRADE_START_TIME=Sun Feb 05 02:39:56 CST 2017, bankcode=on, domain=192.161.14.96:8080, encoding=GBK, CARDNBR=9930040070070000025, PROD_DESC=1111111, REQUEST_TYPE=4, merKey=CSSH_KEY, NAME=武孟梦, RESERVED=, CLIENT_ID=20170205023331016, TRXDATE=20170205, AMOUNT=2, YIELD=1300000, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, TRXTIME=131111, paystyle=bidInformationInput, TRADE_CODE=HS0018, FUPROD=0027, LOAN_TERM=25, INPDATE=20170205, BANK_CODE=hsb2_depository, INTTYPE=0, METHOD=PLA-CON-029, connectorName=hsb2_depository, MER_INFO=<map>
  <entry>
    <string>noticeurl</string>
    <string>http://192.161.14.94:8080/merchant</string>
  </entry>
</map>, REQUEST_CHANNEL_TYPE=0, MERCHANT_ID=104, MERCHANT_CODE=CSSH, RETMSG=, NAME_SU=, ACTION_RESULT=0}]]


------------

[2017-02-05T10:56:43.984+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=554 _ThreadName=Thread-3] [timeMillis: 1486263403984] [levelValue: 800] [[
  2017-02-05 10:56:43,984 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信, 向银行连接器发送数据 :{SEQNO=20170125061720098, COINSTCHANNEL=000005, REQUEST_ID=20170205030211848, COINSTCODE=800105, bankcode=on, TRADE_START_TIME=Sun Feb 05 03:02:37 CST 2017, domain=192.161.14.96:8080, encoding=GBK, REQUEST_TYPE=6, merKey=CSSH_KEY, RESERVED=标的信息单笔查询--测试, CLIENT_ID=20170205030211848, TRXDATE=20170205, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, TRXTIME=131111, paystyle=bidInformationSingleQuery, FUPROD=0027, TRADE_CODE=HS0018, BANK_CODE=hsb2_depository, connectorName=hsb2_depository, METHOD=PLA-CON-031, REQUEST_CHANNEL_TYPE=0, MERCHANT_ID=104, MERCHANT_CODE=CSSH}]]

[2017-02-05T10:56:44.471+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=554 _ThreadName=Thread-3] [timeMillis: 1486263404471] [levelValue: 800] [[
  2017-02-05 10:56:44,471 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信,收到银行连接器返回数据 :{SEQNO=20170125061720098, STATE=9, COINSTCHANNEL=000005, REQUEST_ID=20170205030211848, COINSTCODE=800105, CARDNBR_MY=null, TRADE_START_TIME=Sun Feb 05 03:02:37 CST 2017, bankcode=on, encoding=GBK, domain=192.161.14.96:8080, CARDNBR=9930040070070000025, PROD_DESC=1111111, REQUEST_TYPE=6, merKey=CSSH_KEY, NAME=武孟梦, RESERVED=, CLIENT_ID=20170205030211848, TRXDATE=20170205, AMOUNT=0000000000002, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, paystyle=bidInformationSingleQuery, TRXTIME=131111, INPDATE=20170205, LOAN_TERM=0025, TRADE_CODE=HS0018, FUPROD=0027, BANK_CODE=hsb2_depository, CARDNBR_SU=, METHOD=PLA-CON-031, connectorName=hsb2_depository, MERCHANT_ID=104, REQUEST_CHANNEL_TYPE=0, MERCHANT_CODE=CSSH, ACTION_RESULT=0}]]


{"SEQNO":"20170125061720098","STATE":"9","NAME":"武孟梦","RESERVED":"","COINSTCHANNEL":"000005","REQUEST_ID":"20170205030211848","AMOUNT":"0000000000002","COINSTCODE":"800105","CARDNBR_MY":"","RETCODE":"","SIGNATURE":"2cfe7e3cf9fec6e42a8244803350703d","FUPROD":"0027","LOAN_TERM":"0025","INPDATE":"20170205","CARDNBR":"9930040070070000025","PROD_DESC":"1111111","CARDNBR_SU":"","NAME_SU":"","RETMSG":""}

------------

2017-02-05T10:47:48.384+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=556 _ThreadName=Thread-3] [timeMillis: 1486262868384] [levelValue: 800] [[
  2017-02-05 10:47:48,384 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信, 向银行连接器发送数据 :{SEQNO=20170125061720095, COINSTCHANNEL=000005, NOTICE_URL=http://192.161.14.94:8080/merchant, REQUEST_ID=20170205025240555, COINSTCODE=800105, bankcode=on, TRADE_START_TIME=Sun Feb 05 02:53:42 CST 2017, domain=192.161.14.96:8080, encoding=GBK, CARDNBR=9930040070070000025, REQUEST_TYPE=5, merKey=CSSH_KEY, RESERVED=标的信息撤销--测试, CLIENT_ID=20170205025240555, TRXDATE=20170205, AMOUNT=2, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, TRXTIME=131111, paystyle=bidInformationCancel, FUPROD=0027, TRADE_CODE=HS0018, BANK_CODE=hsb2_depository, METHOD=PLA-CON-030, connectorName=hsb2_depository, MER_INFO=<map>
  <entry>
    <string>noticeurl</string>
    <string>http://192.161.14.94:8080/merchant</string>
  </entry>
</map>, REQUEST_CHANNEL_TYPE=0, MERCHANT_ID=104, MERCHANT_CODE=CSSH}]]

[2017-02-05T10:47:48.788+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=556 _ThreadName=Thread-3] [timeMillis: 1486262868788] [levelValue: 800] [[
  2017-02-05 10:47:48,787 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信,收到银行连接器返回数据 :{SEQNO=20170125061720095, STATE=9, COINSTCHANNEL=000005, REQUEST_ID=20170205025240555, NOTICE_URL=http://192.161.14.94:8080/merchant, COINSTCODE=800105, RETCODE=00000000, TRADE_START_TIME=Sun Feb 05 02:53:42 CST 2017, bankcode=on, encoding=GBK, domain=192.161.14.96:8080, CARDNBR=9930040070070000025, REQUEST_TYPE=5, merKey=CSSH_KEY, NAME=武孟梦, RESERVED=, CLIENT_ID=20170205025240555, TRXDATE=20170205, AMOUNT=2, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, paystyle=bidInformationCancel, TRXTIME=131111, INPDATE=20170205, TRADE_CODE=HS0018, FUPROD=0027, BANK_CODE=hsb2_depository, CARDNBR_SU=, connectorName=hsb2_depository, METHOD=PLA-CON-030, MER_INFO=<map>
  <entry>
    <string>noticeurl</string>
    <string>http://192.161.14.94:8080/merchant</string>
  </entry>
</map>, MERCHANT_ID=104, REQUEST_CHANNEL_TYPE=0, NAME_SU=, RETMSG=, MERCHANT_CODE=CSSH, ACTION_RESULT=0}]]




{"SEQNO":"20170125061720095","STATE":"9","NAME":"武孟梦","RESERVED":"标的信息撤销--测试","COINSTCHANNEL":"000005","REQUEST_ID":"20170205025240555","AMOUNT":"2","COINSTCODE":"800105","RETCODE":"00000000","SIGNATURE":"9fbb1c0368f379fdec6b702d8f0c4462","FUPROD":"0027","INPDATE":"20170205","CARDNBR":"9930040070070000025","CARDNBR_SU":null,"NAME_SU":"","RETMSG":""}

------------

[2017-02-05T11:00:19.711+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=556 _ThreadName=Thread-3] [timeMillis: 1486263619711] [levelValue: 800] [[
  2017-02-05 11:00:19,711 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信, 向银行连接器发送数据 :{SEQNO=20170125061720098, COINSTCHANNEL=000005, REQUEST_ID=20170205030445788, COINSTCODE=800105, STARTDATE=20170204, TRADE_START_TIME=Sun Feb 05 03:06:13 CST 2017, bankcode=on, encoding=GBK, domain=192.161.14.96:8080, REQUEST_TYPE=7, merKey=CSSH_KEY, ENDDATE=20170205, RESERVED=标的信息批量查询--测试, CLIENT_ID=20170205030445788, TRXDATE=20170205, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, paystyle=bidInformationBatchQuery, TRXTIME=131111, TRADE_CODE=HS0018, BANK_CODE=hsb2_depository, METHOD=PLA-CON-032, connectorName=hsb2_depository, REQUEST_CHANNEL_TYPE=0, MERCHANT_ID=104, MERCHANT_CODE=CSSH}]]

[2017-02-05T11:00:20.115+0800] [glassfish 4.0] [INFO] [] [] [tid: _ThreadID=556 _ThreadName=Thread-3] [timeMillis: 1486263620115] [levelValue: 800] [[
  2017-02-05 11:00:20,115 [INFO ] [biz.hsbdepository] [com.sumapay.biz.hsbdepository.processor.HsbCommunicateBackgroundProcessor] - 徽商2.0后台接口通信,收到银行连接器返回数据 :{SEQNO=20170125061720098, DETAILS=[{STATE=9, NAME=武孟梦, RESERVED=, AMOUNT=0000000000002, CARDNBR_MY=null, FUPROD=0027, LOAN_TERM=0025, INPDATE=20170205, CARDNBR=9930040070070000025, PROD_DESC=1111111, CARDNBR_SU=, INPTIME=102321, NAME_SU=}], COINSTCHANNEL=000005, REQUEST_ID=20170205030445788, COINSTCODE=800105, RETCODE=00000000, STARTDATE=20170204, CURRNO=01, bankcode=on, TRADE_START_TIME=Sun Feb 05 03:06:13 CST 2017, RTN_IND=0, domain=192.161.14.96:8080, encoding=GBK, REQUEST_TYPE=7, merKey=CSSH_KEY, ENDDATE=20170205, RESERVED=标的信息批量查询--测试, CLIENT_ID=20170205030445788, TRXDATE=20170205, TRADE_LOC=INNER_MERCHANT_SUMA, TRADE_USER=_BUSINESS_SUMA_USER, TRADE_PROCESS=__BUSINESS_SUMA_GW, TRXTIME=131111, paystyle=bidInformationBatchQuery, TRADE_CODE=HS0018, BANK_CODE=hsb2_depository, connectorName=hsb2_depository, METHOD=PLA-CON-032, MERCHANT_ID=104, REQUEST_CHANNEL_TYPE=0, RETMSG=, MERCHANT_CODE=CSSH, ACTION_RESULT=0}]]
  
  

{"SEQNO":"20170125061720098","RETCODE":"00000000","CURRNO":"01","DETAILS":[{"STATE":"9","NAME":"武孟梦","RESERVED":"","AMOUNT":"0000000000002","CARDNBR_MY":null,"INPDATE":"20170205","LOAN_TERM":"0025","FUPROD":"0027","CARDNBR":"9930040070070000025","PROD_DESC":"1111111","CARDNBR_SU":"","INPTIME":"102321","NAME_SU":""}],"SIGNATURE":"0fdc48984a80ef2da06fb7b292b42e37","RTN_IND":"0","COMREV":"","COINSTCHANNEL":"000005","REQUEST_ID":"20170205030445788","COINSTCODE":"800105","RETMSG":""}	

------------

chown tvpay:tvpay *  -R

------------

2.5提现业务

------------

普通用户提现请求处理器UserWithdrawRequestProcessor
sendSMSForUserWithdraw方法应该只打印异常，不要抛出异常
throw new PlateformProcessorException("200300000","普通用户提现，发送短信失败，原因{}",e);

企业用户提现请求处理器BizUserWithdrawRequestProcessor
sendSMSForBizUserWithdraw
throw new PlateformProcessorException("200300000","普通用户提现，发送短信失败，原因{}",e);

企业用户付款请求处理器BizUserTransferRequestProcessor
sendSMSForBizUserTransfer
throw new PlateformProcessorException("200300000","普通用户提现，发送短信失败，原因{}",e);



TX0103 企业用户提现/付款财务确认处理器
TX0105 企业用户提现/付款人工确认处理器
TX0108 企业用户提现/付款退票处理器

------------

test--stage
对账在用
调度系统
运营管理系统
haproxy--测试环境

------------

付款系统2.5
商户自助
付款2.0
通知服务

------------

172.16.4.9，，，，11  平台2.5
domain3是付款       com.sumapay.biz.disburse
domain2是支付	 com.sumapay.biz.pay
domain4是徽商       com.sumapay.biz.hsbdepository
domain1是代扣

172.16.4.5，，，，7 平台2.0

------------

192.16.3.3 和192.16.3.2


glassfish4
https://172.16.3.2:5050/login.jsf
商户自助端口 9191

------------



------------

172.16.8.3 domain5

------------

172.16.219.103 对账系统、徽商对账系统   /opt/SUNWappserver/domains/domain1/autodeploy domian1

------------

2.0调度
http://172.16.8.9:8080/schedual/login.jsp
账号admin密码admin


2.5调度
http://172.16.8.3:9292/schedual/config!login.action

------------

http://172.16.9.3:9191/Admin/admin/system_admin_main.jsp

------------

地址：172.16.7.120

global  #全局设置
    log 127.0.0.1   local3 #日志输出配置，所有日志都记录在本机，通过local3输出
    maxconn 32768    #每个进程可用的最大连接数
    chroot /usr/local/haproxy/workspace    #改变当前工作目录
    user haproxy           #haproxy用户
    group haproxy           #haproxy用户组
    daemon       #以后台形式运行ha-proxy
    nbproc 1     #启动1个ha-proxy进程
    pidfile /usr/local/haproxy/run/haproxy.pid     #pid文件位置
    debug    #调试模式，输出启动信息到标准输出
    #quiet     #安静模式，启动时无输出

defaults               #默认设置
    log     global
    balance roundrobin             #负载均衡算法
    timeout client      300000          #连接超时时间
    timeout server      300000          #客户端连接超时时间
    timeout connect     300000         #服务器端连接超时时间 略大于系统间调用的spring remote 超时时间即可
########统计页面配置############
listen admin_stats
    #监听端口
    bind 0.0.0.0:8000
    #http的7层模式
    mode http
    #统计页面自动刷新时间
    stats refresh 30s
    #统计页面url
    stats uri /admin_stats
    #统计页面用户名和密码设置
    stats auth admin:admin
    #stats realm "password remider" #监控页面密码提示信息
    #隐藏统计页面上HAProxy的版本信息
    stats hide-version
    stats enable	#开关


##################2.0平台	开始
frontend frontend_sumapay2front
	bind 0.0.0.0:8080
	maxconn 20480
	mode http
	log global
	option httplog
	option httpclose
	option forwardfor
	acl sumapay2front_policy url_beg /front
	use_backend	backend_sumapay2front	if	sumapay2front_policy
backend backend_sumapay2front
	mode http
	option httpchk GET /front
	balance roundrobin
    server sumapay2front1 172.16.4.5:8080 maxconn 8192 check inter 5000 rise 10 fall 2 weight 2
    server sumapay2front2 172.16.4.7:8080 maxconn 8192 check inter 5000 rise 10 fall 2 weight 2
    server sumapay2front3 172.16.4.3:8080 maxconn 8192 check inter 1000 rise 10 fall 2 weight 2
listen sumapay2front_status
    bind 0.0.0.0:8081
    mode http
    #网站健康检测URL，用来检测HAProxy管理的网站是否可以用，正常返回200，不正常返回503
    monitor-uri /status
    ########acl策略配置############# 
    #当挂在负载均衡上的指定backend的中有效机器数小于2台时返回true
    acl site_warnning nbsrv(backend_sumapay2front) lt 2
    #当满足策略的时候返回503
    monitor fail if site_warnning
##################2.0平台	结束
	

	
##################2.0账务系统	开始
frontend frontend_sumapay2finance
	bind 0.0.0.0:8181
	mode http
	log global
	option httplog
	option httpclose
	option forwardfor
	acl sumapay2finance_policy url_beg /finance
	use_backend	backend_sumapay2finance	if	sumapay2finance_policy
backend backend_sumapay2finance
	mode http
	balance roundrobin
	option httpchk GET /finance
    server sumapay2finance1 172.16.4.5:9090 maxconn 8192 check inter 5000 rise 10 fall 2 weight 2
    server sumapay2finance2 172.16.4.7:9090 maxconn 8192 check inter 5000 rise 10 fall 2 weight 2
    server sumapay2finance3 172.16.4.3:9090 maxconn 8192 check inter 1000 rise 10 fall 2 weight 2
listen sumapay2finance_status
    bind 0.0.0.0:8182
    mode http
    #网站健康检测URL，用来检测HAProxy管理的网站是否可以用，正常返回200，不正常返回503
    monitor-uri /status
    ########acl策略配置############# 
    #当挂在负载均衡上的指定backend的中有效机器数小于2台时返回true
    acl site_warnning nbsrv(backend_sumapay2finance) lt 2
    #当满足策略的时候返回503
    monitor fail if site_warnning
##################2.0账务系统	结束
	
	
##################2.0连接器管理器	开始
frontend frontend_sumapay2cm
	bind 0.0.0.0:8282
	mode http
	log global
	option httplog
	option httpclose
	option forwardfor
	acl sumapay2cm_policy url_beg /connectorRemoteService
	use_backend	backend_sumapay2cm	if	sumapay2cm_policy
backend backend_sumapay2cm
	mode http
	balance roundrobin
	option httpchk GET /connectorRemoteService
    server sumapay2cm1 172.16.8.3:9090 maxconn 8192 check inter 1000 rise 10 fall 2 weight 2
    server sumapay2cm2 172.16.8.5:9090 maxconn 8192 check inter 1000 rise 10 fall 2 weight 2
    server sumapay2cm3 172.16.8.7:9090 maxconn 8192 check inter 1000 rise 10 fall 2 weight 2

listen sumapay2cm_status
    bind 0.0.0.0:8283
    mode http
    #网站健康检测URL，用来检测HAProxy管理的网站是否可以用，正常返回200，不正常返回503
    monitor-uri /status
    ########acl策略配置############# 
    #当挂在负载均衡上的指定backend的中有效机器数小于2台时返回true
    acl site_warnning nbsrv(backend_sumapay2cm) lt 2
    #当满足策略的时候返回503
    monitor fail if site_warnning
##################2.0连接器管理器	结束


##################2.5账务	开始
frontend frontend_sumapay25finance
	bind 0.0.0.0:8383
	mode http
	log global
	option httplog
	option httpclose
	option forwardfor
	acl sumapay25finance_policy url_beg /finance
	use_backend	backend_sumapay25finance	if	sumapay25finance_policy
backend backend_sumapay25finance
	mode http
	option httpchk GET /finance
	balance roundrobin
    server sumapay25finance1 172.16.8.3:8080 maxconn 8192 check inter 5000 rise 10 fall 2 weight 2
    server sumapay25finance2 172.16.8.5:8080 maxconn 8192 check inter 5000 rise 10 fall 2 weight 2
    server sumapay25finance3 172.16.8.7:8080 maxconn 8192 check inter 1000 rise 10 fall 2 weight 2
listen sumapay25finance_status
    bind 0.0.0.0:8384
    mode http
    #网站健康检测URL，用来检测HAProxy管理的网站是否可以用，正常返回200，不正常返回503
    monitor-uri /status
    ########acl策略配置############# 
    #当挂在负载均衡上的指定backend的中有效机器数小于2台时返回true
    acl site_warnning nbsrv(backend_sumapay25finance) lt 2
    #当满足策略的时候返回503
    monitor fail if site_warnning
##################2.5账务	结束
	

##################2.5连接器管理器	开始
frontend frontend_sumapay25cm
	bind 0.0.0.0:8484
	mode http
	log global
	option httplog
	option httpclose
	option forwardfor
	acl sumapay25cm_policy url_beg /connectorRemoteService
	use_backend	backend_sumapay25cm	if	sumapay25cm_policy
backend backend_sumapay25cm
	mode http
	option httpchk GET /connectorRemoteService
	balance roundrobin
    server sumapay25cm1 172.16.8.3:9090 maxconn 8192 check inter 5000 rise 10 fall 2 weight 2
    server sumapay25cm2 172.16.8.5:9090 maxconn 8192 check inter 5000 rise 10 fall 2 weight 2
    server sumapay25cm3 172.16.8.7:9090 maxconn 8192 check inter 1000 rise 10 fall 2 weight 2
listen sumapay25cm_status
    bind 0.0.0.0:8485
    mode http
    #网站健康检测URL，用来检测HAProxy管理的网站是否可以用，正常返回200，不正常返回503
    monitor-uri /status
    ########acl策略配置############# 
    #当挂在负载均衡上的指定backend的中有效机器数小于2台时返回true
    acl site_warnning nbsrv(backend_sumapay25cm) lt 2
    #当满足策略的时候返回503
    monitor fail if site_warnning
##################2.5连接器管理器	结束
	

##################2.5商户通知	开始
frontend frontend_sumapay25mn
	bind 0.0.0.0:8585
	mode http
	log global
	option httplog
	option httpclose
	option forwardfor
	acl sumapay25mn_policy url_beg /notice
	use_backend	backend_sumapay25mn	if	sumapay25mn_policy
backend backend_sumapay25mn
	mode http
	option httpchk GET /notice
	balance roundrobin
    server sumapay25mn1 172.16.8.3:9393 maxconn 8192 check inter 5000 rise 10 fall 2 weight 2
    server sumapay25mn2 172.16.8.5:9393 maxconn 8192 check inter 5000 rise 10 fall 2 weight 2
    server sumapay25mn3 172.16.8.7:9393 maxconn 8192 check inter 1000 rise 10 fall 2 weight 2
listen sumapay25mn_status
    bind 0.0.0.0:8586
    mode http
    #网站健康检测URL，用来检测HAProxy管理的网站是否可以用，正常返回200，不正常返回503
    monitor-uri /status
    ########acl策略配置############# 
    #当挂在负载均衡上的指定backend的中有效机器数小于2台时返回true
    acl site_warnning nbsrv(backend_sumapay25mn) lt 2
    #当满足策略的时候返回503
    monitor fail if site_warnning
##################2.5商户通知	结束

##################2.5渠道通知 开始
frontend frontend_sumapay25cn
bind 0.0.0.0:8587
mode http
log global
option httplog
option httpclose
option forwardfor
acl sumapay25cn_policy url_beg /channelNotice
use_backend backend_sumapay25cn if sumapay25cn_policy
backend backend_sumapay25cn
mode http
option httpchk GET /channelNotice
balance roundrobin
    server sumapay25cn1 172.16.8.3:9393 maxconn 8192 check inter 1000 rise 10 fall 2 weight 2
    server sumapay25cn2 172.16.8.5:9393 maxconn 8192 check inter 1000 rise 10 fall 2 weight 2
    server sumapay25cn3 172.16.8.7:9393 maxconn 8192 check inter 1000 rise 10 fall 2 weight 2
listen sumapay25cn_status
    bind 0.0.0.0:8588
    mode http
    #网站健康检测URL，用来检测HAProxy管理的网站是否可以用，正常返回200，不正常返回503
    monitor-uri /status
    ########acl策略配置############# 
    #当挂在负载均衡上的指定backend的中有效机器数小于2台时返回true
    acl site_warnning nbsrv(backend_sumapay25cn) lt 2
    #当满足策略的时候返回503
    monitor fail if site_warnning
##################2.5渠道通知 结束


##################签名验签   开始
frontend frontend_sumapay25pki
        bind 0.0.0.0:8686
        mode http
        log global
        option httplog
        option httpclose
        option forwardfor
        acl sumapay25pki_policy url_beg /pki
        use_backend     backend_sumapay25pki     if      sumapay25pki_policy
backend backend_sumapay25pki
        mode http
        option httpchk GET /pki
        balance roundrobin
        server sumapay25pki1 172.16.8.3:9595 maxconn 8192 check inter 5000 rise 10 fall 2 weight 2
        server sumapay25pki2 172.16.8.3:9595 maxconn 8192 check inter 5000 rise 10 fall 2 weight 2
        server sumapay25pki3 172.16.8.7:9595 maxconn 8192 check inter 1000 rise 10 fall 2 weight 2
listen sumapay25pki_status
    bind 0.0.0.0:8687
    mode http
    #网站健康检测URL，用来检测HAProxy管理的网站是否可以用，正常返回200，不正常返回503
    monitor-uri /status
    ########acl策略配置############# 
    #当挂在负载均衡上的指定backend的中有效机器数小于2台时返回true
    acl site_warnning nbsrv(backend_sumapay25pki) lt 1
    #当满足策略的时候返回503
    monitor fail if site_warnning
##################签名验签   结束


##################银行对账系统   开始
frontend frontend_sumapaybankcheck
	bind 0.0.0.0:8787
 mode http
        log global
		maxconn 1000
        option httplog
        option httpclose
        option forwardfor
        acl sumapaybankcheck_policy url_beg /bankCheck
        use_backend backend_sumapaybankcheck if sumapaybankcheck_policy
backend backend_sumapaybankcheck
        mode http
		fullconn 1000
        option httpchk GET /bankCheck
        balance roundrobin
        server sumapaybankcheck1 172.16.219.103:8080 maxconn 500 check inter 1000 rise 10 fall 2 weight 2
listen sumapaybankcheck_status
    bind 0.0.0.0:8788
    mode http
    #网站健康检测URL，用来检测HAProxy管理的网站是否可以用，正常返回200，不正常返回503
    monitor-uri /status
    ########acl策略配置############# 
    #当挂在负载均衡上的指定backend的中有效机器数小于2台时返回true
    acl site_warnning nbsrv(backend_sumapaybankcheck) lt 1
    #当满足策略的时候返回503
    monitor fail if site_warnning
##################银行对账系统   结束



##################商户对账系统   开始
frontend frontend_sumapaymerchantcheck
	bind 0.0.0.0:8888
 mode http
        log global
		maxconn 1000
        option httplog
        option httpclose
        option forwardfor
        acl sumapaymerchantcheck_policy url_beg /bankCheck
        use_backend backend_sumapaymerchantcheck if sumapaymerchantcheck_policy
backend backend_sumapaymerchantcheck
        mode http
		fullconn 1000
        option httpchk GET /bankCheck
        balance roundrobin
        server sumapaymerchantcheck1 172.16.219.103:9090 maxconn 500 check inter 1000 rise 10 fall 2 weight 2
listen sumapaymerchantcheck_status
    bind 0.0.0.0:8889
    mode http
    #网站健康检测URL，用来检测HAProxy管理的网站是否可以用，正常返回200，不正常返回503
    monitor-uri /status
    ########acl策略配置############# 
    #当挂在负载均衡上的指定backend的中有效机器数小于2台时返回true
    acl site_warnning nbsrv(backend_sumapaymerchantcheck) lt 1
    #当满足策略的时候返回503
    monitor fail if site_warnning
##################商户对账系统   结束



##################银行存款对账系统   开始
frontend frontend_sumapayp2pbankcheck
	bind 0.0.0.0:8989
 mode http
        log global
		maxconn 1000
        option httplog
        option httpclose
        option forwardfor
        acl sumapayp2pbankcheck_policy url_beg /p2pBankCheck
        use_backend backend_sumapayp2pbankcheck if sumapayp2pbankcheck_policy
backend backend_sumapayp2pbankcheck
        mode http
		fullconn 1000
        option httpchk GET /p2pBankCheck
        balance roundrobin
        server sumapayp2pbankcheck1 172.16.219.103:9090 maxconn 500 check inter 1000 rise 10 fall 2 weight 2
listen sumapayp2pbankcheck_status
    bind 0.0.0.0:8990
    mode http
    #网站健康检测URL，用来检测HAProxy管理的网站是否可以用，正常返回200，不正常返回503
    monitor-uri /status
    ########acl策略配置############# 
    #当挂在负载均衡上的指定backend的中有效机器数小于2台时返回true
    acl site_warnning nbsrv(backend_sumapayp2pbankcheck) lt 1
    #当满足策略的时候返回503
    monitor fail if site_warnning
##################银行存款对账系统   结束


 ##################des加密系统   开始
frontend frontend_sumapaydes
bind 0.0.0.0:9090
 mode http
        log global
maxconn 1000
        option httplog
        option httpclose
        option forwardfor
        acl sumapaypdes_policy url_beg /des
        use_backend backend_sumapaypdes if sumapaypdes_policy
backend backend_sumapaypdes
        mode http
fullconn 1000
        option httpchk GET /des
        balance roundrobin
        server sumapaydes1 172.16.8.3:9696 maxconn 500 check inter 1000 rise 10 fall 2 weight 2
server sumapaydes2 172.16.8.5:9696 maxconn 500 check inter 1000 rise 10 fall 2 weight 2
server sumapaydes3 172.16.8.7:9696 maxconn 500 check inter 1000 rise 10 fall 2 weight 2
listen sumapaypdes_status
    bind 0.0.0.0:9091
    mode http
    #网站健康检测URL，用来检测HAProxy管理的网站是否可以用，正常返回200，不正常返回503
    monitor-uri /status
    ########acl策略配置############# 
    #当挂在负载均衡上的指定backend的中有效机器数小于2台时返回true
    acl site_warnning nbsrv(backend_sumapaypdes) lt 1
    #当满足策略的时候返回503
    monitor fail if site_warnning
##################des加密系统   结束



------------

1、先生成txt对账单，之后在生成excel对账单，不在加载两个list到内存之后在进行文件生成
2、txt对账单用的是BufferedWriter ，每次生成一行后进行fulsh操作，减少缓冲区数据量 ，这个写大文件不是问题--------
不加上面那句貌似能支持到6w条数据，如果把TradeRecord只取有用字段，大概能支持到18w数据，加上fulsh之后，基本没什么限制
3、excel方面，占用内存较大，当前系统在本地250M内存环境下，大概支持6.5w条数据导出，优化成下面的代码大概支持16w。
本地内存调整为500M，优化后，大概支持导出43W条数据
本地内存调整为1G ，优化后大概支持90W+条数据
	     	 String  filePath = localTempFile+""+merCode+excelFileName;
	    WorkbookSettings wbSetting = new WorkbookSettings();
            wbSetting.setUseTemporaryFileDuringWrite(true);
	     wbSetting.setGCDisabled(true);
            wbSetting.setTemporaryFileDuringWriteDirectory(new File(localTempFile));//临时文件夹的位置
            WritableWorkbook wwb;
            if(sheet == 1){
            	wwb = Workbook.createWorkbook(new File(filePath),wbSetting);
            }else{
                FileInputStream in = new FileInputStream(new File(filePath)); 
    			Workbook wb= Workbook.getWorkbook(in);
    		   wwb= Workbook.createWorkbook(new File(filePath),wb,wbSetting);
            }
            
              -Xms500m -Xmx500m  -Xmn256m -XX:NewRatio=4 -XX:SurvivorRatio=4
            
          XX:PermSize=256m -XX:MaxPermSize=512m
            	
            	-Xms2g -Xmx2g -Xmn256m -XX:SurvivorRatio=8 -XX:ParallelGCThreads=8 -XX:PermSize=512m -XX:MaxPermSize=512m -Xss256k -XX:-DisableExplicitGC -XX:+UseCompressedOops -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled
            	
            	
            	
            	-Xms500m -Xmx500m  -Xmn256m -XX:NewRatio=4 -XX:SurvivorRatio=4

------------

/etc/sysconfig

-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --sport 21 -j ACCEPT
-A RH-Firewall-1-INPUT -p tcp -m state --state NEW -m tcp --dport 20 -j ACCEPT

------------

20160309

------------

下班时间20:06分 加班三小时

------------

日志梳理
商户自助日志使用
文档中没有的code
版本
敏感数据jar
切点获取类名称
Note1
敏感数据excel文件加密
密码控件

------------

1.先整理要梳理的类列表，处理器注意除了类名，还要写上编码
2.整理Map、XML、JSon格式的参数涉及敏感数据的key值及对应的含义
3.整理代码中以字符串打印的敏感数据
4.整理一下使用log4j而非slf4j的类
敏感数据包括姓名、证件编号、手机号、银行卡号、电子邮箱，还有从前的cvn2和有效期


商户自助网站（全部）
徽商2.0接口系统（全部）
平台2.5锁表服务（全部）、http/https通知服务（全部）,
平台2.0common的锁表服务（RecordLockServiceImpl）
徽商2.0处理器系统，文件分发处理器（FtpFileDistributionProcessor：HS0024）
平台2.0处理器系统 ，查询银行存管商户用户处理器（HsbBankAccountQueryProcessor：CX0081）

------------

	
	//	private final static Logger log = Logger.getLogger(BankAuthenticationFullRecAction.class);
	private final static Logger log = LoggerFactory.getLogger(BankAuthenticationFullRecAction.class);
	
	
	import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.apache.log4j.Logger;


------------

SF1027：商户单笔付款请求父商户审核
PF1015：批量付款父商户复核
PF1011：导出批量付款结果文件
SH0013：重新发送商户交易通知

------------

2.0.82.0
2.5.36.0

------------

现在敏感数据那个处理改成使用单独jar包了，使用方法：
1：ivy.xml中加入依赖
<dependency org="com.sumapay.sensitivedata.formater" name="com.sumapay.sensitivedata.formater" rev="1.0.0.0" changing="true"/>
2：配置文件中加入以下配置：
<bean id="logUtil" class="com.sumapay.sensitivedata.formater.util.LogFormatUtil" init-method="initConfig">
		<property name="messageSource" ref="propertyConfigurer" />
</bean>
3：在需要处理的地方使用下面的方法
LogFormatUtil.formatStrSensitiveData(bankAccount, SensitiveDataTypeEnum.BANK_ACCOUNT.getValue())

在 propertyConfigurer 指向的属性配置bean里要加上敏感数据规则的配置文件地址，例如。
file:///sumapay25/config/sumpay-sensitivedata-rule-config.properties




1，修复bug map中敏感数据传入log打印后，会导致map原始数据被改变。
修改方案：ivy增加以下红色部分配置，重新更新jar包（注意看下ivy缓存的jara是否更新）
 
 
<dependency org="org.slf4j-sumapay" name="slf4j-api-sumapay" rev="1.7.24"/>
<dependency org="org.slf4j" name="slf4j-log4j12" rev="1.7.24"/>
<dependency org="json" name="json-lib" rev="2.4"/>
<dependency org="org.jaxen" name="jaxen-1.1-beta-6" rev="1.1"/>
<dependency org="dom4j" name="dom4j" rev="1.6.1"/>
<dependency org="net.sf.ezmorph" name="ezmorph" rev="1.0.6"/>
<dependency org="commons-collections" name="commons-collections" rev="3.2.1"/>

------------

String className=pjp.getTarget().getClass().getSimpleName(); 


			Method[] methods =  point.getTarget().getClass().getDeclaredMethods();
			Type returnType = null;
			for(Method method : methods){
				if(methodName.equals(method.getName())){
					 returnType = method.getGenericReturnType();// 返回类型
				}
			}
			    if(returnType instanceof List){


			    }

------------

			try {
				receiptParam.put("NAME", SensitiveDataUtils.sensitiveDataDecode(record.getBankAccountName()));
				receiptParam.put(Constant.BANK_ACCOUNT, SensitiveDataUtils.sensitiveDataDecode( record.getBankAccount()));
			} catch (Exception e) {
				LOGGER.error("敏感数据解密过程异常：",e);
			}
			
			
			java.lang.NoSuchMethodError: org.apache.commons.codec.binary.Base64.encodeBase64String([B)Ljava/lang/String;
			

------------

			    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
		            hssf_w_book.write(byteArrayOutputStream);
			    InputStream  excelStream = new ByteArrayInputStream(byteArrayOutputStream.toByteArray());
			    DesUtil.encryptStream(excelStream, os, SensitivedataUtils.password);



------------

VXo4eEkrOEd0UTI3MDNmSE1kK1pJTXRMRFBvN0pZb1VXTmtES1gxdjl5VzU0T24xMkRLYW1WM0NQaW1teTc0WDB5WVdTM3R0RVBDbE5lY01uWFY2djdNOVQ2aFNkS3V3TmMrSGVWOTdBTkNibnZYdHVkcWZtNTVQejlFY3hHc1JrTENOOUdlbGppcU0vb2ZSL3VsTzRJT0NZTHRSdnB4ZmdEUTBYK0ZhOXM4PXsiaWQiOjAsInR5cGUiOiJwcm9kdWN0IiwicGFja2FnZSI6WyIiXSwiYXBwbHluYW1lIjpbIiouc3VtYXBheS5jb20iXSwicGxhdGZvcm0iOjR9

------------

通知服务
商户自助
银行对账系统
徽商对账系统
付款系统
徽商2.0接口系统
上线配置

------------

通知服务系统 修改/sumapay25/config下面的sumapay-config.properties文件
添加：
db.des.springremote.url=http://192.161.14.93:8080/des/remote/desRemoteService



------------

商户自助系统在/sumapay/config/sumapay-config.properties添加配置：

#192.16.3.2添加内容
#des服务路径（ip地址和端口根据实际情况配置）
db.des.springremote.url=http://192.161.14.93:8080/des/remote/desRemoteService

#密码控件开关，0兼容 1不兼容（部分浏览器不可用）
gateway.internet.PassGuardCtrl.switch=0

#商户自助大商户跳过敏感数据格式化和文件加密（英文逗号分隔）
merchant.big.merchant.list=


#192.16.3.3添加内容
#des服务路径（ip地址和端口根据实际情况配置）
db.des.springremote.url=http://192.161.14.93:8080/des/remote/desRemoteService

#密码控件开关，0兼容 1不兼容（部分浏览器不可用）
gateway.internet.PassGuardCtrl.switch=0

#商户自助大商户跳过敏感数据格式化和文件加密（英文逗号分隔）
merchant.big.merchant.list=


------------

172.16.219.103
bankcheck系统在/sumapay/config/sumapay-config.properties添加配置：
#des服务路径（ip地址和端口根据实际情况配置）
db.des.springremote.url=http://192.161.14.93:8080/des/remote/desRemoteService

------------

172.16.219.103
徽商对账系统在/sumapay/config/sumapay-config.properties添加配置：
#des服务路径（ip地址和端口根据实际情况配置）
db.des.springremote.url=http://192.161.14.93:8080/des/remote/desRemoteService

------------

172.16.4.9

付款系统在/sumapay25/config/sumapay-config.properties添加配置：
#des服务路径（ip地址和端口根据实际情况配置）
db.des.springremote.url=http://192.161.14.93:8080/des/remote/desRemoteService

172.16.4.11

付款系统在/sumapay25/config/sumapay-config.properties添加配置：
#des服务路径（ip地址和端口根据实际情况配置）
db.des.springremote.url=http://192.161.14.93:8080/des/remote/desRemoteService

------------

无

------------

======================通知服务系统==============================
： 修改/sumapay25/config下面的sumapay-config.properties文件
添加（ip地址和端口根据实际情况配置）：
db.des.springremote.urls=http://192.161.14.93:8080/des/remote/desRemoteService


========================商户自助系统=============================
在/sumapay/config/sumapay-config.properties添加配置：
#192.16.3.2添加内容
#des服务路径（ip地址和端口根据实际情况配置）
db.des.springremote.url=http://192.161.14.93:8080/des/remote/desRemoteService

#密码控件开关，0兼容 1不兼容（部分浏览器不可用）
gateway.internet.PassGuardCtrl.switch=0

#商户自助大商户跳过敏感数据格式化和文件加密（英文逗号分隔）
merchant.big.merchant.list=


#192.16.3.3添加内容
#des服务路径（ip地址和端口根据实际情况配置）
db.des.springremote.url=http://192.161.14.93:8080/des/remote/desRemoteService

#密码控件开关，0兼容 1不兼容（部分浏览器不可用）
gateway.internet.PassGuardCtrl.switch=0

#商户自助大商户跳过敏感数据格式化和文件加密（英文逗号分隔）
merchant.big.merchant.list=

==========================bankcheck系统============================
172.16.219.103
在/sumapay/config/sumapay-config.properties添加配置：
#des服务路径（ip地址和端口根据实际情况配置）
db.des.springremote.url=http://192.161.14.93:8080/des/remote/desRemoteService


===========================徽商对账系统===========================
172.16.219.103
在/sumapay/config/sumapay-config.properties添加配置：
#des服务路径（ip地址和端口根据实际情况配置）
db.des.springremote.url=http://192.161.14.93:8080/des/remote/desRemoteService


===========================付款系统==============================
172.16.4.9
在/sumapay25/config/sumapay-config.properties添加配置：
#des服务路径（ip地址和端口根据实际情况配置）
db.des.springremote.url=http://192.161.14.93:8080/des/remote/desRemoteService

172.16.4.11
在/sumapay25/config/sumapay-config.properties添加配置：
#des服务路径（ip地址和端口根据实际情况配置）
db.des.springremote.url=http://192.161.14.93:8080/des/remote/desRemoteService



------------

1：load的时候判断浏览器，之后标记是否支持密码控件，设置标记位为1,0
2：设置div中内容的显示隐藏。
3：

http://ut.sumapay.com/DemoLWinPG/
http://172.16.3.1/DemoLWinPG/
明天如果给新的密码控件序列号，可以把demo部署到test测试环境的3.2里，然后使用上面的链接访问，试试能不能用

amJ1N092dlo4NXlVdWtnOEtKZUROak5hbVdMM055SDZ1aTFjcVYvN3NqTm9uOU1ubXhmWStyN0J6dDJWV2ZCckNZcFA2T09BQzRFbG1GbXNIQ3NCNys2OVU1YUltUTRoSE5BalBPcGsxK0o1ZVZPQTREM3ByckJOU1lpY3JWTHhncm1sMDFmblgydDJBNExFazVlM2xaRXF0N1k1bnNKUHR0TlZwVDVyVm5NPXsiaWQiOjAsInR5cGUiOiJwcm9kdWN0IiwicGFja2FnZSI6WyIiXSwiYXBwbHluYW1lIjpbIiouc3VtYXBheS5jb20iLCI1OS4xNTEuMS4zIiwiMTcyLjE2LjMuMSIsIjE3Mi4xNi45LjMiLCIxNzIuMTYuMTQuMTIiXSwicGxhdGZvcm0iOjR9


测试
ano2V2JlNjN5MjdrRG51WVUxdHJKK1FVcVM4WWQyQTdXZ01XT1BKS0kxM1h4SFJBejB5UWJWcGNMek52RXdTZndqb3JOdUY0Z1NOR240eE54T3R3WFd2RHdGcHoxMHdPV2t6QWp4MmwxK1p4aUhyOTk3QjkzQ0pGY1FwV1ZBcGJpRDBuNkVadTN2ajhaakJzbXhpL2hGQ0ZzQjRyb2ZVUHN3TnpGQVpFRGxJPXsiaWQiOjAsInR5cGUiOiJ0ZXN0IiwicGxhdGZvcm0iOjQsIm5vdGJlZm9yZSI6IjIwMTcwNzE0Iiwibm90YWZ0ZXIiOiIyMDE3MTAxNCJ9



------------

原IVY配置 
<dependency org="org.slf4j-sumapay" name="slf4j-api-sumapay" rev="1.7.24"/>
<dependency org="org.slf4j" name="slf4j-log4j12" rev="1.7.24"/>
<dependency org="json" name="json-lib" rev="2.4"/>
<dependency org="org.jaxen" name="jaxen-1.1-beta-6" rev="1.1"/>
<dependency org="dom4j" name="dom4j" rev="1.6.1"/>
<dependency org="net.sf.ezmorph" name="ezmorph" rev="1.0.6"/>
<dependency org="commons-collections" name="commons-collections" rev="3.2.1"/>
修改后
<dependency org="com.sumavision.tvpay.gateway" name="com.sumavision.tvpay.gateway.sensitivefilter" rev="2.0.3-sumapay"/>
<dependency org="org.slf4j" name="slf4j-api" rev="1.7.24"/>
<dependency org="org.slf4j" name="slf4j-log4j12" rev="1.7.24"/>
<dependency org="json" name="json-lib" rev="2.4"/>
<dependency org="org.jaxen" name="jaxen-1.1-beta-6" rev="1.1"/>
<dependency org="dom4j" name="dom4j" rev="1.6.1"/>
<dependency org="net.sf.ezmorph" name="ezmorph" rev="1.0.6"/>
<dependency org="commons-collections" name="commons-collections" rev="3.2.1"/>

------------

工作交接的各位注意一下，别光看trunk的代码，跟梁波确认一下分支上有没有，现在跟梁波有关的、没测试的分支应该只有SP_S_20170008（CA版本，2.0.84.0/2.5.39.0）

------------

徽商对账优化

------------

当前为获取对账单失败后，继续下一天
优化为：如果获取不到某天的，异常结束。第二天重新执行


		// 指定返回队列
		param.put("_replyTo","amq.direct://com.sumapay.mq.exchange.bankcheck/bankcheckrecord");
		
同步
synchronization


异步
asynchronization


调度系统配置文件修改：				  
sumapay-config文件修改
#######添加内容############
bankcheck.service.context=bankcheck
haproxy.server=192.161.14.92
bankcheck.springremote.server=${haproxy.server}:8787
bankcheck.icbc.getBankCheckRecord.service.url=http://${bankcheck.springremote.server}/${bankcheck.service.context}/remote/getBankCheckRecordAsyncRemoteService
###########修改内容#########
bankcheck.icbc.getBankCheckRecord.service.businessInterface=com.sumavision.ecommerce.plateform.core.finance.bankcheck.service.GetBankCheckRecordAsyncService
						  					  					  						  					  					  						  			  					  
修改build.xml
在生成2.0.3-sumapay.client.jar的类路径中添加						  					  					  						  					  					  						  					  					  
<include name="**/com/sumavision/ecommerce/plateform/core/finance/bankcheck/service/GetBankCheckRecordAsyncService.class" />

所以调度2.0系统需要重新打包（只需要第一个渠道时候打包一次即可，后续异步通知渠道可以不重新打包）


渠道调度文件：
替换getUpdateBankCheckRecord为getBankCheckRecordAsync
替换bankcheck.abc.getBankCheckRecord.service.urls 为bankcheck.abc.getBankCheckRecord.service.url


bankcheck配置文件修改
sumapay-config文件修改
#######添加内容############
#银行对账系统mq返回队列配置
bankcheck.mq.replyTo.queue= amq.direct://com.sumapay.mq.exchange.bankcheck/bankcheck 
sumapay.amqp.url=192.161.14.92:5672
sumapay.amqp.virtualhost=pay
sumapay.amqp.user=sumapay
sumapay.amqp.password=58858547




						  					  					  						  					  					  						  					  					  						  					  					  						  					  					  

------------

廊坊银行09版本
徽商对账10版本
商户自助升级
微信05版本
认证定制化开发
徽商代扣支付11版本
DP_20170025（商户系统2.5）
DP_20170022（通用系统2.5）
原生代扣ASP_S_20170006
异常退款SP_S_20170012
redis升级DP_20170018
消息2.5系统
h5聚合支付ASP_S_20170007

------------

版本
上线配置

------------

SP_S_20170009

------------

******************渠道通知服务系统(172.16.8.3)*************
配置文件/sumapay25/config/sumapay-config.properties添加内容（ip地址和端口根据实际需要配置）
connector.service.businessInterface=com.sumavision.tvpay.connector.connectorservice.ConnectorServiceRemote
haproxy.server=172.16.7.120
connector.springremote.server=${haproxy.server}:8484
#连接器管理器地址
connector.service.context=connectorRemoteService
connector.springremote.url=http://${connector.springremote.server}/${connector.service.context}/remote/SpringHttpServic

#平台发送渠道通知线程池初始大小
front.noticechannel.threadpool.size=100
#平台发送渠道通知线程池最大线程数量
front.noticechannel.threadpool.maxsize=300



********************2.0调度系统（172.16.8.9）***************************
配置文件/sumapay/config/sumapay-config.properties添加内容（ip地址和端口为haproxy中通知服务的相关配置地址和端口）

front.channelNotice.springremote.server=192.161.14.92:8587
front.channelNoticeSend.service.haproxy.url=http://${front.channelNotice.springremote.server}/channelNotice/remote/ChannelNoticeSendService
front.channelNoticeSend.service.businessInterface=com.sumavision.tvpay.platform.merhcant.ChannelNoticeSendService

定时任务（配置文件channelNotice.xml）
定时时间配置：0 0/1 * * * ?



****************************数据库插入配置**********************************
insert into settings (KEY, VALUE, REMARK, VERIFY_CODE, LAST_EDIT_TIME, LAST_EDITOR, LAST_EDIT_PROCESS)
values ('lfbNoticeSendIncreaseTimes', '10', '商户通知发送递增次数（单位次）', null, null, null, null);

insert into settings (KEY, VALUE, REMARK, VERIFY_CODE, LAST_EDIT_TIME, LAST_EDITOR, LAST_EDIT_PROCESS)
values ('lfbNoticeSendInterval', '1', '商户通知发送间隔（单位分钟）', null, null, null, null); 
commit;
  

------------

版本
徽商2.0接口增加
sql
Note1
获取充值记录
鉴权表
配置文件
上线修改

------------

代码版本号是2.0.87.0
2.5.41.0

domain还没处理

------------

批量绑卡迁移文件接口
BindingCardTransferAction


trusteeship.springremote.server.2=192.161.14.94:8080
trusteeship.bankcheck.bankCheckProcess.service.url=http://${trusteeship.springremote.server}/p2pBankCheck/remote/bankCheckProcessRemoteService

------------

    select lr.pid reqId, br.pid recId,lr.fund rechargeFund, br.query_date queryDate
    from (select hsb.id pid, hsb.acct_no acctNo,
           hsb.seqno seqno, hsb.trxdate trxdate, hsb.trxtime trxtime,
           hsb.recharge_fund fund
        from P2P_HSB2_RECHARGE_REQUEST hsb
         where hsb.status = 1
         and hsb.check_status =0) lr
     inner join (select tru.id pid, tru.cardnbr cardnbr,
              tru.seqno seqno, tru.cendt_date cendtdate,
              tru.cendt_time cendttime,tru.amount fund,tru.query_date query_date
           from P2P_HSB2_BANK_CHECK_REC tru
          where tru.check_status =0) br on lr.acctNo = br.cardnbr and
          substr(lr.seqno,-6) = br.seqno and
          substr(lr.trxdate,-4) = br.cendtdate and
          lr.trxtime = br.cendttime
     where lr.fund = br.fund ;
     select t.*, t.rowid from P2P_HSB2_BANK_CHECK_REC t;
update P2P_HSB2_RECHARGE_REQUEST t set t.check_status=0; 
update P2P_HSB2_BANK_CHECK_REC t set t.check_status=0; 

------------

	/**
	 * 根据对账平账记录更新徽商2.0资金结算表对应结算金额
	 * @param  payTradeIdList 平账记录
	 */
	private void  updateP2pHsb2SettlementFund(List<Map<String,Object>> payTradeIdList, String bank ){
		Map<Date,BigDecimal>  rechargeFundMap= new HashMap<Date,BigDecimal>();

		for(int i=0;i < payTradeIdList.size(); i++){
			Map<String,Object> resultMap = payTradeIdList.get(i);
			BigDecimal rechargeFund = (BigDecimal) resultMap.get("RECHARGEFUND");
			Date queryDate = (Date) resultMap.get("QUERYDATE");
			if(rechargeFundMap.get(queryDate) == null){
				rechargeFundMap.put(queryDate, rechargeFund);
			}else{
				rechargeFundMap.put(queryDate, rechargeFundMap.get("RECHARGEFUND").add(rechargeFund));
			}
		}
		// 循环更新资金结算表的结算金额，如果已经有结算金额，进行金额累加
		for(Date queryDate :rechargeFundMap.keySet()){
			P2pHsb2SettlementFund  p2pHsb2SettlementFund = this.getP2pHsb2SettlementFund(queryDate);
			BigDecimal rechargeFund = rechargeFundMap.get(queryDate);
			if(p2pHsb2SettlementFund == null){
				P2pHsb2SettlementFund newP2pHsb2SettlementFund = new P2pHsb2SettlementFund();
				newP2pHsb2SettlementFund.setFund(rechargeFund);
				newP2pHsb2SettlementFund.setQueryDate(queryDate);
				p2pHsb2SettlementFundDAO.insert(newP2pHsb2SettlementFund);
				logger.info("银行["+bank+"]更新资金结算表日期["+queryDate+"]记录完成,当前结算总金额["+newP2pHsb2SettlementFund.getFund()+"]元");
			}else{
				p2pHsb2SettlementFund.setFund(p2pHsb2SettlementFund.getFund().add(rechargeFund));
				p2pHsb2SettlementFundDAO.updateByPrimaryKey(p2pHsb2SettlementFund);
				logger.info("银行["+bank+"]更新资金结算表日期["+queryDate+"]记录完成,当前结算总金额["+p2pHsb2SettlementFund.getFund()+"]元");
			}
		}

	}
	
	
select t.*, t.rowid from P2P_HSB2_SETTLEMENT_FUND t;
select t.*, t.rowid from P2P_HSB2_BANK_CHECK_REC t;
update P2P_HSB2_RECHARGE_REQUEST t set t.check_status=0; 
update P2P_HSB2_BANK_CHECK_REC t set t.check_status=0; 	

------------

select * from ((select 
  p.request_id requestId,
  p.seqno,
  t.trade_code tradeCode,
  t.trade_sum tradeSum,
  to_char(t.trade_end_time, 'yyyy-MM-dd hh:mm:ss') tradeDate,
  '成功',
  case 
    when t.CHARGE_TYPE=0 then '实时'
    when t.CHARGE_TYPE=1 then '预付'  
    when t.CHARGE_TYPE=2 then '垫付'
    when t.CHARGE_TYPE=3 then '后付'
    else '其他'
  end chargeType,
  t.trade_fee tradeFee,
  p.acct_no acctNo
  from (select * from trade_record union all select * from trade_record_history) t,
  biz_type biz, p2p_hsb2_recharge_request p
  where 1 = 1
  and t.biz_type = biz.id
and
      t.provider_id = 104
and

    t.trade_code in ('HS0002','HS0025','HS0010','HS0009')
  and t.status = 2
  and t.id = p.TRADE_ID
  )
 ) alt
  order by alt.requestId asc;  
  
  select *
  from ((select p.request_id requestId,
                p.seqno seqNo,
                t.trade_code tradeCode,
                t.trade_sum tradeSum,
                to_char(t.trade_end_time, 'yyyy-MM-dd') tradeEndTime,
                t.status,
                t.CHARGE_TYPE chargeType,
                t.trade_fee tradeFee,
                p.acct_no acctNo
           from (select *
                   from trade_record
                 union all
                 select * from trade_record_history) t,
                p2p_hsb2_recharge_request p
          where 1 = 1
            and t.provider_id = 2865
            and ((t.trade_end_time > to_date('2017-05-25', 'yyyy-MM-dd') and
                t.trade_end_time < to_date('2017-06-25', 'yyyy-MM-dd')) or
                (t.MANUAL_ADJUST_TIME >=
                to_date('2017-05-25', 'yyyy-MM-dd') and
                t.MANUAL_ADJUST_TIME < to_date('2017-06-25', 'yyyy-MM-dd')))
            and t.trade_code in ('HS0002', 'HS0009', 'HS0010', 'HS0025')
            and t.status = 2
            and t.id = p.TRADE_ID)) alt
 order by alt.requestId asc;
 
 
  select * from ((select 
  p.request_id requestId,
  p.seqno,
  t.trade_code tradeCode,
  t.trade_sum tradeSum,
  to_char(t.trade_end_time, 'yyyy-MM-dd hh:mm:ss') tradeDate,
  t.status,
  case 
    when t.CHARGE_TYPE=0 then '实时'
    when t.CHARGE_TYPE=1 then '预付'  
    when t.CHARGE_TYPE=2 then '垫付'
    when t.CHARGE_TYPE=3 then '后付'
    else '其他'
  end chargeType,
  t.trade_fee tradeFee,
  p.acct_no acctNo
  from (select * from trade_record union all select * from trade_record_history) t,
  p2p_hsb2_recharge_request p
  where 1 = 1
   <isNotNull prepend="and" property="merId">
		  t.provider_id = #merId:VARCHAR#
    </isNotNull>
	and ((t.trade_end_time &gt;= #startDate:TIMESTAMP# and t.trade_end_time &lt; #endDate:TIMESTAMP#)
		or (t.MANUAL_ADJUST_TIME &gt;= #startDate:TIMESTAMP# and t.MANUAL_ADJUST_TIME &lt; #endDate:TIMESTAMP#))
	<isNotNull prepend="and" property="hsbPayTradeCode">
		t.trade_code in ($hsbPayTradeCode$)
	</isNotNull>
	and t.status = 2
  and t.id = p.TRADE_ID
  )
 ) alt
  order by alt.requestId asc;  
  
  
  -----------------------查询所有的徽商充值成功记录
  
  select *
  from ((select p.request_id requestId,
                p.seqno seqNo,
                t.trade_code tradeCode,
                t.trade_sum tradeSum,
                to_char(t.trade_end_time, 'yyyy-MM-dd hh:mm:ss') tradeEndTime,
                t.status,
                t.CHARGE_TYPE chargeType,
                t.trade_fee tradeFee,
                p.acct_no acctNo
           from (select *
                   from trade_record
                 union all
                 select * from trade_record_history) t,
                p2p_hsb2_recharge_request p
          where 1 = 1
            and t.provider_id = 2865
            and t.trade_code in ('HS0002', 'HS0009', 'HS0010', 'HS0025')
            and t.status = 2
            and t.id = p.TRADE_ID)) alt
 order by alt.requestId asc;
 
 select t.*,t.rowid from trade_record  t where  t.trade_code in ('HS0002', 'HS0009', 'HS0010', 'HS0025') and t.status = 2;

------------

select * from ((select 
  p.request_id requestId,
  p.seqno seqno,
  t.trade_code tradeCode,
  to_char(t.trade_end_time, 'yyyy-MM-dd hh:mm:ss') tradeDate,
  t.trade_sum tradeSum,
  p.status status
  from (select * from trade_record union all select * from trade_record_history) t,
  biz_type biz, P2P_HSB2_OPEN_ACCOUNT_REQ p
  where 1 = 1
  and t.biz_type = biz.id
and
      t.provider_id = 104
and

    t.trade_code in ('YK0013')
  and t.status = 2
  and t.id = p.TRADE_ID
  )
 ) alt
  order by alt.requestId asc;  

------------

********************2.0调度系统（172.16.8.9）***************************
配置文件/sumapay/config/sumapay-config.properties添加内容（ip地址和端口为haproxy中通知服务的相关配置地址和端口）

hsb2Bankcheck.hsb.ProviderAccount.service.url=http://${trusteeship.springremote.haproxy.server}/p2pBankCheck/remote/p2pHsb2ProviderAccountProcessRemoteService
hsb2Bankcheck.hsb.ProviderAccount.service.businessInterface = com.sumavision.ecommerce.plateform.core.trusteeship.bankcheck.service.ProviderAccountService

***************************增加调度***************************************
配置文件：hsb2ProviderCheckAccount.xml
执行时间：0 30 4 * * ? *

------------

Note1

------------


徽商处理器系统172.16.4.9、172.16.4.11
/sumapay25/config/sumapay-config.properties文件添加配置参数
#徽商2.0结果文件需要特殊处理的商户列表（和侯晓谦的代码可能重复）
hsb.batchFileResult.modifyFtpPath.merchants=


调度2.0系统172.16.8.9添加调度文件（需要重新打徽商2.0的client包）：hsb2ProviderCheckAccount.xml
调度时间执行时间为：0 30 4 * * ? *
/sumapay/config/sumapay-config.properties文件添加配置参数（172.16.8.9）
hsb2Bankcheck.hsb.providerAccount.service.url=http://${trusteeship.springremote.haproxy.server}/p2pBankCheck/remote/p2pHsb2ProviderAccountProcessRemoteService
hsb2Bankcheck.hsb.providerAccount.service.businessInterface = com.sumavision.ecommerce.plateform.core.trusteeship.bankcheck.service.ProviderAccountService


说明：调度生成对账文件如果没有指定对账单生成起始日期，会从当前日期的前一天开始生成
如今天是2017-06-03 ，那么调度执行后，只会生成20170602的对账单文件



------------

上线追加内容

------------


转移的文件
sumapayex/config/sumapay-config.properties
sumapayex/config/biz-monitor-client-merchant.properties
sumapayex/config/sumpay-sensitivedata-rule-config.properties
sumapayex/config/db-sensitivedata-config.properties
sumapayex/exception/merchant.exception.properties
sumapayex/config/biz-monitor-client-reload.properties
/sumapayex/config/log-sensitivedata-config.properties

在sumapayex/config/sumapay-config.properties添加配置
#
sumapay.amqp.connection.cache.size=10





merchant.csvfile.download.path=/sumapay/batchTransFileTemplet/修改为：merchant.csvfile.download.path=/sumapayex/batchTransFileTemplet/
复制/sumapay/batchTransFileTemplet文件夹到/sumapayex/batchTransFileTemplet


#商户自助ftp文件下载本地临时存放路径
merchant.statement.download.path=/sumapayex/checkAccount/provider/
#ftp服务器对账单存放路径（已经存在，不需要重复添加）
merchant.statement.ftp.path=/checkAccount/provider/
  

------------

版本号

------------

微信需求ASP_S_20170005分支已经打了，AP.2.0.5.0和AP.2.5.4.0


提交微信版本--交易历史查询对收款方式的支持（ASP_S_20170005）

------------

检查

------------

svn://svn.sumapay.net/tvpay/CMMI3/开发库/电视支付2.0/sourcecode/fengfu/system/branches/201706PaymentLicense

------------

代扣2.5
版本信息
徽商2.0代扣还款
修改
商户自助网站
对账系统优化
上线配置修改

------------

代扣支付协议签约
相关查询方法
代扣支付协议变更
mq消息队列添加内容
类名
查询信息
错误码
鉴权的正确数据

------------

必输：
REQUEST_ID请求流水号、
MERCHANT_ID商户ID、
MERCHANT_CODE商户编码、
CONTRACT_NO合同号、
PROTOCOL_NO协议号、
BANK_CODE银行编码、
BANK_ACCOUNT银行账号、
BANK_ACCOUNT_TYPE银行账户类型（0借记卡、2贷记卡）、
NAME用户姓名、
ID_TYPE证件类型（0居民身份证）、
ID_NUMBER证件号码、
MOBILE_PHONE手机号、
SINGLE_LIMIT单笔限额、
SINGLE_DAY_LIMIT单日限额、
MER_INFO商户信息（异步通知地址）

选输：CVN2_CODE信用卡CVN2码、VALID_DATE信用卡有效期、APPOINT_BUSINESS约定业务、EMAIL邮箱


------------

	/**
	 * 获取商户信息
	 * @param merchantCode 商户编码
	 * @return  商户信息
	 */
	public List<Merchant> getMerchantInfoList(String merchantCode){
		MerchantExample me = new MerchantExample();
		me.createCriteria().andMerchantCodeEqualTo(merchantCode).andStatusEqualTo(Constant.VALID_MERCHANT_STATUS);

		List<Merchant> merList = null;
		try {
			merList = this.merchantDAO.selectByExample(me);
		} catch (Exception e) {
			logger.error("根据商户代码查询商户失败,原因:{}", e);
			throw new PlateformMerchantException("200600023","根据商户代码查询商户失败!", e);
		}
		return merList;
	}
	
	
		/**
	 * 获取商户信息
	 * @param merchantCode 商户编码
	 * @return  商户信息
	 */
	public List<Merchant> getMerchantInfoList(String merchantCode);

------------

REQUEST_ID请求流水号、MERCHANT_ID商户ID、MERCHANT_CODE商户编码、CONTRACT_NO合同号、PROTOCOL_NO协议号、MER_INFO商户信息（异步通知地址）


BANK_CODE银行编码、BANK_ACCOUNT银行账号、BANK_ACCOUNT_TYPE银行账户类型（0借记卡、2贷记卡）、NAME用户姓名、ID_TYPE证件类型（0居民身份证）、ID_NUMBER证件号码、MOBILE_PHONE手机号、SINGLE_LIMIT单笔限额、SINGLE_DAY_LIMIT单日限额、CVN2_CODE信用卡CVN2码、VALID_DATE信用卡有效期、APPOINT_BUSINESS约定业务、EMAIL邮箱

------------

rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0021
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0025
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0023
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0024

------------

DKProtocolSignProcessor 代扣支付协议签约处理器
DKProtocolUpdateProcessor 代扣支付协议变更处理器
DKProtocolCancelProcessor 代扣支付协议解约处理器
DKProtocolQueryProcessor 代扣支付协议查询处理器

------------

if (request.get(Constant.BANK_CODE) != null & request.get(Constant.BANK_ACCOUNT) != null & request.get(Constant.BANK_ACCOUNT_TYPE) != null) {

		}else if((request.get(Constant.BANK_CODE) == null & request.get(Constant.BANK_ACCOUNT) == null & request.get(Constant.BANK_ACCOUNT_TYPE) == null) ){
			try {
				Integer bankAccountType = (Integer) request.get(Constant.BANK_ACCOUNT_TYPE);
				// 0借记卡、2贷记卡
				if (bankAccountType != 0 && bankAccountType != 2 ) {
					throw new PlateformProcessorException("200300000", "不支持的银行账户类型");
				}
			} catch (Exception e) {
				logger.error("创建代扣支付协议变更有问题,解析银行账户类型有误!", e);
				throw new PlateformProcessorException("200300000", "银行账户类型有误!");
			}
		}else{
			throw new PlateformProcessorException("200300000", "BANK_ACCOUNT为空!");
		}
		if (request.get(Constant.BANK_ACCOUNT) == null) {
			throw new PlateformProcessorException("200300000", "BANK_ACCOUNT为空!");
		}
		if (request.get(Constant.BANK_ACCOUNT_TYPE) == null) {
			throw new PlateformProcessorException("200300000", "BANK_ACCOUNT_TYPE为空!");
		}else {
			try {
				Integer bankAccountType = (Integer) request.get(Constant.BANK_ACCOUNT_TYPE);
				// 0借记卡、2贷记卡
				if (bankAccountType != 0 && bankAccountType != 2 ) {
					throw new PlateformProcessorException("200300000", "不支持的银行账户类型");
				}
			} catch (Exception e) {
				logger.error("创建代扣支付协议变更有问题,解析银行账户类型有误!", e);
				throw new PlateformProcessorException("200300000", "银行账户类型有误!");
			}
		}
		if (request.get(Constant.NAME) == null) {
			throw new PlateformProcessorException("200300000", "NAME为空!");
		}
		if (request.get(Constant.ID_TYPE) == null) {
			throw new PlateformProcessorException("200300000", "ID_TYPE为空!");
		}else {
			try {
				// 0居民身份证
				Integer idType = (Integer) request.get(Constant.ID_TYPE);
				if (idType != 0 ) {
					throw new PlateformProcessorException("200300000", "不支持的证件类型");
				}
			} catch (Exception e) {
				logger.error("创建代扣支付协议变更有问题,不支持的证件类型", e);
				throw new PlateformProcessorException("200300000", "证件类型有误!");
			}
		}

		if (request.get(Constant.ID_NUMBER) == null) {
			throw new PlateformProcessorException("200300000", "ID_NUMBER为空!");
		}
		if (request.get(Constant.MOBILE_PHONE) == null) {
			throw new PlateformProcessorException("200300000", "MOBILE_PHONE为空!");
		}
		if (request.get(Constant.SINGLE_LIMIT) == null) {
			throw new PlateformProcessorException("200300000", "SINGLE_LIMIT为空!");
		}else {
			try {
				BigDecimal singleLimit = (BigDecimal) request.get(Constant.SINGLE_LIMIT);
				if (singleLimit.compareTo(BigDecimal.ZERO) <= 0) {
					throw new PlateformProcessorException("200300000", "单笔限额金额有误！必须大于0");
				}
			} catch (Exception e) {
				logger.error("创建代扣支付协议变更有问题,单笔限额金额有误", e);
				throw new PlateformProcessorException("200300000", "单笔限额有误!");
			}
		}

		if (request.get(Constant.SINGLE_DAY_LIMIT) == null) {
			throw new PlateformProcessorException("200300000", "SINGLE_LIMIT为空!");
		}else {
			try {
				BigDecimal singleDayLimit = (BigDecimal) request.get(Constant.SINGLE_DAY_LIMIT);
				if (singleDayLimit.compareTo(BigDecimal.ZERO) <= 0) {
					throw new PlateformProcessorException("200300000", "单日限额金额有误！必须大于0");
				}
			} catch (Exception e) {
				logger.error("创建代扣支付协议变更有问题,单日限额金额有误", e);
				throw new PlateformProcessorException("200300000",  "单日限额有误!");
			}
		}

------------

#签约协议已存在
200300244=签约协议已存在
200300282=所选银行与该卡所属银行不一致
#请求金额大于单笔限额
200300277=请求金额大于单笔限额
#日累计金额大于商户配置的日累计限额
200300281=日累计金额大于商户配置的日累计限额
#检查用户信息失败
200500023=用户签约状态不正常
#单笔限额大于日限额
200300372=单笔限额不能大于日限额

#代扣签约信息不存在，无法代扣缴费
200300212=签约协议不存在
#签约协议已失效
200300259=签约协议已失效




------------

建行储蓄卡：(授权协议号 CESHI04250001  合同号 CSSH)

姓名 孙丽君
证件 13018519830913052X
卡号 6217000010013277010
手机 18701032749
密码：346120

------------

SP_S_20170011的分支已经建了，2.0.88.0和2.5.43.0
domain也已经建了，版本号是88

------------

类名
Note1
mq消息队列添加内容
异步通知
错误码

------------

HS0035  徽商2.0代扣还款协议签约受理处理器  DKRepayProtocolSignSubmitProcessor
HS0036  徽商2.0代扣还款协议查询处理器          DKRepayProtocolQueryProcessor

------------

MERCHANT_ID  PROTOCOL_NO  BANK_CODE  FLD3  BANK_ACCOUNT  BANK_ACCOUNT_TYPE  NAME  ID_TYPE  ID_NUMBER   CARDNBR  REQUEST_TYPE  SINGLE_LIMIT  SINGLE_DAY_LIMIT  APPOINT_BUSINESS  MOBLE_NO  EMAIL  REMARK  VALIDITY  CVN2_CODE  PASS_THROUGH  REQUEST_CHANNEL  PROTOCOL_TYPE CREATE_TIME LAST_EDIT_TIME FLD9 STATUS FLD2


	//结果标识
	public static final String RESULT_FLAG = "RESULT_FLAG";
	
	int successFlag;
		if(successCount==detailList.size()){
			// 全部成功
			successFlag = 0;
		}else if(successCount==0){
			// 全部失败
			successFlag = 1;
		}else{
			// 部分失败
			successFlag = 2;
		}
		response.put(Constant.RESULT_FLAG, successFlag);


------------

rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade destination=com.sumapay.mq.queue.trade.hsb2depository routing_key=HS0035
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade destination=com.sumapay.mq.queue.trade.hsb2depository routing_key=HS0036

------------

1.1	代扣还款协议签约
1.1.1	商户提交到丰付
提交地址	https://www.sumapay.com/hsbapi/DKRepayProtocolSign	
参数名称	参数含义	长度	可否为空	参数描述	
REQUEST_ID	丰付请求流水号	50	不可空	字符串 只允许使用字母、数字、-、_，并以字母或数字开头。每商户提交的请求流水号，必须在自身账户交易中唯一	
MERCHANT_CODE 	商户编码	20	不可空	字符串 商户在丰付系统中的编码	
BATCH_NO	批次号	12	不可空	字符串 批次号	
NOTICE_URL	异步通知地址	250	不可空	字符串 需要的是绝对地址，丰付会将交易结果发送到对应的地址。	
SIGNATURE	数字签名	32	不可空	将发送给接口的参数组成字符串然后进行商户密钥加密形成密文	
protocolFile	协议签约文件流	文件流	不可空	协议签约文件转换为流的形式发送给接口，csv格式	

协议签约文件模板： 

1.1.2	丰付同步返回到商户
发起代扣还款协议签约请求后，丰付以POST的方式返回P2P平台结果，输出参数：
参数名称	参数含义	长度	参数描述	
RETCODE	处理结果	8-9	字符串，不可空 成功时返回00000000，失败时返回错误码	
RETMSG	处理描述	60	字符串，可为空 成功时返回应答码描述，失败时返回错误描述	
REQUEST_ID	丰付请求流水号	50	字符串，不可空 与提交请求时的丰付请求流水号保持一致。	
SIGNATURE	数字签名	32	字符串，不可空 签名信息，见数字签名规则	
DETAILS	结果明细		List<Map>，可为空	
结果明细为：

参数名称	参数含义	长度	参数描述	
PROTOCOL_NO	协议号	20	字符串，可为空	
IS_ACCEPT	是否受理	1	字符串，可为空	
FAIL_REASON	失败原因	1000	字符串，可为空	


1.1	代扣还款协议状态查询
1.1.1	商户提交到丰付
提交地址	https://www.sumapay.com/hsbapi/DKRepayProtocolStatusQuery	
参数名称	参数含义	长度	可否为空	参数描述	
REQUEST_ID	丰付请求流水号	50	不可空	字符串 只允许使用字母、数字、-、_，并以字母或数字开头。每商户提交的请求流水号，必须在自身账户交易中唯一	
MERCHANT_CODE 	商户编码	20	不可空	字符串 商户在丰付系统中的编码	
CONTRACT_NO	合同号	20	不可空	字符串 合同号	
SIGNATURE	数字签名	32	不可空	将发送给接口的参数组成字符串然后进行商户密钥加密形成密文	
protocolQueryFile	协议查询文件流	文件流	不可空	协议查询文件流为csv格式，只有一列，即协议号	

协议查询文件模板： 

1.1.2	丰付同步返回到商户
发起绑卡迁移请求后，丰付以POST的方式返回P2P平台结果，输出参数：
参数名称	参数含义	长度	参数描述	
RETCODE	处理结果	8-9	字符串，不可空 成功时返回00000000，失败时返回错误码	
RETMSG	处理描述	60	字符串，可为空 成功时返回应答码描述，失败时返回错误描述	
REQUEST_ID	丰付请求流水号	50	字符串，不可空 与提交请求时的丰付请求流水号保持一致。	
CURRNO	实际查询条数	<=4	字符串，不可空 返回实际查询的条数	
SIGNATURE	数字签名	32	字符串，不可空 签名信息，见数字签名规则	
DETAILS	结果明细		List<Map>，可为空	
结果明细为：

参数名称	参数含义	长度	参数描述	
PROTOCOL_NO	协议号	20	字符串，可为空	
STATUS	状态	1	字符串，可为空 0:校验失败 1：待审核 2：已生效 3：审核失败	


------------

#商户未开通该业务
200300344=商户未开通该业务

------------

签约模板：去除了有效期和cvn2、银行卡类型，默认借记卡，只支持身份证

还款模板：增加了合作单位编号和渠道、徽商交易流水号、交易日期、时间，去除了有效期和cvn2、银行卡类型，默认借记卡，只支持身份证

------------

错误码
列数据
上线修改

------------

110190023 ：合作单位编号不符合规范
110190024 ：合作单位渠道不符合规范


------------

		{title:'合同号',field:'contractNo',width:110,align:'center'},
			{title:'合作单位编号',field:'coinstcode',width:80,align:'center'},
			{title:'合作单位渠道',field:'coinstchannel',width:80,align:'center'},

	
				{title:'徽商交易流水号',field:'seqno',width:120,align:'center'},

------------


##\u5546\u6237\u81ea\u52a9\uff0c\u5fbd\u5546\u4ee3\u6263\u8fd8\u6b3e\u6a21\u677f\u8868\u5934
#hsbDkRepayUploadfileTitles=批次号(*)：,#VALUE#,合同号(*)：,#VALUE#,合作单位编号(*)：,#VALUE#,合作单位渠道(*)：,#VALUE#,总笔数(*)：,#VALUE#,总金额(*)：,#VALUE#&商家订单号(*),徽商交易流水号(*),授权协议号(*),交易日期,交易时间,帐户名(*),用户徽商电子账户(*),证件类型(*),证件号码(*),绑定卡银行账号(*),银行代码(*),银行预留手机号(*),金额(*),扣款用途（备注）最多10个汉字(*)
hsbDkRepayUploadfileTitles=\u6279\u6B21\u53F7(*)\uFF1A,#VALUE#,\u5408\u540C\u53F7(*)\uFF1A,#VALUE#,\u5408\u4F5C\u5355\u4F4D\u7F16\u53F7(*)\uFF1A,#VALUE#,\u5408\u4F5C\u5355\u4F4D\u6E20\u9053(*)\uFF1A,#VALUE#,\u603B\u7B14\u6570(*)\uFF1A,#VALUE#,\u603B\u91D1\u989D(*)\uFF1A,#VALUE#&\u5546\u5BB6\u8BA2\u5355\u53F7(*),\u5FBD\u5546\u4EA4\u6613\u6D41\u6C34\u53F7(*),\u6388\u6743\u534F\u8BAE\u53F7(*),\u4EA4\u6613\u65E5\u671F,\u4EA4\u6613\u65F6\u95F4,\u5E10\u6237\u540D(*),\u7528\u6237\u5FBD\u5546\u7535\u5B50\u8D26\u6237(*),\u8BC1\u4EF6\u7C7B\u578B(*),\u8BC1\u4EF6\u53F7\u7801(*),\u7ED1\u5B9A\u5361\u94F6\u884C\u8D26\u53F7(*),\u94F6\u884C\u4EE3\u7801(*),\u94F6\u884C\u9884\u7559\u624B\u673A\u53F7(*),\u91D1\u989D(*),\u6263\u6B3E\u7528\u9014\uFF08\u5907\u6CE8\uFF09\u6700\u591A10\u4E2A\u6C49\u5B57(*)
#\u534f\u8bae\u8fd8\u6b3e\u6a21\u677f\u4e0b\u8f7d\u8def\u52b2\u3001\u6587\u4ef6\u540d\u79f0\u3001\u4e0a\u4f20\u6587\u4ef6\u6700\u5927\u8bb0\u5f55\u6570
#\u534f\u8bae\u8fd8\u6b3e\u6a21\u677f\u4e0b\u8f7d\u8def\u52b2\u3001\u6587\u4ef6\u540d\u79f0\u3001\u4e0a\u4f20\u6587\u4ef6\u6700\u5927\u8bb0\u5f55\u6570
hsbDkRepayFileTemplfileName=\u5FBD\u5546\u6279\u91CF\u4EE3\u6263\u6263\u6B3E\u6A21\u677F.xls
hsbDkRepayUploadfileMaxNum=1000

###########需求上传的文件模板##########################

商户自助网站配置文件修改（192.16.3.2，192.16.3.3）
在/sumapay/config/sumapay-config.properties

#hsbDkRepayUploadfileTitles=批次号(*)：,#VALUE#,合同号(*)：,#VALUE#,合作单位编号(*)：,#VALUE#,合作单位渠道(*)：,#VALUE#,总笔数(*)：,#VALUE#,总金额(*)：,#VALUE#&商家订单号(*),徽商交易流水号(*),授权协议号(*),交易日期,交易时间,帐户名(*),用户徽商电子账户(*),证件类型(*),证件号码(*),绑定卡银行账号(*),银行代码(*),银行预留手机号(*),金额(*),扣款用途（备注）最多10个汉字(*)
hsbDkRepayUploadfileTitles=\u6279\u6B21\u53F7(*)\uFF1A,#VALUE#,\u5408\u540C\u53F7(*)\uFF1A,#VALUE#,\u5408\u4F5C\u5355\u4F4D\u7F16\u53F7(*)\uFF1A,#VALUE#,\u5408\u4F5C\u5355\u4F4D\u6E20\u9053(*)\uFF1A,#VALUE#,\u603B\u7B14\u6570(*)\uFF1A,#VALUE#,\u603B\u91D1\u989D(*)\uFF1A,#VALUE#&\u5546\u5BB6\u8BA2\u5355\u53F7(*),\u5FBD\u5546\u4EA4\u6613\u6D41\u6C34\u53F7(*),\u6388\u6743\u534F\u8BAE\u53F7(*),\u4EA4\u6613\u65E5\u671F,\u4EA4\u6613\u65F6\u95F4,\u5E10\u6237\u540D(*),\u7528\u6237\u5FBD\u5546\u7535\u5B50\u8D26\u6237(*),\u8BC1\u4EF6\u7C7B\u578B(*),\u8BC1\u4EF6\u53F7\u7801(*),\u7ED1\u5B9A\u5361\u94F6\u884C\u8D26\u53F7(*),\u94F6\u884C\u4EE3\u7801(*),\u94F6\u884C\u9884\u7559\u624B\u673A\u53F7(*),\u91D1\u989D(*),\u6263\u6B3E\u7528\u9014\uFF08\u5907\u6CE8\uFF09\u6700\u591A10\u4E2A\u6C49\u5B57(*)


------------

生成txt对账单数据查询时候，把消费和退款的sql进行优化

------------

mq消息队列添加内容
#代扣支付处理器系统相关
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0021
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0022
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0023
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0024

#徽商处理器系统相关
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade destination=com.sumapay.mq.queue.trade.hsb2depository routing_key=HS0035
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade destination=com.sumapay.mq.queue.trade.hsb2depository routing_key=HS0036

商户自助网站配置文件修改（192.16.3.2，192.16.3.3）
在/sumapay/config/sumapay-config.properties添加如下配置内容
#\u5546\u6237\u81ea\u52a9\uff0c\u5fbd\u5546\u4ee3\u6263\u8fd8\u6b3e\u6a21\u677f\u8868\u5934
#hsbDkRepayUploadfileTitles=批次号(*)：,#VALUE#,合同号(*)：,#VALUE#,合作单位编号(*)：,#VALUE#,合作单位渠道(*)：,#VALUE#,总笔数(*)：,#VALUE#,总金额(*)：,#VALUE#&商家订单号(*),徽商交易流水号(*),授权协议号(*),交易日期(*),交易时间(*),帐户名(*),用户徽商电子账户(*),证件类型(*),证件号码(*),绑定卡银行账号(*),银行代码(*),银行预留手机号(*),金额(*),扣款用途（备注）最多10个汉字(*)
hsbDkRepayUploadfileTitles=\u6279\u6b21\u53f7(*)\uff1a,#VALUE#,\u5408\u540c\u53f7(*)\uff1a,#VALUE#,\u5408\u4f5c\u5355\u4f4d\u7f16\u53f7(*)\uff1a,#VALUE#,\u5408\u4f5c\u5355\u4f4d\u6e20\u9053(*)\uff1a,#VALUE#,\u603b\u7b14\u6570(*)\uff1a,#VALUE#,\u603b\u91d1\u989d(*)\uff1a,#VALUE#&\u5546\u5bb6\u8ba2\u5355\u53f7(*),\u5fbd\u5546\u4ea4\u6613\u6d41\u6c34\u53f7(*),\u6388\u6743\u534f\u8bae\u53f7(*),\u4ea4\u6613\u65e5\u671f(*),\u4ea4\u6613\u65f6\u95f4(*),\u5e10\u6237\u540d(*),\u7528\u6237\u5fbd\u5546\u7535\u5b50\u8d26\u6237(*),\u8bc1\u4ef6\u7c7b\u578b(*),\u8bc1\u4ef6\u53f7\u7801(*),\u7ed1\u5b9a\u5361\u94f6\u884c\u8d26\u53f7(*),\u94f6\u884c\u4ee3\u7801(*),\u94f6\u884c\u9884\u7559\u624b\u673a\u53f7(*),\u91d1\u989d(*),\u6263\u6b3e\u7528\u9014\uff08\u5907\u6ce8\uff09\u6700\u591a10\u4e2a\u6c49\u5b57(*)
#\u534f\u8bae\u8fd8\u6b3e\u6a21\u677f\u4e0b\u8f7d\u8def\u52b2\u3001\u6587\u4ef6\u540d\u79f0\u3001\u4e0a\u4f20\u6587\u4ef6\u6700\u5927\u8bb0\u5f55\u6570
hsbDkRepayFileTemplfileName=\u5FBD\u5546\u6279\u91CF\u4EE3\u6263\u6263\u6B3E\u6A21\u677F.xls
hsbDkRepayUploadfileMaxNum=1000

在/sumapay/batchTransFileTemplet下添加《徽商批量代扣扣款模板》文件
徽商批量代扣扣款模板.xls
徽商批量代扣扣款模板.csv

csv的以高大容提供的为准吧，名称必须是上面的名称






------------

商户自助涉及code
消息队列升级

------------

资金归集请求处理器CA0001----请求
集团商户资金下拨请求处理器CA0010-------请求

spring.amqp.trade.code追加内容：,CA0001,CA0002,CA0003,CA0006,CA0007,CA0008,CA0010,CA0011,CA0012

商户自助修改配置文件/sumapayex/config/sumapay-config.properties
spring.amqp.trade.code =追加内容：,CX0001,CX1001,CZ1101,ZZ0001,CA0001,CA0002,CA0003,CA0006,CA0007,CA0008,CA0010,CA0011,CA0012


------------

丰付系统rabbitmq直接返回队列升级实施步骤》是临时队列转永久队列的方案，《丰付系统mq组件添加长时线程监控升级方案》是加监控的方案

调度2.5、支付2.5：白志远
运营管理系统、徽商2.0接口系统：高大容
商户自助网站、代扣2.5：高德宝
徽商2.0业务系统、付款2.5：游志青
通用2.5、商户2.5：侯晓谦


添加mbean。

<!-- 暴露监控设备 -->

<bean id="adjustableAmqpProxyFactoryBeanJmx" class="org.springframework.jmx.export.MBeanExporter"

        lazy-init="false">

        <property name="beans">

            <map>

                <entry key="bean:name={系统rootContext}RabbitmqClientJmx" value-ref="{springAmqpClient}"/>

            </map>

        </property>

</bean>

改为
添加mbean。

<!-- 暴露监控设备 -->

<bean id="adjustableAmqpProxyFactoryBeanJmx" class="org.springframework.jmx.export.MBeanExporter"

        lazy-init="false">

        <property name="beans">

            <map>

                <entry key="bean:name={系统rootContext}RabbitmqClientJmx" value-ref="&amp;{springAmqpClient}"/>

            </map>

        </property>

</bean>



------------

商户自助涉及code
标签库
gateway中用到的

------------

CX0001交易状态查询 ---返回结果
ZZ0001同商户账户间转账
CZ1101网银充值
CX1001根据费率查询实际金额

spring.amqp.trade.code追加内容：,CX0001,CX1001,CZ1101,ZZ0001,CX0041

修改配置文件/sumapayex/config/sumapay-config.properties



------------

	//查询储蓄卡银行列表
							param.put("MERCHANT_CODE", input.getTradeProcess());
							param.put("PRODUCT_TYPE", "2");
							param.put("CHANNEL_TYPE", "0");
							param.put("BANK_CARD_TYPE", "2");
							Map<String, Object> bankResult0 = userService.getMerchantBankList(param);
							if((Integer)bankResult0.get(Constant.ACTION_RESULT)==0){
								List<Map<String, Object>> merchantBankList = (List<Map<String, Object>>) bankResult0.get("SUPPORT_BANK_LIST");
								if(merchantBankList!=null && merchantBankList.size()!=0){
									for(Map mba : merchantBankList){
										Map<String, Object> map = new HashMap<String, Object>();
										map.put("bankCode", mba.get("bankCode"));
										map.put("bankName", mba.get("fld1"));
										bankList0.add(map);
									}
									
								}
							} 

------------

CX0041

------------

版本
交易类
消息队列添加内容
异步通知添加配置
失败原因
对账系统
上线修改
查询sql

------------

ASP_S_20170006
AP.2.0.6.0和AP.2.5.5.0

domain已经打了，AP.2.0.0-sumapay-6
冯宗亮(F07959698B24对话) 10:59:28
2.5建domain的话，使用tvpay2domainap6用户


------------

原生代扣请求处理器----参考单笔代扣提交处理器
输入参数：请求流水号、商户ID、身份证号码、姓名、银行编码、银行账号、银行预留手机号、请求金额、扣款用途、商户信息（异步通知地址）
    均必输
原生代扣主动查询处理器--参考单笔代扣主动查询处理器	
原生代扣银行异步确认处理器---参考单笔代扣银行异步确认处理器
原生代扣查询处理器---- 输入参数：请求流水号、原代扣请求流水号、商户ID
    根据原代扣请求流水号、商户ID查询记录
    输出参数：代扣记录


原生代扣请求处理器 -DK0026
原生代扣主动查询处理器-DK0027
原生代扣银行异步确认处理器-DK0028
原生代扣查询处理器-DK0029


------------

rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0026
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0027
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0028
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0029

添加SingleBasicDkTradeUpdateConfirmProcessor调度

------------

微信代扣系统-- 修改配置文件/sumapay25/config/sumapay-config.properties
front.merchant.springremote.haproxy.server=192.161.14.92:8585（ip根据实际情况修改）
front.merchantNoticeAdd.service.businessInterface=com.sumapay.biz.pay.service.MerchantNoticeService
front.merchantNoticeAdd.haproxy.service.urls=http://${front.merchant.springremote.haproxy.server}/notice/remote/MerchantNoticeService

------------

200300002:金额不能为负值;
200300018:扣款用途为空;
200300003:扣款用途超长;
200300014:金额小于费率固定值;
200300281:日累计金额大于商户配置的日累计限额;


200300347:您当月累计扣款次数已超！
200300346:您当日累计扣款次数已超！

------------

初始化对账进度

------------

trade_type表插入DK0026（原生代扣支付）
insert into trade_type (ID, CODE, NAME, STATUS, VERIFY_CODE, LAST_EDIT_TIME, LAST_EDITOR, LAST_EDIT_PROCESS, FLD1, FLD2, FLD3, FLD4)
values (seq_trade_type_id.nextval, 'DK0026', '原生代扣支付', '1', null, null, null, null, '1', null, null, null);


2.0调度系统 --修改配置文件/sumapay/config/sumapay-config.properties

bankcheck.providerBasicDKCheckAccount.service.haproxy.urls=http://${bankcheck.springremote.proxy.server}/bankCheck/remote/basicDkCheckRemoteService


------------

添加交易类型：
trade_type表插入DK0026（原生代扣支付）
insert into trade_type (ID, CODE, NAME, STATUS, VERIFY_CODE, LAST_EDIT_TIME, LAST_EDITOR, LAST_EDIT_PROCESS, FLD1, FLD2, FLD3, FLD4)
values (seq_trade_type_id.nextval, 'DK0026', '原生代扣支付', '1', null, null, null, null, '1', null, null, null);

comment on column MERCHANT_CHECKACCOUNT_PROGRESS.type
  is '对账单类型，0：交易对账单，1：结算对账单，2：代扣对账单，3：徽商2.0对账单,4:原生代扣对账单';


2.0调度系统 --
增加调度：providerBasicDKCheckAccount_schedule.xml  
调度执行时间： 0 0 2 * * ? * 
修改配置文件/sumapay/config/sumapay-config.properties  
bankcheck.providerBasicDKCheckAccount.service.haproxy.urls=http://${bankcheck.springremote.proxy.server}/bankCheck/basicDkCheckRemoteService



2.5调度系统：
增加调度：singleBasicDkTradeUpdateConfirmProcessorSchedual.schedual
调度执行时间： 0 0/1 * * * ? *

mq消息队列服务器执行以下命令
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0026
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0027
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0028
rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.withholding routing_key=DK0029

------------

select  * from trade_record t where t.id =161123300015141134;
select * from voucher  where trade_id =161123300015141134 ;
select * from merchant where  id =474;

select * from actual_separate_account_record where trade_id= 161123300015141134;
select * from finance_action where id = 1912;
select * from finance_action where id = 1916;

select * from account where id =220000000000029939;
select  * from merchant_account_association  where merchant_id =474;

select t.* from MERCHANT_PAYTYPE_ASSOCIATION t left join PAY_TYPE pt on t.PAY_TYPE_ID = pt.ID 
    where 1=1  and merchant_id =474 ;

------------

版本
Note1
8月份需求

------------

SP_S_20170012也就是今天上午的需求对应的版本，
分支已经打了2.0.89.0和2.5.44.0，domain已经建了，版本号89

------------

http://192.161.14.94:9191/merchant
asadmin --port 5050 deploy  --force=true com.sumavision.tvpay.operation.manager.war



-XX:MaxPermSize=192m

5672

应用连接时可以连接  192.161.14.92:5672（rabbitmq固有端口） 或者192.161.14.92:5671（haproxy代理端口）

------------

徽商2.0商户余额迁移请求表已经建了啊，domain也打了，表名是P2P_HSB2_MER_BAL_TRANS_REQUEST

------------

版本
修改
服务

------------

2.0.90.0

------------

项目中添加配置文件sessionRedisSpring.xml

商户自助 在sumapayex/config路径下添加以下配置文件
spring-session-redis.properties
spring-session-redis-reload.properties

------------

张猛 09:17:21
cd /usr/local/redis/redis-3.2.8
张猛 09:17:35
 redis-server redis.conf 
张猛 09:17:45
 redis-cli -h 192.161.14.141 -p 6379 shutdown
高德宝 09:17:51
140服务器的 用户名和密码是哪个
张猛 09:17:55
redis-sentinel sentinel.conf          
张猛 09:18:06
root 58858547
高德宝 09:18:11
好的

------------

http异步通知

------------

消息系统：
/sumapayex/config/sumapay-config.properties  
####添加以下配置参数（如果其他domain用过异步通知，应该有以下参数）####
front.merchant.springremote.haproxy.server=192.161.14.92:8585
front.merchantNoticeSend.haproxy.service.url=http://${front.merchant.springremote.haproxy.server}/notice/remote/MerchantNoticeSendService

备注：商户通知请求表有敏感数据，所以需要看下db-sensitivedata-config.properties文件下是否有以下配置，
MerchantNoticeRequest=noticeData


rabbitmqadmin --vhost=pay --username=admin --password=58858547 declare binding  source=com.sumapay.mq.exchange.trade  destination=com.sumapay.mq.queue.trade.message  routing_key=SH0013


------------

版本号
上线sql

------------

AP.2.0.7.0、AP.2.5.6.0
注意三点：
1.从连接器管理器查询是否支持聚合支付H5的连接器时，64位串跟从前不一样了
2.H5退款只能全额退，不能部分退
3.H5支付没有单笔限额控制


------------

insert into pay_type (ID, CODE, NAME, DESCRIPTION, FLD1, FLD2, FLD3, FLD4, FLD5, FLD6, FLD7, FLD8, FLD9, LAST_EDIT_TIME, LAST_EDITOR, LAST_EDIT_PROCESS, PARENT_ID, HAS_CHILD)
select    seq_pay_type.nextval, '18', '支付宝支付-H5', '支付宝支付-H5', null, null, null, null, null, null, null, null, null, sysdate, 'sys', 'sys', p.id, '0' from pay_type p where p.name ='支付宝支付';
insert into pay_type (ID, CODE, NAME, DESCRIPTION, FLD1, FLD2, FLD3, FLD4, FLD5, FLD6, FLD7, FLD8, FLD9, LAST_EDIT_TIME, LAST_EDITOR, LAST_EDIT_PROCESS, PARENT_ID, HAS_CHILD)
select   seq_pay_type.nextval, '17', '微信支付-H5', '微信支付-H5', null, null, null, null, null, null, null, null, null, sysdate, 'sys', 'sys',  p.id  , '0'  from pay_type p where p.name ='微信支付'; 


insert into trade_type (ID, CODE, NAME, STATUS, VERIFY_CODE, LAST_EDIT_TIME, LAST_EDITOR, LAST_EDIT_PROCESS, FLD1, FLD2, FLD3, FLD4)  values (seq_trade_type_id.nextval, 'ZF0415', '微信支付-H5', '1', null, sysdate, 'sys', null, '1', null, null, null);
insert into trade_type (ID, CODE, NAME, STATUS, VERIFY_CODE, LAST_EDIT_TIME, LAST_EDITOR, LAST_EDIT_PROCESS, FLD1, FLD2, FLD3, FLD4)  values (seq_trade_type_id.nextval, 'ZF0416', '支付宝支付-H5', '1', null, sysdate, 'sys', null, '1', null, null, null);


------------

2563c19ddff8fb67d6cc0ff4918dfca7715adb7b
2563c19ddff8fb67d6cc0ff4918dfca7715adb7b

r4Y4wAcX
pZa8Uv8g

Admin fhs 商户后台登录密码为: FHyu641L



------------

功能点
Note1
Note2

------------

DK0001发起代扣提交请求，当前是通过商户自助系统、接口系统完成
DK0002提交代扣确认请求 ，确认提交还是取消。根据代扣配置，确认是否需要风控审核，
            如果不需要，直接发送连接器进行预处理，如果需要风控审核走DK0006，
            如果不需要，直接生成分账列表、保存交易记录

------------

1、DK0003中BATCH_DK_RESULT _LIST没参数说明，现在已知的就是0(订单号)、12（扣款结果0失败，1成功）、13（失败原因）
字段：商家订单号	授权协议号	账户名	证件类型	证件号	银行代码	银行账号	金额	扣款用途（备注）	账户类型	有效期	CVV2	扣款结果	失败原因



说明：其中只有线下处理才有结果文件上传操作。运营管理--代扣管理-批量代扣支付管理-详情-渠道类型为线下。

------------



------------

ca.config=/sumapay/iTrusCA/config.properties


jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=172.16.219.99)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=sumapay)))


------------

连接
数据类型

------------

启动服务端：E:\java\Redis-x64-3.2.100>redis-server.exe
启动客户端：redis-cli.exe -h 127.0.0.1 -p 6379 
 
查看配置：
redis 127.0.0.1:6379> CONFIG GET CONFIG_SETTING_NAME
redis 127.0.0.1:6379> CONFIG GET *
CONFIG SET CONFIG_SETTING_NAME NEW_CONFIG_VALUE
 
$ redis-cli -h host -p port -a password


E:\java\Redis-x64-3.2.100>redis-cli.exe -h 192.161.14.140 -p 6379

------------

Redis 数据类型
Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。 

 string设置值：
 set key value
 get key
 
 hash（哈希）
 127.0.0.1:6379> HMSET user:1 username runoob password runoob points 200
OK
127.0.0.1:6379> HGETALL user:1
1) "username"
2) "runoob"
3) "password"
4) "runoob"
5) "points"
6) "200"

list（列表）
redis 127.0.0.1:6379> lpush runoob redis
(integer) 1
redis 127.0.0.1:6379> lpush runoob mongodb
(integer) 2
redis 127.0.0.1:6379> lpush runoob rabitmq
(integer) 3
redis 127.0.0.1:6379> lrange runoob 0 10
1) "rabitmq"
2) "mongodb"
3) "redis"
redis 127.0.0.1:6379>



Set（集合）
redis 127.0.0.1:6379> sadd runoob redis
(integer) 1
redis 127.0.0.1:6379> sadd runoob mongodb
(integer) 1
redis 127.0.0.1:6379> sadd runoob rabitmq
(integer) 1
redis 127.0.0.1:6379> sadd runoob rabitmq
(integer) 0
redis 127.0.0.1:6379> smembers runoob

1) "rabitmq"
2) "mongodb"
3) "redis"

zset(sorted set：有序集合)


redis 127.0.0.1:6379> zadd runoob 0 redis
(integer) 1
redis 127.0.0.1:6379> zadd runoob 0 mongodb
(integer) 1
redis 127.0.0.1:6379> zadd runoob 0 rabitmq
(integer) 1
redis 127.0.0.1:6379> zadd runoob 0 rabitmq
(integer) 0
redis 127.0.0.1:6379> ZRANGEBYSCORE runoob 0 1000

1) "redis"
2) "mongodb"
3) "rabitmq"
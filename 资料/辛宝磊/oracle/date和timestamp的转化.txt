oracle数据类型date和timestamp的转化  

http://jimn1982.blog.163.com/blog/static/1558640201112514758892/



当您想在oracle中存储date和时间信息的时候，你会用DATE还是TIMESTAMP呢?下面就让我们看看这两种数据类型的差别和他们提供了些什么。 

date数据类型 

这个数据类型我们实在是太熟悉了，当我们需要表示日期和时间的话都会想到date类型。他能够存储月，年，日，世纪，时，分和秒。他典型地用来表示什么时候事情已发生或将要发生。date数据类型的问题在于他表示两个事件发生时间间隔的度量粒度是秒。这个问题将在文章稍后讨论timestamp的时候被解决。能够使用to_char函数把date数据进行传统地包装，达到表示成多种格式的目的。 

sql> select to_char(date1,mm/dd/yyyy hh24:mi:ss) "date" from date_table; 

date 

--------------------------- 

06/20/2003 16:55:14 

06/26/2003 11:16:36 



我见到的大多数人陷入的麻烦就是计算两个时间间的间隔年数、月数、天数、小时数和秒数。您需要明白的是，当您进行两个日期的相减运算的时候，得到的是天数。您需要乘上每天的秒数（1天=86400秒），然后，您能够再次计算得到您想要的间隔数。下面就是我的解决方法，能够精确计算出两个时间的间隔。我明白这个例子能够更简短些，但是我是为了显示任何的数字来强调计算方式。 

1         select to_char(date1,mmddyyyy:hh24:mi:ss) date1, 

2         to_char(date2,mmddyyyy:hh24:mi:ss) date2, 

3         trunc(86400*(date2-date1))- 

4         60*(trunc((86400*(date2-date1))/60)) seconds, 

5         trunc((86400*(date2-date1))/60)- 

6         60*(trunc(((86400*(date2-date1))/60)/60)) minutes, 

7         trunc(((86400*(date2-date1))/60)/60)- 

8         24*(trunc((((86400*(date2-date1))/60)/60)/24)) hours, 

9         trunc((((86400*(date2-date1))/60)/60)/24) days, 

10         trunc(((((86400*(date2-date1))/60)/60)/24)/7) weeks 

11*        from date_table 

date1             date2                seconds    minutes     hours      days      weeks 

----------------- ----------------- ---------- ---------- ---------- ---------- ---------- 

06202003:16:55:14 07082003:11:22:57         43         27         18        17          2 

06262003:11:16:36 07082003:11:22:57         21           6          0        12          1 



timestamp 数据类型 

date数据类型的主要问题是他粒度不能足够区别出两个事件哪个先发生。oracle已在date数据类型上扩展出来了timestamp数据类型，他包括了任何date数据类型的年月日时分秒的信息，而且包括了小数秒的信息。假如您想把date类型转换成timestamp类型，就使用cast函数。 

sql> select cast(date1 as timestamp) "date" from t; 

date 

----------------------------------------------------- 

20-jun-03 04.55.14.000000 pm 

26-jun-03 11.16.36.000000 am 



正如您看到的，在转换后的时间段尾部有了一段“.000000”。这是因为从date转换过来的时候，没有小数秒的信息，缺省为0。而且显示格式是按照参数nls_timestamp_format定的缺省格式显示。当您把一个表中date类型字段的数据移到另一个表的timestamp类型字段中去的时候，能够直接写insert select语句，oracle会自动为您做转换的。 

1 select to_char(time1,mm/dd/yyyy hh24:mi:ss) "date" from date_table 

date 

------------------- 

06/20/2003 16:55:14 

06/26/2003 11:16:36 


timestamp数据的格式化显示和date 数据相同。注意，to_char函数支持date和timestamp，但是trunc却不支持timestamp数据类型。这已清楚表明了在当两个时间的差别极度重要的情况下，使用timestamp数据类型要比date数据类型更确切。 

假如您想显示timestamp的小数秒信息，参考下面： 

1 select to_char(time1,mm/dd/yyyy hh24:mi:ss:ff3) "date" from date_table 

date 

----------------------- 

06/20/2003 16:55:14:000 

06/26/2003 11:16:36:000 

在上例中，我只现实了小数点后3位的内容。 

计算timestamp间的数据差别要比老的date数据类型更容易。当您直接相减的话，看看会发生什么。结果将更容易理解，第一行的17天，18小时，27分钟和43秒。 

1 select time1, 

2         time2, 

3         substr((time2-time1),instr((time2-time1), )+7,2)                 seconds, 

4         substr((time2-time1),instr((time2-time1), )+4,2)                 minutes, 

5         substr((time2-time1),instr((time2-time1), )+1,2)                 hours, 

6         trunc(to_number(substr((time2-time1),1,instr(time2-time1, ))))   days, 

7         trunc(to_number(substr((time2-time1),1,instr(time2-time1, )))/7) weeks 

8*   from date_table 

time1                       time2                      seconds minutes hours days weeks 

-------------------------   -------------------------- ------- ------- ----- ---- ----- 

06/20/2003:16:55:14:000000 07/08/2003:11:22:57:000000 43      27      18    17    2 

06/26/2003:11:16:36:000000 07/08/2003:11:22:57:000000 21     06      00    12    1 

这就意味着不再需要关心一天有多少秒在麻烦的计算中。因此，得到天数、月数、天数、时数、分钟数和秒数就成为用substr函数摘取出数字的事情了。 

系统日期和时间 

为了得到系统时间，返回成date数据类型。您能够使用sysdate函数。 

sql> select sysdate from dual; 

为了得到系统时间，返回成timestamp数据类型。您能够使用systimpstamp函数。 

sql> select systimestamp from dual; 

您能够配置初始化参数fixed_date指定sysdate函数返回一个固定值。这用在测试日期和时间敏感的代码。注意，这个参数对于systimestamp函数无效。 

sql> alter system set fixed_date = 2003-01-01-10:00:00; 

system altered. 



sql> select sysdate from dual; 

sysdate 

--------- 

01-jan-03 



sql> select systimestamp from dual; 

systimestamp 

--------------------------------------------------------- 

09-jul-03 11.05.02.519000 am -06:00 

当使用date和timestamp类型的时候，选择是很清楚的。您能够随意处置date和timestamp类型。当您试图转换到更强大的timestamp的时候，需要注意，他们既有类似的地方，更有不同的地方，而足以造成破坏。两者在简洁和间隔尺寸方面各有优势，请合理地选择。
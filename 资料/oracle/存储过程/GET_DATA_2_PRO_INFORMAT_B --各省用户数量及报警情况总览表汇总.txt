CREATE OR REPLACE PROCEDURE GET_DATA_2_PRO_INFORMAT_B --各省用户数量及报警情况总览表汇总--每个月JOB一次
IS

   TRANS_TIME_           DATE;--
   IS_NULL        NUMBER;--用于判断月报里有没有数据
  /*日志表的主键*/
   VAR_RECORD_ID VARCHAR2(50);

    TRANS_TIME_MIN_MON DATE;--月表中的最小时间
   TRANS_TIME_MAX_MON DATE;--月表中的最小时间
   MAX_TIME_IN_TARGET DATE;-- EVER_PROVINCE_INFORMATION表中的最大时间

BEGIN


   SELECT MAX(T.TRANS_TIME) INTO TRANS_TIME_MAX_MON FROM RP_TRANS_LOG_MONTH T;
   SELECT MIN(T.TRANS_TIME) INTO TRANS_TIME_MIN_MON FROM RP_TRANS_LOG_MONTH T;
   SELECT MAX(T.TRANS_TIME) INTO MAX_TIME_IN_TARGET FROM EVER_PROVINCE_INFORMATION T;

    IF TRANS_TIME_MAX_MON IS NOT NULL AND MAX_TIME_IN_TARGET IS NULL THEN
     WHILE TRANS_TIME_MIN_MON < TO_DATE(SUBSTR(TO_CHAR(SYSDATE,'YYYY/MM/DD'),1,8)||'01','YYYY/MM/DD')
       LOOP
         SELECT COUNT(*) INTO IS_NULL FROM RP_TRANS_LOG_MONTH T WHERE T.TRANS_TIME = TRANS_TIME_MIN_MON;
         IF IS_NULL > 0 THEN
             INSERT INTO EVER_PROVINCE_INFORMATION(
                 TRANS_TIME,     --交易时间
                 TRANS_PROVINCE ,--交易省份
                 TRANS_DITCH    ,--渠道
                 USER_NUM       ,--用户数量
                 USER_PERCENT   ,--用户百分比
                 DEVICE_NUM     ,--设备数量
                 DEVICE_PERCENT ,--设备百分比
                 ALARM_NUM      ,--报警数量
                 ALARM_PERCENT --报警百分比
              )
              SELECT T.TRANS_TIME,
                 T.TRANS_PROVINCE,
                 T.TRANS_DITCH,
                 (SELECT COUNT(DISTINCT U.CUSTOMER_ID) FROM RP_USERAMOUNT_PROVINCE_DITCH_C U WHERE U.TRANS_PROVINCE=T.TRANS_PROVINCE AND U.TRANS_DITCH=T.TRANS_DITCH AND U.TRANS_TIME=T.TRANS_TIME),
                 NUM_2_PER_UTIL((SELECT COUNT(DISTINCT U.CUSTOMER_ID) FROM RP_USERAMOUNT_PROVINCE_DITCH_C U WHERE U.TRANS_PROVINCE=T.TRANS_PROVINCE AND U.TRANS_DITCH=T.TRANS_DITCH AND U.TRANS_TIME=T.TRANS_TIME),
           
                       (SELECT COUNT(DISTINCT U.CUSTOMER_ID) FROM RP_USERAMOUNT_PROVINCE_DITCH_C U WHERE U.TRANS_PROVINCE=T.TRANS_PROVINCE  AND U.TRANS_TIME=T.TRANS_TIME)),
                 (SELECT COUNT(DISTINCT D.DEVICE_ID) FROM RP_PROVINCE_DITCH_DEVICEID D WHERE D.TRANS_PROVINCE=T.TRANS_PROVINCE AND D.TRANS_DITCH=T.TRANS_DITCH AND D.TRANS_TIME=T.TRANS_TIME),
                 NUM_2_PER_UTIL((SELECT COUNT(DISTINCT D.DEVICE_ID) FROM RP_PROVINCE_DITCH_DEVICEID D WHERE D.TRANS_PROVINCE=T.TRANS_PROVINCE AND D.TRANS_DITCH=T.TRANS_DITCH AND D.TRANS_TIME=T.TRANS_TIME),
                 (SELECT COUNT(DISTINCT D.DEVICE_ID) FROM RP_PROVINCE_DITCH_DEVICEID D WHERE D.TRANS_PROVINCE=T.TRANS_PROVINCE   AND D.TRANS_TIME=T.TRANS_TIME)),
                 SUM(CASE WHEN POLICY_ACTION = 'ALLOW' THEN 0 ELSE T.TRANS_NUM END),
                NUM_2_PER_UTIL( SUM(CASE WHEN POLICY_ACTION = 'ALLOW' THEN 0 ELSE T.TRANS_NUM END),(SELECT SUM(K.TRANS_NUM) FROM(SELECT SUM(E.TRANS_NUM) AS TRANS_NUM FROM RP_TRANS_LOG_MINUTE E )K ))
            FROM  RP_TRANS_LOG_MONTH T
            where t.trans_time=TRANS_TIME_MIN_MON and t.trans_province is not null
            group by t.trans_time,t.trans_province,t.trans_ditch
            order by t.trans_time,t.trans_province,t.trans_ditch;

             COMMIT;
             END IF;
         TRANS_TIME_MIN_MON := ADD_MONTHS(TRANS_TIME_MIN_MON,1);
       END LOOP;
ELSE


           SELECT COUNT(*) INTO IS_NULL FROM RP_TRANS_LOG_MONTH;

           IF IS_NULL IS NOT NULL THEN

           SET TRANSACTION NAME 'GET_DATA_2_PRO_INFORMAT_B';

              SELECT MAX(T.TRANS_TIME) INTO TRANS_TIME_ FROM RP_TRANS_LOG_MONTH T;
              IF TRANS_TIME_ IS NULL THEN
                 SELECT ADD_MONTHS(TO_DATE(SUBSTR(TO_CHAR(SYSDATE,'YYYY/MM/DD'),1,8)||'01','YYYY/MM/DD'),-1) INTO TRANS_TIME_ FROM DUAL;
              END IF;


             DELETE EVER_PROVINCE_INFORMATION T WHERE T.TRANS_TIME= TRANS_TIME_;

             INSERT INTO EVER_PROVINCE_INFORMATION(
                 TRANS_TIME,     --交易时间
                 TRANS_PROVINCE ,--交易省份
                 TRANS_DITCH    ,--渠道
                 USER_NUM       ,--用户数量
                 USER_PERCENT   ,--用户百分比
                 DEVICE_NUM     ,--设备数量
                 DEVICE_PERCENT ,--设备百分比
                 ALARM_NUM      ,--报警数量
                 ALARM_PERCENT --报警百分比
              )
               SELECT T.TRANS_TIME,
                 T.TRANS_PROVINCE,
                 T.TRANS_DITCH,
                 (SELECT COUNT(DISTINCT U.CUSTOMER_ID) FROM RP_USERAMOUNT_PROVINCE_DITCH_C U WHERE U.TRANS_PROVINCE=T.TRANS_PROVINCE AND U.TRANS_DITCH=T.TRANS_DITCH AND U.TRANS_TIME=T.TRANS_TIME),
                 NUM_2_PER_UTIL((SELECT COUNT(DISTINCT U.CUSTOMER_ID) FROM RP_USERAMOUNT_PROVINCE_DITCH_C U WHERE U.TRANS_PROVINCE=T.TRANS_PROVINCE AND U.TRANS_DITCH=T.TRANS_DITCH AND U.TRANS_TIME=T.TRANS_TIME),
                 (SELECT COUNT(DISTINCT U.CUSTOMER_ID) FROM RP_USERAMOUNT_PROVINCE_DITCH_C U WHERE U.TRANS_PROVINCE=T.TRANS_PROVINCE  AND U.TRANS_TIME=T.TRANS_TIME)),
                 (SELECT COUNT(DISTINCT D.DEVICE_ID) FROM RP_PROVINCE_DITCH_DEVICEID D WHERE D.TRANS_PROVINCE=T.TRANS_PROVINCE AND D.TRANS_DITCH=T.TRANS_DITCH AND D.TRANS_TIME=T.TRANS_TIME),
                 NUM_2_PER_UTIL((SELECT COUNT(DISTINCT D.DEVICE_ID) FROM RP_PROVINCE_DITCH_DEVICEID D WHERE D.TRANS_PROVINCE=T.TRANS_PROVINCE AND D.TRANS_DITCH=T.TRANS_DITCH AND D.TRANS_TIME=T.TRANS_TIME),
                 (SELECT COUNT(DISTINCT D.DEVICE_ID) FROM RP_PROVINCE_DITCH_DEVICEID D WHERE D.TRANS_PROVINCE=T.TRANS_PROVINCE   AND D.TRANS_TIME=T.TRANS_TIME)),
                 SUM(CASE WHEN POLICY_ACTION = 'ALLOW' THEN 0 ELSE T.TRANS_NUM END),
                NUM_2_PER_UTIL( SUM(CASE WHEN POLICY_ACTION = 'ALLOW' THEN 0 ELSE T.TRANS_NUM END),(SELECT SUM(K.TRANS_NUM) FROM(SELECT SUM(E.TRANS_NUM) AS TRANS_NUM FROM RP_TRANS_LOG_MINUTE E )K ))
            FROM  RP_TRANS_LOG_MONTH T
            where t.trans_time=TRANS_TIME_  and t.trans_province is not null
            group by t.trans_time,t.trans_province,t.trans_ditch
            order by t.trans_time,t.trans_province,t.trans_ditch;


             COMMIT;

             END IF;

      END IF;

      EXCEPTION

         WHEN OTHERS
         THEN
             ROLLBACK;
              INSERT_COLLECT_DATA_LOG_4_FIX(
              VAR_RECORD_ID,        --RECORD_ID 将来会返回主键，用于修改日志操作
              'GET_DATA_2_PRO_INFORMAT_B', --PROC_NAME 存储过程名称
              '',  --FROM_TABLE 来源表
              'EVER_PROVINCE_INFORMATION',  --TO_TABLE 目标表
              TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS') ,  --DATA_RANGE 数据范围
              TO_CHAR(TRANS_TIME_,'YYYY-MM-DD HH24:MI:SS'),        --DATA_BEGIN_TIME 数据开始时间
              TO_CHAR(TRANS_TIME_,'YYYY-MM-DD HH24:MI:SS')          --DATA_END_TIME 数据结束时间
            );

       RETURN ;

END GET_DATA_2_PRO_INFORMAT_B;
